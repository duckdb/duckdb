# name: test/sql/function/generic/test_least_greatest.test
# description: Test LEAST/GREATEST
# group: [generic]

statement ok
PRAGMA enable_verification

# scalar usage
query I
SELECT LEAST(1)
----
1

query I
SELECT LEAST(1, 3)
----
1

query I
SELECT LEAST(1, 3, 0)
----
0

query I
SELECT LEAST(1, 3, 0, 2, 7, 8, 10, 11, -100, 30)
----
-100

query I
SELECT LEAST(1, 3, 0, 2, 7, 8, 10, 11, -100, 30, NULL)
----
-100

query I
SELECT LEAST(NULL, 3, 0, 2, 7, 8, 10, 11, -100, 30, 1)
----
-100

# double
query R
SELECT LEAST(1.0, 10.0)
----
1.000000

# strings
query T
SELECT LEAST('hello', 'world')
----
hello

query T
SELECT LEAST('hello', 'world', 'blabla', 'tree')
----
blabla

query T
SELECT LEAST('hello', 'world', 'blabla', 'tree')
----
blabla

# dates
query T
SELECT LEAST(DATE '1992-01-01', DATE '1994-02-02', DATE '1991-01-01')
----
1991-01-01

query T
SELECT LEAST(DATE '1992-01-01', DATE '1994-02-02', DATE '1991-01-01', NULL)
----
1991-01-01

query T
SELECT LEAST(DATE '1992-01-01', DATE '1994-02-02', DATE '1991-01-01', DATE 'infinity', DATE '-infinity')
----
-infinity

query T
SELECT GREATEST(DATE '1992-01-01', DATE '1994-02-02', DATE '1991-01-01', DATE 'infinity', DATE '-infinity')
----
infinity

# timestamps
query T
SELECT LEAST(TIMESTAMP '1992-01-01 13:45:21.890123', TIMESTAMP '1994-02-02 05:43:21', TIMESTAMP '1991-01-01 01:23:45')
----
1991-01-01 01:23:45

query T
SELECT LEAST(TIMESTAMP '1992-01-01 13:45:21.890123', TIMESTAMP '1994-02-02 05:43:21', TIMESTAMP '1991-01-01 01:23:45', NULL)
----
1991-01-01 01:23:45

query T
SELECT LEAST(TIMESTAMP '1992-01-01 13:45:21.890123', TIMESTAMP '1994-02-02 05:43:21', TIMESTAMP '1991-01-01 01:23:45', TIMESTAMP 'infinity', TIMESTAMP '-infinity')
----
-infinity

query T
SELECT GREATEST(TIMESTAMP '1992-01-01 13:45:21.890123', TIMESTAMP '1994-02-02 05:43:21', TIMESTAMP '1991-01-01 01:23:45', TIMESTAMP 'infinity', TIMESTAMP '-infinity')
----
infinity

# test mix of types
query T
SELECT LEAST(DATE '1992-01-01', 'hello', 123)
----
123

# tables
statement ok
CREATE TABLE t1(i INTEGER, j INTEGER);

statement ok
INSERT INTO t1 VALUES (1, NULL), (2, 1), (3, 7);

query II
SELECT LEAST(i, j), GREATEST(i, j) FROM t1 ORDER BY i;
----
1	1
1	2
3	7

query II
SELECT LEAST(i, i + 1, j), GREATEST(i, i - 1, j) FROM t1 ORDER BY i;
----
1	1
1	2
3	7

query II
SELECT LEAST(i, 800, i + 1, 1000, j), GREATEST(i, -1000, i - 1, -700, j, -800) FROM t1 ORDER BY i;
----
1	1
1	2
3	7

query II
SELECT LEAST(i, 800, i + 1, 1000, j, NULL), GREATEST(i, -1000, i - 1, -700, j, -800) FROM t1 ORDER BY i;
----
1	1
1	2
3	7

# selection vectors
query II
SELECT LEAST(i, j), GREATEST(i, j) FROM t1 WHERE j IS NOT NULL ORDER BY i;
----
1	2
3	7

# row ids
query II
SELECT LEAST(rowid + 10, i, j), GREATEST(i, rowid + 4, j) FROM t1 WHERE j IS NOT NULL ORDER BY i;
----
1	5
3	7

# generated strings
query T
SELECT LEAST(REPEAT(i::VARCHAR, 20), j::VARCHAR) FROM t1;
----
11111111111111111111
1
33333333333333333333

