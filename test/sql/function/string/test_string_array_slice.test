# name: test/sql/function/string/test_string_array_slice.test
# description: String slicing test
# group: [string]

statement ok
PRAGMA enable_verification

query I
SELECT 'hello'[0:2]
----
he

query I
SELECT ('hello')[0:2]
----
he

statement ok
CREATE TABLE strings(s VARCHAR, off INTEGER, length INTEGER);

statement ok
INSERT INTO strings VALUES ('hello', 0, 2), ('world', 1, 3), ('b', 0, 1), (NULL, 1, 2)

# test zero length
query TT
SELECT array_slice('ðŸ¦†ab', 0, 0), array_slice('abc', 0, 0)
----
(empty)	(empty)

# constant offset/length
# normal slice
query T
SELECT array_slice(s, 0, 2) FROM strings
----
he
wo
b
NULL

# list_slice alias
query T
SELECT list_slice(s, 0, 2) FROM strings
----
he
wo
b
NULL

query T
SELECT array_slice(s, 1, 3) FROM strings
----
hel
wor
b
NULL

# index out of range
query T
SELECT array_slice(s, 2, 3) FROM strings
----
el
or
(empty)
NULL

# variable length offset/length
query T
SELECT array_slice(s, off, length+off) FROM strings
----
he
worl
b
NULL

query T
SELECT array_slice(s, off, 2+off) FROM strings
----
he
wor
b
NULL

query T
SELECT array_slice(s, 0, length) FROM strings
----
he
wor
b
NULL

query T
SELECT array_slice('hello', off, length+off) FROM strings
----
he
hell
h
hel

# test substrings with constant nulls in different places
query T
SELECT array_slice(NULL::varchar, off, length+off) FROM strings
----
NULL
NULL
NULL
NULL

query T
SELECT array_slice('hello', NULL, length+NULL) FROM strings
----
NULL
NULL
NULL
NULL

query T
SELECT array_slice('hello', off+1, NULL+off) FROM strings
----
NULL
NULL
NULL
NULL

query T
SELECT array_slice(NULL::varchar, NULL, length+NULL) FROM strings
----
NULL
NULL
NULL
NULL

query T
SELECT array_slice('hello', NULL, NULL+NULL) FROM strings
----
NULL
NULL
NULL
NULL

query T
SELECT array_slice(NULL::varchar, off, NULL+off) FROM strings
----
NULL
NULL
NULL
NULL

query T
SELECT array_slice(NULL::varchar, NULL, NULL+NULL) FROM strings
----
NULL
NULL
NULL
NULL

# fixed slice
query T
SELECT array_slice(s, -2, NULL) FROM strings
----
NULL
NULL
NULL
NULL

# length 1
query T
SELECT array_slice(s, 0, 1) FROM strings
----
h
w
b
NULL

# negative offset and negative length
query T
SELECT array_slice(s, -4, -2) FROM strings
----
ell
orl
(empty)
NULL

# length 0
query T
SELECT array_slice(s, 1, 0) FROM strings
----
(empty)
(empty)
(empty)
NULL

# no end
query T
SELECT array_slice(s, 2, NULL) FROM strings
----
NULL
NULL
NULL
NULL

# very large offset and length
query T
SELECT array_slice(s, (2147483647-1), 1) FROM strings
----
(empty)
(empty)
(empty)
NULL

query T
SELECT array_slice(s, (2147483647-1), -1) FROM strings
----
(empty)
(empty)
(empty)
NULL

query T
SELECT array_slice(s, (-2147483646-1), -1) FROM strings
----
hello
world
b
NULL

query T
SELECT array_slice(s, (-2147483646-1), -2147483647) FROM strings
----
(empty)
(empty)
(empty)
NULL

# out of bounds array slice
query I
select array_slice([], -1, -9223372036854775808)
----
[]

# With constant null
query I
select * from (SELECT list_slice(NULL, 1, 3, 2));
----
NULL

# With constant null
query I
select s[1:2] from (SELECT NULL) as t(s);
----
NULL

# Also for arrays
query I
select * from (SELECT list_slice(NULL::INT[3], 1, 3, 2));
----
NULL