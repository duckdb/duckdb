# name: test/sql/function/timestamp/test_icu_strptime.test
# description: Test sequence overflow
# group: [timestamp]

require icu

# Normalise the testing locale
statement ok
SET Calendar = 'gregorian';

statement ok
SET TimeZone = 'America/Los_Angeles';

statement ok
PRAGMA enable_verification

# Parse TZ
query I
select strptime('2022-03-05 17:59:17.877 CST', '%Y-%m-%d %H:%M:%S.%g %Z');
----
2022-03-05 15:59:17.877-08

# NULLs
query I
select strptime('2022-03-05 17:59:17.877 CST', NULL);
----
NULL

query I
select strptime(NULL, '%Y-%m-%d %H:%M:%S.%g %Z');
----
NULL

#
# Same date, multiple TZ names
#

statement ok
CREATE TABLE zones AS (
	SELECT median(name) as tz_name
	FROM pg_timezone_names()
	GROUP BY ALL
	ORDER BY utc_offset
);

statement ok
CREATE TABLE abbrevs AS (
	SELECT median(abbrev) as tz_name
	FROM pg_timezone_names()
	GROUP BY ALL
	ORDER BY utc_offset
);

# Full zone names
query II
SELECT strptime('2022-03-05 17:59:17.877 ' || tz_name, '%Y-%m-%d %H:%M:%S.%g %Z') tstz, tz_name
FROM zones
ORDER BY ALL
----
2022-03-04 19:59:17.877-08	Etc/GMT-14
2022-03-04 20:14:17.877-08	NZ-CHAT
2022-03-04 20:59:17.877-08	Pacific/Auckland
2022-03-04 20:59:17.877-08	Pacific/Enderbury
2022-03-04 22:59:17.877-08	Australia/LHI
2022-03-04 22:59:17.877-08	Australia/Melbourne
2022-03-04 22:59:17.877-08	Pacific/Efate
2022-03-05 00:29:17.877-08	Australia/Darwin
2022-03-05 00:59:17.877-08	Asia/Tokyo
2022-03-05 01:14:17.877-08	Australia/Eucla
2022-03-05 01:59:17.877-08	Asia/Shanghai
2022-03-05 02:59:17.877-08	Asia/Novosibirsk
2022-03-05 03:29:17.877-08	Asia/Yangon
2022-03-05 03:59:17.877-08	Asia/Omsk
2022-03-05 04:14:17.877-08	Asia/Kathmandu
2022-03-05 04:29:17.877-08	Asia/Colombo
2022-03-05 04:59:17.877-08	Asia/Oral
2022-03-05 05:29:17.877-08	Asia/Kabul
2022-03-05 05:59:17.877-08	Europe/Astrakhan
2022-03-05 06:29:17.877-08	Asia/Tehran
2022-03-05 06:59:17.877-08	Asia/Kuwait
2022-03-05 07:59:17.877-08	Asia/Nicosia
2022-03-05 08:59:17.877-08	Europe/Budapest
2022-03-05 09:59:17.877-08	Etc/GMT-0
2022-03-05 10:59:17.877-08	Atlantic/Azores
2022-03-05 11:59:17.877-08	Atlantic/South_Georgia
2022-03-05 12:59:17.877-08	America/Cordoba
2022-03-05 13:29:17.877-08	CNT
2022-03-05 13:59:17.877-08	America/Martinique
2022-03-05 14:59:17.877-08	America/Louisville
2022-03-05 15:59:17.877-08	America/Rainy_River
2022-03-05 16:59:17.877-08	America/Shiprock
2022-03-05 17:59:17.877-08	Mexico/BajaNorte
2022-03-05 18:59:17.877-08	America/Sitka
2022-03-05 19:29:17.877-08	Pacific/Marquesas
2022-03-05 19:59:17.877-08	Pacific/Johnston
2022-03-05 20:59:17.877-08	Pacific/Niue
2022-03-05 21:59:17.877-08	Etc/GMT+12

# Abbreviations
query II
SELECT strptime('2022-03-05 17:59:17.877 ' || tz_name, '%Y-%m-%d %H:%M:%S.%g %Z') tstz, tz_name
FROM abbrevs
ORDER BY ALL
----
2022-03-04 19:59:17.877-08	Etc/GMT-14
2022-03-04 20:14:17.877-08	NZ-CHAT
2022-03-04 20:59:17.877-08	NZ
2022-03-04 20:59:17.877-08	Pacific/Enderbury
2022-03-04 22:59:17.877-08	Australia/Hobart
2022-03-04 22:59:17.877-08	Australia/LHI
2022-03-04 22:59:17.877-08	Pacific/Efate
2022-03-04 23:29:17.877-08	Australia/Adelaide
2022-03-05 00:59:17.877-08	Etc/GMT-9
2022-03-05 01:14:17.877-08	Australia/Eucla
2022-03-05 01:59:17.877-08	CTT
2022-03-05 02:59:17.877-08	Asia/Phnom_Penh
2022-03-05 03:29:17.877-08	Asia/Yangon
2022-03-05 03:59:17.877-08	Asia/Thimbu
2022-03-05 04:14:17.877-08	Asia/Kathmandu
2022-03-05 04:29:17.877-08	IST
2022-03-05 04:59:17.877-08	Asia/Qyzylorda
2022-03-05 05:29:17.877-08	Asia/Kabul
2022-03-05 05:59:17.877-08	Europe/Samara
2022-03-05 06:29:17.877-08	Iran
2022-03-05 06:59:17.877-08	EAT
2022-03-05 07:59:17.877-08	CAT
2022-03-05 08:59:17.877-08	Europe/Bratislava
2022-03-05 09:59:17.877-08	GMT
2022-03-05 10:59:17.877-08	Atlantic/Azores
2022-03-05 11:59:17.877-08	Atlantic/South_Georgia
2022-03-05 12:59:17.877-08	America/Cordoba
2022-03-05 13:29:17.877-08	CNT
2022-03-05 13:59:17.877-08	PRT
2022-03-05 14:59:17.877-08	America/Panama
2022-03-05 15:59:17.877-08	America/Rankin_Inlet
2022-03-05 16:59:17.877-08	Canada/Yukon
2022-03-05 17:59:17.877-08	PST
2022-03-05 18:59:17.877-08	America/Nome
2022-03-05 19:29:17.877-08	Pacific/Marquesas
2022-03-05 19:59:17.877-08	Pacific/Johnston
2022-03-05 20:59:17.877-08	Pacific/Niue
2022-03-05 21:59:17.877-08	Etc/GMT+12

#
# UTC Offsets
#

statement ok
CREATE TABLE offsets AS (
	SELECT
		CASE WHEN EXTRACT(MINUTE FROM utc_offset) <> 0
		THEN
			CASE WHEN utc_offset < INTERVAL 0 SECOND
				THEN LEFT(utc_offset, 6)
				ELSE '+' || LEFT(utc_offset, 5)
			END
		ELSE
			CASE WHEN utc_offset < INTERVAL 0 SECOND
				THEN LEFT(utc_offset, 3)
				ELSE '+' || LEFT(utc_offset, 2)
			END
		END AS utc_offset
	FROM (
		SELECT DISTINCT utc_offset
		FROM pg_timezone_names()
		ORDER BY ALL
	) z
);

# These should be TSTZs because there is an offset specified.
query II
SELECT strptime('2022-03-05 17:59:17.877 ' || utc_offset, '%Y-%m-%d %H:%M:%S.%g %z') tstz, utc_offset
FROM offsets
ORDER BY tstz
----
2022-03-04 19:59:17.877-08	+14
2022-03-04 20:59:17.877-08	+13
2022-03-04 21:14:17.877-08	+12:45
2022-03-04 21:59:17.877-08	+12
2022-03-04 22:59:17.877-08	+11
2022-03-04 23:29:17.877-08	+10:30
2022-03-04 23:59:17.877-08	+10
2022-03-05 00:29:17.877-08	+09:30
2022-03-05 00:59:17.877-08	+09
2022-03-05 01:14:17.877-08	+08:45
2022-03-05 01:59:17.877-08	+08
2022-03-05 02:59:17.877-08	+07
2022-03-05 03:29:17.877-08	+06:30
2022-03-05 03:59:17.877-08	+06
2022-03-05 04:14:17.877-08	+05:45
2022-03-05 04:29:17.877-08	+05:30
2022-03-05 04:59:17.877-08	+05
2022-03-05 05:29:17.877-08	+04:30
2022-03-05 05:59:17.877-08	+04
2022-03-05 06:29:17.877-08	+03:30
2022-03-05 06:59:17.877-08	+03
2022-03-05 07:59:17.877-08	+02
2022-03-05 08:59:17.877-08	+01
2022-03-05 09:59:17.877-08	+00
2022-03-05 10:59:17.877-08	-01
2022-03-05 11:59:17.877-08	-02
2022-03-05 12:59:17.877-08	-03
2022-03-05 13:29:17.877-08	-03:30
2022-03-05 13:59:17.877-08	-04
2022-03-05 14:59:17.877-08	-05
2022-03-05 15:59:17.877-08	-06
2022-03-05 16:59:17.877-08	-07
2022-03-05 17:59:17.877-08	-08
2022-03-05 18:59:17.877-08	-09
2022-03-05 19:29:17.877-08	-09:30
2022-03-05 19:59:17.877-08	-10
2022-03-05 20:59:17.877-08	-11
2022-03-05 21:59:17.877-08	-12

#
# Errors/Coverage
#

# Multiple formats are not allowed
statement ok
CREATE TABLE multiples (s VARCHAR, f VARCHAR);

statement ok
INSERT INTO multiples VALUES
	('2022-03-05 17:59:17.877 CST', '%Y-%m-%d %H:%M:%S.%g %Z'),
	('2022-03-05 17:59:17.877', '%Y-%m-%d %H:%M:%S.%g'),
;

statement error
SELECT strptime(s, f) FROM multiples;

# Invalid format
statement error
select strptime('2022-03-05 17:59:17.877 CST', '%C');

# Parse error
statement error
select strptime('2022-03-05 17:59:17.877 CST', '%Y-%m-%d %H:%M:%S.%g');

#
# Cast VARCHAR => TIMESTAMPTZ
#
statement error
select 'fnord'::timestamptz;

query I
select TRY_CAST('fnord' AS timestamptz);
----
NULL

query I
select '2022-03-05 17:59:17.123456 CST'::timestamptz;
----
2022-03-05 15:59:17.123456-08

query I
select 'infinity'::timestamptz;
----
infinity

query I
select '-infinity'::timestamptz;
----
-infinity

query I
select 'epoch'::timestamptz;
----
1969-12-31 16:00:00-08

