# name: test/sql/function/list/list_concat.test
# description: Test list_concat function
# group: [list]

statement ok
PRAGMA enable_verification

# basic functionality
query T
SELECT list_concat([1, 2], [3, 4])
----
[1, 2, 3, 4]

query T
SELECT array_cat([1, 2], [3, 4])
----
[1, 2, 3, 4]

query T
SELECT list_concat(NULL, [3, 4])
----
[3, 4]

query T
SELECT list_concat([1, 2], NULL)
----
[1, 2]

query T
SELECT list_concat([], [])
----
[]

query T
SELECT list_concat([], [3, 4])
----
[3, 4]

query T
SELECT list_concat([1, 2], [])
----
[1, 2]

statement error
SELECT list_concat([1, 2], 3)

# operators
query T
SELECT [1, 2] || [3, 4]
----
[1, 2, 3, 4]

query T
SELECT [1, 2] + [3, 4]
----
[1, 2, 3, 4]

# type casting
foreach type_a <integral> varchar

foreach type_b <integral> varchar

query T
SELECT list_concat([1, 2]::${type_a}[], [3, 4]::${type_b}[])
----
[1, 2, 3, 4]

endloop

endloop

query T
SELECT list_concat([1.000000, 2.000000]::float[], [3.000000, 4.000000]::double[])
----
[1.0, 2.0, 3.0, 4.0]

query T
SELECT list_concat([1.000000, 2.000000]::double[], [3.000000, 4.000000]::float[])
----
[1.0, 2.0, 3.0, 4.0]

# nulls
query T
SELECT list_concat([NULL], [NULL])
----
[NULL, NULL]

query T
SELECT list_concat([1, 2], [NULL])
----
[1, 2, NULL]

query T
SELECT list_concat([NULL], [3, 4])
----
[NULL, 3, 4]

query T
SELECT list_concat([[1, 2]], [[3, 4]])
----
[[1, 2], [3, 4]]

# nested types
query T
SELECT list_concat([{a: 1}, {a: 2}], [{a: 3}, {a: 4}])
----
[{'a': 1}, {'a': 2}, {'a': 3}, {'a': 4}]

query T
SELECT list_concat([[[1], [2]], [[3], [4]]], [[[5], [6]], [[7], [8]]])
----
[[[1], [2]], [[3], [4]], [[5], [6]], [[7], [8]]]

statement ok
CREATE TABLE test AS SELECT range % 4 i, range j, range k FROM range(16)

statement ok
CREATE TABLE lists AS SELECT i, list(j) j, list(k) k FROM test GROUP BY i

query II rowsort
SELECT i, list_concat(j, k) FROM lists
----
0	[0, 4, 8, 12, 0, 4, 8, 12]
1	[1, 5, 9, 13, 1, 5, 9, 13]
2	[2, 6, 10, 14, 2, 6, 10, 14]
3	[3, 7, 11, 15, 3, 7, 11, 15]

statement error
SELECT i, list_concat(j, cast(k AS VARCHAR)) FROM lists

# list_append(l, e) is an alias for list_concat(l, list_value(e))
query T
SELECT list_append([1, 2], 3)
----
[1, 2, 3]

query T
SELECT list_append([1, 2], NULL)
----
[1, 2, NULL]

query T
SELECT list_append(NULL, 3)
----
[3]

query II rowsort
SELECT i, list_append(list_concat(j, k), i) FROM lists ORDER BY i;
----
0	[0, 4, 8, 12, 0, 4, 8, 12, 0]
1	[1, 5, 9, 13, 1, 5, 9, 13, 1]
2	[2, 6, 10, 14, 2, 6, 10, 14, 2]
3	[3, 7, 11, 15, 3, 7, 11, 15, 3]

# prepend macro
query T
SELECT list_prepend(1, [2, 3])
----
[1, 2, 3]

query T
SELECT array_prepend(1, [2, 3])
----
[1, 2, 3]

# push back
query T
SELECT array_push_back([1, 2], 3);
----
[1, 2, 3]

query T
SELECT array_push_back(NULL, 3);
----
[3]

# push front
query T
SELECT array_push_front([2, 3], 1);
----
[1, 2, 3]

query T
SELECT array_push_front(NULL, 1);
----
[1]
