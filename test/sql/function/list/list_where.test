# name: test/sql/function/list/list_where.test
# description: Test list_where function
# group: [list]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers (i int[])

statement ok
INSERT INTO integers VALUES  ([1,2,3]), ([4,5,6])

statement ok
CREATE TABLE selections (j boolean[])

statement ok
INSERT INTO selections VALUES  ([true, false, true]), ([false, true, false])

# normal test cases

query I
SELECT list_where([0, 1, 2], [true, false, false])
----
[0]

query I
SELECT list_where(i, [true, false, true]) FROM integers
----
[1, 3]
[4, 6]

query I
SELECT list_where(i, j) FROM integers, selections
----
[1, 3]
[4, 6]
[2]
[5]

statement error
SELECT list_where([1,2,3], [True, NULL, FALSE]);
----
NULLs are not allowed as list elements in the second input parameter.

query I
SELECT list_where([1,2,3], [True, True, False, False]);
----
[1, 2]

query I
SELECT list_where([1,2,3], [True, False]);
----
[1]

# very large lists

statement ok
CREATE TABLE lists AS SELECT range % 4 g, list(range) l FROM range(10000) GROUP BY range % 4;

statement ok
CREATE TABLE bools AS SELECT range % 4 a, list((range % 2):: bool) s FROM range(10000) GROUP BY range % 4;

statement ok
select g, list_where(l, s) l from lists, bools

# test all types

# BOOLEAN
query I
SELECT list_where([true, false, NULL, true, true, NULL], [true, false, true, true, true, true])
----
[true, NULL, true, true, NULL]

query I
SELECT list_where([NULL::BOOLEAN], [true])
----
[NULL]

# VARCHAR
query I
SELECT list_where(['aa', 'a', 'cd', NULL, '42'], [true, true, false, false, false])
----
[aa, a]

query I
SELECT list_where([NULL::VARCHAR], [true])
----
[NULL]

# INTEGER types
foreach type tinyint smallint integer bigint hugeint utinyint usmallint uinteger ubigint

query I
SELECT list_where([1::${type}, NULL, 2::${type}], [true, true, true])
----
[1, NULL, 2]

query I
SELECT list_where([NULL::${type}], [true])
----
[NULL]

endloop

# FLOAT, DOUBLE and DECIMAL types

foreach type float double decimal(4,1) decimal(9,4) decimal(18,6) decimal(38,10)

statement ok
SELECT list_where([1::${type}], [true])

query I
SELECT list_where([NULL::${type}], [true])
----
[NULL]

endloop

# TEMPORAL types

# date
query I
SELECT list_where(['2021-08-20'::DATE], [true])
----
[2021-08-20]

# time
query I
SELECT list_where(['14:59:37'::TIME], [true])
----
[14:59:37]

# timestamp
query I
SELECT list_where(['2021-08-20'::TIMESTAMP], [true])
----
[2021-08-20 00:00:00]

# timestamp s
query I
SELECT list_where(['2021-08-20'::TIMESTAMP_S], [true])
----
[2021-08-20 00:00:00]

# timestamp ms
query I
SELECT list_where(['2021-08-20 00:00:00.123'::TIMESTAMP_MS], [true])
----
[2021-08-20 00:00:00.123]

# timestamp ns
query I
SELECT list_where(['2021-08-20 00:00:00.123456'::TIMESTAMP_NS], [true])
----
[2021-08-20 00:00:00.123456]

# time with time zone
query I
SELECT list_where(['14:59:37'::TIMETZ], [true])
----
[14:59:37+00]

# timestamp with time zone
query I
SELECT list_where(['2021-08-20'::TIMESTAMPTZ], [true])
----
[2021-08-20 00:00:00+00]

# interval
query I
SELECT list_where([INTERVAL 1 YEAR], [true])
----
[1 year]

foreach type date time timestamp timestamp_s timestamp_ms timestamp_ns timetz timestamptz interval

query I
SELECT list_where([NULL::${type}], [true])
----
[NULL]

endloop

# BLOB

query I
SELECT list_where(['{a: 1}'::BLOB, '{a: 3}'::BLOB], [true, false])
----
[{a: 1}]

query I
SELECT list_where([NULL::BLOB], [true])
----
[NULL]

# ENUMS

statement ok
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy')

statement ok
CREATE TABLE enums (e mood[])

statement ok
INSERT INTO enums VALUES (['happy', 'sad'])

query I
SELECT list_where(e, [false, true]) FROM enums
----
[sad]

# NESTED types

query I
SELECT list_where([[1], [1, 2], NULL, [NULL], [], [1, 2, 3]], [true, false, false, true, true, false])
----
[[1], [NULL], []]

query I
SELECT list_where([{'a': 1}, {'a': 5}, {'a': 3}], [true, true, true])
----
[{'a': 1}, {'a': 5}, {'a': 3}]
