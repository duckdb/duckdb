# name: test/sql/function/date/test_date_part.test
# description: DATE_PART test
# group: [date]

statement ok
SET default_null_order='nulls_first';

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE dates(d DATE, s VARCHAR);

statement ok
INSERT INTO dates VALUES
	('1992-01-01', 'year'),
	('1992-03-03', 'month'),
	('1992-05-05', 'day'),
	('2022-01-01', 'isoyear'),
	('044-03-15 (BC)', 'millennium'),
	('infinity', 'century'),
	('-infinity', 'decade'),
	(NULL, 'weekday'),
;

statement ok
CREATE TABLE specifiers (specifier VARCHAR);

foreach specifier era millennium century decade year quarter month day week weekday isodow dayofyear isoyear yearweek

statement ok
INSERT INTO specifiers VALUES ('${partcode}');

endloop

# test date_part with different combinations of constant/non-constant columns
query I
SELECT date_part(NULL::VARCHAR, NULL::TIMESTAMP) FROM dates;
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I
SELECT date_part(s, NULL::TIMESTAMP) FROM dates;
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

# dates
query I
SELECT date_part(NULL, d) FROM dates;
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I
SELECT date_part(s, DATE '1992-01-01') FROM dates;
----
1992
1
1
1992
2
20
199
3

query I
SELECT date_part('year', d) FROM dates;
----
1992
1992
1992
2022
-43
NULL
NULL
NULL

query I
SELECT date_part('isoyear', d) FROM dates;
----
1992
1992
1992
2021
-43
NULL
NULL
NULL

query I
SELECT date_part(s, d) FROM dates;
----
1992
3
5
2021
-1
NULL
NULL
NULL

query I
SELECT date_part('era', d) FROM dates;
----
1
1
1
1
0
NULL
NULL
NULL

query I
SELECT date_part('julian', d) FROM dates;
----
2448623
2448685
2448748
2459581
1705428
NULL
NULL
NULL

statement error
SELECT date_part('timezone', d) FROM dates;

statement error
SELECT date_part('timezone_hour', d) FROM dates;

statement error
SELECT date_part('timezone_minute', d) FROM dates;

# timestamps
query I
SELECT date_part(NULL, d::TIMESTAMP) FROM dates;
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I
SELECT date_part(s, TIMESTAMP '1992-01-01') FROM dates;
----
1992
1
1
1992
2
20
199
3

query I
SELECT date_part('year', d::TIMESTAMP) FROM dates;
----
1992
1992
1992
2022
-43
NULL
NULL
NULL

query I
SELECT date_part('isoyear', d::TIMESTAMP) FROM dates;
----
1992
1992
1992
2021
-43
NULL
NULL
NULL

query I
SELECT date_part(s, d::TIMESTAMP) FROM dates;
----
1992
3
5
2021
-1
NULL
NULL
NULL

query I
SELECT date_part('era', d::TIMESTAMP) FROM dates;
----
1
1
1
1
0
NULL
NULL
NULL

query I
SELECT date_part('timezone', d::TIMESTAMP) FROM dates;
----
0
0
0
0
0
NULL
NULL
NULL

query I
SELECT date_part('timezone_hour', d::TIMESTAMP) FROM dates;
----
0
0
0
0
0
NULL
NULL
NULL

query I
SELECT date_part('timezone_minute', d::TIMESTAMP) FROM dates;
----
0
0
0
0
0
NULL
NULL
NULL

#  last_day
query TTT
SELECT LAST_DAY(DATE '1900-02-12'), LAST_DAY(DATE '1992-02-12'), LAST_DAY(DATE '2000-02-12');
----
1900-02-28	1992-02-29	2000-02-29

query T
SELECT LAST_DAY(d) FROM dates;
----
1992-01-31
1992-03-31
1992-05-31
2022-01-31
0044-03-31 (BC)
NULL
NULL
NULL

query T
SELECT LAST_DAY(d::timestamp) FROM dates;
----
1992-01-31
1992-03-31
1992-05-31
2022-01-31
0044-03-31 (BC)
NULL
NULL
NULL

#  monthname
query T
SELECT MONTHNAME(d) FROM dates;
----
January
March
May
January
March
NULL
NULL
NULL

#  dayname
query T
SELECT DAYNAME(d) FROM dates;
----
Wednesday
Tuesday
Tuesday
Saturday
Friday
NULL
NULL
NULL

#  yearweek
query I
SELECT YEARWEEK(d) FROM dates;
----
199201
199210
199219
202152
-4311
NULL
NULL
NULL

#  aliases
query I
SELECT DAYOFMONTH(d) FROM dates;
----
1
3
5
1
15
NULL
NULL
NULL

query I
SELECT WEEKDAY(d) FROM dates;
----
3
2
2
6
5
NULL
NULL
NULL

query I
SELECT WEEKOFYEAR(d) FROM dates;
----
1
10
19
52
11
NULL
NULL
NULL

query I
SELECT JULIAN(d) FROM dates;
----
2448623
2448685
2448748
2459581
1705428
NULL
NULL
NULL

query IIIIIIIIIIII
select
date_part('quarter', DATE '1992-01-20'),
date_part('quarter', DATE '1992-02-20'),
date_part('quarter', DATE '1992-03-20'),
date_part('quarter', DATE '1992-04-20'),
date_part('quarter', DATE '1992-05-20'),
date_part('quarter', DATE '1992-06-20'),
date_part('quarter', DATE '1992-07-20'),
date_part('quarter', DATE '1992-08-20'),
date_part('quarter', DATE '1992-09-20'),
date_part('quarter', DATE '1992-10-20'),
date_part('quarter', DATE '1992-11-20'),
date_part('quarter', DATE '1992-12-20')
----
1	1	1	2	2	2	3	3	3	4	4	4

# Correctness: Compare date_part values with scalar values
foreach partcode era millennium century decade year quarter month day week weekday isodow dayofyear isoyear yearweek julian

query III
SELECT d, DATE_PART('${partcode}', d) AS p, ${partcode}(d) AS f
FROM dates
WHERE p IS DISTINCT FROM f;
----

endloop

# Function-only parts
query II
SELECT d, epoch_ns(d) 
FROM dates 
WHERE d != '0044-03-15 (BC)' OR d IS NULL
ORDER BY ALL;
----
NULL	NULL
-infinity	NULL
1992-01-01	694224000000000000
1992-03-03	699580800000000000
1992-05-05	705024000000000000
2022-01-01	1640995200000000000
infinity	NULL

query II
SELECT d, epoch_us(d) FROM dates ORDER BY ALL;
----
NULL	NULL
-infinity	NULL
0044-03-15 (BC)	-63517824000000000
1992-01-01	694224000000000
1992-03-03	699580800000000
1992-05-05	705024000000000
2022-01-01	1640995200000000
infinity	NULL

query II
SELECT d, epoch_ms(d) FROM dates ORDER BY ALL;
----
NULL	NULL
-infinity	NULL
0044-03-15 (BC)	-63517824000000
1992-01-01	694224000000
1992-03-03	699580800000
1992-05-05	705024000000
2022-01-01	1640995200000
infinity	NULL

#
# Structs
#

# Correctness: Compare struct values with scalar values
foreach partcode era millennium century decade year quarter month day week weekday isodow doy isoyear yearweek

query III
SELECT d, DATE_PART('${partcode}', d) AS p, DATE_PART(['${partcode}'], d) AS st
FROM dates
WHERE p IS DISTINCT FROM st['${partcode}'];
----

endloop

# Date parts
query II
SELECT d, DATE_PART(['year', 'month', 'day'], d) AS parts
FROM dates
ORDER BY 1;
----
NULL	NULL
-infinity	{'year': NULL, 'month': NULL, 'day': NULL}
0044-03-15 (BC)	{'year': -43, 'month': 3, 'day': 15}
1992-01-01	{'year': 1992, 'month': 1, 'day': 1}
1992-03-03	{'year': 1992, 'month': 3, 'day': 3}
1992-05-05	{'year': 1992, 'month': 5, 'day': 5}
2022-01-01	{'year': 2022, 'month': 1, 'day': 1}
infinity	{'year': NULL, 'month': NULL, 'day': NULL}

# Year parts
query II
SELECT d, DATE_PART(['era', 'millennium', 'century', 'decade', 'quarter'], d) AS parts
FROM dates
ORDER BY 1;
----
NULL	NULL
-infinity	{'era': NULL, 'millennium': NULL, 'century': NULL, 'decade': NULL, 'quarter': NULL}
0044-03-15 (BC)	{'era': 0, 'millennium': -1, 'century': -1, 'decade': -4, 'quarter': 1}
1992-01-01	{'era': 1, 'millennium': 2, 'century': 20, 'decade': 199, 'quarter': 1}
1992-03-03	{'era': 1, 'millennium': 2, 'century': 20, 'decade': 199, 'quarter': 1}
1992-05-05	{'era': 1, 'millennium': 2, 'century': 20, 'decade': 199, 'quarter': 2}
2022-01-01	{'era': 1, 'millennium': 3, 'century': 21, 'decade': 202, 'quarter': 1}
infinity	{'era': NULL, 'millennium': NULL, 'century': NULL, 'decade': NULL, 'quarter': NULL}

# Day parts
query II
SELECT d, DATE_PART(['weekday', 'isodow', 'doy', 'julian'], d) AS parts
FROM dates
ORDER BY 1;
----
NULL	NULL
-infinity	{'weekday': NULL, 'isodow': NULL, 'doy': NULL, 'julian': NULL}
0044-03-15 (BC)	{'weekday': 5, 'isodow': 5, 'doy': 74, 'julian': 1705428.0}
1992-01-01	{'weekday': 3, 'isodow': 3, 'doy': 1, 'julian': 2448623.0}
1992-03-03	{'weekday': 2, 'isodow': 2, 'doy': 63, 'julian': 2448685.0}
1992-05-05	{'weekday': 2, 'isodow': 2, 'doy': 126, 'julian': 2448748.0}
2022-01-01	{'weekday': 6, 'isodow': 6, 'doy': 1, 'julian': 2459581.0}
infinity	{'weekday': NULL, 'isodow': NULL, 'doy': NULL, 'julian': NULL}

query I
SELECT DATE_PART(['weekday', 'isodow', 'doy', 'julian'], '2022-01-01'::DATE) AS parts
----
{'weekday': 6, 'isodow': 6, 'doy': 1, 'julian': 2459581.0}

# ISO parts
query II
SELECT d, DATE_PART(['isoyear', 'week', 'yearweek'], d) AS parts
FROM dates
ORDER BY 1;
----
NULL	NULL
-infinity	{'isoyear': NULL, 'week': NULL, 'yearweek': NULL}
0044-03-15 (BC)	{'isoyear': -43, 'week': 11, 'yearweek': -4311}
1992-01-01	{'isoyear': 1992, 'week': 1, 'yearweek': 199201}
1992-03-03	{'isoyear': 1992, 'week': 10, 'yearweek': 199210}
1992-05-05	{'isoyear': 1992, 'week': 19, 'yearweek': 199219}
2022-01-01	{'isoyear': 2021, 'week': 52, 'yearweek': 202152}
infinity	{'isoyear': NULL, 'week': NULL, 'yearweek': NULL}

# Selective filtering (Issue #5342)
query II
SELECT d, DATE_PART(['year', 'month', 'day'], d) AS parts
FROM dates
WHERE s = 'day'
ORDER BY 1;
----
1992-05-05	{'year': 1992, 'month': 5, 'day': 5}

# Invalid parts

foreach hour minute second millisecond microsecond timezone timezone_hour timezone_minute

statement error
SELECT d, DATE_PART(['${datepart}'], d) AS parts
FROM dates
ORDER BY 1;

endloop

#
# Infinities
#
# PG returns numeric Â±Infinity, but we have to return an integer,
# so instead we return NULL, which is what PG used to do.

foreach datatype DATE TIMESTAMP

foreach special infinity -infinity

# Binary function
query I
SELECT DATE_PART(specifier, '${special}'::${datatype}) AS result
FROM specifiers
WHERE result IS NOT NULL
----

foreach unary year month day decade century millennium quarter dayofweek isodow dayofyear week isoyear era timezone timezone_hour timezone_minute epoch microsecond millisecond second minute hour yearweek dayofmonth weekday weekofyear last_day monthname dayname

# Unary functions
query I
SELECT ${unary}('${special}'::${datatype});
----
NULL

endloop

endloop

endloop
