# name: test/sql/aggregate/aggregates/histogram_tpch.test_slow
# description: Test histogram operator on TPC-H
# group: [aggregates]

require tpch

statement ok
CALL dbgen(sf=1);

query I
SELECT histogram(l_orderkey, range(0, 7000000, 1000000))
FROM lineitem
----
{0=0, 1000000=1000049, 2000000=1000448, 3000000=999174, 4000000=1000987, 5000000=1000496, 6000000=1000061}

query I
SELECT histogram(l_orderkey // 1000000)
FROM lineitem
----
{0=1000048, 1=1000447, 2=999171, 3=1000989, 4=1000498, 5=1000060, 6=2}

query I
SELECT histogram(l_shipdate, range((SELECT MIN(l_shipdate) FROM lineitem), (SELECT MAX(l_shipdate) FROM lineitem), interval '1' year))
FROM lineitem
----
{1992-01-02=17, 1993-01-02=761193, 1994-01-02=908785, 1995-01-02=909464, 1996-01-02=914963, 1997-01-02=913658, 1998-01-02=911349, infinity=681786}

# grouped histogram
query II nosort grouped_map
SELECT l_returnflag, histogram(l_orderkey, range(0, 7000000, 1000000))
FROM lineitem
GROUP BY l_returnflag
ORDER BY l_returnflag
----

# compute using filtered aggregates - this should produce the same result
query II nosort grouped_map
SELECT l_returnflag,
	map {
	'0': case when sum(1) filter(l_orderkey <= 0) is null then 0 end,
	'1000000': sum(1) filter(l_orderkey > 0 and l_orderkey <= 1000000),
	'2000000': sum(1) filter(l_orderkey > 1000000 and l_orderkey <= 2000000),
	'3000000': sum(1) filter(l_orderkey > 2000000 and l_orderkey <= 3000000),
	'4000000': sum(1) filter(l_orderkey > 3000000 and l_orderkey <= 4000000),
	'5000000': sum(1) filter(l_orderkey > 4000000 and l_orderkey <= 5000000),
	'6000000': sum(1) filter(l_orderkey > 5000000 and l_orderkey <= 6000000)
	}
FROM lineitem
GROUP BY l_returnflag
ORDER BY l_returnflag
----

# histogram table function
# decimals
query II
SELECT bin, count FROM histogram(lineitem, l_extendedprice)
----
x <= 10000.00	773545
10000.00 < x <= 20000.00	831988
20000.00 < x <= 30000.00	833410
30000.00 < x <= 40000.00	835155
40000.00 < x <= 50000.00	829356
50000.00 < x <= 60000.00	724657
60000.00 < x <= 70000.00	528755
70000.00 < x <= 80000.00	358127
80000.00 < x <= 90000.00	207206
90000.00 < x <= 100000.00	74894
100000.00 < x <= 110000.00	4122

# dates
query II
SELECT bin, count FROM histogram(lineitem, l_shipdate)
----
x <= 1992-12-01	682114
1992-12-01 < x <= 1993-08-01	603468
1993-08-01 < x <= 1994-04-01	606065
1994-04-01 < x <= 1994-12-01	608515
1994-12-01 < x <= 1995-08-01	608265
1995-08-01 < x <= 1996-04-01	609527
1996-04-01 < x <= 1996-12-01	609621
1996-12-01 < x <= 1997-08-01	607911
1997-08-01 < x <= 1998-04-01	605815
1998-04-01 < x <= 1998-12-01	459914

# varchar
query II
SELECT bin, count FROM histogram(lineitem, l_returnflag)
----
A	1478493
N	3043852
R	1478870

# list
query II
SELECT bin, count FROM histogram(lineitem, [l_returnflag])
----
[A]	1478493
[N]	3043852
[R]	1478870

# struct
query II
SELECT bin, count FROM histogram(lineitem, {'i': l_returnflag})
----
{'i': A}	1478493
{'i': N}	3043852
{'i': R}	1478870

# string stress test
query I nosort histstrings
SELECT unnest(map_keys(histogram(l_comment))) FROM lineitem
----

query I nosort histstrings
SELECT DISTINCT l_comment FROM lineitem ORDER BY l_comment
----

# approx_top_k stress test
query I
SELECT list_sort(approx_top_k(l_returnflag, 5)) FROM lineitem
----
[A, N, R]

statement ok
SELECT approx_top_k(l_comment, 5) FROM lineitem
