# name: test/sql/aggregate/aggregates/test_bitstring_agg.test
# description: Test BITSTRING_AGG operator
# group: [aggregates]

statement ok
PRAGMA verify_external

require skip_reload

# test tinyints
statement ok
CREATE TABLE tinyints(i TINYINT)

statement ok
INSERT INTO tinyints VALUES(1), (8), (3), (12), (7), (1), (2), (8)

query I 
SELECT BITSTRING_AGG(i) FROM tinyints
----
111000110001

query I
SELECT bit_count(BITSTRING_AGG(i)) FROM tinyints WHERE i <= 7
----
4

# test smallints
statement ok
CREATE TABLE smallints(i SMALLINT)

statement ok
INSERT INTO smallints VALUES(1), (8), (-3), (12), (7), (1), (-1), (-9), (NULL), (-2), (8)

query I 
SELECT BITSTRING_AGG(i) FROM smallints
----
1000001110100000110001

query I
SELECT bit_count(BITSTRING_AGG(i)) FROM smallints WHERE i = 8
----
1

# test integers
statement ok
CREATE TABLE ints(i INTEGER);

statement ok
INSERT INTO ints VALUES(10), (-5), (11), (NULL), (30), (11), (23), (17), (27), (15), (5), (14)

query I
SELECT BITSTRING_AGG(i) FROM ints
----
100000000010000110011010000010001001

query I
SELECT bit_count(BITSTRING_AGG(i)) FROM ints WHERE i > 20 AND i < 28
----
2

# test bigints
statement ok
CREATE TABLE bigints(i BIGINT);

statement ok
INSERT INTO bigints VALUES(2378097), (2378100), (2378095), (2378104), (NULL), (2378113), (2378100), (2378095), (2378105), (2378097)

query I
SELECT BITSTRING_AGG(i) FROM bigints
----
1010010001100000001

query I
SELECT bit_count(BITSTRING_AGG(i)) FROM bigints WHERE i = 100
----
NULL

# test hugeints
statement ok
CREATE TABLE hugeints(i HUGEINT);

statement ok
INSERT INTO hugeints VALUES(12243372036854775807), (12243372036854778191), (12243372036854730332), (12243372036854773737), (12243372036854737711), (12243372036854722124), (12243372036854778191)

query I
SELECT bit_length(BITSTRING_AGG(i)) FROM hugeints
----
56068


# bit_count of BITSTRING_AGG should give same results as DISTINCT COUNT 
query I nosort distinct_small
SELECT bit_count(BITSTRING_AGG(i)) FROM smallints
----

query I nosort distinct_small
SELECT COUNT(DISTINCT i) FROM smallints
----

query I nosort distinct_ints
SELECT bit_count(BITSTRING_AGG(i)) FROM ints
----

query I nosort distinct_ints
SELECT COUNT(DISTINCT i) FROM ints
----

query I nosort distinct_bigints
SELECT bit_count(BITSTRING_AGG(i)) FROM bigints
----

query I nosort distinct_bigints
SELECT COUNT(DISTINCT i) FROM bigints
----

query I nosort distinct_hugeints
SELECT bit_count(BITSTRING_AGG(i)) FROM hugeints
----

query I nosort distinct_hugeints
SELECT COUNT(DISTINCT i) FROM hugeints
----

# Overload that takes min and max as function arguments
query I
SELECT BITSTRING_AGG(i, -5, 30) FROM ints
----
100000000010000110011010000010001001

query I
SELECT BITSTRING_AGG(i, -10, 40) FROM ints
----
000001000000000100001100110100000100010010000000000

statement error
SELECT BITSTRING_AGG(i, -10, 20) FROM ints
----
Out of Range Error: Value 30 is outside of provided min and max range (-10 <-> 20)

query I 
SELECT BITSTRING_AGG(i, 0, 15) FROM tinyints
----
0111000110001000

statement error
SELECT BITSTRING_AGG(i, 2, 15) FROM tinyints
----
Out of Range Error: Value 1 is outside of provided min and max range (2 <-> 15)

query I
SELECT BITSTRING_AGG(i, 2378080, 2378150) FROM bigints
----
00000000000000010100100011000000010000000000000000000000000000000000000


# test on scalar values 
query I
SELECT BITSTRING_AGG(3)
----
1

query I
SELECT BITSTRING_AGG(2, 0, 5)
----
001000

# test with NULL
statement ok
CREATE TABLE null_table(i INT);

statement ok
INSERT INTO null_table VALUES(NULL)

query I
SELECT BITSTRING_AGG(i) FROM null_table
----
NULL

statement ok
INSERT INTO null_table VALUES(6), (NULL), (NULL), (NULL), (NULL)

query I
SELECT BITSTRING_AGG(i) FROM null_table
----
1

# test on csv files - csvs do not provide column statistics
statement ok
COPY (SELECT i FROM ints) TO '__TEST_DIR__/bitstring_agg.csv';

statement error
SELECT BITSTRING_AGG(column0) FROM '__TEST_DIR__/bitstring_agg.csv';
----
Binder Error: Could not retrieve required statistics. Alternatively, try by providing the statistics explicitly: BITSTRING_AGG(col, min, max) 

query I
SELECT BITSTRING_AGG(column0, -10, 40) FROM '__TEST_DIR__/bitstring_agg.csv';
----
000001000000000100001100110100000100010010000000000

# test incorrect usage
statement error
SELECT BITSTRING_AGG()

statement error
SELECT BITSTRING_AGG(1, 3, 4, 8, 0)

# group by
statement ok
CREATE TABLE groups(i INT, g VARCHAR);

statement ok
INSERT INTO groups VALUES(10, 'a'), (13, 'b'), (9, 'a'), (16, 'c'), (NULL, 'd'), (2, 'a'), (6, 'c'), (9, 'b')

query II
SELECT g, BITSTRING_AGG(i) FROM groups GROUP BY g ORDER BY g
----
a	100000011000000
b	000000010001000
c	000010000000001
d	NULL

# disable optimizer 
statement ok
PRAGMA disable_optimizer

statement error
SELECT BITSTRING_AGG(i) FROM ints
----
Binder Error: Could not retrieve required statistics. Alternatively, try by providing the statistics explicitly: BITSTRING_AGG(col, min, max) 

query I
SELECT BITSTRING_AGG(i, -5, 32) FROM ints
----
10000000001000011001101000001000100100