# name: test/sql/aggregate/aggregates/test_ordered_aggregates.test
# description: Test rewrites of ordered aggregates
# group: [aggregates]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE flights(
	"year" INTEGER,
	"month" INTEGER,
	"day" INTEGER,
	dep_time INTEGER,
	sched_dep_time INTEGER,
	dep_delay DOUBLE,
	arr_time INTEGER,
	sched_arr_time INTEGER,
	arr_delay DOUBLE,
	carrier VARCHAR,
	flight INTEGER,
	tailnum VARCHAR,
	origin VARCHAR,
	dest VARCHAR,
	air_time DOUBLE,
	distance DOUBLE,
	"hour" DOUBLE,
	"minute" DOUBLE,
	time_hour TIMESTAMP);

statement ok
SELECT "dest", mode() WITHIN GROUP (ORDER BY "arr_delay") AS "median_delay"
FROM "flights"
GROUP BY "dest"

statement ok
SELECT "dest", percentile_cont(0.5) WITHIN GROUP (ORDER BY "arr_delay") AS "median_delay"
FROM "flights"
GROUP BY "dest"

statement ok
SELECT "dest", percentile_cont([0.25, 0.5, 0.75]) WITHIN GROUP (ORDER BY "arr_delay") AS "iqr_delay"
FROM "flights"
GROUP BY "dest"

statement ok
SELECT "dest", percentile_disc(0.5) WITHIN GROUP (ORDER BY "arr_delay") AS "median_delay"
FROM "flights"
GROUP BY "dest"

statement ok
SELECT "dest", percentile_disc([0.25, 0.5, 0.75]) WITHIN GROUP (ORDER BY "arr_delay") AS "iqr_delay"
FROM "flights"
GROUP BY "dest"

# ORDER BY DESC

query I
select percentile_disc(0.25) within group(order by i desc) from generate_series(0,100) tbl(i);
----
75

query I
select percentile_disc([0.25, 0.5, 0.75]) within group(order by i desc) from generate_series(0,100) tbl(i);
----
[75, 50, 25]

query I
select percentile_cont(0.25) within group(order by i desc) from generate_series(0,100) tbl(i);
----
75.000000

query I
select percentile_cont([0.25, 0.5, 0.75]) within group(order by i desc) from generate_series(0,100) tbl(i);
----
[75.0, 50.0, 25.0]

# DESC boundary condition
query I
SELECT percentile_disc(.5) WITHIN GROUP (order by col desc) 
FROM VALUES (11000), (3100), (2900), (2800), (2600), (2500) AS tab(col);
----
2900

query I
SELECT percentile_disc([.25, .5, .75]) WITHIN GROUP (order by col desc) 
FROM VALUES (11000), (3100), (2900), (2800), (2600), (2500) AS tab(col);
----
[3100, 2900, 2600]

# MODE is order-sensitive
query I
SELECT MODE() WITHIN GROUP (ORDER BY order_occurrences DESC) FROM (
VALUES
	(500, 1),
	(1000, 2),
	(800, 3),
	(1000, 4),
	(500, 5),
	(550, 6),
	(400, 7),
	(200, 8),
	(10, 9)
) items_per_order(order_occurrences, item_count);
----
1000

#
# Error checking
#

# Cannot use multiple ORDER BY clauses with WITHIN GROUP
statement error
SELECT "dest", mode() WITHIN GROUP (ORDER BY "arr_delay", "arr_time") AS "median_delay"
FROM "flights"
GROUP BY "dest"

# Unknown ordered aggregate "duck".
statement error
SELECT "dest", duck(0.5) WITHIN GROUP (ORDER BY "arr_delay") AS "duck_delay"
FROM "flights"
GROUP BY "dest"

# Wrong number of arguments for PERCENTILE_DISC
statement error
select percentile_disc() within group(order by i) from generate_series(0,100) tbl(i);

statement error
select percentile_disc(0.25, 0.5) within group(order by i) from generate_series(0,100) tbl(i);

# Wrong number of arguments for PERCENTILE_CONT
statement error
select percentile_cont() within group(order by i) from generate_series(0,100) tbl(i);

statement error
select percentile_cont(0.25, 0.5) within group(order by i) from generate_series(0,100) tbl(i);

# NaN is not allowed
statement error
SELECT percentile_disc(CAST('NaN' AS REAL)) WITHIN GROUP (ORDER BY 1);

# Empty list is also not allowed
statement error
SELECT percentile_disc([]) WITHIN GROUP (ORDER BY LAST);

# Wrong number of arguments for MODE
statement error
select mode(0.25) within group(order by i) from generate_series(0,100) tbl(i);

# No function matches the given name and argument types 'quantile_disc(BIGINT, VARCHAR)'
statement error
select percentile_disc('duck') within group(order by i) from generate_series(0,100) tbl(i);

# No function matches the given name and argument types 'quantile_cont(BIGINT, VARCHAR)'
statement error
select percentile_cont('duck') within group(order by i) from generate_series(0,100) tbl(i);

# aggregate function calls cannot be nested
statement error
SELECT percentile_disc(sum(1)) WITHIN GROUP (ORDER BY 1 DESC);

# NULL fractions with DESC should not be inverted
statement error
SELECT percentile_disc(strftime(DATE '1-11-25',NULL)) WITHIN GROUP (ORDER BY 1 DESC);

statement error
SELECT percentile_cont(CASE 1 WHEN 2 THEN 3 END) WITHIN GROUP (ORDER BY 1 DESC);

# Negative fractions are not allowed

foreach sense ASC DESC

statement error
SELECT percentile_disc(-.5) WITHIN GROUP (order by col ${sense}) 
FROM VALUES (11000), (3100), (2900), (2800), (2600), (2500) AS tab(col);

statement error
SELECT percentile_disc([-.25, .5, .75]) WITHIN GROUP (order by col ${sense}) 
FROM VALUES (11000), (3100), (2900), (2800), (2600), (2500) AS tab(col);

endloop
