# name: test/sql/copy/csv/test_csv_timestamp_tz.test
# description: Test CSV with timestamp_tz and timestampformat
# group: [csv]

statement ok
pragma enable_verification


statement error
copy (
select '2021-05-25 04:55:03.382494 UTC'::timestamp as ts, '2021-05-25 04:55:03.382494 UTC'::timestamptz as tstz
) to '__TEST_DIR__/timestamps.csv' ( timestampformat '%A');
----
No function matches the given name and argument types

require icu

require no_extension_autoloading "FIXME: In CSV value conversion we don't autoload ICU"

statement ok
SET TimeZone='UTC'

# If we set to timestamptz it works
query II
FROM read_csv('data/csv/timestamp_timezone.csv', columns = {'time':'timestamptz', 'description':'varchar'})
----
2020-01-01 00:00:00+00	midnight local
2020-01-01 08:00:00+00	midnight in San Francisco
2020-01-01 00:00:00+00	midnight UTC +00
2020-01-01 00:00:00+00	midnight UTC Z
2019-12-31 16:00:00+00	midnight in Taipei
2019-12-31 18:30:00+00	Asia/Kolkata
2019-12-31 10:15:00+00	Pacific/Chatham
2020-01-01 03:30:00+00	Canada/Newfoundland

query II
FROM read_csv('data/csv/timestamp_timezone.csv', auto_type_candidates = ['BOOLEAN', 'BIGINT', 'DOUBLE', 'TIME', 'DATE', 'TIMESTAMP','TIMESTAMPTZ', 'VARCHAR'])
----
2020-01-01 00:00:00+00	midnight local
2020-01-01 08:00:00+00	midnight in San Francisco
2020-01-01 00:00:00+00	midnight UTC +00
2020-01-01 00:00:00+00	midnight UTC Z
2019-12-31 16:00:00+00	midnight in Taipei
2019-12-31 18:30:00+00	Asia/Kolkata
2019-12-31 10:15:00+00	Pacific/Chatham
2020-01-01 03:30:00+00	Canada/Newfoundland


query II
FROM read_csv('data/csv/timestamp_timezone.csv', auto_type_candidates = ['BOOLEAN', 'BIGINT', 'DOUBLE', 'TIME', 'DATE', 'TIMESTAMPTZ', 'VARCHAR'])
----
2020-01-01 00:00:00+00	midnight local
2020-01-01 08:00:00+00	midnight in San Francisco
2020-01-01 00:00:00+00	midnight UTC +00
2020-01-01 00:00:00+00	midnight UTC Z
2019-12-31 16:00:00+00	midnight in Taipei
2019-12-31 18:30:00+00	Asia/Kolkata
2019-12-31 10:15:00+00	Pacific/Chatham
2020-01-01 03:30:00+00	Canada/Newfoundland

query I
SELECT columns FROM sniff_csv('data/csv/timestamp_timezone.csv')
----
[{'name': time, 'type': TIMESTAMP WITH TIME ZONE}, {'name': description, 'type': VARCHAR}]

query II
FROM 'data/csv/timestamp_timezone.csv'
----
2020-01-01 00:00:00+00	midnight local
2020-01-01 08:00:00+00	midnight in San Francisco
2020-01-01 00:00:00+00	midnight UTC +00
2020-01-01 00:00:00+00	midnight UTC Z
2019-12-31 16:00:00+00	midnight in Taipei
2019-12-31 18:30:00+00	Asia/Kolkata
2019-12-31 10:15:00+00	Pacific/Chatham
2020-01-01 03:30:00+00	Canada/Newfoundland


query I
SELECT columns FROM sniff_csv('data/csv/timestamp_with_tz.csv')
----
[{'name': id, 'type': BIGINT}, {'name': timestamps, 'type': TIMESTAMP WITH TIME ZONE}]

query II
FROM 'data/csv/timestamp_with_tz.csv'
----
1	2021-05-25 04:55:03.382494+00
2	2021-05-25 09:55:03.382494+00

# Test over vector size timestamp
statement ok
create table t as SELECT '1; 2020-01-01 00:00:00+00' as ts from range (10000)

statement ok
copy t to '__TEST_DIR__/timetz.csv'

query I
SELECT columns FROM sniff_csv('__TEST_DIR__/timetz.csv')
----
[{'name': column0, 'type': BIGINT}, {'name': column1, 'type': TIMESTAMP WITH TIME ZONE}]

statement ok
insert into t values ('2; thisisastring')

statement ok
copy t to '__TEST_DIR__/timetz_2.csv'

query I
SELECT columns FROM sniff_csv('__TEST_DIR__/timetz_2.csv')
----
[{'name': column0, 'type': BIGINT}, {'name': column1, 'type': VARCHAR}]

statement ok
drop table t;
