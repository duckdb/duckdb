# name: test/sql/copy/csv/test_sniff_csv.test
# description: Test sniff_csv function
# group: [csv]

statement ok
PRAGMA enable_verification

# requires notwindows because tests will return \r\n to be used in the parameters
require notwindows

query I
SELECT Prompt FROM sniff_csv('test/sql/copy/csv/data/real/lineitem_sample.csv');
----
FROM read_csv('test/sql/copy/csv/data/real/lineitem_sample.csv', auto_detect=false, delim='|', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column00': 'BIGINT', 'column01': 'BIGINT', 'column02': 'BIGINT', 'column03': 'BIGINT', 'column04': 'BIGINT', 'column05': 'DOUBLE', 'column06': 'DOUBLE', 'column07': 'DOUBLE', 'column08': 'VARCHAR', 'column09': 'VARCHAR', 'column10': 'DATE', 'column11': 'DATE', 'column12': 'DATE', 'column13': 'VARCHAR', 'column14': 'VARCHAR', 'column15': 'VARCHAR'}, dateformat='%Y-%m-%d');

query IIIIIIIIIIIIIIII
FROM read_csv('test/sql/copy/csv/data/real/lineitem_sample.csv', auto_detect=false, delim='|', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column00': 'BIGINT', 'column01': 'BIGINT', 'column02': 'BIGINT', 'column03': 'BIGINT', 'column04': 'BIGINT', 'column05': 'DOUBLE', 'column06': 'DOUBLE', 'column07': 'DOUBLE', 'column08': 'VARCHAR', 'column09': 'VARCHAR', 'column10': 'DATE', 'column11': 'DATE', 'column12': 'DATE', 'column13': 'VARCHAR', 'column14': 'VARCHAR', 'column15': 'VARCHAR'}, dateformat='%Y-%m-%d') limit 1;
----
1	15519	785	1	17	24386.67	0.04	0.02	N	O	1996-03-13	1996-02-12	1996-03-22	DELIVER IN PERSON	TRUCK	egular courts above the

query IIIIIIIIIII
FROM sniff_csv('test/sql/copy/csv/data/real/lineitem_sample.csv');
----
|	"	"	\n	0	0	{'column00': 'BIGINT', 'column01': 'BIGINT', 'column02': 'BIGINT', 'column03': 'BIGINT', 'column04': 'BIGINT', 'column05': 'DOUBLE', 'column06': 'DOUBLE', 'column07': 'DOUBLE', 'column08': 'VARCHAR', 'column09': 'VARCHAR', 'column10': 'DATE', 'column11': 'DATE', 'column12': 'DATE', 'column13': 'VARCHAR', 'column14': 'VARCHAR', 'column15': 'VARCHAR'}	%Y-%m-%d	NULL	NULL	FROM read_csv('test/sql/copy/csv/data/real/lineitem_sample.csv', auto_detect=false, delim='|', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column00': 'BIGINT', 'column01': 'BIGINT', 'column02': 'BIGINT', 'column03': 'BIGINT', 'column04': 'BIGINT', 'column05': 'DOUBLE', 'column06': 'DOUBLE', 'column07': 'DOUBLE', 'column08': 'VARCHAR', 'column09': 'VARCHAR', 'column10': 'DATE', 'column11': 'DATE', 'column12': 'DATE', 'column13': 'VARCHAR', 'column14': 'VARCHAR', 'column15': 'VARCHAR'}, dateformat='%Y-%m-%d');

# Test Invalid Path
statement error
FROM sniff_csv('test/sql/copy/csv/data/real/non_ecziste.csv');
----
IO Error: Cannot open file "test/sql/copy/csv/data/real/non_ecziste.csv": No such file or directory

# Test different sample sizes

query IIIIIIIIIII
FROM sniff_csv('test/sql/copy/csv/data/error/mismatch/big_bad.csv', sample_size=1);
----
,	"	"	\n	0	0	{'column0': 'BIGINT', 'column1': 'VARCHAR'}	NULL	NULL	sample_size=1	FROM read_csv('test/sql/copy/csv/data/error/mismatch/big_bad.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column0': 'BIGINT', 'column1': 'VARCHAR'}, sample_size=1);

statement error
FROM read_csv('test/sql/copy/csv/data/error/mismatch/big_bad.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=0, columns={'column0': 'BIGINT', 'column1': 'VARCHAR'}, sample_size=1);
----
Could not convert string 'B' to INT64 at line 2176 in column "column0"

query IIIIIIIIIII
FROM sniff_csv('test/sql/copy/csv/data/error/mismatch/big_bad.csv', sample_size=10000);
----
,	"	"	\n	0	0	{'column0': 'VARCHAR', 'column1': 'VARCHAR'}	NULL	NULL	sample_size=10000	FROM read_csv('test/sql/copy/csv/data/error/mismatch/big_bad.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column0': 'VARCHAR', 'column1': 'VARCHAR'}, sample_size=10000);

query IIIIIIIIIII
FROM sniff_csv('test/sql/copy/csv/data/error/mismatch/big_bad.csv', sample_size=-1);
----
,	"	"	\n	0	false	{'column0': 'VARCHAR', 'column1': 'VARCHAR'}	NULL	NULL	sample_size=-1	FROM read_csv('test/sql/copy/csv/data/error/mismatch/big_bad.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column0': 'VARCHAR', 'column1': 'VARCHAR'}, sample_size=-1);

# Test with defined time and timestamp
query IIIIIIIIIII
FROM sniff_csv('test/sql/copy/csv/data/test/dateformat.csv')
----
,	"	"	\n	0	0	{'column0': 'DATE'}	%d/%m/%Y	NULL	NULL	FROM read_csv('test/sql/copy/csv/data/test/dateformat.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column0': 'DATE'}, dateformat='%d/%m/%Y');

query I
FROM read_csv('test/sql/copy/csv/data/test/dateformat.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=false, columns={'column0': 'DATE'}, dateformat='%d/%m/%Y');
----
2019-06-05


query IIIIIIIIIII
FROM sniff_csv('test/sql/copy/csv/data/auto/time_date_timestamp_yyyy.mm.dd.csv')
----
,	"	"	\n	0	1	{'a': 'BIGINT', 'b': 'VARCHAR', 't': 'TIME', 'd': 'DATE', 'ts': 'TIMESTAMP'}	%Y.%m.%d	%Y.%m.%d %H:%M:%S	NULL	FROM read_csv('test/sql/copy/csv/data/auto/time_date_timestamp_yyyy.mm.dd.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=true, columns={'a': 'BIGINT', 'b': 'VARCHAR', 't': 'TIME', 'd': 'DATE', 'ts': 'TIMESTAMP'}, dateformat='%Y.%m.%d', timestampformat='%Y.%m.%d %H:%M:%S');

query IIIII
FROM read_csv('test/sql/copy/csv/data/auto/time_date_timestamp_yyyy.mm.dd.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=0, header=true, columns={'a': 'BIGINT', 'b': 'VARCHAR', 't': 'TIME', 'd': 'DATE', 'ts': 'TIMESTAMP'}, dateformat='%Y.%m.%d', timestampformat='%Y.%m.%d %H:%M:%S');
----
123	TEST2	12:12:12	2000-01-01	2000-01-01 12:12:00
345	TEST2	14:15:30	2002-02-02	2002-02-02 14:15:00
346	TEST2	15:16:17	2004-12-13	2004-12-13 15:16:00

# Test with dirty rows
query IIIIIIIIIII
FROM sniff_csv('data/csv/inconsistent_cells.csv')
----
,	"	"	\n	5	false	{'column0': 'BIGINT', 'column1': 'BIGINT', 'column2': 'BIGINT', 'column3': 'BIGINT', 'column4': 'BIGINT'}	NULL	NULL	NULL	FROM read_csv('data/csv/inconsistent_cells.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=5, header=false, columns={'column0': 'BIGINT', 'column1': 'BIGINT', 'column2': 'BIGINT', 'column3': 'BIGINT', 'column4': 'BIGINT'});

query IIIII
FROM read_csv('data/csv/inconsistent_cells.csv', auto_detect=false, delim=',', quote='"', escape='"', new_line='\n', skip=5, header=false, columns={'column0': 'BIGINT', 'column1': 'BIGINT', 'column2': 'BIGINT', 'column3': 'BIGINT', 'column4': 'BIGINT'});
----
1	2	3	4	5
1	2	3	4	5

# Test Header and quote '
query IIIIIIIIIII
FROM sniff_csv('data/csv/timings.csv')
----
|	'	\	\n	0	true	{'tool': 'VARCHAR', 'sf': 'BIGINT', 'day': 'DATE', 'batch_type': 'VARCHAR', 'q': 'VARCHAR', 'parameters': 'VARCHAR', 'time': 'DOUBLE'}	%Y-%m-%d	NULL	NULL	FROM read_csv('data/csv/timings.csv', auto_detect=false, delim='|', quote='''', escape='\', new_line='\n', skip=0, header=true, columns={'tool': 'VARCHAR', 'sf': 'BIGINT', 'day': 'DATE', 'batch_type': 'VARCHAR', 'q': 'VARCHAR', 'parameters': 'VARCHAR', 'time': 'DOUBLE'}, dateformat='%Y-%m-%d');

query IIIIIII
FROM read_csv('data/csv/timings.csv', auto_detect=false, delim='|', quote='''', escape='\', new_line='\n', skip=0, header=true, columns={'tool': 'VARCHAR', 'sf': 'BIGINT', 'day': 'DATE', 'batch_type': 'VARCHAR', 'q': 'VARCHAR', 'parameters': 'VARCHAR', 'time': 'DOUBLE'}, dateformat='%Y-%m-%d') order by all limit 1;
----
Umbra	100	2012-11-29	power	1	{"datetime": "2010-02-26T03:51:21.000+00:00"}	0.05473947525024414

# Test backslash option
query IIIIIIIIIII
FROM sniff_csv('test/sql/copy/csv/data/auto/backslash_escape.csv')
----
|	"	\	\n	0	false	{'column0': 'BIGINT', 'column1': 'VARCHAR', 'column2': 'VARCHAR'}	NULL	NULL	NULL	FROM read_csv('test/sql/copy/csv/data/auto/backslash_escape.csv', auto_detect=false, delim='|', quote='"', escape='\', new_line='\n', skip=0, header=false, columns={'column0': 'BIGINT', 'column1': 'VARCHAR', 'column2': 'VARCHAR'});

query III
FROM read_csv('test/sql/copy/csv/data/auto/backslash_escape.csv', auto_detect=false, delim='|', quote='"', escape='\', new_line='\n', skip=0, header=false, columns={'column0': 'BIGINT', 'column1': 'VARCHAR', 'column2': 'VARCHAR'});
----
123	TEST7	text1
345	TEST7	text"2"
567	TEST7	text3