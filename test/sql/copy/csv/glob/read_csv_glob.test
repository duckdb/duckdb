# name: test/sql/copy/csv/glob/read_csv_glob.test
# description: Test globbing CSVs
# group: [glob]

statement ok
PRAGMA enable_verification

# simple globbing
query I
SELECT * FROM read_csv('test/sql/copy/csv/data/glob/a?/*.csv', auto_detect=1) ORDER BY 1
----
2019-06-05
2019-06-15
2019-06-25
2019-07-05
2019-07-15
2019-07-25
2019-08-05
2019-08-15
2019-08-25

query I
SELECT * FROM read_csv('test/sql/copy/csv/data/glob/a?/a*.csv', auto_detect=1) ORDER BY 1
----
2019-06-05
2019-06-15
2019-06-25
2019-07-05
2019-07-15
2019-07-25

# list parameter
query I
SELECT * FROM read_csv(['test/sql/copy/csv/data/glob/a1/a1.csv', 'test/sql/copy/csv/data/glob/a2/a2.csv'], auto_detect=1) ORDER BY 1
----
2019-06-05
2019-06-15
2019-06-25
2019-07-05
2019-07-15
2019-07-25

query I
SELECT * FROM read_csv_auto(['test/sql/copy/csv/data/glob/a1/a1.csv', 'test/sql/copy/csv/data/glob/a2/a2.csv']) ORDER BY 1
----
2019-06-05
2019-06-15
2019-06-25
2019-07-05
2019-07-15
2019-07-25

# multiple globs
query I
SELECT * FROM read_csv(['test/sql/copy/csv/data/glob/a?/a*.csv', 'test/sql/copy/csv/data/glob/a?/a*.csv'], auto_detect=1) ORDER BY 1
----
2019-06-05
2019-06-05
2019-06-15
2019-06-15
2019-06-25
2019-06-25
2019-07-05
2019-07-05
2019-07-15
2019-07-15
2019-07-25
2019-07-25

# more asterisks for directories
query I
SELECT * FROM read_csv('test/sql/*/*/data/*/a?/a*.csv', auto_detect=1) ORDER BY 1
----
2019-06-05
2019-06-15
2019-06-25
2019-07-05
2019-07-15
2019-07-25

query II
SELECT a, b LIKE '%a1.csv%' FROM read_csv('test/sql/*/*/data/*/a?/a*.csv', auto_detect=1, filename=1) t1(a,b) ORDER BY 1
----
2019-06-05	1
2019-06-15	1
2019-06-25	1
2019-07-05	0
2019-07-15	0
2019-07-25	0

# read-csv auto fails here because of a type mismatch: most files contain dates, but one file contains integers
statement error
SELECT * FROM read_csv('test/sql/copy/csv/data/glob/*/*.csv', auto_detect=1) ORDER BY 1

# forcing string parsing works
query I
SELECT * FROM read_csv('test/sql/copy/csv/data/glob/*/*.csv', columns=STRUCT_PACK(d := 'STRING'), header=1) ORDER BY 1
----
1
2
2019-06-05
2019-06-15
2019-06-25
2019-07-05
2019-07-15
2019-07-25
2019-08-05
2019-08-15
2019-08-25
3

query II
SELECT a, b LIKE '%a_.csv' FROM read_csv('test/sql/copy/csv/data/glob/*/*.csv', columns=STRUCT_PACK(d := 'STRING'), header=1, filename=1) t(a,b) ORDER BY 1
----
1	0
2	0
2019-06-05	1
2019-06-15	1
2019-06-25	1
2019-07-05	1
2019-07-15	1
2019-07-25	1
2019-08-05	0
2019-08-15	0
2019-08-25	0
3	0

# test glob parsing
query I
SELECT COUNT(*) FROM glob('test/sql/copy/csv/data/glob/*/*.csv')
----
5

query I
SELECT COUNT(*) FROM glob(['test/sql/copy/csv/data/glob/*/*.csv'])
----
5


query I
SELECT COUNT(*) FROM glob(['test/sql/copy/csv/data/glob/*/*.csv', 'test/sql/copy/csv/data/glob/*/*.csv'])
----
10

# we can also use windows file slashes
query I
SELECT COUNT(*) FROM glob('test\sql\copy\csv\data\glob\*\*.csv')
----
5

# consecutive slashes are ignored
query I
SELECT COUNT(*) FROM glob('test//sql////copy//csv/////data///glob///*//////*.csv')
----
5

# nothing matches the glob
statement error
SELECT * FROM read_csv('test/sql/copy/csv/data/glob/*/a*a.csv', auto_detect=1) ORDER BY 1

statement error
SELECT * FROM read_csv(['test/sql/copy/csv/data/glob/*/a*a.csv'], auto_detect=1) ORDER BY 1

statement error
SELECT * FROM read_csv_auto(['test/sql/copy/csv/data/glob/*/a*a.csv']) ORDER BY 1

query I
SELECT COUNT(*) FROM glob('test/sql/copy/csv/data/glob/*/a*a.csv')
----
0

query I
select count(*) from glob('/rewoiarwiouw3rajkawrasdf790273489*.csv') limit 10;
----
0

query I
select count(*) from glob('~/rewoiarwiouw3rajkawrasdf790273489*.py') limit 10;
----
0

require skip_reload

# file_search_path with one path
statement ok
set file_search_path='test/sql/copy/csv/data/glob';

query I
SELECT COUNT(*) FROM glob('*/*.csv');
----
5

# file_search_path with multiple paths
statement ok
set file_search_path='test/sql/copy/csv/data/glob/a1,test/sql/copy/csv/data/glob/a2';

query I
SELECT COUNT(*) FROM glob('*.csv');
----
2

# file_search_path with a non-existent path
statement ok
set file_search_path='test/sql/copy/csv/data/glob,garbage';

query I
SELECT COUNT(*) FROM glob('*/*.csv');
----
5

# Only file_search_path is searched
query I
SELECT COUNT(*) FROM glob('test/sql/copy/csv/data/glob/*/*.csv');
----
0

# file_search_path can be cleared
statement ok
set file_search_path='';

query I
SELECT COUNT(*) FROM glob('test/sql/copy/csv/data/glob/*/*.csv');
----
5

# empty list
statement error
SELECT * FROM read_csv_auto([]) ORDER BY 1
----
at least one file

# null list
statement error
SELECT * FROM read_csv_auto(NULL) ORDER BY 1
----
NULL

statement error
SELECT * FROM read_csv_auto([NULL]) ORDER BY 1
----
NULL

statement error
SELECT * FROM read_csv_auto(NULL::VARCHAR) ORDER BY 1
----
NULL

statement error
SELECT * FROM read_csv_auto(NULL::VARCHAR[]) ORDER BY 1
----
NULL
