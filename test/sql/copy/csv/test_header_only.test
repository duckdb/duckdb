# name: test/sql/copy/csv/test_header_only.test
# description: Test CSV Parser on an header only CSV file
# group: [csv]

statement ok
PRAGMA enable_verification

query I
SELECT columns from sniff_csv('data/csv/header_only.csv', header=True, ignore_errors=True)
----
[{'name': abs_file_name, 'type': VARCHAR}]


query I
SELECT abs_file_name FROM read_csv('data/csv/header_only.csv', header=True, ignore_errors=True)
----

query I
SELECT REGEXP_MATCHES(abs_file_name, 'foo')
  FROM ( SELECT abs_file_name FROM read_csv('data/csv/header_only.csv', header=True, ignore_errors=True))
----

query I
SELECT REGEXP_MATCHES(abs_file_name, 'foo')
  FROM ( SELECT abs_file_name FROM read_csv(['data/csv/header_only.csv','data/csv/header_only.csv'], header=True, ignore_errors=True))
----

statement error
SELECT REGEXP_MATCHES(abs_file_name, 'foo')
  FROM ( SELECT abs_file_name FROM read_csv(['data/csv/header_only.csv','data/csv/bool.csv','data/csv/header_only.csv'], header=True, ignore_errors=True))
----
No function matches the given name and argument types 'regexp_matches(BOOLEAN, STRING_LITERAL)'. You might need to add explicit type casts.

# Try to replace column type
query I
SELECT columns from sniff_csv('data/csv/header_only.csv', types = ['INTEGER'])
----
[{'name': abs_file_name, 'type': INTEGER}]

query I
SELECT columns from sniff_csv('data/csv/header_only.csv', types = {'abs_file_name':'INTEGER'})
----
[{'name': abs_file_name, 'type': INTEGER}]

statement ok
CREATE TABLE T AS from read_csv('data/csv/header_only.csv',types = ['INTEGER'])

query IIIIII
DESCRIBE T
----
abs_file_name	INTEGER	YES	NULL	NULL	NULL

statement ok
CREATE OR REPLACE TABLE T AS from read_csv('data/csv/header_only.csv', types = {'abs_file_name':'INTEGER'})

query IIIIII
DESCRIBE T
----
abs_file_name	INTEGER	YES	NULL	NULL	NULL

# Now with two columns
query I
SELECT columns from sniff_csv('data/csv/header_only_2.csv', types = ['INTEGER'])
----
[{'name': foo, 'type': INTEGER}, {'name': bar, 'type': VARCHAR}]

query I
SELECT columns from sniff_csv('data/csv/header_only_2.csv', types = {'foo':'INTEGER'})
----
[{'name': foo, 'type': INTEGER}, {'name': bar, 'type': VARCHAR}]

# This is clearly wrong
query I
SELECT columns from sniff_csv('data/csv/header_only_2.csv', types = {'bar':'INTEGER'})
----
[{'name': foo, 'type': VARCHAR}, {'name': bar, 'type': INTEGER}]

statement ok
CREATE OR REPLACE TABLE T AS from read_csv('data/csv/header_only_2.csv', types = ['INTEGER'])

query IIIIII
DESCRIBE T
----
foo	INTEGER	YES	NULL	NULL	NULL
bar	VARCHAR	YES	NULL	NULL	NULL

statement ok
CREATE OR REPLACE TABLE T AS from read_csv('data/csv/header_only_2.csv', types = {'foo':'INTEGER'})

query IIIIII
DESCRIBE T
----
foo	INTEGER	YES	NULL	NULL	NULL
bar	VARCHAR	YES	NULL	NULL	NULL

statement ok
CREATE OR REPLACE TABLE T AS from read_csv('data/csv/header_only_2.csv', types = {'bar':'INTEGER'})

query IIIIII
DESCRIBE T
----
foo	VARCHAR	YES	NULL	NULL	NULL
bar	INTEGER	YES	NULL	NULL	NULL
