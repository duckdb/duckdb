# name: test/sql/copy/encryption/simple_encryption.test
# group: [encryption]

require noforcestorage

# workaround - alternative verify always forces the latest storage
require no_alternative_verify

statement ok
PRAGMA enable_verification

statement ok
ATTACH '__TEST_DIR__/unencrypted.duckdb' as unencrypted;

statement ok
ATTACH '__TEST_DIR__/v_0_10_2.duckdb' as v_0_10_2 (STORAGE_VERSION 'v0.10.2');

statement  ok
CREATE OR REPLACE TABLE unencrypted.tbl AS SELECT * FROM range(10) t(i);

statement  ok
CREATE OR REPLACE TABLE v_0_10_2.tbl AS SELECT * FROM range(10) t(i);

query I
SELECT SUM(i) FROM unencrypted.tbl
----
45

query I
SELECT SUM(i) FROM v_0_10_2.tbl
----
45

statement ok
DETACH unencrypted

statement ok
DETACH v_0_10_2

statement ok
ATTACH '__TEST_DIR__/encrypted.duckdb' AS encrypted (ENCRYPTION_KEY 'asdf');

statement ok
ATTACH '__TEST_DIR__/encrypted_v2.duckdb' AS encrypted_v2 (ENCRYPTION_KEY 'asdf');

statement ok
ATTACH '__TEST_DIR__/v_0_10_2.duckdb' as v_0_10_2;

statement ok
ATTACH '__TEST_DIR__/unencrypted.duckdb' as unencrypted;

# copy from unencrypted to encrypted
statement ok
COPY FROM DATABASE unencrypted TO encrypted;

# copy from version 0.10.2 to an encrypted db
statement ok
COPY FROM DATABASE v_0_10_2 TO encrypted_v2;

statement ok
DETACH unencrypted

statement ok
DETACH v_0_10_2

statement ok
DETACH encrypted

statement ok
DETACH encrypted_v2

statement ok
ATTACH '__TEST_DIR__/encrypted.duckdb' AS encrypted (ENCRYPTION_KEY 'asdf');

statement ok
ATTACH '__TEST_DIR__/encrypted_v2.duckdb' AS encrypted_v2 (ENCRYPTION_KEY 'asdf');

# check if we can read the encrypted data
query I
SELECT SUM(i) FROM encrypted.tbl
----
45

# check if we can read the encrypted data from the original v0.10.2 db
query I
SELECT SUM(i) FROM encrypted_v2.tbl
----
45

statement ok
ATTACH '__TEST_DIR__/unencrypted_new.duckdb' as unencrypted_new;

statement ok
ATTACH '__TEST_DIR__/unencrypted_v_1_2_0.duckdb' as unencrypted_v_1_2_0 (STORAGE_VERSION 'v1.2.0');

# copy encrypted db to unencrypted database
statement ok
COPY FROM DATABASE encrypted TO unencrypted_new;

# copy encrypted db to unencrypted database with v1.2.0 storage version
statement ok
COPY FROM DATABASE encrypted_v2 TO unencrypted_v_1_2_0;

statement ok
DETACH unencrypted_new

statement ok
DETACH encrypted

statement ok
DETACH encrypted_v2

statement ok
DETACH unencrypted_v_1_2_0

# we should not be able to open an unencrypted db with an encryption key
statement error
ATTACH '__TEST_DIR__/unencrypted_v_1_2_0.duckdb' AS unencrypted_v_1_2_0 (ENCRYPTION_KEY 'asdf');
----

# we cannot open this db with a lower (< v1.2.0) storage version
statement error
ATTACH '__TEST_DIR__/unencrypted_v_1_2_0.duckdb' AS unencrypted_v_1_2_0 (STORAGE_VERSION 'v1.0.0');
----

statement ok
ATTACH '__TEST_DIR__/unencrypted_v_1_2_0.duckdb' AS unencrypted_v_1_2_0;

# check if it is the correct storage version
query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='unencrypted_v_1_2_0'
----
v1.2.0+

statement ok
ATTACH '__TEST_DIR__/unencrypted_new.duckdb' AS unencrypted_new;

query I
SELECT SUM(i) FROM unencrypted_v_1_2_0.tbl;
----
45

query I
SELECT SUM(i) FROM unencrypted_new.tbl;
----
45