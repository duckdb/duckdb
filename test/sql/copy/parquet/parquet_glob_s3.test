# name: test/sql/copy/parquet/parquet_glob_s3.test
# description: Test basic globbing of parquet files over s3
# group: [parquet]

require parquet

require httpfs

require-env S3_TEST_SERVER_AVAILABLE 1

# override the default behaviour of skipping HTTP errors and connection failures: this test fails on connection issues
set ignore_error_messages

statement ok
SET s3_secret_access_key='S3RVER';SET s3_access_key_id='S3RVER';SET s3_region='eu-west-1'; SET s3_endpoint='s3.s3rver-endpoint.com:4923';SET s3_use_ssl=false;

# Copy files to S3 before beginning tests
statement ok
COPY (select * from 'data/parquet-testing/glob/t1.parquet') to 's3://test-bucket/parquet_glob_s3/glob/t1.parquet';
COPY (select * from 'data/parquet-testing/glob/t2.parquet') to 's3://test-bucket/parquet_glob_s3/glob/t2.parquet';
COPY (select * from 'data/parquet-testing/glob2/t1.parquet') to 's3://test-bucket/parquet_glob_s3/glob2/t1.parquet';

# Begin tests
query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/glob/t?.parquet')
----
2

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/glob/t[0-9].parquet')
----
2

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/glob/*')
----
2

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/glob/*.parquet')
----
2

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/g*/*.parquet')
----
3

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/g*/t1.parquet')
----
2

# schema mismatch in parquet glob
statement error
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/notglob/*.parquet')

# parquet glob with COPY FROM
statement ok
CREATE TABLE vals (i INTEGER, j BLOB)

statement ok
COPY vals FROM 's3://test-bucket/parquet_glob_s3/glob/t?.parquet' (FORMAT PARQUET);

query II
SELECT * FROM vals ORDER BY 1, 2
----
1	a
2	b

# failed to copy: incorrect types found in parquet file
statement ok
CREATE TABLE vals2 (i INTEGER, j INTEGER)

statement error
COPY vals2 FROM 's3://test-bucket/parquet_glob_s3/nonexistentfolderblablabla/t*.parquet' (FORMAT PARQUET);

# parallel testing
statement ok
PRAGMA threads=4

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/glob/t?.parquet')
----
2

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/glob/*')
----
2

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/glob/*.parquet')
----
2

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/g*/*.parquet')
----
3

query I
select count(*) from parquet_scan('s3://test-bucket/parquet_glob_s3/g*/t1.parquet')
----
2
