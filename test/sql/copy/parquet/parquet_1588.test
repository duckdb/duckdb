# name: test/sql/copy/parquet/parquet_1588.test
# description: Test boolean filters
# group: [parquet]

require parquet

statement ok
pragma enable_verification

# pandas equivalent:
# df = pandas.read_parquet('{DATA_DIR}/parquet-testing/bug1588.parquet')
# df[(df.has_image_link == 1) & ((df.has_image_alt_text == 1) | df.is_image_alt_text_empty == 1)]

statement ok
create table some_bools (val boolean);

statement ok
insert into some_bools values (TRUE)

query I
select count(*) from some_bools where val = 1;
----
1

query I
select count(*) from some_bools where val = '1'::bool;
----
1


query I
SELECT has_image_link FROM parquet_scan('{DATA_DIR}/parquet-testing/bug1588.parquet') where has_image_link = 1
----
1
1
1

query I
SELECT COUNT(*) FROM parquet_scan('{DATA_DIR}/parquet-testing/bug1588.parquet') WHERE has_image_link = 1
----
3

query I
SELECT COUNT(*) FROM parquet_scan('{DATA_DIR}/parquet-testing/bug1588.parquet') WHERE has_image_link = '1'::bool
----
3


# original query for the lolz
query I
SELECT COUNT(*) FROM parquet_scan('{DATA_DIR}/parquet-testing/bug1588.parquet') WHERE (has_image_link = 1 AND (has_image_alt_text = 0 OR is_image_alt_text_empty = 1))
----
2

