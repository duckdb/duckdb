# name: test/sql/copy/s3/parquet_s3_tpcds.test_slow
# description: Test all tpcds queries on tpch sf0.01 over s3
# group: [s3]

require parquet

require httpfs

require tpcds

require-env S3_TEST_SERVER_AVAILABLE 1

# Require that these environment variables are also set

require-env AWS_DEFAULT_REGION

require-env AWS_ACCESS_KEY_ID

require-env AWS_SECRET_ACCESS_KEY

require-env DUCKDB_S3_ENDPOINT

require-env DUCKDB_S3_USE_SSL

# override the default behaviour of skipping HTTP errors and connection failures: this test fails on connection issues
set ignore_error_messages

# answers are generated from postgres
# hence check with NULLS LAST flag
statement ok
PRAGMA default_null_order='NULLS LAST'

statement ok
SET enable_http_metadata_cache=true;

statement ok
set http_timeout=120000;

# More retries (longest wait will be 25600ms)
statement ok
set http_retries=6;

statement ok
CREATE SCHEMA tpcds;

statement ok
CALL dsdgen(sf=0.01, schema='tpcds');

foreach tbl call_center catalog_page catalog_returns catalog_sales customer customer_demographics customer_address date_dim household_demographics inventory income_band item promotion reason ship_mode store store_returns store_sales time_dim warehouse web_page web_returns web_sales web_site

statement ok
COPY tpcds.${tbl} TO 's3://test-bucket/tpcds-sf0_01/${tbl}.parquet' (FORMAT 'PARQUET', COMPRESSION 'ZSTD');

statement ok
CREATE VIEW ${tbl} AS SELECT * FROM parquet_scan('s3://test-bucket/tpcds-sf0_01/${tbl}.parquet');

endloop

# too slow queries:
# 64, 85

loop i 1 9

query I
PRAGMA tpcds(${i})
----
<FILE>:extension/tpcds/dsdgen/answers/sf0.01/0${i}.csv

endloop

loop i 10 64

query I
PRAGMA tpcds(${i})
----
<FILE>:extension/tpcds/dsdgen/answers/sf0.01/${i}.csv

endloop

loop i 65 85

query I
PRAGMA tpcds(${i})
----
<FILE>:extension/tpcds/dsdgen/answers/sf0.01/${i}.csv

endloop

loop i 86 99

query I
PRAGMA tpcds(${i})
----
<FILE>:extension/tpcds/dsdgen/answers/sf0.01/${i}.csv

endloop