# name: test/sql/copy/s3/fully_qualified_s3_url.test
# description: Test S3, credentials override with query parameters
# group: [s3]

require parquet

require httpfs

require-env S3_TEST_SERVER_AVAILABLE 1

# Require that these environment variables are also set

require-env AWS_DEFAULT_REGION

require-env AWS_ACCESS_KEY_ID

require-env AWS_SECRET_ACCESS_KEY

require-env DUCKDB_S3_ENDPOINT

require-env DUCKDB_S3_USE_SSL

# override the default behaviour of skipping HTTP errors and connection failures: this test fails on connection issues
set ignore_error_messages

statement ok
CREATE TABLE test as SELECT * FROM range(0,10) tbl(i);

#set some false credentials to verify query param override
statement ok
SET s3_secret_access_key='false_pw';SET s3_access_key_id='false_key';

statement ok
SET s3_url_style='path';

statement error
COPY test TO 's3://test-bucket/s3_query_params/test.csv';
----
IO Error: Unable to connect to URL

#test with .csv file
statement ok
COPY test TO 's3://test-bucket/s3_query_params/test.csv?s3_access_key_id=${AWS_ACCESS_KEY_ID}&s3_secret_access_key=${AWS_SECRET_ACCESS_KEY}' WITH (HEADER 1);

query I
SELECT i FROM "s3://test-bucket/s3_query_params/test.csv?s3_access_key_id=${AWS_ACCESS_KEY_ID}&s3_secret_access_key=${AWS_SECRET_ACCESS_KEY}" LIMIT 3
----
0
1
2

#test with .parquet file
statement ok
COPY test TO 's3://test-bucket/s3_query_params/test.parquet?s3_access_key_id=${AWS_ACCESS_KEY_ID}&s3_secret_access_key=${AWS_SECRET_ACCESS_KEY}' (FORMAT 'parquet');

query I
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_access_key_id=${AWS_ACCESS_KEY_ID}&s3_secret_access_key=${AWS_SECRET_ACCESS_KEY}" LIMIT 3
----
0
1
2

#test GLOB with .parquet file
query I
SELECT i FROM "s3://test-bucket/s3_query_params/*.parquet?s3_access_key_id=${AWS_ACCESS_KEY_ID}&s3_secret_access_key=${AWS_SECRET_ACCESS_KEY}" LIMIT 3
----
0
1
2

#global settings have not been modified by query parameters
query I
SELECT CURRENT_SETTING('s3_access_key_id');
----
false_key

query I
SELECT CURRENT_SETTING('s3_secret_access_key');
----
false_pw

#setting up a second s3 file with different credentials
statement ok
CREATE TABLE test_2 as SELECT * FROM range(100,110) tbl(j);

statement ok
COPY test_2 TO 's3://test-bucket/s3_query_params/test_2.csv?s3_access_key_id=minio_duckdb_user_2&s3_secret_access_key=minio_duckdb_user_2_password' WITH (HEADER 1);

query I
SELECT j FROM "s3://test-bucket/s3_query_params/test_2.csv?s3_access_key_id=minio_duckdb_user_2&s3_secret_access_key=minio_duckdb_user_2_password" LIMIT 3
----
100
101
102

#test a joining of two tables with different credentials
query II
SELECT T1.i, T2.j FROM "s3://test-bucket/s3_query_params/test.parquet?s3_access_key_id=${AWS_ACCESS_KEY_ID}&s3_secret_access_key=${AWS_SECRET_ACCESS_KEY}" T1 
    INNER JOIN "s3://test-bucket/s3_query_params/test_2.csv?s3_access_key_id=minio_duckdb_user_2&s3_secret_access_key=minio_duckdb_user_2_password" T2 
    ON T1.i+100=T2.j LIMIT 3;
----
0	100
1	101
2	102

statement ok
SET s3_secret_access_key='${AWS_SECRET_ACCESS_KEY}';SET s3_access_key_id='${AWS_ACCESS_KEY_ID}';

#test region param
statement ok
SET s3_region='false_region';

statement ok
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_region=${AWS_DEFAULT_REGION}" LIMIT 3

statement ok
SET s3_region='${AWS_DEFAULT_REGION}';

# test endpoint param
statement ok
SET s3_endpoint='false_endpoint';

statement ok
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_endpoint=${DUCKDB_S3_ENDPOINT}" LIMIT 3

statement ok
SET s3_endpoint='${DUCKDB_S3_ENDPOINT}';

#test secret_access_key
statement ok
SET s3_secret_access_key='false_acces_key';

statement ok
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_secret_access_key=${AWS_SECRET_ACCESS_KEY}" LIMIT 3

statement ok
SET s3_secret_access_key='${AWS_SECRET_ACCESS_KEY}';

#test access_key
statement ok
SET s3_access_key_id='false_acces_key_id';

statement ok
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_access_key_id=${AWS_ACCESS_KEY_ID}" LIMIT 3

statement ok
SET s3_access_key_id='${AWS_ACCESS_KEY_ID}';

#test use_ssl
statement ok
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_use_ssl=false" LIMIT 3

statement error
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_use_ssl=bla" LIMIT 3

#test url_style
statement ok
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_url_style=vhost" LIMIT 3

statement ok
SET s3_url_style='path';

# test combinations
statement ok
SET s3_access_key_id='false_id'; SET s3_region='false_region';

statement ok
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_region=${AWS_DEFAULT_REGION}&s3_access_key_id=${AWS_ACCESS_KEY_ID}&s3_endpoint=${DUCKDB_S3_ENDPOINT}" LIMIT 3

statement ok
SET s3_access_key_id='${AWS_ACCESS_KEY_ID}'; SET s3_region='${AWS_DEFAULT_REGION}';

# test faulty input
statement error
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_region=${AWS_DEFAULT_REGION}&s3_access_key_id=incorrect_key_id" LIMIT 3

statement error
SELECT i FROM "s3://test-bucket/s3_query_params/test.parquet?s3_region=${AWS_DEFAULT_REGION}&bla=bla" LIMIT 3