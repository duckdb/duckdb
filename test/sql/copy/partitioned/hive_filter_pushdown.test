# name: test/sql/copy/partitioned/hive_filter_pushdown.test
# description: confirm that hive-specific filter pushdown does not mess up the filters
# group: [partitioned]

require parquet

# Confirm
statement ok
COPY (SELECT i::VARCHAR as a, (i*10)::VARCHAR as b, (i*100)::VARCHAR as c from range(0,10) tbl(i)) TO '__TEST_DIR__/hive_pushdown_bug' (FORMAT PARQUET, PARTITION_BY c);

query II
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet', HIVE_PARTITIONING=1) where a > b;
----
physical_plan	<!REGEX>:.*AND.*

query II nosort q1
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet', HIVE_PARTITIONING=1) where a > b;
----

query II nosort q1
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet') where a > b;
----
physical_plan	<!REGEX>:.*PARQUET_SCAN.*File Filters:.*

query II
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet', HIVE_PARTITIONING=1) where a > c;
----
physical_plan	<!REGEX>:.*AND.*

# no file filters here
query II nosort q2
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet', HIVE_PARTITIONING=1) where a > c;
----
physical_plan	<!REGEX>:.*PARQUET_SCAN.*File Filters:.*

query II nosort q2
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet') where a > c;
----
physical_plan	<!REGEX>:.*PARQUET_SCAN.*File Filters:.*

# Check that hive specific filters are pushed down into the explain plan regardless of format type
query II
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet', HIVE_PARTITIONING=1, HIVE_TYPES_AUTOCAST=1) where c=500;
----
physical_plan	<REGEX>:.*PARQUET_SCAN.*File Filters: \(c = 500\).*

query II
explain SELECT * FROM parquet_scan('__TEST_DIR__/hive_pushdown_bug/*/*.parquet', HIVE_PARTITIONING=1, HIVE_TYPES_AUTOCAST=1) where c=500 and b=20;
----
physical_plan	<REGEX>:.*PARQUET_SCAN.*File Filters: \(c = 500\).*

# File Filters show up in read csv auto for hive partitioned csv files. 
statement ok
COPY (SELECT i::VARCHAR as a, (i*10)::VARCHAR as b, (i*100)::VARCHAR as c from range(0,10) tbl(i)) TO '__TEST_DIR__/hive_pushdown_bug_csv' (FORMAT CSV, PARTITION_BY c);

query II
explain SELECT * FROM read_csv_auto('__TEST_DIR__/hive_pushdown_bug_csv/*/*.csv', HIVE_PARTITIONING=1, HIVE_TYPES_AUTOCAST=1, names=['a','b','c']) where c=500;
----
physical_plan	<REGEX>:.*READ_CSV_AUTO.*File Filters: \(c = 500\).*

# same for json paritioned files
#statement ok
#COPY (SELECT i::VARCHAR as a, (i*10)::VARCHAR as b, (i*100)::VARCHAR as c from range(0,10) tbl(i)) TO '__TEST_DIR__/hive_pushdown_bug_csv' (PARTITION_BY c);
#
#query II
#explain SELECT * FROM read_csv_auto('__TEST_DIR__/hive_pushdown_bug/*/*.parquet', HIVE_PARTITIONING=1, names=['a','b','c']) where c=500;
#----
#physical_plan	<REGEX>:.*Filters:\s*c=500.*
