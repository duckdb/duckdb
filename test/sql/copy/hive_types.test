# name: test/sql/copy/hive_types.test
# description: basic tests hive_types flag
# group: [copy]
# dir: data/csv/hive-partitioning/hive_types/

require parquet

statement ok
PRAGMA enable_verification

statement ok
copy 'data/csv/hive-partitioning/hive_types/file.csv' to '__TEST_DIR__/part' (format parquet, partition_by(year,month));

query IIIII
from read_parquet('__TEST_DIR__/part/**/*.parquet', hive_partitioning=0) limit 1;
----
2020	jan	06:00:01	Ted	45

query II
select typeof(year),typeof(month) from read_parquet('__TEST_DIR__/part/**/*.parquet', hive_partitioning=0) limit 1;
----
BIGINT	VARCHAR

query II
select typeof(year),typeof(month) from read_parquet('__TEST_DIR__/part/**/*.parquet', hive_partitioning=1) limit 1;
----
VARCHAR	VARCHAR

query II
select typeof(year),typeof(month) from read_parquet('__TEST_DIR__/part/**/*.parquet') limit 1;
----
BIGINT	VARCHAR




# #	hive_partitioning=0
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=0) limit 1;
# ----
# BIGINT	VARCHAR	BIGINT	VARCHAR

# #	hive_partitioning=1, hive_types_autocast=0
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=1, hive_types_autocast=0) limit 1;
# ----
# VARCHAR	VARCHAR	BIGINT	VARCHAR

# #	hive_partitioning=1, hive_types_autocast=1		hive_types will autodetect
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=1, hive_types_autocast=1) limit 1;
# ----
# BIGINT	VARCHAR	BIGINT	VARCHAR

# #	hive_partitioning=1								hive_types will autodetect and autocast
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=1) limit 1;
# ----
# BIGINT	VARCHAR	BIGINT	VARCHAR

# #	turn off everything
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=0, hive_types_autocast=0) limit 1;
# ----
# BIGINT	VARCHAR	BIGINT	VARCHAR

# #	autodetect hive_partitioning, turn off hive_types_autocast
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_types_autocast=0) limit 1;
# ----
# VARCHAR	VARCHAR	BIGINT	VARCHAR

# #	autodetect hive_partitioning, turn on hive_types_autocast
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_types_autocast=1) limit 1;
# ----
# BIGINT	VARCHAR	BIGINT	VARCHAR

# #	autodetect both
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color']) limit 1;
# ----
# BIGINT	VARCHAR	BIGINT	VARCHAR

# #	set hive_types as varchar,varchar
# query IIII
# select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=1, hive_types={'year':'varchar','month':'varchar'}) limit 1;
# ----
# VARCHAR	VARCHAR	BIGINT	VARCHAR

# # some taxi stuff
# query II
# select typeof(passenger_count), typeof(vendorid) from read_parquet('../taxi/**/passenger_count=*.*/*.parquet', hive_partitioning=1, hive_types={'vendorid':'smallint','passenger_count':'smallint'}) limit 1;
# ----
# SMALLINT	SMALLINT

# # #	set hive_types as smallint,varchar
# # query IIII
# # select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=1, hive_types={'year':'smallint','month':'varchar'}) limit 1;
# # ----
# # SMALLINT	VARCHAR	BIGINT	VARCHAR

# # #	set hive_types as smallint,bigint, but 'month' to 'bigint' is a bad cast
# # statement error
# # select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=1, hive_types={'year':'smallint','month':'bigint'}) limit 1;
# # ----
# # Invalid Input Error

# # #	hive_partitioning is auto_detected, and set hive_types as smallint,varchar
# # query IIII
# # select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_types={'year':'smallint','month':'varchar'}) limit 1;
# # ----
# # SMALLINT	VARCHAR	BIGINT	VARCHAR

# # #	hive_partitioning is explicitly disabled, and hive_types are set
# # statement error
# # select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color'], hive_partitioning=0, hive_types={'year':'smallint','month':'varchar'}) limit 1;
# # ----
# # Invalid Input Error

# # #	hive_partitioning is auto_detected, and set hive_types is auto_detected
# # query IIII
# # select typeof(year),typeof(month),typeof(count),typeof(color) from read_csv_auto('../part/**', names=['year','month','count','color']) limit 1;
# # ----
# # BIGINT	VARCHAR	BIGINT	VARCHAR

# # # Complex filter filtering first file, filter should be pruned completely
# # query II
# # explain select id, value, part, date from parquet_scan('data/parquet-testing/hive-partitioning/different_order/*/*/test.parquet', HIVE_PARTITIONING=1, hive_types={'date':'DATE'}) where date > '16-10-1989'::DATE;
# # ----
# # physical_plan    <!REGEX>:.*(PARQUET_SCAN.*Filters:|FILTER).*