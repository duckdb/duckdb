# name: test/sql/transactions/types/test_hugeint_transactions.test
# description: Test transaction ops with hugeints
# group: [types]

statement ok
PRAGMA enable_verification

# create table
statement ok con1
CREATE TABLE hugeints (h HUGEINT);

statement ok con1
INSERT INTO hugeints VALUES (100::HUGEINT), (1023819078293589341789412412), (42);

# update
statement ok con1
BEGIN TRANSACTION;

statement ok con1
UPDATE hugeints SET h=100 WHERE h=42;

# now we only have two distinct values in con
query T con1
SELECT * FROM hugeints ORDER BY 1
----
100
100
1023819078293589341789412412

query I con1
SELECT COUNT(DISTINCT h) FROM hugeints
----
2

# in con2 we still have 3
query T con2
SELECT * FROM hugeints ORDER BY 1
----
42
100
1023819078293589341789412412

query I con2
SELECT COUNT(DISTINCT h) FROM hugeints
----
3

# rollback
statement ok con1
ROLLBACK

# after the rollback we are back to 3
query I con1
SELECT COUNT(DISTINCT h) FROM hugeints
----
3

# now commit it
statement ok con1
UPDATE hugeints SET h=100 WHERE h=42;

query TI con1
SELECT h, COUNT(*) FROM hugeints GROUP BY h ORDER BY 2 DESC
----
100	2
1023819078293589341789412412	1

query I con1
SELECT COUNT(DISTINCT h) FROM hugeints
----
2

query I con2
SELECT COUNT(DISTINCT h) FROM hugeints
----
2

# increment 100 by 1
statement ok
UPDATE hugeints SET h=h+1 WHERE h=100;

query I con1
SELECT COUNT(DISTINCT h) FROM hugeints
----
2

query I con2
SELECT COUNT(DISTINCT h) FROM hugeints
----
2