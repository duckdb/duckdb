# name: test/sql/order/order_parallel_many_ties.test_slow
# description: Test ORDER BY keyword with multiple threads (internal and external sorting)
# group: [order]

statement ok
PRAGMA verify_parallelism

# we run this with an uneven amount of threads to force the merge sort to have an odd amount of blocks to merge
statement ok
PRAGMA threads=3

# internal/external, different memory limits
foreach pragma true false

foreach mem 50 500

statement ok
PRAGMA debug_force_external=${pragma}

statement ok
PRAGMA memory_limit='${mem}MB'

statement ok
create table test as (select range i from range(100000));

# complex sort orders, combining var and fixed-size sorting columns
statement ok
insert into test values (NULL);

# same complex sort orders but with many ties due to the large prefix
query T
select * from test order by cast(i + 1000000000000 as varchar) nulls first
----
100001 values hashing to 9642fae1704358551de522343cfbc99e

query T
select * from test order by i % 10, cast(i + 1000000000000 as varchar)
----
100001 values hashing to 6860685f6aa75f5a1ca3c47174b3da65

query T
select * from test order by cast(i % 10 + 1000000000000 as varchar), i
----
100001 values hashing to 6860685f6aa75f5a1ca3c47174b3da65

query T
select * from test order by cast(i % 100 + 1000000000000 as varchar), i % 10, cast(i + 1000000000000 as varchar) nulls first
----
100001 values hashing to fae9b116ca4c8e280da063f78b28e78f

query T
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, cast(i % 10 + 1000000000000 as varchar), i
----
100001 values hashing to c694f8aa434f0617970c6f3540b20863

query T
select * from test order by i % 100, cast(i % 10 + 1000000000000 as varchar), cast(i + 1000000000000 as varchar)
----
100001 values hashing to fae9b116ca4c8e280da063f78b28e78f

query T
select * from test order by cast(i % 1000 + 1000000000000 as varchar), i % 100, i % 10, cast(i + 1000000000000 as varchar)
----
100001 values hashing to c694f8aa434f0617970c6f3540b20863

statement ok
drop table test

endloop

endloop
