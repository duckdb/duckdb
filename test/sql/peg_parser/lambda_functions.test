# name: test/sql/peg_parser/lambda_functions.test
# description: Test lambda syntax in peg parser
# group: [peg_parser]

require autocomplete

statement ok
CALL check_peg_parser($TEST_PEG_PARSER$select list_apply(maps, lambda x: map_keys(x)) from tbl;$TEST_PEG_PARSER$);

statement ok
CALL check_peg_parser($TEST_PEG_PARSER$PREPARE v1 AS SELECT list_transform(?, lambda x: x + 1)$TEST_PEG_PARSER$);

statement ok
CALL check_peg_parser($TEST_PEG_PARSER$SELECT COLUMNS(lambda x: x LIKE 'col%') FROM integers$TEST_PEG_PARSER$);

statement ok
CALL check_peg_parser($TEST_PEG_PARSER$create table tbl as select 	i // 5_000 as num, 	num::VARCHAR || list_reduce([uuid()::varchar for x in range(10)], lambda x, y: concat(x, y)) str from range(20_000) t(i) order by num$TEST_PEG_PARSER$);

statement ok
CALL check_peg_parser($TEST_PEG_PARSER$SELECT a.filter(lambda x: x > 0) FROM arrays$TEST_PEG_PARSER$);

statement ok
CALL check_peg_parser($TEST_PEG_PARSER$SELECT list_transform(array_value(3,2,1), lambda x: x + 1) = list_transform([3,2,1], lambda x: x + 1);$TEST_PEG_PARSER$);
