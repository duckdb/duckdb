# name: test/sql/merge/merge_into_tpch.test_slow
# description: Test merge into with TPC-H SF1
# group: [merge]

require tpch

statement ok
CALL dbgen(sf=1);

foreach it no_index index

statement ok
CREATE TABLE random_lineitem AS FROM lineitem LIMIT 0

onlyif it=index
statement ok
ALTER TABLE random_lineitem ADD PRIMARY KEY (l_orderkey, l_linenumber);

# create lineitem but with a random subset of the rows
statement ok
MERGE INTO random_lineitem USING lineitem USING (l_orderkey, l_linenumber)
WHEN NOT MATCHED AND random() < 0.2 THEN INSERT

# insert a bunch of rows with unchanged values
statement ok
MERGE INTO random_lineitem USING (SELECT * REPLACE (l_orderkey + 10000000 AS l_orderkey) FROM lineitem) USING (l_orderkey, l_linenumber)
WHEN MATCHED THEN ERROR
WHEN NOT MATCHED AND random() < 0.2 THEN INSERT

# randomly update a bunch of rows
statement ok
MERGE INTO random_lineitem USING lineitem USING (l_orderkey, l_linenumber)
WHEN MATCHED AND random() < 0.1 THEN UPDATE SET l_discount = random()
WHEN MATCHED AND random() < 0.1 THEN UPDATE SET l_tax = random()

# run a merge that should fully equalize the tables
statement ok
MERGE INTO random_lineitem USING lineitem USING (l_orderkey, l_linenumber)
WHEN MATCHED THEN UPDATE
WHEN NOT MATCHED BY TARGET THEN INSERT
WHEN NOT MATCHED BY SOURCE THEN DELETE

# both tables should now be identical - despite all the random stuff we did
query IIIIIIIIIIIIIIII
FROM lineitem EXCEPT FROM random_lineitem
----

query IIIIIIIIIIIIIIII
FROM random_lineitem EXCEPT FROM lineitem
----

statement ok
DROP TABLE random_lineitem

endloop
