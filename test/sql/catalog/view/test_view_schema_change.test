# name: test/sql/catalog/view/test_view_schema_change.test
# description: Test views with changing schema
# group: [view]

statement ok
set storage_compatibility_version='v0.10.2'

statement ok
PRAGMA enable_verification

# create a table
statement ok
CREATE TABLE t1(i INTEGER)

statement ok
INSERT INTO t1 VALUES (41), (42), (43)

# create a view that queries that table
statement ok
CREATE VIEW v1 AS SELECT * FROM t1

query I
SELECT * FROM v1
----
41
42
43

# now drop the table and create a table that has a different schema
statement ok
DROP TABLE t1

statement ok
CREATE TABLE t1(i DATE)

# querying the view fails because the column types don't match the expected types
statement error
SELECT * FROM v1
----

# now drop the table and create one that has extra columns
statement ok
DROP TABLE t1

statement ok
CREATE TABLE t1(i INTEGER, j INTEGER)

# again querying the view fails: there are extra columns present
statement error
SELECT * FROM v1
----

# now drop the table and create one that has differently named columns
statement ok
DROP TABLE t1

statement ok
CREATE TABLE t1(k INTEGER)

# names returned by the view have changed
statement error
SELECT * FROM v1
----
Binder Error: Contents of view were altered: names don't match!

statement ok
DROP TABLE t1

statement ok
CREATE TABLE t1(i INTEGER)

# now we can query again!
query I
SELECT * FROM v1
----

# Changing the types of the table that the view references also makes the view unusable
statement ok
ALTER TABLE t1 ALTER i TYPE VARCHAR;

statement error
select * from v1;
----
Binder Error: Contents of view were altered: types don't match!

# reverting the types fixes the issue
statement ok
ALTER TABLE t1 ALTER i TYPE INTEGER

query I
SELECT * FROM v1
----

# changing the column names makes the view unusable again
statement ok
ALTER TABLE t1 RENAME i TO j

statement error
SELECT * FROM v1
----
Binder Error: Contents of view were altered: names don't match!
