# name: test/sql/catalog/function/test_select_macro.test
# description: Test SELECTMacro
# group: [function]

statement ok
PRAGMA enable_verification


statement ok
CREATE TABLE test_tbl (id INT, name string);

statement ok
CREATE TABLE test2_tbl (id INT, name string);

statement ok
CREATE TABLE greek_tbl (id INT, name string);

statement ok
INSERT INTO test_tbl VALUES (1,'tom'), (2,'dick'),(3,'harry'), (4,'mary'), (5,'mungo'), (6,'midge');  

statement ok
INSERT INTO test_tbl VALUES (20,'andrew'), (21,'boris'),(22,'Caleb'), (23,'david'), (24,'evan');

statement ok
INSERT INTO  greek_tbl VALUES (1, 'alpha'), (2, 'beta'), (3, 'gamma'), (4, 'delta'), (5, 'epsilon'),(6, 'zeta'), (7, 'eta') , (8, 'theta'), (9, 'iota') , (10, 'kappa'); 

statement ok
CREATE MACRO TABLE xt(a,_name) as SELECT * FROM test_tbl WHERE(id>=a or name=_name);

statement ok
CREATE MACRO TABLE xt2(a,_name) as SELECT * FROM test_tbl WHERE(id>=a or name like _name);

statement ok
CREATE MACRO TABLE sgreek(a,b,c) as SELECT a,b FROM greek_tbl WHERE(id >= c);

query II
( SELECT* FROM xt(1, 'tom') UNION SELECT* FROM  xt2(1, '%%%') ) INTERSECT SELECT* FROM xt(100,'midge');
----
6	midge

query II
(SELECT* FROM xt(1, 'tom') EXCEPT SELECT* FROM xt(20,'tom' )) INTERSECT SELECT* FROM xt(100,'harry');
----
3	harry

query II
SELECT	* FROM  xt(200,'andrew');
----
20	andrew

query II
SELECT * FROM xt2(100,'m%');
----
4	mary
5	mungo
6	midge


# check similar to
statement ok
CREATE MACRO TABLE xtm(cmp_str) as SELECT id, name FROM test_tbl  WHERE( name similar to cmp_str);

statement ok
SELECT * FROM xtm('m.*');

# check regexp_matches
statement ok
CREATE MACRO TABLE  xt_reg(cmp) as SELECT * FROM test_tbl WHERE regexp_matches(name ,cmp );

statement ok
SELECT * FROM xt_reg('^m');

# use regular macro for comparision
statement ok
CREATE MACRO  cmp(a,m) as regexp_matches(a,m) or a similar to m;

statement ok
CREATE MACRO TABLE  gm(m) as SELECT * FROM  greek_tbl WHERE cmp(name,m);

statement ok
SELECT * FROM  gm('^m');

