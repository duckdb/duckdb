# name: test/sql/sample/same_seed_same_sample.test_slow
# description: Test SAMPLE keyword
# group: [sample]

# testing a table with less cardinality than the standard vector size

statement ok
CREATE or replace TABLE t1 as select range a, [1, a, 2] b, a::VARCHAR || 'ducktastic' c, get_current_timestamp() c from range(1000);

loop i 1 8

statement ok
pragma threads=${i};

query III nosort result_1
SELECT * from t1 using sample reservoir(100) repeatable (1) order by a;
----


query III nosort result_1
SELECT * from t1 using sample reservoir(100) repeatable (1) order by a;
----

endloop

# testing a table with greater cardinality than the standard vector size, and greater than a row group size.

statement ok
CREATE or replace TABLE t1 as select range a, [1, a, 2] b, a::VARCHAR || 'ducktastic' c, get_current_timestamp() c from range(100000);

# samples are only equal when threads = 1

statement ok
set threads=1;

query III nosort result_2
SELECT * from t1 using sample reservoir(6000) repeatable (1) order by a;
----


query III nosort result_2
SELECT * from t1 using sample reservoir(6000) repeatable (1) order by a;
----

statement ok
CREATE or replace TABLE t1 as select range a, [1, a, 2] b, a::VARCHAR || 'ducktastic' c, get_current_timestamp() c from range(1000000);

loop i 1 8

query III nosort result_3
SELECT * from t1 using sample reservoir(60) repeatable (1) order by a;
----


query III nosort result_3
SELECT * from t1 using sample reservoir(60) repeatable (1) order by a;
----

endloop

# with no repeatable, then sample is not the same

statement ok
create table sample1 as SELECT * from t1 using sample reservoir(10) order by a;

statement ok
create table sample2 as SELECT * from t1 using sample reservoir(10) order by a;

query I
select count(*) < 10 from (select * from sample1 intersect select * from sample2);
----
true

