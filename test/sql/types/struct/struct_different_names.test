# name: test/sql/types/struct/struct_different_names.test
# description: Test inserting structs with different names and unnamed structs
# group: [struct]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE t1 (s STRUCT(v VARCHAR)); 

statement ok
INSERT INTO t1 VALUES (ROW(NULL));

statement ok
CREATE TABLE foo (bar struct(pip int));

statement error
INSERT INTO foo VALUES ({'ignoreme': 3});
----
Mismatch Type Error: Type STRUCT(ignoreme INTEGER) does not match with STRUCT(pip INTEGER). Cannot cast STRUCTs with different names

statement error
create table wrong as from (VALUES (ROW(3)));
----
Invalid Input Error: A table cannot be created from an unnamed struct

statement ok
INSERT INTO foo VALUES (ROW(42));

query I
SELECT * FROM foo;
----
{'pip': 42}

statement ok
CREATE OR REPLACE TABLE T AS SELECT [{'a': 'A', 'b':'B'}] as x, [{'b':'BB','a':'AA'}] as y;

statement error
SELECT x, y, ARRAY_CONCAT(x, y) FROM T;
----
Mismatch Type Error: Type STRUCT(b VARCHAR, a VARCHAR) does not match with STRUCT(a VARCHAR, b VARCHAR). Cannot cast STRUCTs with different names

statement error
INSERT INTO t1 VALUES ({c: 34});
----
Mismatch Type Error: Type STRUCT(c INTEGER) does not match with STRUCT(v VARCHAR). Cannot cast STRUCTs with different names

statement ok
CREATE OR REPLACE TABLE T (s STRUCT(a INT, b INT));

statement error
INSERT INTO T VALUES ({l: 1, m: 2}), ({x: 3, y: 4});
----
Mismatch Type Error: Type STRUCT(l INTEGER, m INTEGER) does not match with STRUCT(a INTEGER, b INTEGER). Cannot cast STRUCTs with different names

# Can insert unnamed struct into named struct

statement ok
create table tbl (a STRUCT(a int, b varchar));

statement ok
insert into tbl VALUES(ROW(5, 'hello'));

# Can insert named struct into unnamed struct
statement error
create table tbl2 as select ROW(42, 'world') a;
----
Invalid Input Error: A table cannot be created from an unnamed struct

statement error
SELECT [{'foo': True}, {'bar': False}, {'foobar': NULL}];
----
Mismatch Type Error: Type STRUCT(bar BOOLEAN) does not match with STRUCT(foo BOOLEAN). Cannot cast STRUCTs with different names

statement ok
PREPARE v1 as SELECT ROW(?);

statement ok
EXECUTE v1(42);

statement ok
CREATE VIEW v1 AS SELECT ROW(42);