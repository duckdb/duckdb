# name: test/sql/types/timestamp/timestamp_precision.test
# description: Test timestamp precision
# group: [timestamp]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE ts_precision(
	sec TIMESTAMP(0),
	msec TIMESTAMP(3),
	micros TIMESTAMP(6),
	nanos TIMESTAMP (9)
);

statement ok
INSERT INTO ts_precision VALUES ('2020-01-01 01:23:45.123456789', '2020-01-01 01:23:45.123456789', '2020-01-01 01:23:45.123456789', '2020-01-01 01:23:45.123456789');

# FIXME: nano seconds do not render correctly
query IIII
SELECT sec::VARCHAR, msec::VARCHAR, micros::VARCHAR, nanos::VARCHAR FROM ts_precision
----
2020-01-01 01:23:45	2020-01-01 01:23:45.123	2020-01-01 01:23:45.123456	2020-01-01 01:23:45.123456

query IIII
SELECT EXTRACT(microseconds FROM sec), EXTRACT(microseconds FROM msec), EXTRACT(microseconds FROM micros), EXTRACT(microseconds FROM nanos) FROM ts_precision
----
45000000	45123000	45123456	45123456

# we only support precisions 0, 3, 6, and 9
# any other precision is rounded up (e.g. 1/2 -> 3, 4/5 -> 6, 7/8 -> 9)
loop i 1 3

query I
SELECT '2020-01-01 01:23:45.123456789'::TIMESTAMP(${i})
----
2020-01-01 01:23:45.123

endloop

loop i 4 6

query I
SELECT '2020-01-01 01:23:45.123456789'::TIMESTAMP(${i})
----
2020-01-01 01:23:45.123456

endloop

# FIXME: nano seconds rendering
loop i 7 9

query I
SELECT '2020-01-01 01:23:45.123456789'::TIMESTAMP(${i})
----
2020-01-01 01:23:45.123456

endloop

# unsupported: precision too high
statement error
CREATE TABLE ts_precision(sec TIMESTAMP(10));

statement error
CREATE TABLE ts_precision(sec TIMESTAMP(99999));

# timestamp only supporst a single modifier
statement error
CREATE TABLE ts_precision(sec TIMESTAMP(1, 1));
