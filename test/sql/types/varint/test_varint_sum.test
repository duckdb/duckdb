# name: test/sql/types/varint/test_varint_sum.test
# description: Test that varints don't try to cast to values they should now
# group: [varint]

statement ok
CREATE TABLE numbers ( x varint );

query I
select sum(x) from (values ('1'::varint), ('-2'::varint)) t(x), range(100000) t(y);
----
-100000

statement ok
INSERT INTO numbers (x) VALUES (9223372036854775808::VARINT), (1::VARINT);

query I
select (-1)::VARINT +  9223372036854775807::VARINT
----
9223372036854775806

query I
select 9223372036854775808::VARINT + 1::VARINT
----
9223372036854775809

query I
select (-10)::VARINT + (-1)::VARINT
----
-11

query I
select (-999999999)::VARINT + (-1)::VARINT
----
-1000000000


query I
select 9223372036854775808::VARINT + (-1)::VARINT
----
9223372036854775807

query I
select (-1000)::VARINT +  (-1000)::VARINT
----
-2000



query I
SELECT sum(x)::varint FROM numbers;
----
9223372036854775809

statement ok
DROP TABLE numbers;

statement ok
CREATE TABLE numbers ( x varint );

statement ok
INSERT INTO numbers (x) VALUES (255::VARINT), (255::VARINT);

query I
SELECT sum(x)::varint FROM numbers;
----
510

statement ok
DROP TABLE numbers;

statement ok
CREATE TABLE numbers ( x varint );

statement ok
INSERT INTO numbers (x) VALUES (1::VARINT), (99999999::VARINT);

query I
SELECT sum(x)::varint FROM numbers;
----
100000000

# Test edge cases for varint addition and aggregation
# ================================================
# NULL handling
statement ok
CREATE TABLE varint_nulls (a VARINT, b VARINT);

statement ok
INSERT INTO varint_nulls VALUES (NULL, 1::VARINT), (2::VARINT, NULL), (NULL, NULL);

query I
SELECT a + b FROM varint_nulls;
----
NULL
NULL
NULL

query I
SELECT sum(a)::VARINT FROM varint_nulls;
----
2

query I
SELECT sum(b)::VARINT FROM varint_nulls;
----
1

statement ok
DROP TABLE varint_nulls;

# Zero handling

statement ok
CREATE TABLE varint_zero (x VARINT);

statement ok
INSERT INTO varint_zero VALUES (0::VARINT), (0::VARINT), ((-0)::VARINT);

query I
SELECT sum(x)::VARINT FROM varint_zero;
----
0

query I
SELECT 0::VARINT + 0::VARINT;
----
0

query I
SELECT (-0)::VARINT + 0::VARINT;
----
0

statement ok
DROP TABLE varint_zero;



# Large positive + small negative
query I
SELECT 10000000000000000000::VARINT + (-5)::VARINT;
----
9999999999999999995

query I
SELECT (-5)::VARINT + 10000000000000000000::VARINT;
----
9999999999999999995


# Large negative + small positive
query I
SELECT (-10000000000000000000)::VARINT + 5::VARINT;
----
-9999999999999999995

# Positive overflow-ish range
query I
SELECT 18446744073709551615::VARINT + 1::VARINT;
----
18446744073709551616

# Negative underflow-ish range
query I
SELECT (-18446744073709551615)::VARINT + (-1)::VARINT;
----
-18446744073709551616


# Mixed range aggregation
statement ok
CREATE TABLE mixed_values(x VARINT);

statement ok
INSERT INTO mixed_values VALUES
    (0::VARINT),
    (1::VARINT),
    ((-1)::VARINT);

query I
SELECT sum(x)::VARINT FROM mixed_values;
----
0

statement ok
INSERT INTO mixed_values VALUES (9223372036854775808::VARINT)

query I
SELECT sum(x)::VARINT FROM mixed_values;
----
9223372036854775808

statement ok
INSERT INTO mixed_values VALUES ((-9223372036854775808)::VARINT)

query I
SELECT sum(x)::VARINT FROM mixed_values;
----
0

statement ok
INSERT INTO mixed_values VALUES ((100)::VARINT)

query I
SELECT sum(x)::VARINT FROM mixed_values;
----
100

statement ok
INSERT INTO mixed_values VALUES ((-100)::VARINT)

query I
SELECT sum(x)::VARINT FROM mixed_values;
----
0

statement ok
INSERT INTO mixed_values VALUES (NULL)

query I
SELECT sum(x)::VARINT FROM mixed_values;
----
0

statement ok
DROP TABLE mixed_values;


# Chained operations
query I
select (-500)::VARINT + 1000::VARINT
----
500

query I
SELECT ((-500)::VARINT + 1000::VARINT) + ((-250)::VARINT);
----
250

query I
SELECT (-500)::VARINT + (1000::VARINT + ((-250)::VARINT));
----
250

query I
select (-1)::VARINT +  9223372036854775807::VARINT
----
9223372036854775806

# Big varint addition over INT128 range
query I
SELECT 170141183460469231731687303715884105728::VARINT + 1::VARINT;
----
170141183460469231731687303715884105729

# Even bigger varint addition
query I
SELECT 340282366920938463463374607431768211456::VARINT + 340282366920938463463374607431768211456::VARINT;
----
680564733841876926926749214863536422912

query I
select '-21474836460000000000958214748364600000000009582147483646000000000095821474836460000000000958'::varint + '1000'::varint;
----
-21474836460000000000958214748364600000000009582147483646000000000095821474836459999999999958

query I
select '-21474836460000000000958214748364600000000009582147483646000000000095821474836459999999999958'::varint + '-1000'::varint;
----
-21474836460000000000958214748364600000000009582147483646000000000095821474836460000000000958

query I
select '1'::varint + '-2'::varint
----
-1

statement error
select varint + '-1'::varint from test_all_types(use_large_varint = true) limit 1
----
Out of Range Error: Underflow in Varint Operation. A Varint can hold max 8388607 data bytes. Current varint has 8388608 bytes.

statement error
select varint + '1'::varint from test_all_types(use_large_varint = true) limit 1 offset 1
----
Out of Range Error: Overflow in Varint Operation. A Varint can hold max 8388607 data bytes. Current varint has 8388608 bytes.


statement ok
create table varint_underflow as select varint from test_all_types(use_large_varint = true) limit 1

statement ok
insert into varint_underflow values (-1);

statement error
select sum(varint) from varint_underflow
----
Out of Range Error: Underflow in Varint Operation. A Varint can hold max 8388607 data bytes. Current varint has 8388608 bytes.

statement ok
create table varint_overflow as select varint from test_all_types(use_large_varint = true) limit 1 offset 1

statement ok
insert into varint_overflow values (1);

statement error
select sum(varint) from varint_overflow
----
Out of Range Error: Overflow in Varint Operation. A Varint can hold max 8388607 data bytes. Current varint has 8388608 bytes.
