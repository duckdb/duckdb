# name: test/sql/types/decimal/test_decimal_ops.test
# description: Test various operations with decimals
# group: [decimal]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE decimals(d DECIMAL(3, 2));

statement ok
INSERT INTO decimals VALUES ('0.1'), ('0.2');

# basic projection
query I
SELECT * FROM decimals
----
0.1
0.2

# ORDER BY
query I
SELECT * FROM decimals ORDER BY d DESC
----
0.2
0.1

# equality
query I
SELECT * FROM decimals WHERE d='0.1'::DECIMAL(3,2)
----
0.1

# greater than equals
query I
SELECT * FROM decimals WHERE d>='0.1'::DECIMAL(3,2)
----
0.1
0.2

# what about if we use different decimal scales?
query I
SELECT * FROM decimals WHERE d='0.1'::DECIMAL(9,5)
----
0.1

query I
SELECT * FROM decimals WHERE d >= '0.1'::DECIMAL(9,5) ORDER BY 1
----
0.1
0.2

# what if we compare decimals with different scales and width (3,2) vs (9,1)
statement ok
INSERT INTO decimals VALUES ('0.11'), ('0.21');

query I
SELECT * FROM decimals WHERE d = '0.1'::DECIMAL(9,1)
----
0.1

query I
SELECT * FROM decimals WHERE d > '0.1'::DECIMAL(9,1) ORDER BY 1
----
0.11
0.2
0.21

query I
DELETE FROM decimals WHERE d <> d::DECIMAL(9,1)
----
2

#
# test ABS function
query III
SELECT ABS('-0.1'::DECIMAL), ABS('0.1'::DECIMAL), ABS(NULL::DECIMAL)
----
0.1	0.1	NULL

query IIII
SELECT ABS('-0.1'::DECIMAL(4,3)), ABS('-0.1'::DECIMAL(9,3)), ABS('-0.1'::DECIMAL(18,3)), ABS('-0.1'::DECIMAL(38,3))
----
0.1	0.1	0.1	0.1

# test CEIL function
query III
SELECT CEIL('0.1'::DECIMAL), CEIL('-0.1'::DECIMAL), CEIL(NULL::DECIMAL)
----
1	0	NULL

query II
SELECT CEIL('100.3'::DECIMAL), CEIL('-127012.3'::DECIMAL)
----
101	-127012

query II
SELECT CEIL('10.5'::DECIMAL), CEIL('-10.5'::DECIMAL)
----
11	-10

# ceil function on the boundaries
query IIII
SELECT CEIL('999.9'::DECIMAL(4,1)), CEIL('99999999.9'::DECIMAL(9,1)), CEIL('99999999999999999.9'::DECIMAL(18,1)), CEIL('9999999999999999999999999999999999999.9'::DECIMAL(38,1))
----
1000	100000000	100000000000000000	10000000000000000000000000000000000000

query IIII
SELECT CEIL('-999.9'::DECIMAL(4,1)), CEIL('-99999999.9'::DECIMAL(9,1)), CEIL('-99999999999999999.9'::DECIMAL(18,1)), CEIL('-9999999999999999999999999999999999999.9'::DECIMAL(38,1))
----
-999	-99999999	-99999999999999999	-9999999999999999999999999999999999999

# test FLOOR function
query III
SELECT FLOOR('0.1'::DECIMAL), FLOOR('-0.1'::DECIMAL), FLOOR(NULL::DECIMAL)
----
0	-1	NULL

query II
SELECT FLOOR('100.3'::DECIMAL), FLOOR('-127012.3'::DECIMAL)
----
100	-127013

query II
SELECT FLOOR('10.5'::DECIMAL), FLOOR('-10.5'::DECIMAL)
----
10	-11

# floor function on the boundaries
query IIII
SELECT FLOOR('999.9'::DECIMAL(4,1)), FLOOR('99999999.9'::DECIMAL(9,1)), FLOOR('99999999999999999.9'::DECIMAL(18,1)), FLOOR('9999999999999999999999999999999999999.9'::DECIMAL(38,1))
----
999	99999999	99999999999999999	9999999999999999999999999999999999999

query IIII
SELECT FLOOR('-999.9'::DECIMAL(4,1)), FLOOR('-99999999.9'::DECIMAL(9,1)), FLOOR('-99999999999999999.9'::DECIMAL(18,1)), FLOOR('-9999999999999999999999999999999999999.9'::DECIMAL(38,1))
----
-1000	-100000000	-100000000000000000	-10000000000000000000000000000000000000

# test unary ROUND function
query III
SELECT ROUND('0.1'::DECIMAL), ROUND('-0.1'::DECIMAL), ROUND(NULL::DECIMAL)
----
0	0	NULL

query II
SELECT ROUND('100.3'::DECIMAL), ROUND('-127012.3'::DECIMAL)
----
100	-127012

query II
SELECT ROUND('10.5'::DECIMAL), ROUND('-10.5'::DECIMAL)
----
11	-11

# round function on the boundaries
query IIII
SELECT ROUND('999.9'::DECIMAL(4,1)), ROUND('99999999.9'::DECIMAL(9,1)), ROUND('99999999999999999.9'::DECIMAL(18,1)), ROUND('9999999999999999999999999999999999999.9'::DECIMAL(38,1))
----
1000	100000000	100000000000000000	10000000000000000000000000000000000000

query IIII
SELECT ROUND('-999.9'::DECIMAL(4,1)), ROUND('-99999999.9'::DECIMAL(9,1)), ROUND('-99999999999999999.9'::DECIMAL(18,1)), ROUND('-9999999999999999999999999999999999999.9'::DECIMAL(38,1))
----
-1000	-100000000	-100000000000000000	-10000000000000000000000000000000000000

# round with precision
query IIIIIIIIIIIII
SELECT ROUND('100.3908147521'::DECIMAL(18,10), 0)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 1)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 2)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 3)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 4)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 5)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 6)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 7)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 8)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 9)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 10)::VARCHAR,
	   ROUND('100.3908147521'::DECIMAL(18,10), 100000)::VARCHAR,
	   ROUND(NULL::DECIMAL, 0)
----
100
100.4
100.39
100.391
100.3908
100.39081
100.390815
100.3908148
100.39081475
100.390814752
100.3908147521
100.3908147521
NULL

# negative precision
query IIIIIIIIIIIIIIIIIIIII
SELECT ROUND('1049578239572094512.32415'::DECIMAL(30,10), 0)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -1)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -2)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -3)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -4)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -5)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -6)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -7)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -8)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -9)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -10)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -11)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -12)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -13)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -14)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -15)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -16)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -18)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -19)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -20)::VARCHAR,
	   ROUND('1049578239572094512.32415'::DECIMAL(30,10), -19842)::VARCHAR
----
1049578239572094512
1049578239572094510
1049578239572094500
1049578239572095000
1049578239572090000
1049578239572100000
1049578239572000000
1049578239570000000
1049578239600000000
1049578240000000000
1049578240000000000
1049578200000000000
1049578000000000000
1049580000000000000
1049600000000000000
1050000000000000000
1050000000000000000
1000000000000000000
0
0
0

# negative values
query IIIIIIIIIIIII
SELECT ROUND('-100.3908147521'::DECIMAL(18,10), 0)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 1)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 2)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 3)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 4)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 5)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 6)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 7)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 8)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 9)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 10)::VARCHAR,
	   ROUND('-100.3908147521'::DECIMAL(18,10), 100000)::VARCHAR,
	   ROUND(NULL::DECIMAL, 0)
----
-100
-100.4
-100.39
-100.391
-100.3908
-100.39081
-100.390815
-100.3908148
-100.39081475
-100.390814752
-100.3908147521
-100.3908147521
NULL

query IIIIIIIIIIIIIIIIIIIII
SELECT ROUND('-1049578239572094512.32415'::DECIMAL(30,10), 0)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -1)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -2)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -3)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -4)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -5)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -6)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -7)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -8)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -9)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -10)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -11)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -12)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -13)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -14)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -15)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -16)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -18)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -19)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -20)::VARCHAR,
	   ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -19842)::VARCHAR
----
-1049578239572094512
-1049578239572094510
-1049578239572094500
-1049578239572095000
-1049578239572090000
-1049578239572100000
-1049578239572000000
-1049578239570000000
-1049578239600000000
-1049578240000000000
-1049578240000000000
-1049578200000000000
-1049578000000000000
-1049580000000000000
-1049600000000000000
-1050000000000000000
-1050000000000000000
-1000000000000000000
0
0
0

query I
SELECT ROUND(12::DECIMAL(3,0))
----
12

# non-constant precision is not supported
statement error
SELECT ROUND(12::DECIMAL(3,0), i) FROM range(1) tbl(i)

# null precision becomes null (postgres behavior)
query T
SELECT ROUND(12::DECIMAL(3,0), NULL)
----
NULL

# different types for ROUND
query III
SELECT ROUND('-100.3'::DECIMAL(4,1), 1)::VARCHAR,
	   ROUND('104.3'::DECIMAL(4,1), 0)::VARCHAR,
	   ROUND('104.3'::DECIMAL(4,1), -1)::VARCHAR
----
-100.3
104
100

query III
SELECT ROUND('-100.3'::DECIMAL(9,1), 1)::VARCHAR,
	   ROUND('104.3'::DECIMAL(9,1), 0)::VARCHAR,
	   ROUND('104.3'::DECIMAL(9,1), -1)::VARCHAR
----
-100.3
104
100

query III
SELECT ROUND('-100.3'::DECIMAL(18,1), 1)::VARCHAR,
	   ROUND('104.3'::DECIMAL(18,1), 0)::VARCHAR,
	   ROUND('104.3'::DECIMAL(18,1), -1)::VARCHAR
----
-100.3
104
100

# printf
query I
SELECT printf('%.2f', '0.12345'::DECIMAL(30,10))
----
0.12

# use decimal in subquery
query I
SELECT (SELECT '1.0'::DECIMAL(2,1));
----
1.0