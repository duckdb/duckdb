# name: test/sql/types/nested/map/test_map_subscript_where.test
# group: [map]

statement ok
create table t1 (
	id int,
	k integer[],
	v decimal[]
);

statement ok
insert into t1
SELECT * FROM (VALUES
	(0, [1,2,3,4], [1.0, 2.0, 3.0, 4.0]),
	(1, [5,6,7,8], [5.0, 6.0, 7.0, 8.0]),
	(2, [9,10,11,12], [9.0, 10.0, 11.0, 12.0]),
	(3, [13,14,15,16], [13.0, 14.0, 15.0, 16.0]),
	(4, [17,18,19,20], [17.0, 18.0, 19.0, 20.0]),
	(5, [21,22,23,24], [21.0, 22.0, 23.0, 24.0]),
	(6, [25,26,27,28], [25.0, 26.0, 27.0, 28.0]),
	(7, [29,30,31,32], [29.0, 30.0, 31.0, 32.0]),
	(8, [33,34,35,36], [33.0, 34.0, 35.0, 36.0]),
	(9, [37,38,39,40], [37.0, 38.0, 39.0, 40.0])
)

statement ok
create table t2 (id int, v_map map(integer, decimal), k integer[]);

statement ok
insert into t2 select id, map(k,v), k from t1;

query II
select id, v_map[array_sort(k, 'DESC', 'NULLS LAST')[1]] from t2 where id > 3 limit 10;
----
4	[20.000]
5	[24.000]
6	[28.000]
7	[32.000]
8	[36.000]
9	[40.000]


statement ok
CREATE table tbl (key INT, val VARCHAR);

statement ok
INSERT INTO tbl VALUES (1,'duck'), (2,'DB'), (3,'duckDB');

query I
SELECT MAP([key], [val])[key] FROM tbl
WHERE key <> '2';
----
[duck]
[duckDB]