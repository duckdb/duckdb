# name: test/sql/types/nested/map/test_map_cardinality.test
# description: Test cardinality function for maps
# group: [map]

query I
select cardinality(NULL)
----
NULL

query I
select CARDINALITY(MAP(LIST_VALUE(1, 2, 3, 4),LIST_VALUE(10, 9, 8, 7)))
----
4

query I
select CARDINALITY(MAP(LIST_VALUE(),LIST_VALUE()))
----
0

query I
select CARDINALITY(MAP())
----
0

#What about multiple rows?
statement ok
create table ints (a integer, b integer)

statement ok
insert into ints values (1,1),(5,2),(6,3),(2,2),(7,3),(3,3),(4,4)

query II
select a, cardinality(m) from (select a,MAP(lsta,lstb) as m from (SELECT list(a) as lsta, list(b) as lstb, a FROM ints group by a) as lst_tbl) as T
----
1	1
2	1
3	1
4	1
5	1
6	1
7	1


#What about selection vectors?
query II
select a, cardinality(m) from (select a,MAP(lsta,lstb) as m from (SELECT list(a) as lsta, list(b) as lstb, a FROM ints where b < 3 group by a) as lst_tbl) as T
----
1	1
2	1
5	1

#Multiple constants
query I
select cardinality(m) from (select MAP(list_value(1), list_value(2)) from range(5) tbl(i)) tbl(m);
----
1
1
1
1
1


# Test dictionary vectors
query III
select grp, m, case when grp>1 then cardinality(m) else 0 end from (select grp, MAP(lsta,lstb) as m from (SELECT a%4 as grp, list(a) as lsta, list(a) as lstb FROM range(7) tbl(a) group by grp) as lst_tbl) as T;
----
0	{0=0, 4=4}	0
1	{1=1, 5=5}	0
2	{2=2, 6=6}	2
3	{3=3}	1