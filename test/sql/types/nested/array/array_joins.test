# name: test/sql/types/nested/array/array_joins.test
# group: [array]

statement ok
PRAGMA enable_verification

statement ok
PRAGMA verify_external

statement ok
CREATE TABLE t1(i INTEGER, a INTEGER[3])

statement ok
INSERT INTO t1 VALUES 
    (1, array_value(1,2,3)),
    (2, array_value(NULL,5,6)),
	(3, array_value(7,NULL,9)),
    (4, array_value(10,11,NULL));


query II
SELECT DISTINCT * FROM t1 ORDER BY ALL;
----
1	[1, 2, 3]
2	[NULL, 5, 6]
3	[7, NULL, 9]
4	[10, 11, NULL]

# Nested case with ARRAY in ARRAY
statement ok
CREATE OR REPLACE TABLE t1(i INTEGER, a INTEGER[][3])

statement ok
INSERT INTO t1 
SELECT 
	i, 
	array_value(list_value(i, i + 1, i + 2), list_value(i + 3, i + 4, i + 5), list_value(i + 6,i + 7,i + 8)) 
FROM range(0,9*9,9) as r(i);

query II
SELECT DISTINCT * FROM t1 ORDER BY ALL;
----
0	[[0, 1, 2], [3, 4, 5], [6, 7, 8]]
9	[[9, 10, 11], [12, 13, 14], [15, 16, 17]]
18	[[18, 19, 20], [21, 22, 23], [24, 25, 26]]
27	[[27, 28, 29], [30, 31, 32], [33, 34, 35]]
36	[[36, 37, 38], [39, 40, 41], [42, 43, 44]]
45	[[45, 46, 47], [48, 49, 50], [51, 52, 53]]
54	[[54, 55, 56], [57, 58, 59], [60, 61, 62]]
63	[[63, 64, 65], [66, 67, 68], [69, 70, 71]]
72	[[72, 73, 74], [75, 76, 77], [78, 79, 80]]



foreach COLLECTION array_value list_value

statement ok
CREATE OR REPLACE TABLE t1 AS SELECT * FROM (
	VALUES 
	(1, ${COLLECTION}(1,2)),
	(2, ${COLLECTION}(NULL,5)),
	(3, NULL),
) as t(i, a);

statement ok
CREATE OR REPLACE TABLE t2 AS SELECT * FROM (
	VALUES 
	(1, ${COLLECTION}(4,5)),
	(2, ${COLLECTION}(8,9)),
	(3, ${COLLECTION}(6,7)),
	(4, ${COLLECTION}(1,2))
) as t(i, a);

query III
SELECT * FROM t1 JOIN t2 USING (i) ORDER BY ALL;
----
1	[1, 2]		[4, 5]
2	[NULL, 5]	[8, 9]
3	NULL		[6, 7]

query IIII
SELECT * FROM t1 JOIN t2 ON t1.a = t2.a ORDER BY ALL;
----
1	[1, 2]	4	[1, 2]


query III
SELECT * FROM t1 FULL OUTER JOIN t2 USING (i) ORDER BY ALL;
----
1	[1, 2]		[4, 5]
2	[NULL, 5]	[8, 9]
3	NULL		[6, 7]
4	NULL		[1, 2]


endloop


# Anti-join

foreach COLLECTION INT[3] INT[]

statement ok
CREATE OR REPLACE TABLE t1 AS SELECT * FROM (VALUES (1, [1,2,3]::${COLLECTION}), (2, [4,5,6]::${COLLECTION}), (3, [1,2,3]::${COLLECTION}));

query IIII
SELECT * FROM t1 as a JOIN t1 as b ON (a.col1 != b.col1) ORDER BY ALL;
----
1	[1, 2, 3]	2	[4, 5, 6]
2	[4, 5, 6]	1	[1, 2, 3]
2	[4, 5, 6]	3	[1, 2, 3]
3	[1, 2, 3]	2	[4, 5, 6]

endloop