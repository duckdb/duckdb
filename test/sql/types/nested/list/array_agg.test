# name: test/sql/types/nested/list/array_agg.test
# description: Test array_agg function
# group: [list]

# scalar array agg
query II
SELECT ARRAY_AGG(NULL), ARRAY_AGG(42)
----
[NULL]	[42]

# simple array agg
query I
SELECT ARRAY_AGG(i) FROM range(0, 3) tbl(i)
----
[0, 1, 2]

# empty array agg
query I
SELECT ARRAY_AGG(i) FROM range(0, 0) tbl(i)
----
NULL

statement ok
CREATE TABLE films(film_id INTEGER, title VARCHAR)

statement ok
CREATE TABLE actors(actor_id INTEGER, first_name VARCHAR, last_name VARCHAR)

statement ok
CREATE TABLE film_actor(film_id INTEGER, actor_id INTEGER)

statement ok
INSERT INTO films VALUES (1, 'The Martian'), (2, 'Saving Private Ryan'), (3, 'Team America');

statement ok
INSERT INTO actors VALUES (1, 'Matt', 'Damon'), (2, 'Jessica', 'Chastain'), (3, 'Tom', 'Hanks'), (4, 'Edward', 'Burns'),
						  (5, 'Kim', 'Jong Un'), (6, 'Alec', 'Baldwin');

statement ok
INSERT INTO film_actor VALUES (1, 1), (2, 1), (3, 1), (1, 2), (2, 3), (2, 4), (3, 5), (3, 6);

query II
SELECT
	title,
	ARRAY_AGG (
	CASE WHEN first_name='Matt' and title='Team America'
	THEN 'MATT DAAAMON'
	ELSE first_name || ' ' || last_name END order by actor_id) actors
FROM films
JOIN film_actor USING (film_id)
JOIN actors USING (actor_id)
GROUP BY
	title
ORDER BY
	title;
----
Saving Private Ryan	[Matt Damon, Tom Hanks, Edward Burns]
Team America	[MATT DAAAMON, Kim Jong Un, Alec Baldwin]
The Martian	[Matt Damon, Jessica Chastain]

query II
select film_id, ARRAY_AGG(actor_id order by actor_id) FROM film_actor GROUP BY film_id;
----
1	[1, 2]
2	[1, 3, 4]
3	[1, 5, 6]
