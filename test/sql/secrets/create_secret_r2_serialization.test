# name: test/sql/secrets/create_secret_r2_serialization.test
# description: Demo of secret serialization
# group: [secrets]

# NOTE: this is a testing feature that will be removed / replaced with actual persistent secrets.

require httpfs

require parquet

load __TEST_DIR__/test_serialize_secrets.db

statement ok
PRAGMA enable_verification;

statement ok
set secret_directory='__TEST_DIR__/create_secret_r2_serialization'

statement ok
CREATE OR REPLACE PERSISTENT SECRET s1 (
    TYPE S3,
    PROVIDER config,
    SCOPE 's3://my_scope',
    KEY_ID 'mekey',
    SECRET 'mesecret',
    REGION 'meregion',
    SESSION_TOKEN 'mesesh',
    ENDPOINT 'meendpoint',
    URL_STYLE 'mahstyle',
    USE_SSL true,
    URL_COMPATIBILITY_MODE true
)

query IIII
select name, type, provider, scope FROM duckdb_secrets();
----
s1	s3	config	[s3://my_scope]

query I nosort secret_to_string
select * from duckdb_secrets();
----

restart

# Now setting the secret dir somehwere nonexistent will yield no persistent secrets
statement ok
set secret_directory='__TEST_DIR__/does_not_exist2'

query I
select count(*) FROM duckdb_secrets();
----
0

restart

# However setting it to the dir that does, we can suddenly see our persisted secrets
statement ok
set secret_directory='__TEST_DIR__/create_secret_r2_serialization'

# After restart secret is still there
query IIII
select name, type, provider, scope FROM duckdb_secrets();
----
s1	s3	config	[s3://my_scope]

# Even more: it matches the exact string note that we don't disable redaction here to ensure we cover
# redaction set serialization with this test
query I nosort secret_to_string
select * from duckdb_secrets();
----