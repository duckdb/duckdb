# name: test/sql/secrets/create_secret_storage_backends.test
# description: Test different storage backends
# group: [secrets]

load __TEST_DIR__/create_secret_storage_backends.db

statement ok
PRAGMA enable_verification;

require httpfs

# Ensure any currently stored secrets don't interfere with the test
statement ok
set allow_persistent_secrets=false;

statement error
CREATE TEMPORARY SECRET s1 IN LOCAL_FILE ( TYPE S3 )
----
Invalid Input Error: Persistent secrets are disabled. Restart DuckDB and enable persistent secrets through 'SET allow_persistent_secrets=true'

statement error
CREATE PERSISTENT SECRET s1 IN NON_EXISTENT_SECRET_STORAGE ( TYPE S3 )
----
Invalid Input Error: Persistent secrets are disabled. Restart DuckDB and enable persistent secrets through 'SET allow_persistent_secrets=true'

# We have disabled the permanent secrets, so this should fail
statement error
CREATE PERSISTENT SECRET perm_s1 ( TYPE S3 )
----
Invalid Input Error: Persistent secrets are disabled. Restart DuckDB and enable persistent secrets through 'SET allow_persistent_secrets=true'

restart

statement ok
set secret_directory='__TEST_DIR__/create_secret_storages'

# Default for persistent secret is currently LOCAL_FILE (only native persistent storage method currently)
statement ok
CREATE PERSISTENT SECRET perm_s1 ( TYPE S3 )

# Specifying IN ... implies persistent, hence this is okay
statement ok
CREATE SECRET perm_s2 IN LOCAL_FILE ( TYPE S3 )

# Explicitly stating temporary is cool
statement ok
CREATE TEMPORARY SECRET temp_s1 ( TYPE s3 );

# Not specifying it will use the system default (which is temp)
statement ok
CREATE SECRET temp_s2 ( TYPE s3 );

query IIIIII
SELECT * EXCLUDE (secret_string) FROM duckdb_secrets() ORDER BY name
----
perm_s1	s3	config	true	local_file	[s3://, s3n://, s3a://]
perm_s2	s3	config	true	local_file	[s3://, s3n://, s3a://]
temp_s1	s3	config	false	memory	[s3://, s3n://, s3a://]
temp_s2	s3	config	false	memory	[s3://, s3n://, s3a://]

restart

# Since extensions can add secret storage backends, we allow switching the default backend
statement ok
set default_secret_storage='currently-non-existent'

statement ok
set secret_directory='__TEST_DIR__/create_secret_storages'

statement error
CREATE PERSISTENT SECRET s1 ( TYPE S3 )
----
Secret storage 'currently-non-existent' not found!

# We can still work around this broken default by specifying the storage explicitly
statement ok
CREATE PERSISTENT SECRET s1 IN LOCAL_FILE ( TYPE S3 )

restart

statement ok
set secret_directory='__TEST_DIR__/create_secret_storages'

# Let's restore and now things work again
statement ok
reset default_secret_storage

statement ok
CREATE PERSISTENT SECRET s2 ( TYPE S3 )

query IIIIII
SELECT * EXCLUDE (secret_string) FROM duckdb_secrets() ORDER BY name
----
perm_s1	s3	config	true	local_file	[s3://, s3n://, s3a://]
perm_s2	s3	config	true	local_file	[s3://, s3n://, s3a://]
s1	s3	config	true	local_file	[s3://, s3n://, s3a://]
s2	s3	config	true	local_file	[s3://, s3n://, s3a://]

statement maybe
DROP SECRET perm_s1;
----
Invalid Input Error: Failed to remove non-existent secret

statement maybe
DROP SECRET perm_s2;
----
Invalid Input Error: Failed to remove non-existent secret
