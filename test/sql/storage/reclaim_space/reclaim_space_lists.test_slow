# name: test/sql/storage/reclaim_space/reclaim_space_lists.test_slow
# description: Test that we reclaim space of LIST tables
# group: [reclaim_space]

load __TEST_DIR__/test_reclaim_space.db

statement ok
PRAGMA force_checkpoint;

statement ok
SET force_compression='uncompressed'

statement ok
CREATE TABLE lists AS SELECT [i] l FROM range(10000000) tbl(i);

statement ok
CHECKPOINT;

statement ok
CHECKPOINT;

query III
SELECT MIN(l[1]), MAX(l[1]), COUNT(*) FROM lists
----
0	9999999	10000000

statement ok
DROP TABLE lists;

# for smaller block sizes (16KB) the total blocks alternate between a few values in the loop,
# therefore, we need to compare to a range of total block counts
statement ok
CREATE TABLE total_blocks_tbl AS SELECT total_blocks FROM pragma_database_size();

loop i 0 10

statement ok
CREATE TABLE lists${i} AS SELECT [i] l FROM range(10000000) tbl(i);

query III
SELECT MIN(l[1]), MAX(l[1]), COUNT(*) FROM lists${i}
----
0	9999999	10000000

statement ok
CHECKPOINT;

statement ok
DROP TABLE lists${i}

statement ok
CHECKPOINT

# ensure that the total blocks don't exceed the total blocks after the first iteration
# by more than 1.2

query I
SELECT CASE WHEN ${i} = 0 THEN True
	WHEN current.total_blocks <= total_blocks_tbl.total_blocks * 1.2 THEN True
	ELSE False END
FROM pragma_database_size() AS current, total_blocks_tbl;
----
1

# adjust total_blocks_tbl once to the count after the first iteration

statement ok
UPDATE total_blocks_tbl SET total_blocks = (
	SELECT CASE WHEN ${i} = 0 THEN (SELECT current.total_blocks FROM pragma_database_size() AS current)
		ELSE (total_blocks) END);

endloop
