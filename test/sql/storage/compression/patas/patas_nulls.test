# name: test/sql/storage/compression/patas/patas_nulls.test
# group: [patas]

foreach compression uncompressed patas

# Create tables

statement ok
create table tbl1_${compression}(
	a INTEGER DEFAULT 5,
	b VARCHAR DEFAULT 'test',
	c BOOL DEFAULT false,
	d DOUBLE,
	e TEXT default 'null',
	f FLOAT
);

statement ok
create table tbl2_${compression}(
	a INTEGER DEFAULT 5,
	b VARCHAR DEFAULT 'test',
	c BOOL DEFAULT false,
	d DOUBLE,
	e TEXT default 'null',
	f FLOAT
);

statement ok
create table tbl3_${compression}(
	a INTEGER DEFAULT 5,
	b VARCHAR DEFAULT 'test',
	c BOOL DEFAULT false,
	d DOUBLE,
	e TEXT default 'null',
	f FLOAT
);

# Populate tables

# Mixed NULLs
statement ok
insert into tbl1_${compression}(d,f) VALUES
(NULL, 1.2314234),
(324213.23123, NULL),
(NULL, NULL),
(21312.2341234, 12.1232345234),
(NULL, NULL);

# Only NULLS
statement ok
insert into tbl2_${compression}(d,f) VALUES
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL);

# Starting with NULLS
statement ok
insert into tbl3_${compression}(d,f) VALUES
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(NULL, NULL),
(7034.34968234, 93472948.980347532),
(1.213123, 1.232142134);

# Set the compression algorithm

statement ok
pragma force_compression='${compression}'

# Force a checkpoint

statement ok
checkpoint

endloop

# Assert that the scanned results are the same

#tbl1

query II nosort r1
select d, f from tbl1_uncompressed;
----

query II nosort r1
select d, f from tbl1_patas;
----

#tbl2

query II nosort r2
select d, f from tbl2_uncompressed;
----

query II nosort r2
select d, f from tbl2_patas;
----

# tbl3

query II nosort r3
select d, f from tbl3_uncompressed;
----

query II nosort r3
select d, f from tbl3_patas;
----
