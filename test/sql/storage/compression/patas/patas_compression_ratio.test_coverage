# name: test/sql/storage/compression/patas/patas_compression_ratio.test_coverage
# description: Assert patas compression ratio is within reasonable margins
# group: [patas]

# ---------------- SETTINGS ----------------

require parquet

require httpfs

# Use a persistent DB for this test
load __TEST_DIR__/test_patas.db

# ---------------- SET UP ----------------

# Load and store the dataset with 'patas' and 'uncompressed',
# Done for both 'double' and 'float'
# stored in 'test_patas_float|double' and 'test_uncompressed_float|double' respectively

foreach compression uncompressed patas

statement ok
PRAGMA force_compression='${compression}';

foreach type double float

statement ok
CREATE TABLE test_${compression}_${type}(
	temperature ${type}
);

statement ok
INSERT INTO test_${compression}_${type} SELECT temp FROM 'https://github.com/duckdb/duckdb-data/releases/download/v1.0/city_temperature.parquet' t(temp), range(12);

#type
endloop

statement ok
checkpoint

#compression
endloop

# ---------------- TESTS ----------------

# Assert that no segments are compressed with anything other than Patas
query I
SELECT compression FROM pragma_storage_info('test_patas_float') WHERE segment_type != 'VALIDITY' AND compression != 'Patas';
----

query I
SELECT compression FROM pragma_storage_info('test_patas_double') WHERE segment_type != 'VALIDITY' AND compression != 'Patas';
----

# Assert that the compression ratio for this dataset with doubles is higher than 2.5
query I
select (uncompressed::DOUBLE / patased::DOUBLE) > 2.5 FROM (
    select
        (select count(distinct block_id) from pragma_storage_info('test_patas_double') where segment_type not in('VARCHAR', 'VALIDITY')) as patased,
        (select count(distinct block_id) from pragma_storage_info('test_uncompressed_double') where segment_type not in('VARCHAR', 'VALIDITY')) as uncompressed
)
----
True

# Assert that the compression ratio for this dataset with floats is higher than 1.3
query I
select (uncompressed::DOUBLE / patased::DOUBLE) > 1.3 FROM (
    select
        (select count(distinct block_id) from pragma_storage_info('test_patas_float') where segment_type not in('VARCHAR', 'VALIDITY')) as patased,
        (select count(distinct block_id) from pragma_storage_info('test_uncompressed_float') where segment_type not in('VARCHAR', 'VALIDITY')) as uncompressed
)
----
True
