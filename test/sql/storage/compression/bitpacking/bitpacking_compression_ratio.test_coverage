# name: test/sql/storage/compression/bitpacking/bitpacking_compression_ratio.test_coverage
# description: Assert bitpacking compression ratio is within reasonable margins
# group: [bitpacking]

# load the DB from disk
load __TEST_DIR__/test_bitpacking.db

# First test: detailed compression ratio
statement ok
PRAGMA force_compression='bitpacking'

# Uncompressed value size: (1024 * 64bit) = 65536
# Compress value size: 64(bits) + 64(frame-of-reference) + (1024 * 1) = 1152
# Ratio: 65536 / 1152 = 56.88
statement ok
CREATE TABLE test_bitpacked AS SELECT (2000 + i%2)::INT64 AS i FROM range(0, 10000000) tbl(i);

statement ok
checkpoint

statement ok
PRAGMA force_compression='uncompressed'

statement ok
CREATE TABLE test_uncompressed AS SELECT (2000 + i%2)::INT64 AS i FROM range(0, 10000000) tbl(i);

statement ok
checkpoint

query I
SELECT compression FROM pragma_storage_info('test_bitpacked') WHERE segment_type != 'VALIDITY' AND compression != 'BitPacking';
----


# This query keeps a pretty wide margin in compression ratio on purpose to account for possible changes that
# influence compression ratio.
query II
select (uncompressed::FLOAT / bitpacked::FLOAT) > 45, (uncompressed::FLOAT / bitpacked::FLOAT) < 57 FROM (
    select
        (select count(distinct block_id) from pragma_storage_info('test_bitpacked') where segment_type not in('VARCHAR', 'VALIDITY')) as bitpacked,
        (select count(distinct block_id) from pragma_storage_info('test_uncompressed') where segment_type not in('VARCHAR', 'VALIDITY')) as uncompressed
)
----
True	True

statement ok
drop table test_bitpacked

statement ok
drop table test_uncompressed

# Assert that all supported types do in fact compress
foreach type int8 int16 int32 int64 uint8 uint16 uint32 uint64 decimal(4,1) decimal(8,1) decimal(12,1) decimal(18,1) bool

statement ok
PRAGMA force_compression='uncompressed';

statement ok
CREATE TABLE test_uncompressed AS SELECT (i%2)::${type} FROM range(0, 2500000) tbl(i);

statement ok
checkpoint

statement ok
PRAGMA force_compression='bitpacking'

statement ok
CREATE TABLE test_bitpacked AS SELECT (i%2)::${type} FROM range(0, 2500000) tbl(i);

statement ok
checkpoint

# assert compression ratio >2 wich should be achieved for even the smallest types for this data
query II
select (uncompressed::FLOAT / bitpacked::FLOAT) > 2, CAST(1 as ${type}) FROM (
    select
        (select count(distinct block_id) from pragma_storage_info('test_bitpacked') where segment_type not in('VARCHAR', 'VALIDITY')) as bitpacked,
        (select count(distinct block_id) from pragma_storage_info('test_uncompressed') where segment_type not in('VARCHAR', 'VALIDITY')) as uncompressed
)
----
1	1

statement ok
drop table test_bitpacked

statement ok
drop table test_uncompressed

endloop