# name: test/sql/storage/compression/bitpacking/bitpacking_lists.test_slow
# description: Test storage with Bitpacking inside lists
# group: [bitpacking]

# load the DB from disk
load __TEST_DIR__/test_rle.db

statement ok
PRAGMA force_compression = 'bitpacking'

foreach bitpacking_mode delta_for for constant_delta constant

statement ok
PRAGMA force_bitpacking_mode='${bitpacking_mode}'

statement ok
CREATE TABLE test (id INTEGER, l INTEGER[]);

statement ok
INSERT INTO test SELECT i, case when (i//1000)%2=0 then [1, 1, 1] else [2, 2] end FROM range(200000) tbl(i)

query I
SELECT compression FROM pragma_storage_info('test') WHERE segment_type ILIKE 'INTEGER' LIMIT 1
----
BitPacking

# full unnest
query II
SELECT COUNT(*), SUM(i) FROM (SELECT UNNEST(l) FROM test) tbl(i)
----
500000	700000

# filters/skips
query II
SELECT COUNT(*), SUM(i) FROM (SELECT UNNEST(l) FROM test WHERE id>=5000 AND id<6000) tbl(i)
----
2000	4000

# zonemaps
query II
SELECT COUNT(*), SUM(i) FROM (SELECT UNNEST(l) FROM test WHERE id>=150000 AND id<160000) tbl(i)
----
25000	35000

statement ok
CREATE INDEX i_index ON test(id)

# index lookup in lists
query II
SELECT * FROM test WHERE id=150001
----
150001	[1, 1, 1]

# large lists
statement ok
CREATE TABLE test_large_list AS SELECT i%100 AS id, LIST(-i) AS list FROM range(0,100000) tbl(i) GROUP BY id;

query II
SELECT COUNT(*), SUM(i) FROM (SELECT UNNEST(list) FROM test_large_list) tbl(i)
----
100000	-4999950000

statement ok
drop table test_large_list

statement ok
drop table test

endloop