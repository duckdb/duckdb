# name: test/sql/storage/compression/string/blob.test
# description: blob tests
# group: [string]

load __TEST_DIR__/test_string_compression.db

foreach enable_fsst_vector true false

statement ok
SET enable_fsst_vectors='${enable_fsst_vector}'

foreach compression fsst dictionary

statement ok
PRAGMA force_compression='${compression}'

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE blobs (b BYTEA);

# Insert valid hex strings
statement ok
INSERT INTO blobs VALUES('\xaa\xff\xaa'), ('\xAA\xFF\xAA\xAA\xFF\xAA'), ('\xAA\xFF\xAA\xAA\xFF\xAA\xAA\xFF\xAA')

query T
SELECT * FROM blobs
----
\xAA\xFF\xAA
\xAA\xFF\xAA\xAA\xFF\xAA
\xAA\xFF\xAA\xAA\xFF\xAA\xAA\xFF\xAA

# Insert valid hex strings, lower case
statement ok
DELETE FROM blobs

statement ok
INSERT INTO blobs VALUES('\xaa\xff\xaa'), ('\xaa\xff\xaa\xaa\xff\xaa'), ('\xaa\xff\xaa\xaa\xff\xaa\xaa\xff\xaa')

query T
SELECT * FROM blobs
----
\xAA\xFF\xAA
\xAA\xFF\xAA\xAA\xFF\xAA
\xAA\xFF\xAA\xAA\xFF\xAA\xAA\xFF\xAA

statement ok
checkpoint

query I
SELECT lower(compression)='${compression}' FROM pragma_storage_info('blobs') WHERE segment_type ILIKE 'BLOB' LIMIT 1
----
1

# Insert valid hex strings with number and letters
statement ok
DELETE FROM blobs

statement ok
INSERT INTO blobs VALUES('\xaa1199'), ('\xaa1199aa1199'), ('\xaa1199aa1199aa1199')

query T
SELECT * FROM blobs
----
\xAA1199
\xAA1199aa1199
\xAA1199aa1199aa1199

# Insert invalid hex strings (invalid hex chars: G, H, I)
statement error
INSERT INTO blobs VALUES('\xGA\xFF\xAA')

# Insert invalid hex strings (odd # of chars)
statement error
INSERT INTO blobs VALUES('\xA')

statement error
INSERT INTO blobs VALUES('\xAA\xA')

statement error
INSERT INTO blobs VALUES('blablabla\x')

statement ok
checkpoint

query I
SELECT lower(compression)='${compression}' FROM pragma_storage_info('blobs') WHERE segment_type ILIKE 'BLOB' LIMIT 1
----
1

statement ok
CREATE TABLE blob_empty (b BYTEA);

statement ok
INSERT INTO blob_empty VALUES(''), (''::BLOB)

statement ok
INSERT INTO blob_empty VALUES(NULL), (NULL::BLOB)

query T
SELECT * FROM blob_empty
----
(empty)
(empty)
NULL
NULL

# FSST will get skipped for only empty/null strings
query I
SELECT lower(compression)!='fsst' FROM pragma_storage_info('blob_empty') WHERE segment_type ILIKE 'BLOB' LIMIT 1
----
1

statement ok
DROP TABLE blobs;

statement ok
DROP TABLE blob_empty;

endloop

endloop