# name: test/sql/storage/buffer_manager.test_slow
# description: Test that the buffer manager correctly frees any memory we use
# group: [storage]

require skip_reload

load

statement ok
PRAGMA temp_directory=''

statement ok
PRAGMA threads=1

statement ok
PRAGMA memory_limit='2MB'

# streaming results do not use any memory
query II
SELECT MIN(i), MAX(i) FROM range(1000001) tbl(i)
----
0	1000000

# increase memory limit 10MB because we always partition data in GROUP BY queries now (for potential out-of-core)
statement ok
PRAGMA memory_limit='10MB'

# we can group by 9K integers (fits into one block of 256KB)
statement ok
SELECT i, MIN(i), MAX(i) FROM range(9000) tbl(i) GROUP BY i

# 1M integers is too much -> does not fit into 1MB
statement error
SELECT i, MIN(i), MAX(i) FROM range(1000000) tbl(i) GROUP BY i

# we can group by 9K integers a bunch of times -> memory should be released between queries
loop i 0 10

statement ok
SELECT i, MIN(i), MAX(i) FROM range(9000) tbl(i) GROUP BY i

endloop

# set the memory limit back to 2MB again, no more GROUP BY's in this test
statement ok
PRAGMA memory_limit='2MB'

# we can create a single table with 10K integers
statement ok
CREATE TABLE t1 AS SELECT * FROM range(10000) tbl(i)

# we can't create a table with 1M integers: not enough memory!
statement error
CREATE TABLE t2 AS SELECT * FROM range(1000000) tbl(i)

# if we drop the table, we can re-use any memory that the table took up (i.e. the memory gets released again)
loop i 0 10

statement ok
DROP TABLE t1;

statement ok
CREATE TABLE t1 AS SELECT * FROM range(10000) tbl(i)

endloop

# same with strings
loop i 0 10

statement ok
DROP TABLE t1;

statement ok
CREATE TABLE t1 AS SELECT i::VARCHAR FROM range(10000) tbl(i)

endloop
