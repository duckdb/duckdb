# name: test/sql/storage/optimistic_write/optimistic_write_alter_type.test_slow
# description: Test optimistic write with alter type in transaction-local storage
# group: [optimistic_write]

# FIXME: for smaller block sizes (16KB) the database size does not stabilize in the loop, instead,
# FIXME: it grows very slowly (only investigated up to 40 iterations)
require block_size 262144

load __TEST_DIR__/optimistic_write_alter_type.db

statement ok
CREATE TABLE test (a INTEGER);

statement ok
BEGIN TRANSACTION

statement ok
INSERT INTO test SELECT i FROM range(1000000) tbl(i)

statement ok
ALTER TABLE test ALTER a SET TYPE BIGINT USING a+1

statement ok
COMMIT

query I
SELECT SUM(a) FROM test
----
500000500000

restart

query I
SELECT SUM(a) FROM test
----
500000500000

statement ok
BEGIN TRANSACTION

statement ok
INSERT INTO test SELECT i FROM range(1000000) t(i)

statement ok
ALTER TABLE test ALTER a SET TYPE VARCHAR USING concat('hello', a)

statement ok
ROLLBACK

query I
SELECT SUM(a) FROM test
----
500000500000

require skip_reload

# ensure the alter type does not lead to leaking blocks

# for smaller block sizes (16KB) the total blocks alternate between a few values in the loop,
# therefore, we need to compare to a range of total block counts
statement ok
CREATE TABLE total_blocks_tbl AS SELECT total_blocks FROM pragma_database_size();

loop i 0 10

statement ok
DROP TABLE test

statement ok
CREATE TABLE test (a INTEGER);

statement ok
BEGIN TRANSACTION

statement ok
INSERT INTO test SELECT i FROM range(1000000) tbl(i)

statement ok
ALTER TABLE test ALTER a SET TYPE BIGINT USING a+1

statement ok
COMMIT

query I
SELECT SUM(a) FROM test
----
500000500000

# ensure that the total blocks don't exceed the total blocks after the first iteration
# by more than 1.2

query I
SELECT CASE WHEN ${i} = 0 THEN True
	WHEN current.total_blocks <= total_blocks_tbl.total_blocks * 1.2 THEN True
	ELSE False END
FROM pragma_database_size() AS current, total_blocks_tbl;
----
1

# adjust total_blocks_tbl once to the count after the first iteration

statement ok
UPDATE total_blocks_tbl SET total_blocks = (
	SELECT CASE WHEN ${i} = 0 THEN (SELECT current.total_blocks FROM pragma_database_size() AS current)
		ELSE (total_blocks) END);

statement ok
CHECKPOINT;

statement ok
CHECKPOINT;

endloop
