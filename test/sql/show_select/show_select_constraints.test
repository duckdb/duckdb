# name: test/sql/show_select/show_select_constraints.test
# description: Test show select constraints
# group: [show_select]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers(c1 INTEGER PRIMARY KEY, c2 INT NOT NULL, c3 INT DEFAULT 42, c4 INT UNIQUE, c5 INT);

statement ok
INSERT INTO integers VALUES (42, 42, 42, 42, 42)

statement ok
INSERT INTO integers VALUES (84, 84, 84, 84, 84)

# show on the table directly vs show is identical
query IIIIII nosort describe_result
DESCRIBE SELECT * FROM integers
----

query IIIIII nosort describe_result
DESCRIBE integers
----

# projection
query II
SELECT column_name, key FROM (DESCRIBE SELECT c4, c1 FROM integers)
----
c4	UNI
c1	PRI

# filter
query II
SELECT column_name, key FROM (DESCRIBE SELECT c4 FROM integers WHERE c1=42)
----
c4	UNI

# limit
query II
SELECT column_name, key FROM (DESCRIBE SELECT c4 FROM integers LIMIT 5)
----
c4	UNI

# top n
query II
SELECT column_name, key FROM (DESCRIBE SELECT c4 FROM integers ORDER BY c1 LIMIT 5)
----
c4	UNI

# sample
query II
SELECT column_name, key FROM (DESCRIBE SELECT c4 FROM integers USING SAMPLE 5)
----
c4	UNI

# cross product
query II
SELECT column_name, key FROM (DESCRIBE SELECT c4 FROM integers, (SELECT 84))
----
c4	UNI

# join
query II
SELECT column_name, key FROM (DESCRIBE SELECT t.c1, integers.c1 FROM integers JOIN (SELECT 84 c1) t USING (c1))
----
c1	NULL
c1	PRI

# views
statement ok
CREATE VIEW my_view AS SELECT * FROM integers

query II
SELECT column_name, key FROM (DESCRIBE SELECT c4, c1 FROM my_view)
----
c4	UNI
c1	PRI

# constraint information does not persist through expressions
query II
SELECT column_name, key FROM (DESCRIBE SELECT c4 + 1 AS expr FROM integers LIMIT 5)
----
expr	NULL
