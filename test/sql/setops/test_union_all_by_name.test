# name: test/sql/setops/test_union_all_by_name.test
# description: test union all by name operations
# group: [setops]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE t1 (x INT, y INT);

statement ok
INSERT INTO t1 VALUES (3, 3), (1, 1);

statement ok
CREATE TABLE t2 (y INT, z INT);

statement ok
INSERT INTO t2 VALUES (2, 2), (4, 4);

query III
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2;
----
3	3	NULL
1	1	NULL
NULL	2	2
NULL	4	4

########## test binding
query I
SELECT t1.x FROM t1 UNION ALL BY NAME SELECT x FROM t1 ORDER BY t1.x;
----
1
1
3
3

query I
SELECT x FROM t1 UNION ALL BY NAME SELECT x FROM t1 ORDER BY t1.x;
----
1
1
3
3

query II
(SELECT x FROM t1 UNION ALL SELECT x FROM t1) UNION ALL BY NAME SELECT 5 ORDER BY t1.x;
----
NULL	5
1	NULL
1	NULL
3	NULL
3	NULL

query II
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION ALL BY NAME SELECT 5 ORDER BY y;
----
NULL	5
1	NULL
1	NULL
3	NULL
3	NULL


# Ambiguous name
statement error
SELECT x AS a FROM t1 UNION ALL BY NAME SELECT x AS b FROM t1 ORDER BY t1.x;

# Error: Binder Error: Ambiguous name in ORDER BY!
statement error
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION ALL BY NAME (SELECT z FROM t2 UNION ALL SELECT y FROM t2) ORDER BY y;

query II
(SELECT x FROM t1 UNION ALL SELECT y FROM t1) UNION ALL BY NAME (SELECT z FROM t2 UNION ALL SELECT y FROM t2) ORDER BY t1.y;
----
NULL	2
NULL	4
NULL	2
NULL	4
1	NULL
1	NULL
3	NULL
3	NULL

########## test limit

query III
SELECT 1 UNION ALL BY NAME SELECT * FROM range(2, 100) UNION ALL BY NAME SELECT 999 LIMIT 5;
----
1	NULL	NULL
NULL	2	NULL
NULL	3	NULL
NULL	4	NULL
NULL	5	NULL

########## test order by

query III
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY z DESC;
----
3	3	NULL
1	1	NULL
NULL	4	4
NULL	2	2

query III
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY y;
----
1	1	NULL
NULL	2	2
3	3	NULL
NULL	4	4

query III
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY 3;
----
3	3	NULL
1	1	NULL
NULL	2	2
NULL	4	4

# Error: Binder Error: ORDER term out of range - should be between 1 and 3
statement error
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 ORDER BY 4;

query II
(SELECT x FROM t1 ORDER BY y) UNION ALL BY NAME (SELECT y FROM t2 ORDER BY z) ORDER BY x DESC;
----
NULL	2
NULL	4
3	NULL
1	NULL

########## multi set operations

query IIII
SELECT 1 UNION ALL BY NAME SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2;
----
1	NULL	NULL	NULL
NULL	3	3	NULL
NULL	1	1	NULL
NULL	NULL	2	2
NULL	NULL	4	4

# need to sort because our hash-based union does not preserve order
query IIII sort
SELECT 1, 2 FROM t1 UNION SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2;
----
1	1	NULL	NULL
1	2	NULL	NULL
3	3	NULL	NULL
NULL	NULL	2	2
NULL	NULL	4	4

# Error: Binder Error: Set operations can only apply to expressions with the same 
# number of result columns
statement error
SELECT 1, 2 FROM t1 UNION (SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2);

query III
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 INTERSECT SELECT 2, 2 FROM t1;
----
3	3	NULL
1	1	NULL
NULL	2	2

#Error: Binder Error: Set operations can only apply to expressions with the same number of result columns
statement error
SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2 EXCEPT SELECT 2, 2 FROM t1;

# have to sort here too because EXCEPT does not preserve order
query III sort
(SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2) EXCEPT SELECT NULL, 2, 2 FROM t1;
----
1	1	NULL
3	3	NULL
NULL	4	4


########## same name in select list

# Error: Binder Error: UNION ALL BY NAME operation doesn't support same name in SELECT list
statement error
SELECT x, x FROM t1 UNION ALL BY NAME SELECT y FROM t2;

query III
SELECT x, x as a FROM t1 UNION ALL BY NAME SELECT y FROM t2;
----
3	3	NULL
1	1	NULL
NULL	NULL	2
NULL	NULL	4

########## alias name in select list

query II
SELECT x as a FROM t1 UNION ALL BY NAME SELECT x FROM t1;
----
3	NULL
1	NULL
NULL	3
NULL	1


########## type cast

query I
SELECT DISTINCT ON(x) x FROM (SELECT 1 as x UNION ALL BY NAME SELECT '1' as x);
----
1

# have to sort here too because distinct on is hash-based, does not preserve order
query I sort
SELECT DISTINCT ON(x) x FROM (SELECT 1 as x UNION ALL BY NAME SELECT 1.1 as x);
----
1
1.1


########## create table as select

statement ok
CREATE TABLE new_table AS (SELECT x, y FROM t1 UNION ALL BY NAME SELECT y, z FROM t2);

query III
SELECT * FROM new_table;
----
3	3	NULL
1	1	NULL
NULL	2	2
NULL	4	4



