# name: test/sql/projection/select_star_replace.test
# description: SELECT * REPLACE
# group: [projection]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers(i INTEGER, j INTEGER, k INTEGER)

statement ok
INSERT INTO integers VALUES (1, 2, 3)

query III
SELECT * REPLACE i+100 AS i FROM integers
----
101	2	3

query IIII
SELECT * EXCLUDE (j, k) REPLACE (i+100 AS i), * EXCLUDE (j) REPLACE (i+100 AS i), * EXCLUDE (j, k) REPLACE (i+101 AS i) FROM integers
----
101	101	3	102

query III
SELECT * REPLACE (i+100 AS i, j+200 AS "J") FROM integers
----
101	202	3

query III
SELECT integers.* REPLACE (i+100 AS i) FROM integers
----
101	2	3

# duplicate entry in replace list
statement error
SELECT * REPLACE (i+100 AS i, i+200 AS i) FROM integers
----
<REGEX>:.*Parser Error.*Duplicate entry.*

# replace name that does not exist
statement error
SELECT * REPLACE (i+100 AS blabla) FROM integers
----
<REGEX>:.*Binder Error.*not found in FROM clause.*

statement error
SELECT integers.* REPLACE (i+100 AS blabla) FROM integers
----
<REGEX>:.*Binder Error.*not found in integers.*

# column cannot occur in both exclude and replace list
statement error
SELECT * EXCLUDE (i) REPLACE (i+100 AS i) FROM integers
----
<REGEX>:.*Parser Error: Column "i" cannot occur in both EXCLUDE and REPLACE list

-- Test: REPLACE with quoted string constant (ColLabel parser support)
statement ok
CREATE TABLE test_star(id INTEGER, col1 VARCHAR, col2 VARCHAR, col3 INTEGER);

statement ok
INSERT INTO test_star VALUES (1, 'val1', 'val2', 42);

query IIII
SELECT test_star.* REPLACE ('quoted_val' AS quoted_val) FROM test_star;
----
id	quoted_val	col2	col3
1	quoted_val	val2	42
-- 1

-- Test: REPLACE with quoted string and arithmetic expression (binding verification)
query IIII
SELECT test_star.* REPLACE (col1 AS 'computed: ' || (id * 2)::VARCHAR) FROM test_star;
----
id	?column?	col2	col3
1	computed: 2	val2	42
-- 1

-- Test: Full combo EXCLUDE + REPLACE (arithmetic) + RENAME (unified HandleRename, qualified)
query III
SELECT test_star.* EXCLUDE (col2) REPLACE (col1 AS id * 2) RENAME (col3 AS final3) FROM test_star;
----
id	?column?	final3
1	2	42
-- 1

-- Test: Combo with quoted REPLACE, EXCLUDE, and qualified RENAME (parser + binder integration)
query III
SELECT test_star.* EXCLUDE (col2) REPLACE (col1 AS 'replaced: ' || col3::VARCHAR) RENAME (id AS renamed_id, col3 AS final3) FROM test_star;
----
renamed_id	?column?	final3
1	replaced: 42	42
-- 1*
