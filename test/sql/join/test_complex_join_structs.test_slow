# name: test/sql/join/test_complex_join_structs.test_slow
# description: Test complex joins and count distincts with structs
# group: [join]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE structs AS SELECT i id, {'i': i} s, i%3 j FROM generate_series(0,99,1) tbl(i), generate_series(0,1,1);

statement ok
CREATE TABLE other_table AS SELECT i id, i%3 j FROM generate_series(0,99,1) tbl(i) WHERE i%2=0;

# count distinct
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs;
----
200	200	100	100

#count distinct with a filter
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs WHERE id%2<>0;
----
100	100	50	50

# count distinct with a join
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs JOIN other_table USING (id);
----
100	100	50	50

query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs LEFT JOIN other_table USING (id);
----
200	200	100	100

# count distinct with a complex join condition
query IIIII
SELECT structs.j, COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id)
FROM structs
LEFT JOIN other_table o1 USING (id)
CROSS JOIN other_table
WHERE ((structs.j IN (0, 1) AND (structs.id=other_table.id)) OR (structs.j=2 AND structs.id+1=other_table.id))
GROUP BY ALL
ORDER BY ALL
----
0	34	34	17	17
1	32	32	16	16
2	32	32	16	16

# now with lists
statement ok
DROP TABLE structs;

statement ok
DROP TABLE other_table

statement ok
CREATE TABLE structs AS SELECT i id, {'i': [i, i + 1, i + 2], 'j': CASE WHEN i%4=1 THEN NULL ELSE [i, i] END} s, i%3 j FROM generate_series(0,99,1) tbl(i), generate_series(0,1,1);

statement ok
CREATE TABLE other_table AS SELECT i id, i%3 j FROM generate_series(0,99,1) tbl(i) WHERE i%2=0;

# count distinct
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs;
----
200	200	100	100

#count distinct with a filter
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs WHERE id%2<>0;
----
100	100	50	50

# count distinct with a join
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs JOIN other_table USING (id);
----
100	100	50	50

query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs LEFT JOIN other_table USING (id);
----
200	200	100	100

# count distinct with a complex join condition
query IIIII
SELECT structs.j, COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id)
FROM structs
LEFT JOIN other_table o1 USING (id)
CROSS JOIN other_table
WHERE ((structs.j IN (0, 1) AND (structs.id=other_table.id)) OR (structs.j=2 AND structs.id+1=other_table.id))
GROUP BY ALL
ORDER BY ALL
----
0	34	34	17	17
1	32	32	16	16
2	32	32	16	16

# more complex nested structs
statement ok
DROP TABLE structs;

statement ok
DROP TABLE other_table

statement ok
CREATE TABLE structs AS SELECT i id, {'i': {'j': [i + 1, i + 2, i + 3], 'k': i}, 'l': NULL} s, i%3 j FROM generate_series(0,99,1) tbl(i), generate_series(0,1,1);

statement ok
CREATE TABLE other_table AS SELECT i id, i%3 j FROM generate_series(0,99,1) tbl(i) WHERE i%2=0;

# count distinct
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs;
----
200	200	100	100

#count distinct with a filter
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs WHERE id%2<>0;
----
100	100	50	50

# count distinct with a join
query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs JOIN other_table USING (id);
----
100	100	50	50

query IIII
SELECT COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id) FROM structs LEFT JOIN other_table USING (id);
----
200	200	100	100

# count distinct with a complex join condition
query IIIII
SELECT structs.j, COUNT(*), COUNT(s), COUNT(DISTINCT s), COUNT(DISTINCT structs.id)
FROM structs
LEFT JOIN other_table o1 USING (id)
CROSS JOIN other_table
WHERE ((structs.j IN (0, 1) AND (structs.id=other_table.id)) OR (structs.j=2 AND structs.id+1=other_table.id))
GROUP BY ALL
ORDER BY ALL
----
0	34	34	17	17
1	32	32	16	16
2	32	32	16	16
