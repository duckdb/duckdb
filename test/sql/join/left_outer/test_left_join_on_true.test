# name: test/sql/join/left_outer/test_left_join_on_true.test
# description: Test ON TRUE join conditions
# group: [left_outer]

query II
WITH t AS (
  SELECT 1 AS r, [{n:1}, {n:2}] AS s
  UNION
  SELECT 2 AS r, [{n:3}, {n:4}] AS s
)
SELECT r, s1.s.n FROM t
LEFT JOIN UNNEST(s) AS s1(s) ON TRUE
ORDER BY 1, 2
----
1	1
1	2
2	3
2	4

query II
WITH t AS (
  SELECT 1 AS r, ARRAY[1, 2, 3] AS a
  UNION SELECT 2 AS r, ARRAY[4] AS a
  UNION SELECT 4 AS r, ARRAY[] AS a
)
SELECT r, a.value
FROM t
LEFT JOIN UNNEST(a) AS a(value) ON TRUE
ORDER BY 1, 2
----
1	1
1	2
1	3
2	4
4	NULL

# more than one condition

query II
WITH t AS (
  SELECT 1 AS r, ARRAY[1, 2, 3] AS a
  UNION SELECT 2 AS r, ARRAY[4] AS a
  UNION SELECT 4 AS r, ARRAY[]::INTEGER[] AS a
)
SELECT r, a.value
FROM t
LEFT JOIN UNNEST(a) AS a(value) ON TRUE AND a.value IS NULL
ORDER BY 1, 2
----
1	NULL
2	NULL
4	NULL

query II
WITH t AS (
  SELECT 1 AS r, ARRAY[1, 2, 3] AS a
  UNION SELECT 2 AS r, ARRAY[4] AS a
  UNION SELECT 4 AS r, ARRAY[] AS a
)
SELECT r, a.value
FROM t
LEFT JOIN UNNEST(a) AS a(value) ON (1 = 1) AND TRUE AND list_contains([2, 3], 2)
ORDER BY 1, 2
----
1	1
1	2
1	3
2	4
4	NULL

# non-true constant expressions cause a binder error

statement error
WITH t AS (
  SELECT 1 AS r, [{n:1}, {n:2}] AS s
  UNION
  SELECT 2 AS r, [{n:3}, {n:4}] AS s
)
SELECT r, s1.s.n FROM t
LEFT JOIN UNNEST(s) AS s1(s) ON FALSE
----
Binder Error: Join condition for non-inner LATERAL JOIN must be a comparison between the left and right side

# test non-lateral left joins

statement ok
CREATE TABLE integers(i INTEGER, j INTEGER)

statement ok
INSERT INTO integers VALUES (1, 2), (2, 3), (3, 4)

statement ok
CREATE TABLE integers2(k INTEGER, l INTEGER)

statement ok
INSERT INTO integers2 VALUES (1, 10), (2, 20)

query IIII
SELECT * FROM integers LEFT OUTER JOIN integers2 ON TRUE AND integers.i=integers2.k AND TRUE ORDER BY i
----
1	2	1	10
2	3	2	20
3	4	NULL	NULL

query IIII
SELECT * FROM integers LEFT OUTER JOIN integers2 ON TRUE AND integers.i=integers2.k AND FALSE ORDER BY i
----
1	2	NULL	NULL
2	3	NULL	NULL
3	4	NULL	NULL

# this is just a cross product

query IIII
SELECT * FROM integers LEFT OUTER JOIN integers2 ON TRUE ORDER BY i
----
1	2	1	10
1	2	2	20
2	3	1	10
2	3	2	20
3	4	1	10
3	4	2	20


