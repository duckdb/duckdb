# name: test/sql/pragma/profiling/test_custom_profiling_optimizer.test
# description: Test profiling the optimizer.
# group: [profiling]

require json

statement ok
PRAGMA enable_verification;

statement ok
PRAGMA enable_profiling = 'json';

statement ok
PRAGMA profiling_output = '__TEST_DIR__/profiling_output.json';

statement ok
PRAGMA custom_profiling_settings='{"ALL_OPTIMIZERS": "true"}'

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

statement ok
PRAGMA disable_profiling;

query I
SELECT * FROM (
	SELECT unnest(res) str FROM (
		SELECT current_setting('custom_profiling_settings') as raw_setting,
		raw_setting.trim('{}') AS setting,
		string_split(setting, ', ') AS res
	)
) WHERE '"true"' NOT in str
ORDER BY ALL
----

statement ok
PRAGMA custom_profiling_settings='{}'

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

query I rowsort
SELECT unnest(res) FROM (
	SELECT current_setting('custom_profiling_settings') AS raw_setting,
	raw_setting.trim('{}') AS setting,
	string_split(setting, ', ') AS res
)
----
(empty)

statement ok
PRAGMA custom_profiling_settings='{"OPTIMIZER_JOIN_ORDER": "true"}'

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

statement ok
PRAGMA disable_profiling;

query I rowsort
SELECT unnest(res) FROM (
	SELECT current_setting('custom_profiling_settings') AS raw_setting,
	raw_setting.trim('{}') AS setting,
	string_split(setting, ', ') AS res
) ORDER BY ALL;
----
"OPTIMIZER_JOIN_ORDER": "true"

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profiling_output.json';

query I
SELECT 
	CASE WHEN optimizer_join_order > 0 THEN 'true'
    ELSE 'false' END
FROM metrics_output;
----
true

statement ok
SET disabled_optimizers = 'JOIN_ORDER';

statement ok
PRAGMA custom_profiling_settings='{"OPTIMIZER_JOIN_ORDER": "true"}';

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

query I rowsort
SELECT unnest(res) FROM (
	SELECT current_setting('custom_profiling_settings') AS raw_setting,
	raw_setting.trim('{}') AS setting,
	string_split(setting, ', ') AS res
) ORDER BY ALL
----
(empty)

statement ok
PRAGMA custom_profiling_settings='{"CUMULATIVE_OPTIMIZER_TIMING": "true"}';

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

statement ok
PRAGMA disable_profiling;

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profiling_output.json';

query I
SELECT 
	CASE WHEN cumulative_optimizer_timing > 0 THEN 'true'
    ELSE 'false' END
FROM metrics_output;
----
true

# All phase timings must be collected when using detailed profiling mode.

statement ok
RESET custom_profiling_settings;

statement ok
SET profiling_mode = 'detailed';

statement ok
PRAGMA enable_profiling;

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

query I
SELECT * FROM (
	SELECT unnest(res) str FROM (
		SELECT current_setting('custom_profiling_settings') AS raw_setting,
		raw_setting.trim('{}') AS setting,
		string_split(setting, ', ') AS res
	)
)
WHERE '"true"' NOT IN str
ORDER BY ALL
----

statement ok
RESET custom_profiling_settings;

statement ok
PRAGMA profiling_mode = 'standard';

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

query I
SELECT unnest(res) FROM (
	SELECT current_setting('custom_profiling_settings') AS raw_setting,
	raw_setting.trim('{}') AS setting,
	string_split(setting, ', ') AS res
) ORDER BY ALL;
----
"BLOCKED_THREAD_TIME": "true"
"CPU_TIME": "true"
"CUMULATIVE_CARDINALITY": "true"
"CUMULATIVE_ROWS_SCANNED": "true"
"EXTRA_INFO": "true"
"LATENCY": "true"
"OPERATOR_CARDINALITY": "true"
"OPERATOR_NAME": "true"
"OPERATOR_ROWS_SCANNED": "true"
"OPERATOR_TIMING": "true"
"OPERATOR_TYPE": "true"
"QUERY_NAME": "true"
"RESULT_SET_SIZE": "true"
"ROWS_RETURNED": "true"
