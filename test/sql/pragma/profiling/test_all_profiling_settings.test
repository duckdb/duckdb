# name: test/sql/pragma/profiling/test_all_profiling_settings.test
# description: Test all settings profiling settings.
# group: [profiling]

# This file is automatically generated by scripts/generate_metric_enums.py
# Do not edit this file manually, your changes will be overwritten

require json

statement ok
PRAGMA enable_profiling = 'json';

statement ok
PRAGMA profiling_output = '__TEST_DIR__/profiling_output.json';

statement ok
SET profiling_mode='all';

statement ok
SELECT unnest(['Maia', 'Thijs', 'Mark', 'Hannes', 'Tom', 'Max', 'Carlo', 'Sam', 'Tania']) AS names ORDER BY random();

statement ok
PRAGMA disable_profiling;

query I
SELECT unnest(res) FROM (
    SELECT current_setting('custom_profiling_settings') AS raw_setting,
    raw_setting.trim('{}') AS setting,
    string_split(setting, ', ') AS res
) ORDER BY ALL;
----
"ALL_OPTIMIZERS": "true"
"ATTACH_LOAD_STORAGE_LATENCY": "true"
"ATTACH_REPLAY_WAL_LATENCY": "true"
"BLOCKED_THREAD_TIME": "true"
"CHECKPOINT_LATENCY": "true"
"COMMIT_WRITE_WAL_LATENCY": "true"
"CPU_TIME": "true"
"CUMULATIVE_CARDINALITY": "true"
"CUMULATIVE_OPTIMIZER_TIMING": "true"
"CUMULATIVE_ROWS_SCANNED": "true"
"EXTRA_INFO": "true"
"LATENCY": "true"
"OPERATOR_CARDINALITY": "true"
"OPERATOR_NAME": "true"
"OPERATOR_ROWS_SCANNED": "true"
"OPERATOR_TIMING": "true"
"OPERATOR_TYPE": "true"
"OPTIMIZER_BUILD_SIDE_PROBE_SIDE": "true"
"OPTIMIZER_COLUMN_LIFETIME": "true"
"OPTIMIZER_COMMON_AGGREGATE": "true"
"OPTIMIZER_COMMON_SUBEXPRESSIONS": "true"
"OPTIMIZER_COMMON_SUBPLAN": "true"
"OPTIMIZER_COMPRESSED_MATERIALIZATION": "true"
"OPTIMIZER_CTE_FILTER_PUSHER": "true"
"OPTIMIZER_CTE_INLINING": "true"
"OPTIMIZER_DELIMINATOR": "true"
"OPTIMIZER_DUPLICATE_GROUPS": "true"
"OPTIMIZER_EMPTY_RESULT_PULLUP": "true"
"OPTIMIZER_EXPRESSION_REWRITER": "true"
"OPTIMIZER_EXTENSION": "true"
"OPTIMIZER_FILTER_PULLUP": "true"
"OPTIMIZER_FILTER_PUSHDOWN": "true"
"OPTIMIZER_IN_CLAUSE": "true"
"OPTIMIZER_JOIN_FILTER_PUSHDOWN": "true"
"OPTIMIZER_JOIN_ORDER": "true"
"OPTIMIZER_LATE_MATERIALIZATION": "true"
"OPTIMIZER_LIMIT_PUSHDOWN": "true"
"OPTIMIZER_MATERIALIZED_CTE": "true"
"OPTIMIZER_REGEX_RANGE": "true"
"OPTIMIZER_REORDER_FILTER": "true"
"OPTIMIZER_SAMPLING_PUSHDOWN": "true"
"OPTIMIZER_STATISTICS_PROPAGATION": "true"
"OPTIMIZER_SUM_REWRITER": "true"
"OPTIMIZER_TOP_N": "true"
"OPTIMIZER_TOP_N_WINDOW_ELIMINATION": "true"
"OPTIMIZER_UNNEST_REWRITER": "true"
"OPTIMIZER_UNUSED_COLUMNS": "true"
"PHYSICAL_PLANNER": "true"
"PHYSICAL_PLANNER_COLUMN_BINDING": "true"
"PHYSICAL_PLANNER_CREATE_PLAN": "true"
"PHYSICAL_PLANNER_RESOLVE_TYPES": "true"
"PLANNER": "true"
"PLANNER_BINDING": "true"
"QUERY_NAME": "true"
"RESULT_SET_SIZE": "true"
"ROWS_RETURNED": "true"
"SYSTEM_PEAK_BUFFER_MEMORY": "true"
"SYSTEM_PEAK_TEMP_DIR_SIZE": "true"
"TOTAL_BYTES_READ": "true"
"TOTAL_BYTES_WRITTEN": "true"
"WAITING_TO_ATTACH_LATENCY": "true"
"WAL_REPLAY_ENTRY_COUNT": "true"

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profiling_output.json';

statement ok
SELECT cpu_time, extra_info, rows_returned, latency FROM metrics_output;

