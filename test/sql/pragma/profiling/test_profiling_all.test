# name: test/sql/pragma/profiling/test_profiling_all.test
# description: Test profiling all operator types.
# group: [profiling]

require json

require noforcestorage

require skip_reload

statement ok
PRAGMA profiling_output = '__TEST_DIR__/profile_attach.json';

# Test ATTACH.

statement ok
PRAGMA enable_profiling = 'json';

statement ok
SET profiling_coverage='ALL';

statement ok
ATTACH '__TEST_DIR__/profile_attach.db';

statement ok
PRAGMA disable_profiling;

statement ok
SET profiling_coverage='SELECT';

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profile_attach.json';

query II
SELECT latency != 0, contains(query_name, 'ATTACH') FROM metrics_output;
----
true	true

# Test CREATE TABLE.

statement ok
PRAGMA enable_profiling = 'json';

statement ok
SET profiling_coverage='ALL';

statement ok
CREATE TABLE profile_attach.tbl AS SELECT range AS id FROM range(10000);

statement ok
PRAGMA disable_profiling;

statement ok
SET profiling_coverage='SELECT';

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profile_attach.json';

query II
SELECT latency != 0, contains(query_name, 'CREATE TABLE') FROM metrics_output;
----
true	true

# Test INSERT.

statement ok
PRAGMA enable_profiling = 'json';

statement ok
SET profiling_coverage='ALL';

statement ok
INSERT INTO profile_attach.tbl SELECT range + 20000 FROM range(10000);

statement ok
PRAGMA disable_profiling;

statement ok
SET profiling_coverage='SELECT';

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profile_attach.json';

query II
SELECT latency != 0, contains(query_name, 'INSERT INTO') FROM metrics_output;
----
true	true

# Test CREATE INDEX.

statement ok
PRAGMA enable_profiling = 'json';

statement ok
SET profiling_coverage='ALL';

statement ok
CREATE INDEX idx ON profile_attach.tbl(id);

statement ok
PRAGMA disable_profiling;

statement ok
SET profiling_coverage='SELECT';

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profile_attach.json';

query II
SELECT latency != 0, contains(query_name, 'CREATE INDEX') FROM metrics_output;
----
true	true

# Test DETACH.

statement ok
PRAGMA enable_profiling = 'json';

statement ok
SET profiling_coverage='ALL';

statement ok
DETACH profile_attach;

statement ok
PRAGMA disable_profiling;

statement ok
SET profiling_coverage='SELECT';

statement ok
CREATE OR REPLACE TABLE metrics_output AS SELECT * FROM '__TEST_DIR__/profile_attach.json';

query II
SELECT latency != 0, contains(query_name, 'DETACH') FROM metrics_output;
----
true	true
