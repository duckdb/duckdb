# name: test/sql/attach/attach_storage_version.test
# description: Tests attaching database files with different block allocation sizes.
# group: [attach]

statement ok
PRAGMA enable_verification

statement ok
ATTACH '__TEST_DIR__/version_1_2_0.db' (STORAGE_VERSION 'v1.2.0');

# exposed through tags
query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='version_1_2_0'
----
v1.2.0+

statement ok
DETACH version_1_2_0

# cannot downgrade storage version
statement error
ATTACH '__TEST_DIR__/version_1_2_0.db' (STORAGE_VERSION 'v1.0.0');
----
The storage version of an existing database cannot be lowered

# unknown storage version
statement error
ATTACH '__TEST_DIR__/version_1_2_0.db' (STORAGE_VERSION 'non_existant');
----
not a known DuckDB version

# we can open it with the current version
statement ok
ATTACH '__TEST_DIR__/version_1_2_0.db' (STORAGE_VERSION 'v1.2.0');

query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='version_1_2_0'
----
v1.2.0+

statement ok
DETACH version_1_2_0

# we can also open it without specifying the version at this point
# the version will be loaded from the file
statement ok
ATTACH '__TEST_DIR__/version_1_2_0.db';

query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='version_1_2_0'
----
v1.2.0+

statement ok
DETACH version_1_2_0

statement ok
set storage_compatibility_version='v0.10.2'

# attach a database with the default compatibility version
statement ok
ATTACH '__TEST_DIR__/default_version.db';

statement ok
CREATE TABLE default_version.tbl(i VARCHAR);

# check the default compat version
query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='default_version'
----
v1.0.0+

statement ok
DETACH default_version

# upgrade the database
statement ok
ATTACH '__TEST_DIR__/default_version.db' (STORAGE_VERSION 'v1.2.0');

# we have upgraded the tag now
query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='default_version'
----
v1.2.0+

statement ok
SET force_compression = 'zstd';

statement ok
INSERT INTO default_version.tbl VALUES ('abcd'), ('efgh'), ('hello'), ('world'), (NULL);

statement ok
CHECKPOINT default_version

statement ok
DETACH default_version

# we can attach the database again (without specifying the default)
statement ok
ATTACH '__TEST_DIR__/default_version.db'

# the upgraded tag is stored in the database file
query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='default_version'
----
v1.2.0+

query I
FROM default_version.tbl
----
abcd
efgh
hello
world
NULL

statement ok
DETACH default_version

# we can also attach it by specifying v1.2.0 explicitly
statement ok
ATTACH '__TEST_DIR__/default_version.db' (STORAGE_VERSION 'v1.2.0')

query I
FROM default_version.tbl
----
abcd
efgh
hello
world
NULL

statement ok
DETACH default_version

# but not by specifying a lower version anymore at this point
statement error
ATTACH '__TEST_DIR__/default_version.db' (STORAGE_VERSION 'v1.0.0')
----
The storage version of an existing database cannot be lowered

# setting the storage_compatibility_version explicitly changes the default storage compatibility version when attaching
statement ok
SET storage_compatibility_version = 'v1.2.0'

statement ok
ATTACH '__TEST_DIR__/modified_default_setting.db';

query I
SELECT tags['storage_version'] FROM duckdb_databases() WHERE database_name='modified_default_setting'
----
v1.2.0+
