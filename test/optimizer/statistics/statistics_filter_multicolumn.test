# name: test/optimizer/statistics/statistics_filter_multicolumn.test
# description: Statistics propagation through filters with multiple columns
# group: [statistics]

statement ok
CREATE TABLE integers AS SELECT * FROM (VALUES (1), (2), (3)) tbl(i);

statement ok
CREATE TABLE integers2 AS SELECT * FROM (VALUES (2), (3), (4)) tbl(i);

statement ok
PRAGMA explain_output = OPTIMIZED_ONLY;

statement ok
PRAGMA enable_verification

# we can statically prove that i=1 is false
query II
EXPLAIN SELECT i=1 FROM integers JOIN integers2 USING (i);
----
logical_opt	<!REGEX>:.*\(i = 1\).*

# same with i=4
query II
EXPLAIN SELECT i=4 FROM integers JOIN integers2 USING (i);
----
logical_opt	<!REGEX>:.*\(i = 4\).*

# and with i>3
query II
EXPLAIN SELECT i>3 FROM integers JOIN integers2 USING (i);
----
logical_opt	<!REGEX>:.*\(i > 3\).*

# and with i<2
query II
EXPLAIN SELECT i<2 FROM integers JOIN integers2 USING (i);
----
logical_opt	<!REGEX>:.*\(i < 2\).*

# NOT the case for i>2
query II
EXPLAIN SELECT i>2 FROM integers JOIN integers2 USING (i);
----
logical_opt	<REGEX>:.*\(i > 2\).*

# OR i<3
query II
EXPLAIN SELECT i<3 FROM integers JOIN integers2 USING (i);
----
logical_opt	<REGEX>:.*\(i < 3\).*

# range joins
# we again join two tables with i:[1, 3] on the left, and i:[2, 4] on the right
# but now on i2.i<i1.i
# the statistics are now: i1.i: [2,3], i2.i: [2, 3]
# so we can prune i=4
query II
EXPLAIN SELECT i2.i=4 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
logical_opt	<!REGEX>:.*\(i = 4\).*

# or i=1
query II
EXPLAIN SELECT i1.i=1 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
logical_opt	<!REGEX>:.*\(i = 1\).*

# but not i=3
query II
EXPLAIN SELECT i2.i=3 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
logical_opt	<REGEX>:.*\(i = 3\).*

# or i=2
query II
EXPLAIN SELECT i1.i=2 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
logical_opt	<REGEX>:.*\(i = 2\).*


query I
SELECT i=1 FROM integers JOIN integers2 USING (i);
----
0
0

query I
SELECT i=4 FROM integers JOIN integers2 USING (i);
----
0
0

query I
SELECT i>3 FROM integers JOIN integers2 USING (i);
----
0
0

query I
SELECT i<2 FROM integers JOIN integers2 USING (i);
----
0
0

query I
SELECT i>2 FROM integers JOIN integers2 USING (i);
----
0
1

query I
SELECT i<3 FROM integers JOIN integers2 USING (i);
----
1
0

query I
SELECT i2.i=4 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
0

query I
SELECT i1.i=1 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
0

query I
SELECT i2.i=3 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
0

query I
SELECT i1.i=2 FROM integers i1 JOIN integers2 i2 ON (i2.i<i1.i);
----
0
