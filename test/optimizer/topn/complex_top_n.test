# name: test/optimizer/topn/complex_top_n.test
# description: topN
# group: [topn]

require skip_reload

require vector_size 1024

statement ok
SELECT SETSEED(0.42);

statement ok
create table CUSTOMERVIEW as select range customer_id, range*random()::INT % 3 as customer_priority from range(1000, 4000); 

statement ok
create table OrderView as select range order_id, ((random()*2::INT)%2)::BOOL order_isExpeditedShipped, range + (random() * 3)::INT order_customerId from range(1000, 4000);

statement ok
create table OrderItemView as select random()*25 orderItem_quantity, range orderItem_orderId from range(1000, 4000);

statement ok
create table CREDITCARDVIEW as select range CREDITCARD_CUSTOMERID from range(1000, 4000); 

query III
WITH CTE AS (
  SELECT J1P, CUSTOMER_PRIORITY, CUSTOMER_ID FROM CUSTOMERVIEW
  LEFT JOIN (
    SELECT ORDER_CUSTOMERID, SUM(ORDERITEMVIEW.ORDERITEM_QUANTITY) AS J1P FROM ORDERVIEW
    LEFT JOIN ORDERITEMVIEW ON (ORDERVIEW.ORDER_ID = ORDERITEMVIEW.ORDERITEM_ORDERID)
    WHERE (ORDERVIEW.ORDER_ISEXPEDITEDSHIPPED IS TRUE)
    GROUP BY ORDERVIEW.ORDER_CUSTOMERID
  ) AS J1J ON (J1J.ORDER_CUSTOMERID = CUSTOMERVIEW.CUSTOMER_ID)
  ORDER BY CUSTOMER_PRIORITY ASC, CUSTOMER_ID ASC
  LIMIT 50 OFFSET 50
) SELECT J1P, Q2P, Q3P FROM CTE
LEFT JOIN (
  SELECT ORDER_CUSTOMERID FROM ORDERVIEW
) AS Q1J ON (Q1J.ORDER_CUSTOMERID = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT CREDITCARD_CUSTOMERID AS Q2P FROM CREDITCARDVIEW
) AS Q2J ON (Q2J.Q2P = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT ORDER_CUSTOMERID Q3P FROM ORDERVIEW
  LEFT JOIN ORDERITEMVIEW ON ORDERVIEW.ORDER_ID = ORDERITEM_ORDERID
) AS Q3J ON (Q3J.Q3P = CTE.CUSTOMER_ID) order by all;
----
285 values hashing to 9b1c4d195c0e3c4de5b190b1ab7b357b

query II
explain WITH CTE AS (
  SELECT J1P, CUSTOMER_PRIORITY, CUSTOMER_ID FROM CUSTOMERVIEW
  LEFT JOIN (
    SELECT ORDER_CUSTOMERID, SUM(ORDERITEMVIEW.ORDERITEM_QUANTITY) AS J1P FROM ORDERVIEW
    LEFT JOIN ORDERITEMVIEW ON (ORDERVIEW.ORDER_ID = ORDERITEMVIEW.ORDERITEM_ORDERID)
    WHERE (ORDERVIEW.ORDER_ISEXPEDITEDSHIPPED IS TRUE)
    GROUP BY ORDERVIEW.ORDER_CUSTOMERID
  ) AS J1J ON (J1J.ORDER_CUSTOMERID = CUSTOMERVIEW.CUSTOMER_ID)
  ORDER BY CUSTOMER_PRIORITY ASC
  LIMIT 50 OFFSET 50
) SELECT J1P, Q2P, Q3P FROM CTE
LEFT JOIN (
  SELECT ORDER_CUSTOMERID FROM ORDERVIEW
) AS Q1J ON (Q1J.ORDER_CUSTOMERID = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT CREDITCARD_CUSTOMERID AS Q2P FROM CREDITCARDVIEW
) AS Q2J ON (Q2J.Q2P = CTE.CUSTOMER_ID)
LEFT JOIN (
  SELECT ORDER_CUSTOMERID Q3P FROM ORDERVIEW
  LEFT JOIN ORDERITEMVIEW ON ORDERVIEW.ORDER_ID = ORDERITEM_ORDERID
) AS Q3J ON (Q3J.Q3P = CTE.CUSTOMER_ID);
----
physical_plan	<REGEX>:.*TOP_N.*
