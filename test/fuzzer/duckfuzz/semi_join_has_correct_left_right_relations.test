# name: test/fuzzer/duckfuzz/semi_join_has_correct_left_right_relations.test
# description: Test that semi joins have correct left/right columns
# group: [duckfuzz]

statement ok
create table t1 as select range a from range(300);

statement ok
create table t2 as select range b from range(500);

statement ok
create table t3 as select range c from range (600);

statement ok
select * from t1, t2 where a = b and a in (select c from t3);

statement ok
create table all_types as select * exclude(small_enum, medium_enum, large_enum) from test_all_types();

statement error
SELECT NULL
FROM   all_types
       	INNER JOIN (SELECT NULL)
             RIGHT JOIN all_types AS ref_2
                 LEFT JOIN all_types AS ref_7
                   INNER JOIN all_types AS ref_8
                   ON (( ref_7.int_array = ref_8.int_array ))
                   ON ( NULL )
                   INNER JOIN all_types AS ref_9
                    ON ( ref_2."varchar" )
               ON (( "Version"() IS NULL ))
       ON ( EXISTS(SELECT ref_7."bit" AS c0
           FROM   all_types AS ref_10
           WHERE  0
           ));
----
<REGEX>:.*Conversion Error:.*

# This one should throw a Conversion Error. However, FilterPullup now pulls up an unsatisfiable join filter,
# * there's a lot of those in this query: "... INNER JOIN ... ON (NULL)"
# so that part of the plan is never executed, and we just get a empty result
query I
SELECT NULL FROM main.all_types AS ref_0 INNER JOIN main.all_types AS ref_1 INNER JOIN main.all_types AS ref_2 ON ((SELECT NULL)) INNER JOIN main.all_types ON ((SELECT NULL)) ON (NULL) INNER JOIN main.all_types AS ref_4 ON (ref_4."varchar") INNER JOIN main.all_types AS ref_5 ON (EXISTS(SELECT 79 AS c0 FROM main.all_types AS ref_6 INNER JOIN main.all_types AS ref_7 INNER JOIN main.all_types ON (NULL) ON ((EXISTS(SELECT ref_2.uint AS c0, ref_4."time" AS c1 FROM main.all_types AS ref_9 WHERE (ref_2."varchar" ~~~ ref_5."varchar")) AND (ref_1."varchar" !~~* ref_7."varchar"))) , (SELECT ref_6.utinyint AS c0, (SELECT bit_or(ubigint) FROM main.all_types) AS c1, ref_5.fixed_varchar_array AS c2, ref_10."union" AS c3 FROM main.all_types AS ref_10 WHERE (ref_2."varchar" !~~* ref_0."varchar") LIMIT 159) AS subq_0 WHERE 0 LIMIT 67)) LEFT JOIN main.all_types AS ref_11 ON ((ref_1."time" = ref_11."time")) LIMIT 115
----


# When we disable FilterPullup, we get the expected error
statement ok
set disabled_optimizers to 'filter_pullup'

statement error
SELECT NULL FROM main.all_types AS ref_0 INNER JOIN main.all_types AS ref_1 INNER JOIN main.all_types AS ref_2 ON ((SELECT NULL)) INNER JOIN main.all_types ON ((SELECT NULL)) ON (NULL) INNER JOIN main.all_types AS ref_4 ON (ref_4."varchar") INNER JOIN main.all_types AS ref_5 ON (EXISTS(SELECT 79 AS c0 FROM main.all_types AS ref_6 INNER JOIN main.all_types AS ref_7 INNER JOIN main.all_types ON (NULL) ON ((EXISTS(SELECT ref_2.uint AS c0, ref_4."time" AS c1 FROM main.all_types AS ref_9 WHERE (ref_2."varchar" ~~~ ref_5."varchar")) AND (ref_1."varchar" !~~* ref_7."varchar"))) , (SELECT ref_6.utinyint AS c0, (SELECT bit_or(ubigint) FROM main.all_types) AS c1, ref_5.fixed_varchar_array AS c2, ref_10."union" AS c3 FROM main.all_types AS ref_10 WHERE (ref_2."varchar" !~~* ref_0."varchar") LIMIT 159) AS subq_0 WHERE 0 LIMIT 67)) LEFT JOIN main.all_types AS ref_11 ON ((ref_1."time" = ref_11."time")) LIMIT 115
----
<REGEX>:.*Conversion Error:.*