# name: test/fuzzer/duckfuzz/duck_fuzz_column_binding_tests.test
# description: test why column bindings fail.
# group: [duckfuzz]

require tpch

require icu

statement ok
create table all_types as select * exclude(small_enum, medium_enum, large_enum) from test_all_types() limit 0;

# https://github.com/duckdb/duckdb-fuzzer/issues/1357
# simplified query
statement ok
SELECT     ref_8.uint AS c0,
           Argmin(Cast(ref_8."timestamp" AS TIMESTAMP), Cast(ref_10."timestamp" AS TIMESTAMP)) OVER (partition BY ref_10."nested_int_array", ref_10."timestamp" ORDER BY ref_8.hugeint)  AS c1
FROM main.all_types AS ref_8
INNER JOIN main.all_types AS ref_9
INNER JOIN main.all_types AS ref_10
ON        ( ref_10.dec38_10 IS NOT NULL)
                      OR         EXISTS
                                 ( SELECT ref_9."float" FROM main.all_types)
ON         ((ref_9."smallint" = ref_8."smallint"))


statement ok
SELECT subq_0.c6 AS c1, subq_0.c14 AS c2, subq_0.c7 AS c4, subq_0.c4 AS c5 FROM (SELECT (SELECT date FROM main.all_types LIMIT 1 OFFSET 6) AS c3, ref_2."time" AS c4, (SELECT uuid FROM main.all_types LIMIT 1 OFFSET 1) AS c5, ref_3.array_of_structs AS c6, CASE  WHEN (((ref_0."varchar" !~~* ref_1."varchar") OR (ref_5."varchar" ~~~ ref_6."varchar"))) THEN (ref_2."bigint") ELSE ref_2."bigint" END AS c7, rtrim(CAST(CASE  WHEN ((((ref_8."varchar" ~~~ ref_2."varchar") AND (ref_2."varchar" ~~~ ref_0."varchar")) OR (1 AND (ref_7."varchar" ~~ ref_2."varchar")))) THEN (ref_8."varchar") ELSE ref_8."varchar" END AS VARCHAR), CAST(ref_2."varchar" AS VARCHAR)) AS c9, ref_8.ubigint AS c14 FROM main.all_types AS ref_0 INNER JOIN main.all_types AS ref_1 INNER JOIN main.all_types AS ref_2 ON ((ref_1.int_array = ref_2.int_array)) ON (((ref_2."varchar" !~~ ref_1."varchar") OR (ref_1.blob IS NOT NULL))) INNER JOIN main.all_types AS ref_3 INNER JOIN main.all_types AS ref_4 RIGHT JOIN main.all_types AS ref_5 ON ((ref_4.dec_18_6 = ref_5.dec_18_6)) ON (ref_5."varchar") LEFT JOIN main.all_types AS ref_6 RIGHT JOIN main.all_types AS ref_7 INNER JOIN main.all_types AS ref_8 ON ((ref_7.timestamp_array = ref_8.timestamp_array)) ON (1) ON (NULL) ON ((ref_0.dec_18_6 = ref_3.dec_18_6)) WHERE (ref_5."varchar" ^@ (SELECT "varchar" FROM main.all_types LIMIT 1 OFFSET 6)) LIMIT 96) AS subq_0 WHERE subq_0.c9;

statement ok
call dbgen(sf=0.1);

# https://github.com/duckdb/duckdb-fuzzer/issues/3240
query I
SELECT NULL FROM (SELECT CAST(COALESCE(ref_3.ps_partkey, ref_4.p_partkey) AS BIGINT) AS c0, ref_0.n_regionkey AS c1, ref_5.r_regionkey AS c2, ref_0.n_comment AS c3 FROM main.nation AS ref_0 LEFT JOIN main.part AS ref_1 ON ((CAST(NULL AS VARCHAR) !~~ ref_0.n_comment)) RIGHT JOIN main.part AS ref_2 ON (((ref_1.p_size IS NOT NULL) AND 1)) INNER JOIN main.partsupp AS ref_3 LEFT JOIN main.part AS ref_4 RIGHT JOIN main.region AS ref_5 RIGHT JOIN main.part AS ref_6 INNER JOIN main.part AS ref_7 ON (EXISTS(SELECT ref_6.p_comment AS c0, ref_8.c_phone AS c1, ref_8.c_phone AS c2, ref_6.p_mfgr AS c3, ref_7.p_partkey AS c4 FROM main.customer AS ref_8 WHERE (((ref_6.p_container ^@ ref_8.c_mktsegment) AND 0) OR (0 AND (ref_8.c_comment ~~ ref_6.p_mfgr) AND EXISTS(SELECT ref_9.l_linestatus AS c0, 30 AS c1 FROM main.lineitem AS ref_9 WHERE ((ref_7.p_type ~~~ ref_9.l_shipmode) AND (ref_6.p_comment !~~* ref_6.p_container)) LIMIT 50))) LIMIT 37)) ON (1) ON ((ref_4.p_type = ref_7.p_name)) ON ((ref_5.r_name ^@ ref_4.p_brand)) ON ((ref_2.p_type ~~* ref_7.p_comment)) WHERE (ref_5.r_name IS NULL) LIMIT 145) AS subq_0 WHERE (("map"() IS NOT NULL) OR ((SELECT p_name FROM main.part LIMIT 1 OFFSET 2) !~~* subq_0.c3) OR (dayofweek(CAST(now() AS TIMESTAMP WITH TIME ZONE)) IS NULL))
----


statement ok
SELECT NULL FROM (SELECT ref_1.o_totalprice AS c0, ref_1.o_totalprice AS c1, 11 AS c2, ref_0.n_regionkey AS c3, ref_0.n_name AS c4, ref_1.o_shippriority AS c5, ref_1.o_orderpriority AS c6 FROM main.nation AS ref_0 INNER JOIN main.orders AS ref_1 ON ((ref_1.o_orderpriority ^@ ref_1.o_comment)) WHERE ((ref_1.o_orderstatus ^@ ref_0.n_name) AND (ref_1.o_comment !~~ (SELECT ps_comment FROM main.partsupp LIMIT 1 OFFSET 68)) AND 1) LIMIT 148) AS subq_0 INNER JOIN main.nation AS ref_2 INNER JOIN main.partsupp AS ref_3 RIGHT JOIN main.customer AS ref_4 ON ((ref_3.ps_comment IS NOT NULL)) LEFT JOIN main.orders AS ref_5 LEFT JOIN main.lineitem AS ref_6 ON ((1 OR (ref_6.l_partkey IS NOT NULL) OR 1)) ON ((ref_3.ps_supplycost = ref_5.o_totalprice)) ON (EXISTS(SELECT ref_4.c_name AS c0, ref_5.o_orderpriority AS c1, ref_5.o_orderpriority AS c2, ref_5.o_orderdate AS c3, subq_1.c0 AS c4, ref_3.ps_suppkey AS c5, 36 AS c6, ref_7.l_commitdate AS c7, ref_3.ps_comment AS c8, subq_1.c2 AS c9 FROM main.lineitem AS ref_7 , (SELECT ref_4.c_phone AS c0, ref_4.c_custkey AS c1, ref_2.n_nationkey AS c2 FROM main.customer AS ref_8 WHERE 0 LIMIT 111) AS subq_1 WHERE (ref_2.n_comment !~~ subq_1.c0) LIMIT 91)) ON ((subq_0.c1 = ref_4.c_acctbal)) RIGHT JOIN main.partsupp AS ref_9 ON ((ref_4.c_mktsegment = ref_9.ps_comment))
