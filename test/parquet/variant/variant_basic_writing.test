# name: test/parquet/variant/variant_basic_writing.test
# group: [variant]

require parquet

require json

# STRUCT(a INTEGER, b INTEGER[])
statement ok
COPY (select
	{
		'a': 42,
		'b': [null, 1, 2]
	}::VARIANT
	from range(10)
) TO '__TEST_DIR__/integer_variant.parquet';

query I
select * from '__TEST_DIR__/integer_variant.parquet';
----
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}
{"a":42,"b":[null,1,2]}

statement ok
COPY (select
	'[["string","iceberg",-34],[-34,null],[],["string","iceberg"],-34]'::JSON::VARIANT
	from range(5)
) TO '__TEST_DIR__/list_of_list_variant.parquet'

query I
select * from '__TEST_DIR__/list_of_list_variant.parquet';
----
[["string","iceberg",-34],[-34,null],[],["string","iceberg"],-34]
[["string","iceberg",-34],[-34,null],[],["string","iceberg"],-34]
[["string","iceberg",-34],[-34,null],[],["string","iceberg"],-34]
[["string","iceberg",-34],[-34,null],[],["string","iceberg"],-34]
[["string","iceberg",-34],[-34,null],[],["string","iceberg"],-34]

statement ok
COPY (
	with cte as (
		FROM (VALUES
			({'a': 21, 'b': NULL}::VARIANT),
			([]::VARIANT),
			(NULL::VARIANT),
			([{'b': True, 'c': 'test'}]::VARIANT),
			('this is a long string'::VARIANT),
			('this is big enough to not be classified as a "short string" by parquet VARIANT'::VARIANT)
		) t(a)
	)
	select a from cte
) TO '__TEST_DIR__/varied_variant.parquet'

query I
select * from '__TEST_DIR__/varied_variant.parquet';
----
{"a":21,"b":null}
[]
NULL
[{"b":true,"c":"test"}]
"this is a long string"
"this is big enough to not be classified as a \"short string\" by parquet VARIANT"

# VARIANT is only supported at the root for now
statement error
COPY (select [123::VARIANT]) TO '__TEST_DIR__/list_of_variant.parquet'
----
Not implemented Error: Unimplemented type for Parquet "VARIANT"

statement ok
create macro data() as table (
	select COLUMNS([
		x for x in (*) if x NOT IN [
			'utinyint',
			'usmallint',
			'uint',
			'ubigint',
			'hugeint',
			'uhugeint',
			'bignum',
			'timestamp_s',
			'timestamp_ms',
			'timestamp_tz',
			'time_tz',
			'interval',
			'bit',
			'dec_4_1', -- Parquet VARIANT doesn't have int16_t DECIMAL
-- Conversion isn't 1-to-1
			'dec_9_4', -- can't roundtrip with json
			'dec_18_6', -- can't roundtrip with json
			'dec38_10', -- can't roundtrip with json
			'blob' -- data is base64-encoded in parquet read
		]
	])::VARIANT as "\0" from test_all_types()
)

statement ok
COPY (
	from data()
) TO '__TEST_DIR__/variant_test_all_types.parquet';

query I nosort expected_res
select IF(VARIANT_TYPEOF(COLUMNS(*)) == 'VARIANT_NULL', NULL, COLUMNS(*)::JSON) from data();
----

query I nosort expected_res
select * from '__TEST_DIR__/variant_test_all_types.parquet';
----
