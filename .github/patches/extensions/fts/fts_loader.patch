diff --git a/extension/fts/fts_extension.cpp b/extension/fts/fts_extension.cpp
index 3cd6e75..4f4d0b2 100644
--- a/extension/fts/fts_extension.cpp
+++ b/extension/fts/fts_extension.cpp
@@ -1,4 +1,3 @@
-#define DUCKDB_EXTENSION_MAIN
 #include "fts_extension.hpp"
 
 #include "duckdb.hpp"
@@ -6,7 +5,7 @@
 #include "duckdb/common/string_util.hpp"
 #include "duckdb/function/pragma_function.hpp"
 #include "duckdb/function/scalar_function.hpp"
-#include "duckdb/main/extension_util.hpp"
+#include "duckdb/main/extension/extension_loader.hpp"
 #include "fts_indexing.hpp"
 #include "libstemmer.h"
 
@@ -46,8 +45,8 @@ static void StemFunction(DataChunk &args, ExpressionState &state, Vector &result
 	    });
 }
 
-static void LoadInternal(DuckDB &db) {
-	auto &db_instance = *db.instance;
+static void LoadInternal(ExtensionLoader &loader) {
+
 	ScalarFunction stem_func("stem", {LogicalType::VARCHAR, LogicalType::VARCHAR}, LogicalType::VARCHAR, StemFunction);
 
 	auto create_fts_index_func =
@@ -63,13 +62,13 @@ static void LoadInternal(DuckDB &db) {
 	auto drop_fts_index_func =
 	    PragmaFunction::PragmaCall("drop_fts_index", FTSIndexing::DropFTSIndexQuery, {LogicalType::VARCHAR});
 
-	ExtensionUtil::RegisterFunction(db_instance, stem_func);
-	ExtensionUtil::RegisterFunction(db_instance, create_fts_index_func);
-	ExtensionUtil::RegisterFunction(db_instance, drop_fts_index_func);
+	loader.RegisterFunction(stem_func);
+	loader.RegisterFunction(create_fts_index_func);
+	loader.RegisterFunction(drop_fts_index_func);
 }
 
-void FtsExtension::Load(DuckDB &db) {
-	LoadInternal(db);
+void FtsExtension::Load(ExtensionLoader &loader) {
+	LoadInternal(loader);
 }
 
 std::string FtsExtension::Name() {
@@ -88,16 +87,8 @@ std::string FtsExtension::Version() const {
 
 extern "C" {
 
-DUCKDB_EXTENSION_API void fts_init(duckdb::DatabaseInstance &db) {
-	duckdb::DuckDB db_wrapper(db);
-	duckdb::LoadInternal(db_wrapper);
+DUCKDB_CPP_EXTENSION_ENTRY(fts, loader) {
+	duckdb::LoadInternal(loader);
 }
 
-DUCKDB_EXTENSION_API const char *fts_version() {
-	return duckdb::DuckDB::LibraryVersion();
-}
 }
-
-#ifndef DUCKDB_EXTENSION_MAIN
-#error DUCKDB_EXTENSION_MAIN not defined
-#endif
diff --git a/extension/fts/include/fts_extension.hpp b/extension/fts/include/fts_extension.hpp
index 389ffd7..048d4ea 100644
--- a/extension/fts/include/fts_extension.hpp
+++ b/extension/fts/include/fts_extension.hpp
@@ -14,7 +14,7 @@ namespace duckdb {
 
 class FtsExtension : public Extension {
 public:
-	void Load(DuckDB &db) override;
+	void Load(ExtensionLoader &loader) override;
 	std::string Name() override;
 	std::string Version() const override;
 };
