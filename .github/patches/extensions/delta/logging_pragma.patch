diff --git a/src/functions/delta_scan/delta_multi_file_reader.cpp b/src/functions/delta_scan/delta_multi_file_reader.cpp
index de3b219..cda479c 100644
--- a/src/functions/delta_scan/delta_multi_file_reader.cpp
+++ b/src/functions/delta_scan/delta_multi_file_reader.cpp
@@ -226,7 +226,7 @@ void DeltaMultiFileReader::FinalizeBind(MultiFileReaderData &reader_data, const
 }
 
 shared_ptr<MultiFileList> DeltaMultiFileReader::CreateFileList(ClientContext &context, const vector<string> &paths,
-                                                               FileGlobOptions options) {
+                                                               const FileGlobInput &glob_input) {
 	if (paths.size() != 1) {
 		throw BinderException("'delta_scan' only supports single path as input");
 	}
diff --git a/src/include/functions/delta_scan/delta_multi_file_reader.hpp b/src/include/functions/delta_scan/delta_multi_file_reader.hpp
index da600ff..d56b7a0 100644
--- a/src/include/functions/delta_scan/delta_multi_file_reader.hpp
+++ b/src/include/functions/delta_scan/delta_multi_file_reader.hpp
@@ -29,7 +29,7 @@ struct DeltaMultiFileReader : public MultiFileReader {
 	static unique_ptr<MultiFileReader> CreateInstance(const TableFunction &table_function);
 	//! Return a DeltaMultiFileList
 	shared_ptr<MultiFileList> CreateFileList(ClientContext &context, const vector<string> &paths,
-	                                         FileGlobOptions options) override;
+	                                         const FileGlobInput &glob_input) override;
 
 	//! Override the regular parquet bind using the MultiFileReader Bind. The bind from these are what DuckDB's file
 	//! readers will try read
