diff --git a/spatial/src/spatial/gdal/functions/st_read.cpp b/spatial/src/spatial/gdal/functions/st_read.cpp
index 2394b43..ab66331 100644
--- a/spatial/src/spatial/gdal/functions/st_read.cpp
+++ b/spatial/src/spatial/gdal/functions/st_read.cpp
@@ -88,7 +88,7 @@ struct GdalScanLocalState : ArrowScanLocalState {
 	// We trust GDAL to produce valid WKB
 	core::WKBReader wkb_reader;
 	explicit GdalScanLocalState(unique_ptr<ArrowArrayWrapper> current_chunk, ClientContext &context)
-	    : ArrowScanLocalState(std::move(current_chunk)), arena(BufferAllocator::Get(context)), wkb_reader(arena) {
+	    : ArrowScanLocalState(std::move(current_chunk), context), arena(BufferAllocator::Get(context)), wkb_reader(arena) {
 	}
 };
 
@@ -295,7 +295,8 @@ unique_ptr<FunctionData> GdalTableFunction::Bind(ClientContext &context, TableFu
 		                         ':',    'e',  'x',  't',  'e',    'n',  's',  'i',  'o', 'n', ':', 'n', 'a',
 		                         'm',    'e',  '\a', '\0', '\0',   '\0', 'o',  'g',  'c', '.', 'w', 'k', 'b'};
 
-		auto arrow_type = GetArrowLogicalType(attribute);
+		auto arrow_type = ArrowType::GetArrowLogicalType(DBConfig::GetConfig(context), attribute);
+
 		auto column_name = string(attribute.name);
 		auto duckdb_type = arrow_type->GetDuckType();
 
@@ -315,7 +316,7 @@ unique_ptr<FunctionData> GdalTableFunction::Bind(ClientContext &context, TableFu
 			result->geometry_column_ids.insert(col_idx);
 
 		} else if (attribute.dictionary) {
-			auto dictionary_type = GetArrowLogicalType(attribute);
+			auto dictionary_type = ArrowType::GetArrowLogicalType(DBConfig::GetConfig(context), attribute);
 			return_types.emplace_back(dictionary_type->GetDuckType());
 			arrow_type->SetDictionary(std::move(dictionary_type));
 			result->arrow_table.AddColumn(col_idx, std::move(arrow_type));
