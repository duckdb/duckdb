diff --git a/src/postgres_scanner.cpp b/src/postgres_scanner.cpp
index dfee871..0297623 100644
--- a/src/postgres_scanner.cpp
+++ b/src/postgres_scanner.cpp
@@ -484,11 +484,13 @@ static void PostgresScan(ClientContext &context, TableFunctionInput &data, DataC
 	local_state.ScanChunk(context, bind_data, gstate, output);
 }
 
-static idx_t PostgresScanBatchIndex(ClientContext &context, const FunctionData *bind_data_p,
-                                    LocalTableFunctionState *local_state_p, GlobalTableFunctionState *global_state) {
-	auto &bind_data = bind_data_p->Cast<PostgresBindData>();
-	auto &local_state = local_state_p->Cast<PostgresLocalState>();
-	return local_state.batch_idx;
+static OperatorPartitionData PostgresGetPartitionData(ClientContext &context, TableFunctionGetPartitionInput &input) {
+	if (input.partition_info.RequiresPartitionColumns()) {
+		throw InternalException("PostgresScan::GetPartitionData: partition columns not supported");
+	}
+	auto &bind_data = input.bind_data->Cast<PostgresBindData>();
+	auto &local_state = input.local_state->Cast<PostgresLocalState>();
+	return OperatorPartitionData(local_state.batch_idx);
 }
 
 static string PostgresScanToString(const FunctionData *bind_data_p) {
@@ -538,7 +540,7 @@ PostgresScanFunction::PostgresScanFunction()
 	to_string = PostgresScanToString;
 	serialize = PostgresScanSerialize;
 	deserialize = PostgresScanDeserialize;
-	get_batch_index = PostgresScanBatchIndex;
+	get_partition_data = PostgresGetPartitionData;
 	cardinality = PostgresScanCardinality;
 	table_scan_progress = PostgresScanProgress;
 	projection_pushdown = true;
@@ -551,7 +553,7 @@ PostgresScanFunctionFilterPushdown::PostgresScanFunctionFilterPushdown()
 	to_string = PostgresScanToString;
 	serialize = PostgresScanSerialize;
 	deserialize = PostgresScanDeserialize;
-	get_batch_index = PostgresScanBatchIndex;
+	get_partition_data = PostgresGetPartitionData;
 	cardinality = PostgresScanCardinality;
 	table_scan_progress = PostgresScanProgress;
 	projection_pushdown = true;
