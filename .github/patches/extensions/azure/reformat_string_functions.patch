diff --git a/src/azure_blob_filesystem.cpp b/src/azure_blob_filesystem.cpp
index 4050960..714ab58 100644
--- a/src/azure_blob_filesystem.cpp
+++ b/src/azure_blob_filesystem.cpp
@@ -10,7 +10,7 @@
 #include "duckdb/common/string_util.hpp"
 #include "duckdb/main/secret/secret.hpp"
 #include "duckdb/main/secret/secret_manager.hpp"
-#include "duckdb/function/scalar/string_functions.hpp"
+#include "duckdb/function/scalar/string_common.hpp"
 #include "duckdb/function/scalar_function.hpp"
 #include "duckdb/main/extension_util.hpp"
 #include "duckdb/main/client_data.hpp"
@@ -47,7 +47,7 @@ static bool Match(vector<string>::const_iterator key, vector<string>::const_iter
 			}
 			return false;
 		}
-		if (!LikeFun::Glob(key->data(), key->length(), pattern->data(), pattern->length())) {
+		if (!Glob(key->data(), key->length(), pattern->data(), pattern->length())) {
 			return false;
 		}
 		key++;
diff --git a/src/azure_dfs_filesystem.cpp b/src/azure_dfs_filesystem.cpp
index 27966e3..3f9e5e7 100644
--- a/src/azure_dfs_filesystem.cpp
+++ b/src/azure_dfs_filesystem.cpp
@@ -3,7 +3,7 @@
 #include "duckdb/common/exception.hpp"
 #include "duckdb/common/helper.hpp"
 #include "duckdb/common/shared_ptr.hpp"
-#include "duckdb/function/scalar/string_functions.hpp"
+#include "duckdb/function/scalar/string_common.hpp"
 #include <algorithm>
 #include <azure/storage/blobs/blob_options.hpp>
 #include <azure/storage/common/storage_exception.hpp>
@@ -50,7 +50,7 @@ static void Walk(const Azure::Storage::Files::DataLake::DataLakeFileSystemClient
 		for (const auto &elt : res.Paths) {
 			if (elt.IsDirectory) {
 				if (!recursive) { // Only perform recursive call if we are not already processing recursive result
-					if (LikeFun::Glob(elt.Name.data(), elt.Name.length(), path_pattern.data(), end_match)) {
+					if (Glob(elt.Name.data(), elt.Name.length(), path_pattern.data(), end_match)) {
 						if (end_match >= path_pattern.length()) {
 							// Skip, no way there will be matches anymore
 							continue;
@@ -61,7 +61,7 @@ static void Walk(const Azure::Storage::Files::DataLake::DataLakeFileSystemClient
 				}
 			} else {
 				// File
-				if (LikeFun::Glob(elt.Name.data(), elt.Name.length(), path_pattern.data(), path_pattern.length())) {
+				if (Glob(elt.Name.data(), elt.Name.length(), path_pattern.data(), path_pattern.length())) {
 					out_result->push_back(elt.Name);
 				}
 			}
