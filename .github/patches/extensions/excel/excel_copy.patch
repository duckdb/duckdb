diff --git a/src/excel/xlsx/copy_xlsx.cpp b/src/excel/xlsx/copy_xlsx.cpp
index 33890b5..f91adf6 100644
--- a/src/excel/xlsx/copy_xlsx.cpp
+++ b/src/excel/xlsx/copy_xlsx.cpp
@@ -392,7 +392,7 @@ static void SetVarcharValue(named_parameter_map_t &params, const string &key, co
 	params[key] = val.back();
 }
 
-static void ParseCopyFromOptions(XLSXReadData &data, case_insensitive_map_t<vector<Value>> &options) {
+static void ParseCopyFromOptions(XLSXReadData &data, const case_insensitive_map_t<vector<Value>> &options) {
 
 	// Just make it really easy for us, extract everything into a named parameter map
 	named_parameter_map_t named_parameters;
@@ -421,16 +421,16 @@ static void ParseCopyFromOptions(XLSXReadData &data, case_insensitive_map_t<vect
 	ReadXLSX::ParseOptions(data.options, named_parameters);
 }
 
-static unique_ptr<FunctionData> CopyFromBind(ClientContext &context, CopyInfo &info, vector<string> &expected_names,
+static unique_ptr<FunctionData> CopyFromBind(ClientContext &context, CopyFromFunctionBindInput &input, vector<string> &expected_names,
                                              vector<LogicalType> &expected_types) {
 
 	auto result = make_uniq<XLSXReadData>();
-	result->file_path = info.file_path;
+	result->file_path = input.info.file_path; 
 
 	// TODO: Parse options
-	ParseCopyFromOptions(*result, info.options);
+	ParseCopyFromOptions(*result, input.info.options);
 
-	ZipFileReader archive(context, info.file_path);
+	ZipFileReader archive(context, input.info.file_path);
 	ReadXLSX::ResolveSheet(result, archive);
 
 	// Column count mismatch!
