name: Out-of-tree Extension Rebuild
on:
  workflow_dispatch:
    inputs:
      extension_name:
        description: 'Extension name (e.g. postgres_scanner)'
        required: true
        type: string
      extension_repo:
        description: 'Extension git repo (e.g. https://github.com/duckdblabs/postgres_scanner)'
        required: true
        type: string
      extension_ref:
        description: 'Extension version (commit hash)'
        required: true
        type: string
      duckdb_ref:
        description: 'DuckDB version (short commit hash or vX.Y.Z tag)'
        required: true
        type: string
      use_old_extension_config:
        description: 'Use the old csv-based configuration for building extensions'
        required: true
        type: bool

jobs:
  linux-extensions-64-rebuild:
    name: Linux Extensions (64 Bit)
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: ./.github/actions/manylinux_2014_setup
      with:
        aws-cli: 1
        ninja-build: 1
        vcpkg: 1
        openssl: 1
        ccache: 1
        ssh: 1

    - name: Checkout specific DuckDB version
      shell: bash
      run: |
        git clone https://github.com/duckdb/duckdb.git duckdb-old
        git -C duckdb-old checkout ${{ inputs.duckdb_ref }}

    - name: Override config (CMake)
      if: !use_old_extension_config
      shell: bash
      run: |
        echo -e 'duckdb_extension_load( ${{ inputs.extension_name }} GIT_URL ${{ inputs.extension_repo }} GIT_TAG ${{ inputs.extension_ref }} DONT_LINK)' > duckdb-old/.github/config/out_of_tree_extensions.cmake

    - name: Override config (CSV)
      if: use_old_extension_config
      shell: bash
      run: |
        echo -e 'name,url,commit,options\n${{ inputs.extension_name }},${{ inputs.extension_repo }},${{ inputs.extension_ref }},true' > duckdb-old/.github/config/extensions.csv

    - uses: ./.github/actions/build_extensions
      with:
        build_in_tree_extensions: 0
        build_dir: duckdb-old
        deploy_as: linux_amd64
        deploy_version: ${{ inputs.duckdb_ref }}
        run_tests: 0
        s3_id: ${{ secrets.S3_ID }}
        s3_key: ${{ secrets.S3_KEY }}
        signing_pk: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
        python_name: python3
        vcpkg_target_triplet: x64-linux

  xcode-extensions-rebuild:
    name: OSX Extensions Release
    runs-on: macos-latest
    env:
      DUCKDB_EXTENSION_SIGNING_PK: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
      OSX_BUILD_UNIVERSAL: 1

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout specific DuckDB version
        shell: bash
        run: |
          git clone https://github.com/duckdb/duckdb.git duckdb-old
          git -C duckdb-old checkout ${{ inputs.duckdb_ref }}

      - name: Override extensions.csv
        shell: bash
        run: |
          echo -e 'name,url,commit,options\n${{ inputs.extension_name }},${{ inputs.extension_repo }},${{ inputs.extension_ref }},true' > duckdb-old/.github/config/extensions.csv

      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - uses: ./.github/actions/build_extensions
        with:
          build_in_tree_extensions: 0
          treat_warn_as_error: 0
          build_dir: duckdb-old
          post_install: rm build/release/src/libduckdb*
          run_tests: 0
          osx_universal: 1

      - name: Deploy
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.S3_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.S3_KEY}}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          pip install awscli
          cd duckdb-old
          ./scripts/extension-upload.sh osx_amd64 ${{ inputs.duckdb_ref }}
          ./scripts/extension-upload.sh osx_arm64 ${{ inputs.duckdb_ref }}

  win-extensions-64-rebuild:
   name: Windows Extensions (64-bit)
   runs-on: windows-latest
   steps:
     - uses: actions/checkout@v3
       with:
         fetch-depth: 0

     - name: Checkout specific DuckDB version
       shell: bash
       run: |
         git clone https://github.com/duckdb/duckdb.git duckdb-old
         git -C duckdb-old checkout ${{ inputs.duckdb_ref }}

     - name: Override extensions.csv
       shell: bash
       run: |
         echo -e 'name,url,commit,options\n${{ inputs.extension_name }},${{ inputs.extension_repo }},${{ inputs.extension_ref }},true' > duckdb-old/.github/config/extensions.csv

     - uses: actions/setup-python@v4
       with:
         python-version: '3.7'

     - uses: ./.github/actions/build_extensions
       with:
         build_in_tree_extensions: 0
         deploy_as: windows_amd64
         vcpkg_target_triplet: x64-windows
         deploy_version: ${{ inputs.duckdb_ref }}
         run_tests: 0
         treat_warn_as_error: 0
         build_dir: duckdb-old
         s3_id: ${{ secrets.S3_ID }}
         s3_key: ${{ secrets.S3_KEY }}
         signing_pk: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}


  manylinux-extensions-rebuild:
    name: DuckDB Extensions (gcc4)
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
    - name: Install dependencies
      shell: bash
      run: |
        yum install -y gcc gcc-c++ cmake make
        yum install -y epel-release
        yum install -y make gcc perl-core pcre-devel wget zlib-devel python3
        yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
        yum install -y git
        yum install -y curl-devel expat-devel gettext-devel zlib-devel perl-ExtUtils-MakeMaker
    - name: Install AWS CLI
      shell: bash
      run: |
        python3 -m pip install awscli
        aws --version

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout specific DuckDB version
      shell: bash
      run: |
        git clone https://github.com/duckdb/duckdb.git duckdb-old
        git -C duckdb-old checkout ${{ inputs.duckdb_ref }}

    - name: Override extensions.csv
      shell: bash
      run: |
        echo -e 'name,url,commit,options\n${{ inputs.extension_name }},${{ inputs.extension_repo }},${{ inputs.extension_ref }},true' > duckdb-old/.github/config/extensions.csv

    - uses: ./.github/actions/build_extensions
      with:
        build_in_tree_extensions: 0
        run_tests: 0
        build_dir: duckdb-old
        deploy_as: linux_amd64_gcc4
        vcpkg_target_triplet: x64-linux
        deploy_version: ${{ inputs.duckdb_ref }}
        s3_id: ${{ secrets.S3_ID }}
        s3_key: ${{ secrets.S3_KEY }}
        signing_pk: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
        treat_warn_as_error: 0
