name: Python
on:
  workflow_dispatch:
  repository_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
   manylinux-extensions-x64:
    name: Linux Extensions (linux_amd64_gcc4)
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    env:
      GEN: ninja

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout Release
      shell: bash
      run: |
        git config --global --add safe.directory '*'
        git checkout v0.10.0

    - uses: ./.github/actions/manylinux_2014_setup
      with:
        aws-cli: 1
        ninja-build: 1
        ccache: 1
        nodejs: 1
        ssh: 1
        python_alias: 1
        openssl: 1

    - uses: ./.github/actions/build_extensions
      with:
        vcpkg_target_triplet: x64-linux
        post_install: rm build/release/src/libduckdb*
        deploy_as: linux_amd64_gcc4
        s3_id: ${{ secrets.S3_ID }}
        s3_key: ${{ secrets.S3_KEY }}
        signing_pk: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
        run_tests: 0
        run_autoload_tests: 0
        treat_warn_as_error: 0
        ninja: 1

    - uses: actions/upload-artifact@v3
      with:
        name: manylinux-extensions-x64
        path: |
          build/release/extension/*/*.duckdb_extension

   linux-python3:
    name: Python 3 Linux
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [x86_64, aarch64]
        python_build: [cp37-*, cp38-*, cp39-*, cp310-*, cp311-*, cp312-*]
        manylinux: [manylinux2014, manylinux_2_28]
        isRelease:
          - ${{ startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || 1 }}
        exclude:
          # For now we don't distribute the 2_28 wheels on x64
          - arch: x86_64
            manylinux: manylinux_2_28
          # Speed things up a bit for non-releases
          - isRelease: false
            python_build: 'cp37-*'
          - isRelease: false
            python_build: 'cp38-*'
          - isRelease: false
            python_build: 'cp39-*'
          - isRelease: false
            python_build: 'cp310-*'
          - isRelease: false
            python_build: 'cp311-*'
          - isRelease: false
            arch: aarch64
    needs: manylinux-extensions-x64
    env:
      CIBW_BUILD: ${{ matrix.python_build}}
      CIBW_SKIP: '*-musllinux_aarch64'
      CIBW_ARCHS: ${{ matrix.arch == 'aarch64' && 'aarch64' || 'auto64' }}
      CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.manylinux }}
      CIBW_MANYLINUX_PYPY_AARCH64_IMAGE: ${{ matrix.manylinux }}
      CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux }}
      CIBW_MANYLINUX_PYPY_X86_64_IMAGE: ${{ matrix.manylinux }}
      PYTEST_TIMEOUT: '600'
      DUCKDB_BUILD_UNITY: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout Release
      shell: bash
      run: |
        git config --global --add safe.directory '*'
        git checkout v0.10.0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      if: ${{ matrix.arch == 'aarch64' }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install
      shell: bash
      run: |
        pip install 'cibuildwheel>=2.16.2' twine build
        python -m pip install numpy --config-settings=setup-args="-Dallow-noblas=true"

    - uses: actions/download-artifact@v3
      if: ${{ matrix.arch == 'x86_64' }}
      with:
        name: manylinux-extensions-x64
        path: tools/pythonpkg

    - name: List extensions to be tested
      shell: bash
      run: |
        find tools/pythonpkg -maxdepth 2 -type f -name "*.duckdb_extension"

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@v1.2.11 # Note: pinned due to GLIBC incompatibility in later releases
      with:
        key: ${{ github.job }}-${{ matrix.arch }}-${{ matrix.python_build }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

    - name: Build
      shell: bash
      run: |
        cd tools/pythonpkg
        pyproject-build . --sdist
        mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        ls duckdb_tarball
        export DISTUTILS_C_COMPILER_LAUNCHER=ccache
        # TODO: Use ccache inside container, see https://github.com/pypa/cibuildwheel/issues/1030
        export CIBW_TEST_COMMAND='python -m pytest {project}/tests/fast/api/test_dbapi00.py  --verbose'
        cibuildwheel --output-dir wheelhouse --config-file pyproject.toml duckdb_tarball
        ls wheelhouse

    - name: Deploy
      env:
        TWINE_USERNAME: '__token__'
        TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}
      shell: bash
      run: |
        # python scripts/asset-upload-gha.py duckdb_python_src.tar.gz=tools/pythonpkg/dist/duckdb-*.tar.gz
        ls -lah tools/pythonpkg/wheelhouse/*.whl
        ls -lah tools/pythonpkg/dist/duckdb-*.tar.gz
        # twine upload --non-interactive --disable-progress-bar --skip-existing tools/pythonpkg/wheelhouse/*.whl tools/pythonpkg/dist/duckdb-*.tar.gz

    - uses: actions/upload-artifact@v3
      with:
        name: linux-python3-artifacts
        path: |
          tools/pythonpkg/wheelhouse/*.whl
          tools/pythonpkg/dist/duckdb-*.tar.gz