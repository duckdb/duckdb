name: NodeJS
on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    types: [read_for_review, opened, reopened, review_requested]
    paths-ignore:
      - '**.md'
      - 'data/**'
      - 'examples/**'
      - 'test/**'
      - 'tools/juliapkg/**'
      - 'tools/pythonpkg/**'
      - 'tools/rpkg/**'
      - '.github/workflows/**'
      - '!.github/workflows/NodeJS.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/master' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.NODE_PRE_GYP_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.NODE_PRE_GYP_SECRETACCESSKEY }}

jobs:
  linux-nodejs:
    if:  ${{ github.event.requested_team.name == 'non-existent' }}
    name: node.js Linux
    runs-on: ubuntu-20.04
    env:
      DUCKDB_NODE_BUILD_CACHE: 1
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install requirements
        shell: bash
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install -y git ninja-build make gcc-multilib g++-multilib wget libssl-dev

      - name: Install CMake
        shell: bash
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.sh
          chmod +x cmake-3.21.3-linux-x86_64.sh
          sudo ./cmake-3.21.3-linux-x86_64.sh --skip-license --prefix=/usr/local

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}

      - name: Build DuckDB
        shell: bash
        run: |
          GEN=ninja EXTENSION_STATIC_BUILD=1 BUILD_TPCH=1 BUILD_HTTPFS=1 STATIC_OPENSSL=1 BUILD_NODE=1 make

      - name: Setup
        shell: bash
        run: ./scripts/node_version.sh upload
        env:
          DUCKDB_NODE_BUILD_CACHE: 0  # create a standalone package
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

      - name: Validate Docs
        run: npx jsdoc-to-markdown --files tools/nodejs/lib/*.js >> $GITHUB_STEP_SUMMARY
        env:
          npm_config_yes: true

      - name: Node 10
        shell: bash
        run: ./scripts/node_build.sh 10

      - name: Node 12
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        shell: bash
        run: ./scripts/node_build.sh 12

      - name: Node 14
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        shell: bash
        run: ./scripts/node_build.sh 14

      - name: Node 15
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        shell: bash
        run: ./scripts/node_build.sh 15

      - name: Node 16
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        shell: bash
        run: ./scripts/node_build.sh 16

      - name: Node 17
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        shell: bash
        run: ./scripts/node_build.sh 17

      - name: Node 18
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        shell: bash
        run: ./scripts/node_build.sh 18

      - name: Node 19
        shell: bash
        run: ./scripts/node_build.sh 19