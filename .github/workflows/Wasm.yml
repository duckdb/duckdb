name: DuckDB-Wasm extensions
on:
  workflow_dispatch:
    inputs:
      # Git ref of the duckdb-wasm repo
      duckdb_wasm_ref:
        required: true
        type: string
      # Git ref of the duckdb repo
      duckdb_ref:
        required: true
        type: string
      # Git ref of the duckdb repo
      platforms:
        required: false
        default: '["wasm_mvp", "wasm_eh", "wasm_threads"]'
        type: string
      # Publish extensions on extensions.duckdb.org?
      release_s3:
        required: true
        type: boolean
        default: false

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build_wasm:
    name: Build extensions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        duckdb_wasm_arch: ${{ fromJSON(github.event.inputs.platforms) }}
    env:
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      DUCKDB_PLATFORM: "${{ matrix.duckdb_wasm_arch }}"

    steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ inputs.duckdb_wasm_ref }}
                  fetch-depth: 0
                  submodules: true
                  repository: duckdb/duckdb-wasm

            - uses: mymindstorm/setup-emsdk@v12
              with:
                  version: 'latest'

            - name: Install
              shell: bash
              run: sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build

            - name: Setup vcpkg
              uses: lukka/run-vcpkg@v11.1
              with:
                  vcpkgGitCommitId: a42af01b72c28a8e1d7b48107b33e4f286a55ef6

            - name: Setup Ccache
              uses: hendrikmuhs/ccache-action@main
              with:
                  key: ${{ github.job }}-${{ matrix.duckdb_wasm_arch }}

            - name: PatchDuckDB
              run: |
                 cd submodules/duckdb
                 git checkout ${{ github.event.inputs.duckdb_ref }}
                 git apply ../../duckdb.patch
                 cd ../..
                 cp .github/config/extension_config_wasm.cmake submodules/duckdb/extension/extension_config.cmake

            - name: Build Wasm module MVP
              if: ${{ matrix.duckdb_wasm_arch == 'wasm_mvp' }}
              run: |
                DUCKDB_PLATFORM=wasm_mvp DUCKDB_WASM_LOADABLE_EXTENSIONS="signed" GEN=ninja ./scripts/wasm_build_lib.sh relsize mvp

            - name: Build Wasm module EH
              if: ${{ matrix.duckdb_wasm_arch == 'wasm_eh' }}
              run: |
                DUCKDB_PLATFORM=wasm_eh DUCKDB_WASM_LOADABLE_EXTENSIONS="signed" GEN=ninja ./scripts/wasm_build_lib.sh relsize eh

            - name: Build Wasm module THREADS
              if: ${{ matrix.duckdb_wasm_arch == 'wasm_threads' }}
              run: |
                DUCKDB_PLATFORM=wasm_threads DUCKDB_WASM_LOADABLE_EXTENSIONS="signed" GEN=ninja ./scripts/wasm_build_lib.sh relsize coi

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: duckdb_extensions_${{ env.DUCKDB_PLATFORM }}
                  path: build/extension_repository/${{ inputs.duckdb_ref }}/${{ env.DUCKDB_PLATFORM }}
                  retention-days: 1

  publish:
    name: Publish extensions
    runs-on: ubuntu-latest
    needs:
    - build_wasm
    strategy:
      matrix:
        duckdb_arch: ${{ fromJSON(github.event.inputs.platforms) }}
    steps:
            - uses: actions/checkout@v3

            - uses: actions/download-artifact@v3
              with:
                name: duckdb_extensions_${{ matrix.duckdb_arch }}
                path: build/to_be_deployed/${{ inputs.duckdb_ref }}/${{ matrix.duckdb_arch }}

            - uses: actions/setup-python@v5
              with:
                python-version: '3.12'

            - name: Install aws
              run: |
                  pip install awscli

            - name: Sign and deploy Wasm extensions (no credentials)
              if: ${{ ! inputs.release_s3 }}
              run: |
                  bash ./scripts/extension-upload-wasm.sh ${{ matrix.duckdb_arch }} ${{ inputs.duckdb_ref }}

            - name: Sign and deploy Wasm extensions (with credentials)
              if: ${{ inputs.release_s3 }}
              env:
                  AWS_ACCESS_KEY_ID: ${{secrets.S3_ID}}
                  AWS_SECRET_ACCESS_KEY: ${{secrets.S3_KEY}}
                  AWS_DEFAULT_REGION: us-east-1
                  DUCKDB_EXTENSION_SIGNING_PK: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
              run: |
                  bash ./scripts/extension-upload-wasm.sh ${{ matrix.duckdb_arch }} ${{ inputs.duckdb_ref }}
