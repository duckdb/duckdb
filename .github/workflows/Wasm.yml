name: DuckDB-Wasm extensions
on:
  workflow_call:
    inputs:
      override_git_describe:
        type: string
      git_ref:
        type: string
      skip_tests:
        type: string
  workflow_dispatch:
    inputs:
      override_git_describe:
        type: string
      git_ref:
        type: string
      skip_tests:
        type: string
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    paths-ignore:
      - '**'
      - '!.github/workflows/Wasm.yml'

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
 wasm-extensions:
    # Builds extensions for linux_amd64
    name: Linux Extensions (x64)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        duckdb_arch: [wasm_mvp, wasm_eh, wasm_threads]

    steps:
      - uses: actions/checkout@v4
        with:
          path: 'duckdb'
          fetch-depth: 0
          ref: ${{ inputs.git_ref }}

      - uses: actions/checkout@v4
        name: Checkout Extension CI tools
        with:
          path: 'extension-ci-tools'
          ref: 'main'
          repository: 'duckdb/extension-ci-tools'
          fetch-depth: 0

      - uses: mymindstorm/setup-emsdk@v13
        with:
          version: '3.1.71'

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.1
        with:
          vcpkgGitCommitId: '5e5d0e1cd7785623065e77eff011afdeec1a3574'
          vcpkgGitURL: 'https://github.com/microsoft/vcpkg.git'

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        continue-on-error: true
        with:
          key: ${{ github.job }}-${{ matrix.duckdb_arch }}

      - name: Populate composed extension
        shell: bash
        run: |
          cat duckdb/.github/config/in_tree_extensions.cmake duckdb/.github/config/out_of_tree_extensions.cmake > extension_config.cmake
          echo "{\"dependencies\": []}" > vcpkg.json
          cp duckdb/.github/helper_makefile/build_all_extensions Makefile

      - name: Run configure
        shell: bash
        env:
          DUCKDB_GIT_VERSION: ${{ inputs.duckdb_version }}
          WASM_EXTENSIONS: 1
        run: |
          sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build cmake
          make configure_ci

      - name: Build Wasm module
        shell: bash
        env:
          VCPKG_TOOLCHAIN_PATH: /home/runner/work/duckdb/duckdb/vcpkg/scripts/buildsystems/vcpkg.cmake
          WASM_EXTENSIONS: 1
        run: |
          make ${{ matrix.duckdb_arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: duckdb-extensions-${{ matrix.duckdb_arch }}
          path: |
            build/${{ matrix.duckdb_arch }}/extension/*/*.duckdb_extension.wasm

 upload-wasm-extensions:
    name: Upload Wasm Extensions
    needs: wasm-extensions
    uses: ./.github/workflows/_sign_deploy_extensions.yml
    secrets: inherit
    strategy:
      matrix:
        duckdb_arch: [wasm_mvp, wasm_eh, wasm_threads]
    with:
      extension_artifact_name: duckdb-extensions-${{ matrix.duckdb_arch }}
      duckdb_arch: ${{ matrix.duckdb_arch }}
      duckdb_sha: ${{ github.sha }}
