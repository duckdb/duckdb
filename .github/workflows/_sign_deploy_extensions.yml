#
# Reusable workflow to upload extensions previously uploaded as a GH artifact
#
# Note: this workflow can be used to deploy an extension from a GH artifact from within the duckdb GitHub organisation (only repo's within the same organisation can share secrets
#       through reusable workflows)
name: Sign and Deploy Extensions
on:
  workflow_call:
    inputs:
      # The name artifact to download
      extension_artifact_name:
        required: true
        type: string
      # DuckDB target architure
      duckdb_arch:
        required: true
        type: string
      # DuckDB ref of DuckDB building the extension
      duckdb_sha:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.duckdb_sha }}

      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.extension_artifact_name }}
          path: to_be_deployed_extensions

      - name: Deploy
        shell: bash
        run: |
          tree to_be_deployed_extensions
          mkdir deploy_me
          cp to_be_deployed_extensions/**/* deploy_me/.
          tree deploy_me

      - name: Deploy
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.S3_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.S3_KEY}}
          DUCKDB_DEPLOY_SCRIPT_MODE: for_real
          DUCKDB_EXTENSION_SIGNING_PK: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          pip install awscli
          TARGET_SHA=${{ inputs.duckdb_sha }}
          TARGET_SHA="${TARGET_SHA:0:10}"
          echo "Extensions to be uploaded to ${TARGET_SHA}"
          ./scripts/extension-upload-all.sh ${{ inputs.duckdb_arch }} "${TARGET_SHA}" deploy_me
