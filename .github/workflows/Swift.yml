name: Swift
on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    tags:
      - '**'
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - 'test/**'
      - 'tools/**'
      - '!tools/swift/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/Swift.yml'

  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - 'test/**'
      - 'tools/**'
      - '!tools/swift/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/Swift.yml'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

jobs:

  test-apple-platforms:
    name: Test Apple Platforms
    strategy:
      matrix:
        # destinations need to match selected version of Xcode
        # https://github.com/actions/runner-images/blob/main/images/macos/macos-12-Readme.md#installed-simulators
        destination:
          - 'macOS'
          - 'iOS Simulator,name=iPhone 14'
          - 'tvOS Simulator,name=Apple TV 4K (at 1080p) (2nd generation)'
        isRelease:
          - ${{ startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' }}
        exclude:
          - isRelease: false
            destination: 'iOS Simulator,name=iPhone 14'
          - isRelease: false
            destination: 'tvOS Simulator,name=Apple TV 4K (at 1080p) (2nd generation)'
    runs-on: macos-12
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # we need tags for the ubiquity build script to run without errors
          fetch-depth: '0'

      - name: Prepare Package
        run: python3 tools/swift/create_package.py tools/swift

      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_14.2.app && /usr/bin/xcodebuild -version

      - name: Run Tests
        run: |
          xcrun xcodebuild test \
            -workspace tools/swift/duckdb-swift/DuckDB.xcworkspace \
            -scheme DuckDB \
            -destination platform='${{ matrix.destination }}'

  test-linux:
    name: Test Linux
    runs-on: ubuntu-latest
    container:
      image: swift:latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # we need tags for the ubiquity build script to run without errors
          fetch-depth: '0'

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Prepare Package
        run: python3 tools/swift/create_package.py tools/swift

      - name: Build Package
        run: swift build --package-path tools/swift/duckdb-swift

      - name: Test Package
        run: swift test --package-path tools/swift/duckdb-swift
