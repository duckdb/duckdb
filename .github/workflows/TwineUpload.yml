name: Python - Twine upload
on:
  workflow_call:
    inputs:
      override_git_describe:
        type: string
  workflow_dispatch:
    inputs:
      override_git_describe:
        type: string

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
   twine-upload:
      name: Twine upload
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install
        shell: bash
        run: pip install twine awscli

      - name: Download from staging bucket
        shell: bash
        env:
          OVERRIDE_GIT_DESCRIBE: ${{ inputs.override_git_describe }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_DUCKDB_STAGING_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_DUCKDB_STAGING_KEY }}
        run: |
          TARGET=$(git log -1 --format=%h)
          # decide target for staging
          if [ "$OVERRIDE_GIT_DESCRIBE" ]; then
            TARGET="$TARGET/$OVERRIDE_GIT_DESCRIBE"
          fi
          cd tools/pythonpkg
          mkdir to_be_uploaded
          aws s3 cp --recursive "s3://duckdb-staging/$TARGET/$GITHUB_REPOSITORY/twine_upload" to_be_uploaded --region us-east-2

      - name: Deploy
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}
        shell: bash
        run: |
          cd tools/pythonpkg
          if [[ "$GITHUB_REF" =~ ^(refs/heads/main|refs/tags/v.+)$ && "$GITHUB_REPOSITORY" = "duckdb/duckdb" ]] ; then
            twine upload --non-interactive --disable-progress-bar --skip-existing to_be_uploaded/*
          fi
