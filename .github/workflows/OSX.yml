name: OSX
on:
  workflow_dispatch:
  repository_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  xcode-extensions:
    # Builds extensions for osx_arm64 and osx_amd64
    name: OSX Extensions Release
    runs-on: macos-latest
    needs: xcode-debug
    strategy:
      matrix:
        label: [ 'x86_64' ]
        include:
          - label: x86_64
            osx_arch: x86_64
            duckdb_arch: osx_amd64
            vcpkg_triplet: x64-osx
            run_autoload_tests: 0

    env:
      DUCKDB_EXTENSION_SIGNING_PK: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
      AWS_DEFAULT_REGION: us-east-1
      VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_triplet }}
      GEN: ninja
      DUCKDB_PLATFORM: ${{ matrix.duckdb_arch }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout Release
        shell: bash
        run: |
          git config --global --add safe.directory '*'
          git checkout v0.10.0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Install Ninja and Pkg-config
        run: brew install pkg-config ninja

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}-${{ matrix.label }}
          save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

      - uses: ./.github/actions/build_extensions
        with:
          treat_warn_as_error: 0
          run_tests: 0
          osx_arch: ${{ matrix.osx_arch }}
          vcpkg_target_triplet: ${{ matrix.vcpkg_triplet }}
          duckdb_arch: ${{ matrix.duckdb_arch }}
          build_in_tree_extensions: 1
          build_out_of_tree_extensions: 1
          run_autoload_tests: 0
          ninja: 1


      - name: Sign Extension Binaries
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.OSX_CODESIGN_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.OSX_CODESIGN_P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.OSX_CODESIGN_KEYCHAIN_PASSWORD }}
        run: |
          if [[ "$GITHUB_REPOSITORY" = "duckdb/duckdb" ]] ; then
          . scripts/osx_import_codesign_certificate.sh
          codesign --all-architectures --force --sign "Developer ID Application: Stichting DuckDB Foundation" build/release/extension/*/*.duckdb_extension
          fi

      - name: Deploy
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.S3_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.S3_KEY}}
          DUCKDB_DEPLOY_SCRIPT_MODE: for_real
        run: |
          pip install awscli
          ./scripts/extension-upload-all.sh ${{ matrix.duckdb_arch }} v0.10.0
