name: Re-run Checks on Label Approved

on:
  pull_request_target:
    types: [labeled]
  
  workflow_dispatch:
    inputs:
      pr:
        description: "PR number to re-run (manual)"
        required: true
        type: number
      dry_run:
        description: "Only list; do not approve/rerun"
        required: false
        default: "true"
        type: choice
        options: ["true", "false"]
        
permissions:
  actions: write
  pull-requests: read
  contents: read
env:
  GH_TOKEN: ${{ secrets.DUCKDBLABS_BOT_TOKEN }} # for curl
  GITHUB_TOKEN: ${{ secrets.DUCKDBLABS_BOT_TOKEN }} # for gh cli
  ORG: 'duckdb'

jobs:
  approved:
    if: github.event.label.name == 'Ready For Review'
    runs-on: ubuntu-latest
    steps:
    - name: Check actor is org member
      id: orgcheck
      run: |
          resp=$(curl -sS \
          -H "Authorization: Bearer ${{ env.GH_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/orgs/${{ env.ORG }}/memberships/${{ github.actor }})

          state=$(jq -r '.state // empty' <<< $resp)
          if [ $state != "active" ]; then
              echo "Not an org member (or token lacks read:org)"; exit 1
          fi

  trigger-rerun:
    needs: 
      - approved
    runs-on: ubuntu-latest
    env:
      REPO: 'duckdb/duckdb'
      PR: ${{ github.event.pull_request.number }}
    steps:
      - name: Approve all waiting runs for this PR
        run: |
          # exit on error, unset vars are errros, show error message from pipe
          set -euo pipefail

          # list waiting runs for PR
          gh api -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/${{ env.REPO }}/actions/runs?event=pull_request&per_page=100" --paginate \
          | jq -r --argjson pr "${PR}" '
                .workflow_runs[]
                | select(.head_repository.fork == true and (.pull_requests[]?; .number == $pr))
                | .id
              ' \
          | while read -r RUN_ID; do
              [ -z "$RUN_ID" ] && continue
              echo "Approving run $RUN_ID"
              gh api -X POST -H "X-GitHub-Api-Version: 2022-11-28" \
                "repos/${{ env.REPO }}/actions/runs/$RUN_ID/approve" \
              || echo "Skip $RUN_ID: already approved or not awaiting approval anymore"
            done