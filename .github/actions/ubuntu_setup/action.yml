name: "Setup Ubuntu 16/18"
description: "Setup an Ubuntu 16/18 docker container with the required libraries"
inputs:
  openssl:
    description: 'OpenSSL'
    default: 0
  aarch64_libs:
    description: 'Include aarch64 libs for cross compilation'
    default: 0
  python:
    description: 'Python'
    default: 1
runs:
  using: "composite"
  steps:
    - name: Install
      shell: bash
      run: |
        apt-get update -y -qq
        apt-get install -y -qq software-properties-common
        add-apt-repository ppa:git-core/ppa
        apt-get update -y -qq
        apt-get install -y -qq ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk zip maven unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl

    - name: Install aarch64 libs
      shell: bash
      if: ${{ inputs.aarch64_libs }}
      run: |
        apt-get install -y -qq gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu libz-dev
        cd /tmp
        wget https://javadl.oracle.com/webapps/download/GetFile/1.8.0_331-b09/165374ff4ea84ef0bbd821706e29b123/linux-i586/jdk-8u331-linux-aarch64.tar.gz
        tar xvf jdk-8u331-linux-aarch64.tar.gz


    - name: Install Git 2.18.5
      shell: bash
      run: |
        wget https://github.com/git/git/archive/refs/tags/v2.18.5.tar.gz
        tar xvf v2.18.5.tar.gz
        cd git-2.18.5
        make
        make prefix=/usr install
        git --version

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Python 3.7
      if: ${{ inputs.python }} == 1
      shell: bash
      run: |
        wget https://www.python.org/ftp/python/3.7.12/Python-3.7.12.tgz
        tar xvf Python-3.7.12.tgz
        cd Python-3.7.12
        mkdir -p pythonbin
        ./configure --with-ensurepip=install
        make -j
        make install
        python3.7 --version
        python3.7 -m pip install pip
        python3.7 -m pip install requests awscli

    - name: Install CMake 3.21
      shell: bash
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.sh
        chmod +x cmake-3.21.3-linux-x86_64.sh
        ./cmake-3.21.3-linux-x86_64.sh --skip-license --prefix=/usr/local
        cmake --version

    - name: Install OpenSSL 1.1.1
      if: ${{ inputs.openssl }} == 1
      shell: bash
      run: |
        wget https://www.openssl.org/source/openssl-1.1.1c.tar.gz
        tar -xf openssl-1.1.1c.tar.gz
        cd openssl-1.1.1c
        ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl no-shared zlib-dynamic
        make
        make install
        echo "/usr/local/ssl/lib" > /etc/ld.so.conf.d/openssl-1.1.1c.conf
        ldconfig -v

    - name: Version Check
      shell: bash
      run: |
        ldd --version ldd
        python3.7 --version
        git --version
        git log -1 --format=%h

