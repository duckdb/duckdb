[
  {
    "class": "LogicalType",
    "includes": [
      "duckdb/common/types.hpp",
      "duckdb/common/extra_type_info.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "id",
        "type": "LogicalTypeId",
        "serialize_property": "id_"
      },
      {
        "id": 101,
        "name": "type_info",
        "type": "shared_ptr<ExtraTypeInfo>",
        "serialize_property": "type_info_",
        "optional": true
      }
    ],
    "pointer_type": "none",
    "constructor": ["id", "type_info"]
  },
  {
    "class": "CommonTableExpressionInfo",
    "includes": [
      "duckdb/parser/common_table_expression_info.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "aliases",
        "type": "vector<string>"
      },
      {
        "id": 101,
        "name": "query",
        "type": "SelectStatement*"
      },
      {
        "id": 102,
        "name": "materialized",
        "type": "CTEMaterialize"
      }
    ]
  },
  {
    "class": "CommonTableExpressionMap",
    "includes": [
      "duckdb/parser/query_node.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "map",
        "type": "unordered_map<string, CommonTableExpressionInfo*>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "OrderByNode",
    "includes": [
      "duckdb/parser/result_modifier.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "type",
        "type": "OrderType"
      },
      {
        "id": 101,
        "name": "null_order",
        "type": "OrderByNullType"
      },
      {
        "id": 102,
        "name": "expression",
        "type": "ParsedExpression*"
      }
    ],
    "pointer_type": "none",
    "constructor": ["type", "null_order", "expression"]
  },
  {
    "class": "BoundOrderByNode",
    "includes": [
      "duckdb/planner/bound_result_modifier.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "type",
        "type": "OrderType"
      },
      {
        "id": 101,
        "name": "null_order",
        "type": "OrderByNullType"
      },
      {
        "id": 102,
        "name": "expression",
        "type": "Expression*"
      }
    ],
    "pointer_type": "none",
    "constructor": ["type", "null_order", "expression"]
  },
  {
    "class": "CaseCheck",
    "includes": [
      "duckdb/parser/expression/case_expression.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "when_expr",
        "type": "ParsedExpression*"
      },
      {
        "id": 101,
        "name": "then_expr",
        "type": "ParsedExpression*"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "BoundCaseCheck",
    "includes": [
      "duckdb/planner/expression/bound_case_expression.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "when_expr",
        "type": "Expression*"
      },
      {
        "id": 101,
        "name": "then_expr",
        "type": "Expression*"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "SampleOptions",
    "includes": [
      "duckdb/parser/parsed_data/sample_options.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "sample_size",
        "type": "Value"
      },
      {
        "id": 101,
        "name": "is_percentage",
        "type": "bool"
      },
      {
        "id": 102,
        "name": "method",
        "type": "SampleMethod"
      },
      {
        "id": 103,
        "name": "seed",
        "type": "int64_t"
      }
    ]
  },
  {
    "class": "PivotColumn",
    "includes": [
      "duckdb/parser/tableref/pivotref.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "pivot_expressions",
        "type": "vector<ParsedExpression*>"
      },
      {
        "id": 101,
        "name": "unpivot_names",
        "type": "vector<string>"
      },
      {
        "id": 102,
        "name": "entries",
        "type": "vector<PivotColumnEntry>"
      },
      {
        "id": 103,
        "name": "pivot_enum",
        "type": "string"
      }
    ],
    "pointer_type": "none"
  },

  {
    "class": "PivotColumnEntry",
    "members": [
      {
        "id": 100,
        "name": "values",
        "type": "vector<Value>"
      },
      {
        "id": 101,
        "name": "star_expr",
        "type": "ParsedExpression*",
        "optional": true
      },
      {
        "id": 102,
        "name": "alias",
        "type": "string"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "BoundPivotInfo",
    "includes": [
      "duckdb/planner/tableref/bound_pivotref.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "group_count",
        "type": "idx_t"
      },
      {
        "id": 101,
        "name": "types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 102,
        "name": "pivot_values",
        "type": "vector<string>"
      },
      {
        "id": 103,
        "name": "aggregates",
        "type": "vector<Expression*>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "ColumnDefinition",
    "includes": [
      "duckdb/parser/column_definition.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "name",
        "type": "string"
      },
      {
        "id": 101,
        "name": "type",
        "type": "LogicalType"
      },
      {
        "id": 102,
        "name": "expression",
        "type": "ParsedExpression*",
        "optional": true
      },
      {
        "id": 103,
        "name": "category",
        "type": "TableColumnType"
      },
      {
        "id": 104,
        "name": "compression_type",
        "type": "CompressionType"
      }
    ],
    "constructor": ["name", "type", "expression", "category"],
    "pointer_type": "none"
  },
  {
    "class": "ColumnList",
    "includes": [
      "duckdb/parser/column_list.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "columns",
        "type": "vector<ColumnDefinition>"
      }
    ],
    "constructor": ["columns"],
    "pointer_type": "none"
  },
  {
    "class": "ColumnBinding",
    "includes": [
      "duckdb/planner/column_binding.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 101,
        "name": "column_index",
        "type": "idx_t"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "BoundParameterData",
    "includes": [
      "duckdb/planner/expression/bound_parameter_data.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "value",
        "type": "Value"
      },
      {
        "id": 101,
        "name": "return_type",
        "type": "LogicalType"
      }
    ],
    "constructor": ["value"],
    "pointer_type": "shared_ptr"
  },
  {
    "class": "JoinCondition",
    "includes": [
      "duckdb/planner/joinside.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "left",
        "type": "Expression*"
      },
      {
        "id": 101,
        "name": "right",
        "type": "Expression*"
      },
      {
        "id": 102,
        "name": "comparison",
        "type": "ExpressionType"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "VacuumOptions",
    "includes": [
      "duckdb/parser/parsed_data/vacuum_info.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "vacuum",
        "type": "bool"
      },
      {
        "id": 101,
        "name": "analyze",
        "type": "bool"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "TableFilterSet",
    "includes": [
      "duckdb/planner/table_filter.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "filters",
        "type": "unordered_map<idx_t, TableFilter*>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "MultiFileReaderOptions",
    "includes": [
      "duckdb/common/multi_file_reader_options.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "filename",
        "type": "bool"
      },
      {
        "id": 101,
        "name": "hive_partitioning",
        "type": "bool"
      },
      {
        "id": 102,
        "name": "auto_detect_hive_partitioning",
        "type": "bool"
      },
      {
        "id": 103,
        "name": "union_by_name",
        "type": "bool"
      },
      {
        "id": 104,
        "name": "hive_types_autocast",
        "type": "bool"
      },
      {
        "id": 105,
        "name": "hive_types_schema",
        "type": "unordered_map<string, LogicalType>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "MultiFileReaderBindData",
    "includes": [
      "duckdb/common/multi_file_reader.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "filename_idx",
        "type": "idx_t"
      },
      {
        "id": 101,
        "name": "hive_partitioning_indexes",
        "type": "vector<HivePartitioningIndex>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "HivePartitioningIndex",
    "members": [
      {
        "id": 100,
        "name": "value",
        "type": "string"
      },
      {
        "id": 101,
        "name": "index",
        "type": "idx_t"
      }
    ],
    "pointer_type": "none",
    "constructor": ["value", "index"]
  },
  {
    "class": "CSVReaderOptions",
    "includes": [
      "duckdb/execution/operator/scan/csv/csv_reader_options.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "has_delimiter",
        "type": "bool"
      },
      {"id": 101,
        "name": "has_quote",
        "type": "bool"
      },
      {"id": 102,
        "name": "has_escape",
        "type": "bool"
      },
      {"id": 103,
        "name": "has_header",
        "type": "bool"
      },
      {"id": 104,
        "name": "ignore_errors",
        "type": "bool"
      },
      {"id": 105,
        "name": "buffer_sample_size",
        "type": "idx_t"
      },
      {"id": 106,
        "name": "null_str",
        "type": "string"
      },
      {"id": 107,
        "name": "compression",
        "type": "FileCompressionType"
      },
      {"id": 108,
        "name": "allow_quoted_nulls",
        "type": "bool"
      },
      {"id": 109,
        "name": "skip_rows_set",
        "type": "bool"
      },
      {"id": 110,
        "name": "maximum_line_size",
        "type": "idx_t"
      },
      {"id": 111,
        "name": "normalize_names",
        "type": "bool"
      },
      {"id": 112,
        "name": "force_not_null",
        "type": "vector<bool>"
      },
      {"id": 113,
        "name": "all_varchar",
        "type": "bool"
      },
      {"id": 114,
        "name": "sample_chunk_size",
        "type": "idx_t"
      },
      {"id": 115,
        "name": "sample_chunks",
        "type": "idx_t"
      },
      {"id": 116,
        "name": "auto_detect",
        "type": "bool"
      },
      {"id": 117,
        "name": "file_path",
        "type": "string"
      },
      {"id": 118,
        "name": "decimal_separator",
        "type": "string"
      },
      {"id": 119,
        "name": "null_padding",
        "type": "bool"
      },
      {"id": 120,
        "name": "buffer_size",
        "type": "idx_t"
      },
      {"id": 121,
        "name": "file_options",
        "type": "MultiFileReaderOptions"
      },
      {"id": 122,
        "name": "force_quote",
        "type": "vector<bool>"
      },
      {"id": 123,
        "name": "rejects_table_name",
        "type": "string"
      },
      {"id": 124,
        "name": "rejects_limit",
        "type": "idx_t"
      },
      {"id": 125,
        "name": "rejects_recovery_columns",
        "type": "vector<string>"
      },
      {"id": 126,
        "name": "rejects_recovery_column_ids",
        "type": "vector<idx_t>"
      },
      {"id": 127,
        "name": "dialect_options.state_machine_options.delimiter",
        "type": "char"
      },
      {"id": 128,
        "name": "dialect_options.state_machine_options.quote",
        "type": "char"
      },
      {"id": 129,
        "name": "dialect_options.state_machine_options.escape",
        "type": "char"
      },
       {"id": 130,
        "name": "dialect_options.header",
        "type": "bool"
      },
            {"id": 131,
        "name": "dialect_options.num_cols",
        "type": "idx_t"
      },
            {"id": 132,
        "name": "dialect_options.new_line",
        "type": "NewLineIdentifier"
      },
            {"id": 133,
        "name": "dialect_options.skip_rows",
        "type": "idx_t"
      },
      {"id": 134,
        "name": "dialect_options.date_format",
        "type": "unordered_map<LogicalTypeId, StrpTimeFormat>"
      },
      {"id": 135,
        "name": "dialect_options.has_format",
        "type": "unordered_map<bool, StrpTimeFormat>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "StrpTimeFormat",
    "includes": [
      "duckdb/function/scalar/strftime_format.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "format_specifier",
        "type": "string"
      }
    ],
    "constructor": ["format_specifier&"],
    "pointer_type": "none"
  },
  {
    "class": "ReadCSVData",
    "includes": [
      "duckdb/function/table/read_csv.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "files",
        "type": "vector<string>"
      },
      {
        "id": 101,
        "name": "csv_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 102,
        "name": "csv_names",
        "type": "vector<string>"
      },
      {
        "id": 103,
        "name": "return_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 104,
        "name": "return_names",
        "type": "vector<string>"
      },
      {
        "id": 105,
        "name": "filename_col_idx",
        "type": "idx_t"
      },
      {
        "id": 106,
        "name": "options",
        "type": "BufferedCSVReaderOptions"
      },
      {
        "id": 107,
        "name": "single_threaded",
        "type": "bool"
      },
      {
        "id": 108,
        "name": "reader_bind",
        "type": "MultiFileReaderBindData"
      },
      {
        "id": 109,
        "name": "column_info",
        "type": "vector<ColumnInfo>"
      }
    ]
  },
  {
    "class": "ColumnInfo",
    "members": [
      {
        "id": 100,
        "name": "names",
        "type": "vector<string>"
      },
      {
        "id": 101,
        "name": "types",
        "type": "vector<LogicalType>"
      }
    ],
    "pointer_type": "none"
  },
  {
    "class": "interval_t",
    "includes": [
      "duckdb/common/types/interval.hpp"
    ],
    "members": [
      {
        "id": 1,
        "name": "months",
        "type": "int32_t"
      },
      {
          "id": 2,
          "name": "days",
          "type": "int32_t"
      },
      {
          "id": 3,
          "name": "micros",
          "type": "int64_t"
      }
    ],
    "pointer_type": "none"
  }
]
