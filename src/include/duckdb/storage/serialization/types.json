[
  {
    "class": "ExtraTypeInfo",
    "class_type": "type",
    "includes": [
      "duckdb/common/extra_type_info.hpp"
    ],
    "members": [
      {
        "name": "type",
        "type": "ExtraTypeInfoType"
      },
      {
        "name": "alias",
        "type": "string"
      }
    ],
    "pointer_type": "shared_ptr"
  },
  {
    "class": "DecimalTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "DECIMAL_TYPE_INFO",
    "members": [
      {
        "name": "width",
        "type": "uint8_t"
      },
      {
        "name": "scale",
        "type": "uint8_t"
      }
    ]
  },
  {
    "class": "StringTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "STRING_TYPE_INFO",
    "members": [
      {
        "name": "collation",
        "type": "string"
      }
    ]
  },
  {
    "class": "ListTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "LIST_TYPE_INFO",
    "members": [
      {
        "name": "child_type",
        "type": "LogicalType"
      }
    ]
  },
  {
    "class": "StructTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "STRUCT_TYPE_INFO",
    "members": [
      {
        "name": "child_types",
        "type": "child_list_t<LogicalType>"
      }
    ]
  },
  {
    "class": "AggregateStateTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "AGGREGATE_STATE_TYPE_INFO",
    "members": [
      {
        "name": "function_name",
        "type": "string",
        "property": "state_type.function_name"
      },
      {
        "name": "return_type",
        "type": "LogicalType",
        "property": "state_type.return_type"
      },
      {
        "name": "bound_argument_types",
        "type": "vector<LogicalType>",
        "property": "state_type.bound_argument_types"
      }
    ]
  },
  {
    "class": "UserTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "USER_TYPE_INFO",
    "members": [
      {
        "name": "user_type_name",
        "type": "string"
      }
    ]
  },
  {
    "class": "EnumTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "ENUM_TYPE_INFO",
    "custom_implementation": true
  },
  {
    "class": "InvalidTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "INVALID_TYPE_INFO",
    "custom_switch_code": "return nullptr;"
  },
  {
    "class": "GenericTypeInfo",
    "base": "ExtraTypeInfo",
    "enum": "GENERIC_TYPE_INFO",
    "custom_switch_code": "result = make_shared<ExtraTypeInfo>(type);\nbreak;"
  }
]
