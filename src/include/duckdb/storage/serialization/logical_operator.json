[
  {
    "class": "LogicalOperator",
    "class_type": "type",
    "set_parameters": [
      "type"
    ],
    "includes": [
      "duckdb/planner/operator/list.hpp"
    ],
    "members": [
      {
        "id": 100,
        "name": "type",
        "type": "LogicalOperatorType"
      },
      {
        "id": 101,
        "name": "children",
        "type": "vector<LogicalOperator*>"
      }
    ]
  },
  {
    "class": "LogicalProjection",
    "base": "LogicalOperator",
    "enum": "LOGICAL_PROJECTION",
    "members": [
      {
        "id": 200,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["table_index", "expressions"]
  },
  {
    "class": "LogicalFilter",
    "base": "LogicalOperator",
    "enum": "LOGICAL_FILTER",
    "members": [
      {
        "id": 200,
        "name": "expressions",
        "type": "vector<Expression*>"
      },
      {
        "id": 201,
        "name": "projection_map",
        "type": "vector<idx_t>"
      }
    ]
  },
  {
    "class": "LogicalAggregate",
    "base": "LogicalOperator",
    "enum": "LOGICAL_AGGREGATE_AND_GROUP_BY",
    "members": [
      {
        "id": 200,
        "name": "expressions",
        "type": "vector<Expression*>"
      },
      {
        "id": 201,
        "name": "group_index",
        "type": "idx_t"
      },
      {
        "id": 202,
        "name": "aggregate_index",
        "type": "idx_t"
      },
      {
        "id": 203,
        "name": "groupings_index",
        "type": "idx_t"
      },
      {
        "id": 204,
        "name": "groups",
        "type": "vector<Expression*>"
      },
      {
        "id": 205,
        "name": "grouping_sets",
        "type": "vector<GroupingSet>"
      },
      {
        "id": 206,
        "name": "grouping_functions",
        "type": "vector<vector<idx_t>>"
      }
    ],
    "constructor": ["group_index", "aggregate_index", "expressions"]
  },
  {
    "class": "LogicalWindow",
    "base": "LogicalOperator",
    "enum": "LOGICAL_WINDOW",
    "members": [
      {
        "id": 200,
        "name": "window_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["window_index"]
  },
  {
    "class": "LogicalUnnest",
    "base": "LogicalOperator",
    "enum": "LOGICAL_UNNEST",
    "members": [
      {
        "id": 200,
        "name": "unnest_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["unnest_index"]
  },
  {
    "class": "LogicalLimit",
    "base": "LogicalOperator",
    "enum": "LOGICAL_LIMIT",
    "members": [
      {
        "id": 200,
        "name": "limit_val",
        "type": "int64_t"
      },
      {
        "id": 201,
        "name": "offset_val",
        "type": "int64_t"
      },
      {
        "id": 202,
        "name": "limit",
        "type": "Expression*",
        "optional": true
      },
      {
        "id": 203,
        "name": "offset",
        "type": "Expression*",
        "optional": true
      }
    ],
    "constructor": ["limit_val", "offset_val", "limit", "offset"]
  },
  {
    "class": "LogicalOrder",
    "base": "LogicalOperator",
    "enum": "LOGICAL_ORDER_BY",
    "members": [
      {
        "id": 200,
        "name": "orders",
        "type": "vector<BoundOrderByNode>"
      },
      {
        "id": 201,
        "name": "projections",
        "type": "vector<idx_t>"
      }
    ],
    "constructor": ["orders"]
  },
  {
    "class": "LogicalTopN",
    "base": "LogicalOperator",
    "enum": "LOGICAL_TOP_N",
    "members": [
      {
        "id": 200,
        "name": "orders",
        "type": "vector<BoundOrderByNode>"
      },
      {
        "id": 201,
        "name": "limit",
        "type": "idx_t"
      },
      {
        "id": 202,
        "name": "offset",
        "type": "idx_t"
      }
    ],
    "constructor": ["orders", "limit", "offset"]
  },
  {
    "class": "LogicalDistinct",
    "base": "LogicalOperator",
    "enum": "LOGICAL_DISTINCT",
    "members": [
      {
        "id": 200,
        "name": "distinct_type",
        "type": "DistinctType"
      },
      {
        "id": 201,
        "name": "distinct_targets",
        "type": "vector<Expression*>"
      },
      {
        "id": 202,
        "name": "order_by",
        "type": "BoundOrderModifier*",
        "optional": true
      }
    ],
    "constructor": ["distinct_targets", "distinct_type"]
  },
  {
    "class": "LogicalSample",
    "base": "LogicalOperator",
    "enum": "LOGICAL_SAMPLE",
    "members": [
      {
        "id": 200,
        "name": "sample_options",
        "type": "SampleOptions"
      }
    ]
  },
  {
    "class": "LogicalLimitPercent",
    "base": "LogicalOperator",
    "enum": "LOGICAL_LIMIT_PERCENT",
    "members": [
      {
        "id": 200,
        "name": "limit_percent",
        "type": "double"
      },
      {
        "id": 201,
        "name": "offset_val",
        "type": "int64_t"
      },
      {
        "id": 202,
        "name": "limit",
        "type": "Expression*",
        "optional": true
      },
      {
        "id": 203,
        "name": "offset",
        "type": "Expression*",
        "optional": true
      }
    ],
    "constructor": ["limit_percent", "offset_val", "limit", "offset"]
  },
  {
    "class": "LogicalColumnDataGet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_CHUNK_GET",
    "members": [
      {
        "id": 200,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "chunk_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 202,
        "name": "collection",
        "type": "ColumnDataCollection*"
      }
    ],
    "constructor": ["table_index", "chunk_types", "collection"]
  },
  {
    "class": "LogicalDelimGet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_DELIM_GET",
    "members": [
      {
        "id": 200,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "chunk_types",
        "type": "vector<LogicalType>"
      }
    ],
    "constructor": ["table_index", "chunk_types"]
  },
  {
    "class": "LogicalExpressionGet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_EXPRESSION_GET",
    "members": [
      {
        "id": 200,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "expr_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 202,
        "name": "expressions",
        "type": "vector<vector<Expression*>>"
      }
    ],
    "constructor": ["table_index", "expr_types", "expressions"]
  },
  {
    "class": "LogicalDummyScan",
    "base": "LogicalOperator",
    "enum": "LOGICAL_DUMMY_SCAN",
    "members": [
      {
        "id": 200,
        "name": "table_index",
        "type": "idx_t"
      }
    ],
    "constructor": ["table_index"]
  },
  {
    "class": "LogicalEmptyResult",
    "base": "LogicalOperator",
    "enum": "LOGICAL_EMPTY_RESULT",
    "members": [
      {
        "id": 200,
        "name": "return_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 201,
        "name": "bindings",
        "type": "vector<ColumnBinding>"
      }
    ]
  },
  {
    "class": "LogicalCTERef",
    "base": "LogicalOperator",
    "enum": "LOGICAL_CTE_REF",
    "members": [
      {
        "id": 200,  
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "cte_index",
        "type": "idx_t"
      },
      {
        "id": 202,
        "name": "chunk_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 203,
        "name": "bound_columns",
        "type": "vector<string>"
      },
      {
        "id": 204,
        "name": "materialized_cte",
        "type": "CTEMaterialize"
      }
    ],
    "constructor": ["table_index", "cte_index", "chunk_types", "bound_columns", "materialized_cte"]
  },
  {
    "class": "LogicalComparisonJoin",
    "base": "LogicalOperator",
    "enum": ["LOGICAL_ASOF_JOIN", "LOGICAL_COMPARISON_JOIN", "LOGICAL_DELIM_JOIN"],
    "members": [
      {
        "id": 200,
        "name": "join_type",
        "type": "JoinType"
      },
      {
        "id": 201,
        "name": "mark_index",
        "type": "idx_t"
      },
      {
        "id": 202,
        "name": "left_projection_map",
        "type": "vector<idx_t>"
      },
      {
        "id": 203,
        "name": "right_projection_map",
        "type": "vector<idx_t>"
      },
      {
        "id": 204,
        "name": "conditions",
        "type": "vector<JoinCondition>"
      },
      {
        "id": 205,
        "name": "mark_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 206,
        "name": "duplicate_eliminated_columns",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["join_type", "type"]
  },
  {
    "class": "LogicalAnyJoin",
    "base": "LogicalOperator",
    "enum": "LOGICAL_ANY_JOIN",
    "members": [
      {
        "id": 200,
        "name": "join_type",
        "type": "JoinType"
      },
      {
        "id": 201,
        "name": "mark_index",
        "type": "idx_t"
      },
      {
        "id": 202,
        "name": "left_projection_map",
        "type": "vector<idx_t>"
      },
      {
        "id": 203,
        "name": "right_projection_map",
        "type": "vector<idx_t>"
      },
      {
        "id": 204,
        "name": "condition",
        "type": "Expression*"
      }
    ],
    "constructor": ["join_type"]
  },
  {
    "class": "LogicalCrossProduct",
    "base": "LogicalOperator",
    "enum": "LOGICAL_CROSS_PRODUCT",
    "members": [
    ]
  },
  {
    "class": "LogicalPositionalJoin",
    "base": "LogicalOperator",
    "enum": "LOGICAL_POSITIONAL_JOIN",
    "members": [
    ]
  },
  {
    "class": "LogicalSetOperation",
    "base": "LogicalOperator",
    "enum": ["LOGICAL_UNION", "LOGICAL_EXCEPT", "LOGICAL_INTERSECT"],
    "members": [
      {
        "id": 200,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "column_count",
        "type": "idx_t"
      }
    ],
    "constructor": ["table_index", "column_count", "type"]
  },
  {
    "class": "LogicalRecursiveCTE",
    "base": "LogicalOperator",
    "enum": "LOGICAL_RECURSIVE_CTE",
    "members": [
      {
        "id": 200,
        "name": "union_all",
        "type": "bool"
      },
      {
        "id": 201,
        "name": "ctename",
        "type": "string"
      },
      {
        "id": 202,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 203,
        "name": "column_count",
        "type": "idx_t"
      }
    ]
  },
  {
    "class": "LogicalMaterializedCTE",
    "base": "LogicalOperator",
    "enum": "LOGICAL_MATERIALIZED_CTE",
    "members": [
      {
        "id": 200,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "column_count",
        "type": "idx_t"
      },
      {
        "id": 202,
        "name": "ctename",
        "type": "string"
      }
    ]
  },
  {
    "class": "LogicalInsert",
    "base": "LogicalOperator",
    "enum": "LOGICAL_INSERT",
    "includes": [
      "duckdb/catalog/catalog_entry/schema_catalog_entry.hpp",
      "duckdb/catalog/catalog_entry/table_catalog_entry.hpp"
    ],
    "members": [
      {
        "id": 200,
        "name": "catalog",
        "type": "string",
        "serialize_property": "table.ParentCatalog().GetName()"
      },
      {
        "id": 201,
        "name": "schema",
        "type": "string",
        "serialize_property": "table.ParentSchema().name"
      },
      {
        "id": 202,
        "name": "table",
        "type": "string",
        "serialize_property": "table.name"
      },
      {
        "id": 203,
        "name": "insert_values",
        "type": "vector<vector<Expression*>>"
      },
      {
        "id": 204,
        "name": "column_index_map",
        "type": "vector<idx_t>"
      },
      {
        "id": 205,
        "name": "expected_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 206,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 207,
        "name": "return_chunk",
        "type": "bool"
      },
      {
        "id": 208,
        "name": "bound_defaults",
        "type": "vector<Expression*>"
      },
      {
        "id": 209,
        "name": "action_type",
        "type": "OnConflictAction"
      },
      {
        "id": 210,
        "name": "expected_set_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 211,
        "name": "on_conflict_filter",
        "type": "unordered_set<idx_t>"
      },
      {
        "id": 212,
        "name": "on_conflict_condition",
        "type": "Expression*",
        "optional": true
      },
      {
        "id": 213,
        "name": "do_update_condition",
        "type": "Expression*",
        "optional": true
      },
      {
        "id": 214,
        "name": "set_columns",
        "type": "vector<idx_t>"
      },
      {
        "id": 215,
        "name": "set_types",
        "type": "vector<LogicalType>"
      },
      {
        "id": 216,
        "name": "excluded_table_index",
        "type": "idx_t"
      },
      {
        "id": 217,
        "name": "columns_to_fetch",
        "type": "vector<column_t>"
      },
      {
        "id": 218,
        "name": "source_columns",
        "type": "vector<column_t>"
      },
      {
        "id": 219,
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["$ClientContext", "catalog&", "schema&", "table&"]
  },
  {
    "class": "LogicalDelete",
    "base": "LogicalOperator",
    "enum": "LOGICAL_DELETE",
    "members": [
      {
        "id": 200,
        "name": "catalog",
        "type": "string",
        "serialize_property": "table.ParentCatalog().GetName()"
      },
      {
        "id": 201,
        "name": "schema",
        "type": "string",
        "serialize_property": "table.ParentSchema().name"
      },
      {
        "id": 202,
        "name": "table",
        "type": "string",
        "serialize_property": "table.name"
      },
      {
        "id": 203,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 204,
        "name": "return_chunk",
        "type": "bool"
      },
      {
        "id": 205,
        "name": "expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["$ClientContext", "catalog&", "schema&", "table&"]
  },
  {
    "class": "LogicalUpdate",
    "base": "LogicalOperator",
    "enum": "LOGICAL_UPDATE",
    "members": [
      {
        "id": 200,
        "name": "catalog",
        "type": "string",
        "serialize_property": "table.ParentCatalog().GetName()"
      },
      {
        "id": 201,
        "name": "schema",
        "type": "string",
        "serialize_property": "table.ParentSchema().name"
      },
      {
        "id": 202,
        "name": "table",
        "type": "string",
        "serialize_property": "table.name"
      },
      {
        "id": 203,
        "name": "table_index",
        "type": "idx_t"
      },
      {
        "id": 204,
        "name": "return_chunk",
        "type": "bool"
      },
      {
        "id": 205,
        "name": "expressions",
        "type": "vector<Expression*>"
      },
      {
        "id": 206,
        "name": "columns",
        "type": "vector<PhysicalIndex>"
      },
      {
        "id": 207,
        "name": "bound_defaults",
        "type": "vector<Expression*>"
      },
      {
        "id": 208,
        "name": "update_is_del_and_insert",
        "type": "bool"
      }
    ],
    "constructor": ["$ClientContext", "catalog&", "schema&", "table&"]
  },
  {
    "class": "LogicalCreateTable",
    "base": "LogicalOperator",
    "enum": "LOGICAL_CREATE_TABLE",
    "members": [
      {
        "id": 200,
        "name": "catalog",
        "type": "string",
        "serialize_property": "schema.ParentCatalog().GetName()"
      },
      {
        "id": 201,
        "name": "schema",
        "type": "string",
        "serialize_property": "schema.name"
      },
      {
        "id": 202,
        "name": "info",
        "type": "CreateInfo*",
        "serialize_property": "info->base"
      }
    ],
    "constructor": ["$ClientContext", "catalog&", "schema&", "info"]
  },
  {
    "class": "LogicalCreate",
    "base": "LogicalOperator",
    "enum": ["LOGICAL_CREATE_SEQUENCE", "LOGICAL_CREATE_VIEW", "LOGICAL_CREATE_SCHEMA", "LOGICAL_CREATE_MACRO", "LOGICAL_CREATE_TYPE"],
    "members": [
      {
        "id": 200,
        "name": "info",
        "type": "CreateInfo*"
      }
    ],
    "constructor": ["type", "$ClientContext", "info"]
  },
  {
    "class": "LogicalExplain",
    "base": "LogicalOperator",
    "enum": "LOGICAL_EXPLAIN",
    "members": [
      {
        "id": 200,
        "name": "explain_type",
        "type": "ExplainType"
      },
      {
        "id": 201,
        "name": "physical_plan",
        "type": "string"
      },
      {
        "id": 202,
        "name": "logical_plan_unopt",
        "type": "string"
      },
      {
        "id": 203,
        "name": "logical_plan_opt",
        "type": "string"
      }
    ],
    "constructor": ["explain_type"]
  },
  {
    "class": "LogicalShow",
    "base": "LogicalOperator",
    "enum": "LOGICAL_SHOW",
    "members": [
      {
        "id": 200,
        "name": "types_select",
        "type": "vector<LogicalType>"
      },
      {
        "id": 201,
        "name": "aliases",
        "type": "vector<string>"
      }
    ]
  },
  {
    "class": "LogicalSet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_SET",
    "members": [
      {
        "id": 200,
        "name": "name",
        "type": "string"
      },
      {
        "id": 201,
        "name": "value",
        "type": "Value"
      },
      {
        "id": 202,
        "name": "scope",
        "type": "SetScope"
      }
    ],
    "constructor": ["name", "value", "scope"]
  },
  {
    "class": "LogicalReset",
    "base": "LogicalOperator",
    "enum": "LOGICAL_RESET",
    "members": [
      {
        "id": 200,
        "name": "name",
        "type": "string"
      },
      {
        "id": 201,
        "name": "scope",
        "type": "SetScope"
      }
    ],
    "constructor": ["name", "scope"]
  },
  {
    "class": "LogicalSimple",
    "base": "LogicalOperator",
    "enum": ["LOGICAL_ALTER", "LOGICAL_VACUUM", "LOGICAL_LOAD", "LOGICAL_ATTACH", "LOGICAL_TRANSACTION", "LOGICAL_DROP", "LOGICAL_DETACH"],
    "members": [
      {
        "id": 200,
        "name": "info",
        "type": "ParseInfo*"
      }
    ],
    "constructor": ["type", "info"]
  },
  {
    "class": "LogicalPivot",
    "base": "LogicalOperator",
    "enum": "LOGICAL_PIVOT",
    "members": [
      {
        "id": 200,
        "name": "pivot_index",
        "type": "idx_t"
      },
      {
        "id": 201,
        "name": "bound_pivot",
        "type": "BoundPivotInfo"
      }
    ]
  },
  {
    "class": "LogicalGet",
    "base": "LogicalOperator",
    "enum": "LOGICAL_GET",
    "custom_implementation": true
  },
  {
    "class": "LogicalCopyToFile",
    "base": "LogicalOperator",
    "enum": "LOGICAL_COPY_TO_FILE",
    "custom_implementation": true
  },
  {
    "class": "LogicalCreateIndex",
    "base": "LogicalOperator",
    "enum": "LOGICAL_CREATE_INDEX",
    "members": [
      {
        "id": 200,
        "name": "info",
        "type": "CreateInfo*"
      },
      {
        "id": 201,
        "name": "unbound_expressions",
        "type": "vector<Expression*>"
      }
    ],
    "constructor": ["$ClientContext", "info", "unbound_expressions"]
  },
  {
    "class": "LogicalExtensionOperator",
    "base": "LogicalOperator",
    "enum": "LOGICAL_EXTENSION_OPERATOR",
    "custom_implementation": true
  }
]
