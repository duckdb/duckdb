//===----------------------------------------------------------------------===//
//                         DuckDB
//
// function/scalar/generic_functions.hpp
//
//
//===----------------------------------------------------------------------===//
// This file is automatically generated by scripts/generate_functions.py
// Do not edit this file manually, your changes will be overwritten
//===----------------------------------------------------------------------===//

#pragma once

#include "duckdb/function/function_set.hpp"

namespace duckdb {

struct ConstantOrNullFun {
	static constexpr const char *Name = "constant_or_null";
	static constexpr const char *Parameters = "arg1,arg2";
	static constexpr const char *Description = "If arg2 is NULL, return NULL. Otherwise, return arg1.";
	static constexpr const char *Example = "constant_or_null(42, NULL)";

	static ScalarFunction GetFunction();
};

struct GetVariableFun {
	static constexpr const char *Name = "getvariable";
	static constexpr const char *Parameters = "";
	static constexpr const char *Description = "";
	static constexpr const char *Example = "";

	static ScalarFunction GetFunction();
};

struct ErrorFun {
	static constexpr const char *Name = "error";
	static constexpr const char *Parameters = "message";
	static constexpr const char *Description = "Throws the given error message";
	static constexpr const char *Example = "error('access_mode')";

	static ScalarFunction GetFunction();
};

struct CreateSortKeyFun {
	static constexpr const char *Name = "create_sort_key";
	static constexpr const char *Parameters = "parameters...";
	static constexpr const char *Description = "Constructs a binary-comparable sort key based on a set of input parameters and sort qualifiers";
	static constexpr const char *Example = "create_sort_key('A', 'DESC')";

	static ScalarFunction GetFunction();
};

} // namespace duckdb
