//-------------------------------------------------------------------------
//                         DuckDB
//
// duckdb/main/profiling_utils.hpp
// 
// This file is automatically generated by scripts/generate_metric_enums.py
// Do not edit this file manually, your changes will be overwritten
//-------------------------------------------------------------------------

#pragma once

#include "duckdb/common/enums/metric_type.hpp"

namespace duckdb_yyjson {
struct yyjson_mut_doc;
struct yyjson_mut_val;
} // namespace duckdb_yyjson

namespace duckdb {

class ProfilingUtils {
public:
	static void SetMetricToDefault(profiler_metrics_t &metrics, const MetricsType &type);
	static void MetricToJson(duckdb_yyjson::yyjson_mut_doc *doc, duckdb_yyjson::yyjson_mut_val *dest, const char *key_ptr,  profiler_metrics_t &metrics, const MetricsType &type);
	static void CollectMetrics(const MetricsType &type, QueryMetrics &query_metrics, Value &metric, ProfilingNode &node, ProfilingInfo &child_info);

private:
	static string OperatorToString(const Value &val);

	template <class METRIC_TYPE>
	static void AggregateMetric(ProfilingNode &node, MetricsType aggregated_metric, MetricsType child_metric, const std::function<METRIC_TYPE(const METRIC_TYPE &, const METRIC_TYPE &)> &update_fun);

	template <class METRIC_TYPE>
	static void GetCumulativeMetric(ProfilingNode &node, MetricsType cumulative_metric, MetricsType child_metric);

	static Value GetCumulativeOptimizers(ProfilingNode &node);

};

}
