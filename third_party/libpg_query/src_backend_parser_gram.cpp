/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXTENSION = 408,
     EXTERNAL = 409,
     EXTRACT = 410,
     FALSE_P = 411,
     FAMILY = 412,
     FETCH = 413,
     FILTER = 414,
     FIRST_P = 415,
     FLOAT_P = 416,
     FOLLOWING = 417,
     FOR = 418,
     FORCE = 419,
     FOREIGN = 420,
     FORWARD = 421,
     FREEZE = 422,
     FROM = 423,
     FULL = 424,
     FUNCTION = 425,
     FUNCTIONS = 426,
     GENERATED = 427,
     GLOB = 428,
     GLOBAL = 429,
     GRANT = 430,
     GRANTED = 431,
     GROUP_P = 432,
     GROUPING = 433,
     GROUPING_ID = 434,
     HANDLER = 435,
     HAVING = 436,
     HEADER_P = 437,
     HOLD = 438,
     HOUR_P = 439,
     HOURS_P = 440,
     IDENTITY_P = 441,
     IF_P = 442,
     ILIKE = 443,
     IMMEDIATE = 444,
     IMMUTABLE = 445,
     IMPLICIT_P = 446,
     IMPORT_P = 447,
     IN_P = 448,
     INCLUDING = 449,
     INCREMENT = 450,
     INDEX = 451,
     INDEXES = 452,
     INHERIT = 453,
     INHERITS = 454,
     INITIALLY = 455,
     INLINE_P = 456,
     INNER_P = 457,
     INOUT = 458,
     INPUT_P = 459,
     INSENSITIVE = 460,
     INSERT = 461,
     INSTEAD = 462,
     INT_P = 463,
     INTEGER = 464,
     INTERSECT = 465,
     INTERVAL = 466,
     INTO = 467,
     INVOKER = 468,
     IS = 469,
     ISNULL = 470,
     ISOLATION = 471,
     JOIN = 472,
     KEY = 473,
     LABEL = 474,
     LANGUAGE = 475,
     LARGE_P = 476,
     LAST_P = 477,
     LATERAL_P = 478,
     LEADING = 479,
     LEAKPROOF = 480,
     LEFT = 481,
     LEVEL = 482,
     LIKE = 483,
     LIMIT = 484,
     LISTEN = 485,
     LOAD = 486,
     LOCAL = 487,
     LOCALTIME = 488,
     LOCALTIMESTAMP = 489,
     LOCATION = 490,
     LOCK_P = 491,
     LOCKED = 492,
     LOGGED = 493,
     MACRO = 494,
     MAP = 495,
     MAPPING = 496,
     MATCH = 497,
     MATERIALIZED = 498,
     MAXVALUE = 499,
     METHOD = 500,
     MICROSECOND_P = 501,
     MICROSECONDS_P = 502,
     MILLISECOND_P = 503,
     MILLISECONDS_P = 504,
     MINUTE_P = 505,
     MINUTES_P = 506,
     MINVALUE = 507,
     MODE = 508,
     MONTH_P = 509,
     MONTHS_P = 510,
     MOVE = 511,
     NAME_P = 512,
     NAMES = 513,
     NATIONAL = 514,
     NATURAL = 515,
     NCHAR = 516,
     NEW = 517,
     NEXT = 518,
     NO = 519,
     NONE = 520,
     NOT = 521,
     NOTHING = 522,
     NOTIFY = 523,
     NOTNULL = 524,
     NOWAIT = 525,
     NULL_P = 526,
     NULLIF = 527,
     NULLS_P = 528,
     NUMERIC = 529,
     OBJECT_P = 530,
     OF = 531,
     OFF = 532,
     OFFSET = 533,
     OIDS = 534,
     OLD = 535,
     ON = 536,
     ONLY = 537,
     OPERATOR = 538,
     OPTION = 539,
     OPTIONS = 540,
     OR = 541,
     ORDER = 542,
     ORDINALITY = 543,
     OUT_P = 544,
     OUTER_P = 545,
     OVER = 546,
     OVERLAPS = 547,
     OVERLAY = 548,
     OVERRIDING = 549,
     OWNED = 550,
     OWNER = 551,
     PARALLEL = 552,
     PARSER = 553,
     PARTIAL = 554,
     PARTITION = 555,
     PASSING = 556,
     PASSWORD = 557,
     PERCENT = 558,
     PLACING = 559,
     PLANS = 560,
     POLICY = 561,
     POSITION = 562,
     PRAGMA_P = 563,
     PRECEDING = 564,
     PRECISION = 565,
     PREPARE = 566,
     PREPARED = 567,
     PRESERVE = 568,
     PRIMARY = 569,
     PRIOR = 570,
     PRIVILEGES = 571,
     PROCEDURAL = 572,
     PROCEDURE = 573,
     PROGRAM = 574,
     PUBLICATION = 575,
     QUOTE = 576,
     RANGE = 577,
     READ_P = 578,
     REAL = 579,
     REASSIGN = 580,
     RECHECK = 581,
     RECURSIVE = 582,
     REF = 583,
     REFERENCES = 584,
     REFERENCING = 585,
     REFRESH = 586,
     REINDEX = 587,
     RELATIVE_P = 588,
     RELEASE = 589,
     RENAME = 590,
     REPEATABLE = 591,
     REPLACE = 592,
     REPLICA = 593,
     RESET = 594,
     RESTART = 595,
     RESTRICT = 596,
     RETURNING = 597,
     RETURNS = 598,
     REVOKE = 599,
     RIGHT = 600,
     ROLE = 601,
     ROLLBACK = 602,
     ROLLUP = 603,
     ROW = 604,
     ROWS = 605,
     RULE = 606,
     SAMPLE = 607,
     SAVEPOINT = 608,
     SCHEMA = 609,
     SCHEMAS = 610,
     SCROLL = 611,
     SEARCH = 612,
     SECOND_P = 613,
     SECONDS_P = 614,
     SECURITY = 615,
     SELECT = 616,
     SEQUENCE = 617,
     SEQUENCES = 618,
     SERIALIZABLE = 619,
     SERVER = 620,
     SESSION = 621,
     SESSION_USER = 622,
     SET = 623,
     SETOF = 624,
     SETS = 625,
     SHARE = 626,
     SHOW = 627,
     SIMILAR = 628,
     SIMPLE = 629,
     SKIP = 630,
     SMALLINT = 631,
     SNAPSHOT = 632,
     SOME = 633,
     SQL_P = 634,
     STABLE = 635,
     STANDALONE_P = 636,
     START = 637,
     STATEMENT = 638,
     STATISTICS = 639,
     STDIN = 640,
     STDOUT = 641,
     STORAGE = 642,
     STRICT_P = 643,
     STRIP_P = 644,
     STRUCT = 645,
     SUBSCRIPTION = 646,
     SUBSTRING = 647,
     SUMMARIZE = 648,
     SYMMETRIC = 649,
     SYSID = 650,
     SYSTEM_P = 651,
     TABLE = 652,
     TABLES = 653,
     TABLESAMPLE = 654,
     TABLESPACE = 655,
     TEMP = 656,
     TEMPLATE = 657,
     TEMPORARY = 658,
     TEXT_P = 659,
     THEN = 660,
     TIME = 661,
     TIMESTAMP = 662,
     TO = 663,
     TRAILING = 664,
     TRANSACTION = 665,
     TRANSFORM = 666,
     TREAT = 667,
     TRIGGER = 668,
     TRIM = 669,
     TRUE_P = 670,
     TRUNCATE = 671,
     TRUSTED = 672,
     TRY_CAST = 673,
     TYPE_P = 674,
     TYPES_P = 675,
     UNBOUNDED = 676,
     UNCOMMITTED = 677,
     UNENCRYPTED = 678,
     UNION = 679,
     UNIQUE = 680,
     UNKNOWN = 681,
     UNLISTEN = 682,
     UNLOGGED = 683,
     UNTIL = 684,
     UPDATE = 685,
     USER = 686,
     USING = 687,
     VACUUM = 688,
     VALID = 689,
     VALIDATE = 690,
     VALIDATOR = 691,
     VALUE_P = 692,
     VALUES = 693,
     VARCHAR = 694,
     VARIADIC = 695,
     VARYING = 696,
     VERBOSE = 697,
     VERSION_P = 698,
     VIEW = 699,
     VIEWS = 700,
     VOLATILE = 701,
     WHEN = 702,
     WHERE = 703,
     WHITESPACE_P = 704,
     WINDOW = 705,
     WITH = 706,
     WITHIN = 707,
     WITHOUT = 708,
     WORK = 709,
     WRAPPER = 710,
     WRITE_P = 711,
     XML_P = 712,
     XMLATTRIBUTES = 713,
     XMLCONCAT = 714,
     XMLELEMENT = 715,
     XMLEXISTS = 716,
     XMLFOREST = 717,
     XMLNAMESPACES = 718,
     XMLPARSE = 719,
     XMLPI = 720,
     XMLROOT = 721,
     XMLSERIALIZE = 722,
     XMLTABLE = 723,
     YEAR_P = 724,
     YEARS_P = 725,
     YES_P = 726,
     ZONE = 727,
     NOT_LA = 728,
     NULLS_LA = 729,
     WITH_LA = 730,
     POSTFIXOP = 731,
     UMINUS = 732
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXTENSION 408
#define EXTERNAL 409
#define EXTRACT 410
#define FALSE_P 411
#define FAMILY 412
#define FETCH 413
#define FILTER 414
#define FIRST_P 415
#define FLOAT_P 416
#define FOLLOWING 417
#define FOR 418
#define FORCE 419
#define FOREIGN 420
#define FORWARD 421
#define FREEZE 422
#define FROM 423
#define FULL 424
#define FUNCTION 425
#define FUNCTIONS 426
#define GENERATED 427
#define GLOB 428
#define GLOBAL 429
#define GRANT 430
#define GRANTED 431
#define GROUP_P 432
#define GROUPING 433
#define GROUPING_ID 434
#define HANDLER 435
#define HAVING 436
#define HEADER_P 437
#define HOLD 438
#define HOUR_P 439
#define HOURS_P 440
#define IDENTITY_P 441
#define IF_P 442
#define ILIKE 443
#define IMMEDIATE 444
#define IMMUTABLE 445
#define IMPLICIT_P 446
#define IMPORT_P 447
#define IN_P 448
#define INCLUDING 449
#define INCREMENT 450
#define INDEX 451
#define INDEXES 452
#define INHERIT 453
#define INHERITS 454
#define INITIALLY 455
#define INLINE_P 456
#define INNER_P 457
#define INOUT 458
#define INPUT_P 459
#define INSENSITIVE 460
#define INSERT 461
#define INSTEAD 462
#define INT_P 463
#define INTEGER 464
#define INTERSECT 465
#define INTERVAL 466
#define INTO 467
#define INVOKER 468
#define IS 469
#define ISNULL 470
#define ISOLATION 471
#define JOIN 472
#define KEY 473
#define LABEL 474
#define LANGUAGE 475
#define LARGE_P 476
#define LAST_P 477
#define LATERAL_P 478
#define LEADING 479
#define LEAKPROOF 480
#define LEFT 481
#define LEVEL 482
#define LIKE 483
#define LIMIT 484
#define LISTEN 485
#define LOAD 486
#define LOCAL 487
#define LOCALTIME 488
#define LOCALTIMESTAMP 489
#define LOCATION 490
#define LOCK_P 491
#define LOCKED 492
#define LOGGED 493
#define MACRO 494
#define MAP 495
#define MAPPING 496
#define MATCH 497
#define MATERIALIZED 498
#define MAXVALUE 499
#define METHOD 500
#define MICROSECOND_P 501
#define MICROSECONDS_P 502
#define MILLISECOND_P 503
#define MILLISECONDS_P 504
#define MINUTE_P 505
#define MINUTES_P 506
#define MINVALUE 507
#define MODE 508
#define MONTH_P 509
#define MONTHS_P 510
#define MOVE 511
#define NAME_P 512
#define NAMES 513
#define NATIONAL 514
#define NATURAL 515
#define NCHAR 516
#define NEW 517
#define NEXT 518
#define NO 519
#define NONE 520
#define NOT 521
#define NOTHING 522
#define NOTIFY 523
#define NOTNULL 524
#define NOWAIT 525
#define NULL_P 526
#define NULLIF 527
#define NULLS_P 528
#define NUMERIC 529
#define OBJECT_P 530
#define OF 531
#define OFF 532
#define OFFSET 533
#define OIDS 534
#define OLD 535
#define ON 536
#define ONLY 537
#define OPERATOR 538
#define OPTION 539
#define OPTIONS 540
#define OR 541
#define ORDER 542
#define ORDINALITY 543
#define OUT_P 544
#define OUTER_P 545
#define OVER 546
#define OVERLAPS 547
#define OVERLAY 548
#define OVERRIDING 549
#define OWNED 550
#define OWNER 551
#define PARALLEL 552
#define PARSER 553
#define PARTIAL 554
#define PARTITION 555
#define PASSING 556
#define PASSWORD 557
#define PERCENT 558
#define PLACING 559
#define PLANS 560
#define POLICY 561
#define POSITION 562
#define PRAGMA_P 563
#define PRECEDING 564
#define PRECISION 565
#define PREPARE 566
#define PREPARED 567
#define PRESERVE 568
#define PRIMARY 569
#define PRIOR 570
#define PRIVILEGES 571
#define PROCEDURAL 572
#define PROCEDURE 573
#define PROGRAM 574
#define PUBLICATION 575
#define QUOTE 576
#define RANGE 577
#define READ_P 578
#define REAL 579
#define REASSIGN 580
#define RECHECK 581
#define RECURSIVE 582
#define REF 583
#define REFERENCES 584
#define REFERENCING 585
#define REFRESH 586
#define REINDEX 587
#define RELATIVE_P 588
#define RELEASE 589
#define RENAME 590
#define REPEATABLE 591
#define REPLACE 592
#define REPLICA 593
#define RESET 594
#define RESTART 595
#define RESTRICT 596
#define RETURNING 597
#define RETURNS 598
#define REVOKE 599
#define RIGHT 600
#define ROLE 601
#define ROLLBACK 602
#define ROLLUP 603
#define ROW 604
#define ROWS 605
#define RULE 606
#define SAMPLE 607
#define SAVEPOINT 608
#define SCHEMA 609
#define SCHEMAS 610
#define SCROLL 611
#define SEARCH 612
#define SECOND_P 613
#define SECONDS_P 614
#define SECURITY 615
#define SELECT 616
#define SEQUENCE 617
#define SEQUENCES 618
#define SERIALIZABLE 619
#define SERVER 620
#define SESSION 621
#define SESSION_USER 622
#define SET 623
#define SETOF 624
#define SETS 625
#define SHARE 626
#define SHOW 627
#define SIMILAR 628
#define SIMPLE 629
#define SKIP 630
#define SMALLINT 631
#define SNAPSHOT 632
#define SOME 633
#define SQL_P 634
#define STABLE 635
#define STANDALONE_P 636
#define START 637
#define STATEMENT 638
#define STATISTICS 639
#define STDIN 640
#define STDOUT 641
#define STORAGE 642
#define STRICT_P 643
#define STRIP_P 644
#define STRUCT 645
#define SUBSCRIPTION 646
#define SUBSTRING 647
#define SUMMARIZE 648
#define SYMMETRIC 649
#define SYSID 650
#define SYSTEM_P 651
#define TABLE 652
#define TABLES 653
#define TABLESAMPLE 654
#define TABLESPACE 655
#define TEMP 656
#define TEMPLATE 657
#define TEMPORARY 658
#define TEXT_P 659
#define THEN 660
#define TIME 661
#define TIMESTAMP 662
#define TO 663
#define TRAILING 664
#define TRANSACTION 665
#define TRANSFORM 666
#define TREAT 667
#define TRIGGER 668
#define TRIM 669
#define TRUE_P 670
#define TRUNCATE 671
#define TRUSTED 672
#define TRY_CAST 673
#define TYPE_P 674
#define TYPES_P 675
#define UNBOUNDED 676
#define UNCOMMITTED 677
#define UNENCRYPTED 678
#define UNION 679
#define UNIQUE 680
#define UNKNOWN 681
#define UNLISTEN 682
#define UNLOGGED 683
#define UNTIL 684
#define UPDATE 685
#define USER 686
#define USING 687
#define VACUUM 688
#define VALID 689
#define VALIDATE 690
#define VALIDATOR 691
#define VALUE_P 692
#define VALUES 693
#define VARCHAR 694
#define VARIADIC 695
#define VARYING 696
#define VERBOSE 697
#define VERSION_P 698
#define VIEW 699
#define VIEWS 700
#define VOLATILE 701
#define WHEN 702
#define WHERE 703
#define WHITESPACE_P 704
#define WINDOW 705
#define WITH 706
#define WITHIN 707
#define WITHOUT 708
#define WORK 709
#define WRAPPER 710
#define WRITE_P 711
#define XML_P 712
#define XMLATTRIBUTES 713
#define XMLCONCAT 714
#define XMLELEMENT 715
#define XMLEXISTS 716
#define XMLFOREST 717
#define XMLNAMESPACES 718
#define XMLPARSE 719
#define XMLPI 720
#define XMLROOT 721
#define XMLSERIALIZE 722
#define XMLTABLE 723
#define YEAR_P 724
#define YEARS_P 725
#define YES_P 726
#define ZONE 727
#define NOT_LA 728
#define NULLS_LA 729
#define WITH_LA 730
#define POSTFIXOP 731
#define UMINUS 732




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1267 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1292 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  589
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   51076

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  499
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  382
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1789
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2955

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   732

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   496,     2,   484,     2,     2,
     489,   490,   482,   480,   493,   481,   491,   483,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   498,   492,
     476,   478,   477,   497,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   487,     2,   488,   485,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   494,     2,   495,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   479,   486
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   372,   374,   375,   377,   381,   388,
     395,   404,   411,   420,   427,   436,   443,   452,   461,   472,
     481,   492,   494,   495,   503,   505,   510,   515,   523,   526,
     528,   532,   537,   541,   542,   544,   545,   548,   552,   558,
     567,   573,   574,   580,   586,   594,   597,   598,   600,   602,
     604,   608,   611,   612,   614,   615,   617,   621,   623,   627,
     629,   633,   636,   639,   644,   650,   656,   665,   667,   668,
     672,   682,   695,   699,   700,   705,   712,   714,   717,   719,
     721,   722,   724,   727,   730,   732,   735,   738,   740,   743,
     747,   750,   753,   756,   759,   763,   767,   771,   773,   777,
     779,   780,   782,   785,   788,   791,   794,   797,   800,   803,
     806,   808,   810,   811,   821,   834,   846,   847,   850,   852,
     854,   856,   858,   860,   862,   866,   867,   869,   872,   874,
     876,   879,   882,   886,   888,   890,   893,   896,   898,   901,
     905,   911,   915,   918,   924,   930,   933,   937,   939,   941,
     944,   947,   948,   953,   954,   958,   963,   968,   969,   973,
     976,   977,   981,   983,   985,   987,   989,   991,   993,   995,
     997,   999,  1001,  1005,  1009,  1011,  1014,  1017,  1020,  1023,
    1026,  1029,  1030,  1034,  1038,  1042,  1043,  1045,  1048,  1050,
    1053,  1056,  1059,  1062,  1067,  1069,  1073,  1075,  1079,  1081,
    1083,  1085,  1087,  1091,  1093,  1096,  1097,  1099,  1100,  1102,
    1106,  1107,  1110,  1111,  1115,  1119,  1121,  1127,  1131,  1133,
    1137,  1139,  1144,  1150,  1156,  1163,  1167,  1175,  1180,  1192,
    1194,  1198,  1201,  1204,  1207,  1208,  1212,  1214,  1216,  1219,
    1222,  1225,  1228,  1230,  1231,  1233,  1236,  1243,  1248,  1255,
    1260,  1267,  1276,  1281,  1288,  1290,  1292,  1294,  1296,  1298,
    1301,  1303,  1306,  1308,  1310,  1312,  1316,  1320,  1324,  1328,
    1331,  1334,  1336,  1340,  1342,  1344,  1346,  1348,  1352,  1354,
    1356,  1357,  1359,  1361,  1363,  1365,  1369,  1376,  1378,  1380,
    1383,  1387,  1396,  1408,  1418,  1420,  1422,  1426,  1427,  1429,
    1433,  1435,  1436,  1438,  1439,  1441,  1442,  1444,  1448,  1450,
    1452,  1454,  1458,  1459,  1462,  1465,  1466,  1469,  1470,  1472,
    1473,  1475,  1477,  1479,  1483,  1487,  1489,  1491,  1495,  1499,
    1503,  1507,  1512,  1516,  1519,  1521,  1523,  1525,  1527,  1529,
    1533,  1535,  1537,  1541,  1545,  1547,  1550,  1555,  1560,  1563,
    1567,  1573,  1579,  1581,  1583,  1594,  1605,  1607,  1610,  1615,
    1620,  1625,  1628,  1631,  1635,  1637,  1641,  1648,  1651,  1652,
    1656,  1660,  1665,  1670,  1675,  1680,  1684,  1687,  1689,  1691,
    1692,  1694,  1696,  1697,  1699,  1705,  1707,  1708,  1710,  1711,
    1715,  1717,  1721,  1726,  1730,  1732,  1734,  1735,  1738,  1741,
    1742,  1745,  1748,  1750,  1752,  1754,  1755,  1758,  1763,  1769,
    1774,  1777,  1781,  1784,  1787,  1790,  1793,  1795,  1798,  1802,
    1803,  1805,  1806,  1812,  1814,  1819,  1826,  1829,  1831,  1832,
    1837,  1838,  1840,  1842,  1844,  1846,  1849,  1852,  1854,  1856,
    1858,  1860,  1862,  1864,  1868,  1869,  1871,  1875,  1877,  1879,
    1881,  1883,  1885,  1888,  1893,  1898,  1904,  1906,  1908,  1911,
    1912,  1914,  1918,  1920,  1921,  1923,  1926,  1930,  1933,  1938,
    1941,  1945,  1948,  1949,  1951,  1954,  1955,  1960,  1966,  1969,
    1970,  1972,  1976,  1980,  1984,  1988,  1992,  1996,  1998,  2003,
    2007,  2012,  2018,  2023,  2029,  2034,  2040,  2043,  2048,  2050,
    2052,  2053,  2055,  2060,  2066,  2071,  2072,  2075,  2078,  2081,
    2083,  2085,  2086,  2091,  2094,  2096,  2099,  2102,  2107,  2110,
    2117,  2120,  2122,  2126,  2131,  2132,  2135,  2136,  2139,  2140,
    2142,  2146,  2150,  2153,  2154,  2157,  2162,  2164,  2166,  2169,
    2173,  2179,  2186,  2189,  2193,  2199,  2205,  2209,  2214,  2215,
    2217,  2219,  2221,  2223,  2225,  2228,  2233,  2235,  2237,  2239,
    2241,  2244,  2248,  2249,  2251,  2253,  2255,  2257,  2259,  2262,
    2265,  2268,  2271,  2274,  2276,  2280,  2281,  2283,  2285,  2287,
    2289,  2295,  2298,  2300,  2302,  2304,  2306,  2311,  2313,  2316,
    2319,  2321,  2325,  2329,  2332,  2334,  2335,  2341,  2344,  2350,
    2353,  2355,  2359,  2363,  2364,  2366,  2368,  2370,  2372,  2374,
    2376,  2378,  2380,  2382,  2384,  2386,  2388,  2390,  2392,  2394,
    2396,  2398,  2400,  2402,  2404,  2406,  2408,  2410,  2412,  2416,
    2420,  2424,  2428,  2432,  2436,  2440,  2441,  2443,  2447,  2451,
    2457,  2460,  2463,  2467,  2471,  2475,  2479,  2483,  2487,  2491,
    2495,  2499,  2503,  2507,  2511,  2515,  2518,  2521,  2525,  2529,
    2532,  2535,  2539,  2543,  2549,  2554,  2561,  2565,  2571,  2576,
    2583,  2588,  2595,  2601,  2609,  2613,  2616,  2621,  2625,  2628,
    2630,  2634,  2638,  2642,  2646,  2650,  2654,  2659,  2663,  2668,
    2672,  2677,  2683,  2690,  2697,  2705,  2712,  2720,  2727,  2735,
    2739,  2744,  2749,  2756,  2758,  2763,  2765,  2769,  2772,  2775,
    2779,  2783,  2787,  2791,  2795,  2799,  2803,  2807,  2811,  2815,
    2819,  2823,  2827,  2830,  2833,  2839,  2846,  2853,  2861,  2863,
    2865,  2868,  2871,  2874,  2879,  2881,  2884,  2886,  2889,  2892,
    2897,  2901,  2907,  2914,  2923,  2930,  2937,  2942,  2947,  2949,
    2951,  2953,  2959,  2961,  2963,  2968,  2970,  2975,  2977,  2982,
    2984,  2989,  2991,  2993,  2995,  2997,  2999,  3001,  3008,  3015,
    3020,  3025,  3030,  3035,  3042,  3048,  3054,  3060,  3065,  3072,
    3077,  3083,  3084,  3090,  3091,  3094,  3095,  3097,  3101,  3105,
    3108,  3111,  3112,  3119,  3121,  3122,  3126,  3127,  3130,  3133,
    3134,  3136,  3141,  3144,  3147,  3150,  3153,  3156,  3161,  3165,
    3167,  3173,  3177,  3179,  3183,  3185,  3187,  3189,  3191,  3193,
    3195,  3197,  3199,  3201,  3203,  3205,  3207,  3209,  3211,  3213,
    3215,  3217,  3219,  3224,  3226,  3231,  3233,  3238,  3240,  3243,
    3245,  3248,  3250,  3253,  3255,  3259,  3261,  3265,  3267,  3268,
    3270,  3274,  3276,  3280,  3284,  3286,  3290,  3294,  3295,  3297,
    3299,  3301,  3303,  3305,  3307,  3309,  3311,  3313,  3315,  3320,
    3324,  3327,  3331,  3332,  3336,  3340,  3343,  3346,  3348,  3349,
    3352,  3355,  3359,  3362,  3364,  3366,  3370,  3376,  3378,  3381,
    3386,  3389,  3390,  3392,  3393,  3395,  3398,  3401,  3405,  3411,
    3413,  3414,  3416,  3419,  3420,  3423,  3425,  3426,  3428,  3429,
    3431,  3435,  3439,  3442,  3444,  3448,  3454,  3459,  3462,  3464,
    3465,  3469,  3471,  3475,  3480,  3483,  3484,  3486,  3490,  3492,
    3495,  3497,  3501,  3503,  3505,  3507,  3510,  3512,  3514,  3517,
    3519,  3521,  3524,  3531,  3534,  3540,  3544,  3548,  3550,  3552,
    3554,  3556,  3558,  3560,  3562,  3564,  3566,  3568,  3570,  3572,
    3574,  3576,  3578,  3580,  3582,  3584,  3586,  3588,  3591,  3594,
    3598,  3602,  3603,  3605,  3607,  3609,  3611,  3613,  3615,  3617,
    3623,  3627,  3628,  3630,  3632,  3634,  3636,  3641,  3649,  3652,
    3653,  3655,  3657,  3659,  3661,  3675,  3692,  3694,  3697,  3698,
    3700,  3701,  3703,  3704,  3707,  3708,  3710,  3711,  3718,  3727,
    3734,  3743,  3750,  3759,  3762,  3764,  3769,  3773,  3776,  3781,
    3785,  3791,  3793,  3794,  3796,  3798,  3799,  3801,  3803,  3805,
    3807,  3809,  3811,  3813,  3815,  3817,  3819,  3821,  3825,  3827,
    3829,  3831,  3833,  3835,  3837,  3840,  3842,  3844,  3847,  3851,
    3855,  3859,  3861,  3865,  3869,  3872,  3876,  3880,  3884,  3888,
    3890,  3892,  3894,  3896,  3900,  3906,  3908,  3910,  3912,  3914,
    3918,  3921,  3923,  3928,  3934,  3940,  3945,  3952,  3954,  3956,
    3958,  3960,  3962,  3964,  3965,  3967,  3971,  3973,  3974,  3982,
    3984,  3987,  3991,  3994,  3995,  3998,  3999,  4002,  4007,  4010,
    4012,  4014,  4016,  4019,  4023,  4026,  4029,  4032,  4035,  4039,
    4044,  4047,  4049,  4051,  4053,  4057,  4060,  4070,  4082,  4095,
    4110,  4114,  4119,  4124,  4125,  4133,  4144,  4147,  4151,  4152,
    4157,  4159,  4161,  4163,  4165,  4167,  4169,  4171,  4173,  4175,
    4177,  4179,  4181,  4183,  4185,  4187,  4189,  4191,  4193,  4195,
    4197,  4199,  4201,  4203,  4205,  4207,  4209,  4211,  4213,  4215,
    4217,  4219,  4221,  4223,  4225,  4227,  4229,  4231,  4233,  4235,
    4237,  4239,  4241,  4243,  4245,  4247,  4249,  4251,  4253,  4255,
    4257,  4259,  4261,  4263,  4265,  4267,  4269,  4271,  4273,  4275,
    4277,  4279,  4281,  4283,  4285,  4287,  4289,  4291,  4293,  4295,
    4297,  4299,  4301,  4303,  4305,  4307,  4309,  4311,  4313,  4315,
    4317,  4319,  4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,
    4337,  4339,  4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,
    4357,  4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,
    4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,
    4397,  4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,
    4417,  4419,  4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,
    4437,  4439,  4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,
    4457,  4459,  4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,
    4477,  4479,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,
    4497,  4499,  4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,
    4517,  4519,  4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,
    4537,  4539,  4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,
    4557,  4559,  4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,
    4577,  4579,  4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,
    4597,  4599,  4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,
    4617,  4619,  4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,
    4637,  4639,  4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,
    4657,  4659,  4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,
    4677,  4679,  4681,  4683,  4685,  4687,  4689,  4691,  4693,  4695,
    4697,  4699,  4701,  4703,  4705,  4707,  4709,  4711,  4713,  4715,
    4717,  4719,  4721,  4723,  4725,  4727,  4729,  4731,  4733,  4735,
    4737,  4739,  4741,  4743,  4745,  4747,  4749,  4751,  4753,  4755,
    4757,  4759,  4761,  4763,  4765,  4767,  4769,  4771,  4773,  4775,
    4777,  4779,  4781,  4783,  4785,  4787,  4789,  4791,  4793,  4795,
    4797,  4799,  4801,  4803,  4805,  4807,  4809,  4811,  4813,  4815,
    4817,  4819,  4821,  4823,  4825,  4827,  4829,  4831,  4833,  4835,
    4837,  4839,  4841,  4843,  4845,  4847,  4849,  4851,  4853,  4855,
    4857,  4859,  4861,  4863,  4865,  4867,  4869,  4871,  4873,  4875,
    4877,  4879,  4881,  4883,  4885,  4887,  4889,  4891,  4893,  4895,
    4897,  4899,  4901,  4903,  4905,  4907,  4909,  4911,  4913,  4915,
    4917,  4919,  4921,  4923,  4925,  4927,  4929,  4931,  4933,  4935,
    4937,  4939,  4941,  4943,  4945,  4947,  4949,  4951,  4953,  4955,
    4957,  4959,  4961,  4963,  4965,  4967,  4969,  4971,  4973,  4975,
    4977,  4979,  4981,  4983,  4985,  4987,  4989,  4991,  4993,  4995,
    4997,  4999,  5001,  5003,  5005,  5007,  5009,  5011,  5013,  5015,
    5017,  5019,  5021,  5023,  5025,  5027,  5029,  5031,  5033,  5035,
    5037,  5039,  5041,  5043,  5045,  5047,  5049,  5051,  5053,  5055,
    5057,  5059,  5061,  5063,  5065,  5067,  5069,  5071,  5073,  5075,
    5077,  5079,  5081,  5083,  5085,  5087,  5089,  5091,  5093,  5095,
    5097,  5099,  5101,  5103,  5105,  5107,  5109,  5111,  5113,  5115,
    5117,  5119,  5121,  5123,  5125,  5127,  5129,  5131,  5133,  5135,
    5137,  5139,  5141,  5143,  5145,  5147,  5149,  5151,  5153,  5155,
    5157,  5159,  5161,  5163,  5165,  5167,  5169,  5171,  5173,  5175,
    5177,  5179,  5181,  5183,  5185,  5187,  5189,  5191,  5193,  5195,
    5197,  5199,  5201,  5203,  5205,  5207,  5209,  5211,  5213,  5215,
    5217,  5219,  5221,  5223,  5225,  5227,  5229,  5231,  5233,  5235,
    5237,  5239,  5241,  5243,  5245,  5247,  5249,  5251,  5253,  5255,
    5257,  5259,  5261,  5263,  5265,  5267,  5269,  5271,  5273,  5275
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     500,     0,    -1,   501,    -1,   501,   492,   502,    -1,   502,
      -1,   829,    -1,   543,    -1,   503,    -1,   861,    -1,   868,
      -1,   830,    -1,   609,    -1,   871,    -1,   515,    -1,   605,
      -1,   819,    -1,   539,    -1,   552,    -1,   514,    -1,   857,
      -1,   598,    -1,   541,    -1,   833,    -1,   831,    -1,   832,
      -1,   822,    -1,   520,    -1,   850,    -1,   538,    -1,   816,
      -1,   518,    -1,   626,    -1,   550,    -1,   608,    -1,   852,
      -1,   862,    -1,   844,    -1,   865,    -1,   869,    -1,    -1,
      29,   397,   690,   511,    -1,    29,   397,   187,   150,   690,
     511,    -1,    29,   196,   797,   511,    -1,    29,   196,   187,
     150,   797,   511,    -1,    29,   362,   797,   511,    -1,    29,
     362,   187,   150,   797,   511,    -1,    29,   444,   797,   511,
      -1,    29,   444,   187,   150,   797,   511,    -1,   506,    -1,
     504,   506,    -1,   368,   115,   732,    -1,   135,   115,    -1,
     340,    -1,   340,   545,   546,    -1,   368,   547,    -1,   368,
     172,   597,    -1,   510,    -1,   507,   493,   510,    -1,    23,
     577,    -1,    23,   187,   266,   150,   577,    -1,    23,    75,
     577,    -1,    23,    75,   187,   266,   150,   577,    -1,    29,
     519,   805,   505,    -1,    29,   519,   805,   135,   266,   271,
      -1,    29,   519,   805,   368,   266,   271,    -1,    29,   519,
     805,   368,   384,   549,    -1,    29,   519,   805,   368,   565,
      -1,    29,   519,   805,   339,   565,    -1,    29,   519,   805,
     368,   387,   805,    -1,    29,   519,   805,    23,   172,   597,
      36,   186,   555,    -1,    29,   519,   805,   504,    -1,    29,
     519,   805,   135,   186,    -1,    29,   519,   805,   135,   186,
     187,   150,    -1,   135,   519,   187,   150,   805,   602,    -1,
     135,   519,   805,   602,    -1,    29,   519,   805,   513,   419,
     702,   699,   509,    -1,    29,   519,   805,   512,    -1,    23,
     567,    -1,    29,    86,   799,   553,    -1,   435,    86,   799,
      -1,   135,    86,   187,   150,   799,   602,    -1,   135,    86,
     799,   602,    -1,   368,   238,    -1,   368,   428,    -1,   368,
     565,    -1,   339,   565,    -1,   512,    -1,   432,   732,    -1,
      -1,   560,    -1,   368,   560,    -1,    23,   560,    -1,   135,
     575,    -1,   508,    -1,   511,   493,   508,    -1,   285,   489,
     507,   490,    -1,   368,   107,    -1,   368,    -1,    -1,   111,
     799,    -1,   111,   311,   799,    -1,   111,    27,    -1,   111,
     311,    27,    -1,    93,   419,   810,    36,   142,   489,   516,
     490,    -1,   517,    -1,    -1,   804,    -1,   517,   493,   804,
      -1,    29,   354,   799,   335,   408,   799,    -1,    29,   397,
     690,   335,   408,   799,    -1,    29,   397,   187,   150,   690,
     335,   408,   799,    -1,    29,   362,   797,   335,   408,   799,
      -1,    29,   362,   187,   150,   797,   335,   408,   799,    -1,
      29,   444,   797,   335,   408,   799,    -1,    29,   444,   187,
     150,   797,   335,   408,   799,    -1,    29,   196,   797,   335,
     408,   799,    -1,    29,   196,   187,   150,   797,   335,   408,
     799,    -1,    29,   397,   690,   335,   519,   799,   408,   799,
      -1,    29,   397,   187,   150,   690,   335,   519,   799,   408,
     799,    -1,    29,   397,   690,   335,    86,   799,   408,   799,
      -1,    29,   397,   187,   150,   690,   335,    86,   799,   408,
     799,    -1,    75,    -1,    -1,   524,   206,   212,   522,   521,
     527,   529,    -1,   626,    -1,   294,   530,   437,   626,    -1,
     489,   534,   490,   626,    -1,   489,   534,   490,   294,   530,
     437,   626,    -1,   115,   438,    -1,   797,    -1,   797,    36,
     805,    -1,   489,   536,   490,   696,    -1,   281,    86,   799,
      -1,    -1,   631,    -1,    -1,   805,   786,    -1,   537,   478,
     732,    -1,   489,   531,   490,   478,   732,    -1,   281,    84,
     523,   131,   430,   368,   535,   696,    -1,   281,    84,   523,
     131,   267,    -1,    -1,   805,   532,   533,   644,   645,    -1,
     737,   532,   533,   644,   645,    -1,   489,   732,   490,   532,
     533,   644,   645,    -1,   342,   789,    -1,    -1,   431,    -1,
     396,    -1,   537,    -1,   531,   493,   537,    -1,    73,   810,
      -1,    -1,   810,    -1,    -1,   525,    -1,   534,   493,   525,
      -1,   526,    -1,   535,   493,   526,    -1,   528,    -1,   536,
     493,   528,    -1,   805,   786,    -1,   308,   805,    -1,   308,
     805,   478,   849,    -1,   308,   805,   489,   764,   490,    -1,
      93,   596,   362,   797,   540,    -1,    93,   596,   362,   187,
     266,   150,   797,   540,    -1,   544,    -1,    -1,   149,   799,
     542,    -1,    93,   596,   397,   873,    36,   149,   799,   542,
     872,    -1,    93,   596,   397,   187,   266,   150,   873,    36,
     149,   799,   542,   872,    -1,   489,   762,   490,    -1,    -1,
      29,   362,   797,   544,    -1,    29,   362,   187,   150,   797,
     544,    -1,   547,    -1,   544,   547,    -1,   451,    -1,   475,
      -1,    -1,     4,    -1,   480,     4,    -1,   481,     4,    -1,
     549,    -1,    36,   704,    -1,    55,   546,    -1,   106,    -1,
     264,   106,    -1,   195,   548,   546,    -1,   244,   546,    -1,
     252,   546,    -1,   264,   244,    -1,   264,   252,    -1,   295,
      54,   810,    -1,   362,   257,   810,    -1,   382,   545,   546,
      -1,   340,    -1,   340,   545,   546,    -1,    54,    -1,    -1,
     803,    -1,   480,   803,    -1,   481,   803,    -1,    19,   551,
      -1,    47,   551,    -1,   382,   551,    -1,    79,   551,    -1,
     141,   551,    -1,   347,   551,    -1,   454,    -1,   410,    -1,
      -1,    93,   596,   397,   797,   489,   584,   490,   572,   564,
      -1,    93,   596,   397,   187,   266,   150,   797,   489,   584,
     490,   572,   564,    -1,    93,   286,   337,   596,   397,   797,
     489,   584,   490,   572,   564,    -1,    -1,   553,   576,    -1,
     591,    -1,   880,    -1,   759,    -1,   546,    -1,   804,    -1,
     265,    -1,   489,   544,   490,    -1,    -1,   804,    -1,   264,
      22,    -1,   341,    -1,    58,    -1,   368,   271,    -1,   368,
     115,    -1,    86,   799,   559,    -1,   559,    -1,   571,    -1,
      73,   810,    -1,   266,   271,    -1,   271,    -1,   425,   583,
      -1,   314,   218,   583,    -1,    67,   489,   732,   490,   566,
      -1,   432,    81,   799,    -1,   115,   733,    -1,   172,   597,
      36,   186,   555,    -1,   329,   797,   586,   594,   562,    -1,
     575,   556,    -1,   281,   430,   557,    -1,   561,    -1,   588,
      -1,   561,   588,    -1,   588,   561,    -1,    -1,   285,   489,
     578,   490,    -1,    -1,   281,    79,   135,    -1,   281,    79,
     120,   350,    -1,   281,    79,   313,   350,    -1,    -1,   489,
     569,   490,    -1,   264,   198,    -1,    -1,    86,   799,   592,
      -1,   592,    -1,    78,    -1,    87,    -1,   116,    -1,   186,
      -1,   197,    -1,   384,    -1,   387,    -1,    27,    -1,   589,
      -1,   569,   493,   589,    -1,   432,   196,   580,    -1,   117,
      -1,   266,   117,    -1,   200,   118,    -1,   200,   189,    -1,
     451,   565,    -1,   451,   279,    -1,   453,   279,    -1,    -1,
     489,   579,   490,    -1,   574,   194,   568,    -1,   574,   147,
     568,    -1,    -1,   814,    -1,   266,   117,    -1,   117,    -1,
     200,   189,    -1,   200,   118,    -1,   266,   434,    -1,   264,
     198,    -1,   805,   702,   563,   587,    -1,   560,    -1,   578,
     493,   560,    -1,   582,    -1,   579,   493,   582,    -1,   805,
      -1,   577,    -1,   595,    -1,   567,    -1,   814,   478,   554,
      -1,   814,    -1,   451,   573,    -1,    -1,   593,    -1,    -1,
     805,    -1,   489,   590,   490,    -1,    -1,   587,   558,    -1,
      -1,   281,   120,   557,    -1,   814,   478,   554,    -1,   814,
      -1,   814,   491,   814,   478,   554,    -1,   814,   491,   814,
      -1,   585,    -1,   590,   493,   585,    -1,   702,    -1,   807,
     811,   484,   419,    -1,   369,   807,   811,   484,   419,    -1,
      67,   489,   732,   490,   553,    -1,   425,   489,   590,   490,
     583,   553,    -1,   425,   570,   553,    -1,   314,   218,   489,
     590,   490,   583,   553,    -1,   314,   218,   570,   553,    -1,
     165,   218,   489,   590,   490,   329,   797,   586,   594,   562,
     553,    -1,   581,    -1,   593,   493,   581,    -1,   242,   169,
      -1,   242,   299,    -1,   242,   374,    -1,    -1,   228,   797,
     574,    -1,   403,    -1,   401,    -1,   232,   403,    -1,   232,
     401,    -1,   174,   403,    -1,   174,   401,    -1,   428,    -1,
      -1,    30,    -1,    54,   115,    -1,   135,   599,   187,   150,
     601,   602,    -1,   135,   599,   601,   602,    -1,   135,   600,
     187,   150,   798,   602,    -1,   135,   600,   798,   602,    -1,
     135,   603,   799,   281,   810,   602,    -1,   135,   603,   187,
     150,   799,   281,   810,   602,    -1,   135,   419,   604,   602,
      -1,   135,   419,   187,   150,   604,   602,    -1,   397,    -1,
     362,    -1,   170,    -1,   239,    -1,   444,    -1,   243,   444,
      -1,   196,    -1,   165,   397,    -1,    74,    -1,    90,    -1,
     384,    -1,   404,   357,   298,    -1,   404,   357,   127,    -1,
     404,   357,   402,    -1,   404,   357,    83,    -1,    21,   245,
      -1,   144,   413,    -1,   153,    -1,   165,   107,   455,    -1,
     320,    -1,   354,    -1,   365,    -1,   810,    -1,   601,   493,
     810,    -1,    58,    -1,   341,    -1,    -1,   306,    -1,   351,
      -1,   413,    -1,   702,    -1,   604,   493,   702,    -1,    93,
     606,   797,   607,    36,   732,    -1,   170,    -1,   239,    -1,
     489,   490,    -1,   489,   764,   490,    -1,   524,   430,   858,
     368,   535,   680,   859,   529,    -1,    91,   621,   797,   586,
     619,   610,   615,   624,   611,   545,   616,    -1,    91,   489,
     818,   490,   408,   615,   624,   545,   616,    -1,   168,    -1,
     408,    -1,   613,   122,   804,    -1,    -1,   623,    -1,   612,
     493,   623,    -1,   432,    -1,    -1,    36,    -1,    -1,   319,
      -1,    -1,   620,    -1,   489,   625,   490,    -1,   841,    -1,
     546,    -1,   482,    -1,   489,   612,   490,    -1,    -1,   814,
     617,    -1,   451,   279,    -1,    -1,   620,   622,    -1,    -1,
      50,    -1,    -1,    50,    -1,   279,    -1,   167,    -1,   121,
     614,   804,    -1,   271,   614,   804,    -1,    95,    -1,   182,
      -1,   321,   614,   804,    -1,   143,   614,   804,    -1,   164,
     321,   590,    -1,   164,   321,   482,    -1,   164,   266,   271,
     590,    -1,   164,   271,   590,    -1,   139,   804,    -1,   841,
      -1,   804,    -1,   385,    -1,   386,    -1,   618,    -1,   625,
     493,   618,    -1,   628,    -1,   627,    -1,   489,   628,   490,
      -1,   489,   627,   490,    -1,   630,    -1,   629,   641,    -1,
     629,   640,   672,   647,    -1,   629,   640,   646,   673,    -1,
     631,   629,    -1,   631,   629,   641,    -1,   631,   629,   640,
     672,   647,    -1,   631,   629,   640,   646,   673,    -1,   630,
      -1,   627,    -1,   361,   639,   788,   634,   680,   696,   663,
     671,   741,   651,    -1,   361,   638,   789,   634,   680,   696,
     663,   671,   741,   651,    -1,   679,    -1,   397,   690,    -1,
     629,   424,   637,   629,    -1,   629,   210,   637,   629,    -1,
     629,   145,   637,   629,    -1,   451,   632,    -1,   475,   632,
      -1,   451,   327,   632,    -1,   633,    -1,   632,   493,   633,
      -1,   799,   812,    36,   489,   818,   490,    -1,   212,   635,
      -1,    -1,   403,   636,   797,    -1,   401,   636,   797,    -1,
     232,   403,   636,   797,    -1,   232,   401,   636,   797,    -1,
     174,   403,   636,   797,    -1,   174,   401,   636,   797,    -1,
     428,   636,   797,    -1,   397,   797,    -1,   797,    -1,   397,
      -1,    -1,    27,    -1,   130,    -1,    -1,   130,    -1,   130,
     281,   489,   762,   490,    -1,    27,    -1,    -1,   641,    -1,
      -1,   287,    54,   642,    -1,   643,    -1,   642,   493,   643,
      -1,   732,   432,   759,   645,    -1,   732,   644,   645,    -1,
      37,    -1,   124,    -1,    -1,   474,   160,    -1,   474,   222,
      -1,    -1,   648,   649,    -1,   649,   648,    -1,   648,    -1,
     649,    -1,   646,    -1,    -1,   229,   657,    -1,   229,   657,
     493,   658,    -1,   158,   662,   659,   661,   282,    -1,   158,
     662,   661,   282,    -1,   278,   658,    -1,   278,   659,   661,
      -1,     4,   484,    -1,     9,   484,    -1,     4,   303,    -1,
       9,   303,    -1,     9,    -1,     9,   350,    -1,   432,   352,
     653,    -1,    -1,   805,    -1,    -1,   652,   489,   650,   490,
     656,    -1,   650,    -1,   650,   489,   805,   490,    -1,   650,
     489,   805,   493,     9,   490,    -1,   399,   653,    -1,   654,
      -1,    -1,   336,   489,     9,   490,    -1,    -1,   732,    -1,
      27,    -1,   732,    -1,   734,    -1,   480,   660,    -1,   481,
     660,    -1,   803,    -1,     4,    -1,   349,    -1,   350,    -1,
     160,    -1,   263,    -1,   177,    54,   664,    -1,    -1,   665,
      -1,   664,   493,   665,    -1,   732,    -1,   666,    -1,   668,
      -1,   667,    -1,   669,    -1,   489,   490,    -1,   348,   489,
     762,   490,    -1,    96,   489,   762,   490,    -1,   178,   370,
     489,   664,   490,    -1,   178,    -1,   179,    -1,   181,   732,
      -1,    -1,   674,    -1,   163,   323,   282,    -1,   672,    -1,
      -1,   675,    -1,   674,   675,    -1,   676,   677,   678,    -1,
     163,   430,    -1,   163,   264,   218,   430,    -1,   163,   371,
      -1,   163,   218,   371,    -1,   276,   796,    -1,    -1,   270,
      -1,   375,   237,    -1,    -1,   438,   489,   762,   490,    -1,
     679,   493,   489,   762,   490,    -1,   168,   681,    -1,    -1,
     682,    -1,   681,   493,   682,    -1,   690,   685,   655,    -1,
     691,   686,   655,    -1,   223,   691,   686,    -1,   627,   685,
     655,    -1,   223,   627,   685,    -1,   683,    -1,   489,   683,
     490,   684,    -1,   489,   683,   490,    -1,   682,    94,   217,
     682,    -1,   682,   687,   217,   682,   689,    -1,   682,   217,
     682,   689,    -1,   682,   260,   687,   217,   682,    -1,   682,
     260,   217,   682,    -1,    36,   805,   489,   798,   490,    -1,
      36,   806,    -1,   805,   489,   798,   490,    -1,   805,    -1,
     684,    -1,    -1,   684,    -1,    36,   489,   697,   490,    -1,
      36,   805,   489,   697,   490,    -1,   805,   489,   697,   490,
      -1,    -1,   169,   688,    -1,   226,   688,    -1,   345,   688,
      -1,   202,    -1,   290,    -1,    -1,   432,   489,   798,   490,
      -1,   281,   732,    -1,   797,    -1,   797,   482,    -1,   282,
     797,    -1,   282,   489,   797,   490,    -1,   737,   695,    -1,
     350,   168,   489,   693,   490,   695,    -1,   737,   694,    -1,
     692,    -1,   693,   493,   692,    -1,    36,   489,   697,   490,
      -1,    -1,   475,   288,    -1,    -1,   448,   732,    -1,    -1,
     698,    -1,   697,   493,   698,    -1,   805,   702,   699,    -1,
      73,   810,    -1,    -1,   805,   702,    -1,   700,   493,   805,
     702,    -1,   349,    -1,   390,    -1,   704,   703,    -1,   369,
     704,   703,    -1,   704,    35,   487,   803,   488,    -1,   369,
     704,    35,   487,   803,   488,    -1,   704,    35,    -1,   369,
     704,    35,    -1,   701,   489,   700,   490,   703,    -1,   240,
     489,   766,   490,   703,    -1,   703,   487,   488,    -1,   703,
     487,   803,   488,    -1,    -1,   706,    -1,   708,    -1,   710,
      -1,   714,    -1,   720,    -1,   721,   731,    -1,   721,   489,
     803,   490,    -1,   708,    -1,   711,    -1,   715,    -1,   720,
      -1,   809,   707,    -1,   489,   762,   490,    -1,    -1,   208,
      -1,   209,    -1,   376,    -1,    49,    -1,   324,    -1,   161,
     709,    -1,   134,   310,    -1,   113,   707,    -1,   112,   707,
      -1,   274,   707,    -1,    52,    -1,   489,   803,   490,    -1,
      -1,   712,    -1,   713,    -1,   712,    -1,   713,    -1,    51,
     719,   489,   762,   490,    -1,    51,   719,    -1,   716,    -1,
     717,    -1,   716,    -1,   717,    -1,   718,   489,   803,   490,
      -1,   718,    -1,    65,   719,    -1,    64,   719,    -1,   439,
      -1,   259,    65,   719,    -1,   259,    64,   719,    -1,   261,
     719,    -1,   441,    -1,    -1,   407,   489,   803,   490,   722,
      -1,   407,   722,    -1,   406,   489,   803,   490,   722,    -1,
     406,   722,    -1,   211,    -1,   475,   406,   472,    -1,   453,
     406,   472,    -1,    -1,   469,    -1,   470,    -1,   254,    -1,
     255,    -1,   109,    -1,   110,    -1,   184,    -1,   185,    -1,
     250,    -1,   251,    -1,   358,    -1,   359,    -1,   248,    -1,
     249,    -1,   246,    -1,   247,    -1,   723,    -1,   724,    -1,
     725,    -1,   726,    -1,   727,    -1,   728,    -1,   729,    -1,
     730,    -1,   723,   408,   724,    -1,   725,   408,   726,    -1,
     725,   408,   727,    -1,   725,   408,   728,    -1,   726,   408,
     727,    -1,   726,   408,   728,    -1,   727,   408,   728,    -1,
      -1,   734,    -1,   732,    11,   702,    -1,   732,    73,   810,
      -1,   732,    41,   406,   472,   732,    -1,   480,   732,    -1,
     481,   732,    -1,   732,   480,   732,    -1,   732,   481,   732,
      -1,   732,   482,   732,    -1,   732,   483,   732,    -1,   732,
     484,   732,    -1,   732,   485,   732,    -1,   732,   476,   732,
      -1,   732,   477,   732,    -1,   732,   478,   732,    -1,   732,
      16,   732,    -1,   732,    17,   732,    -1,   732,    18,   732,
      -1,   732,   758,   732,    -1,   758,   732,    -1,   732,   758,
      -1,   732,    33,   732,    -1,   732,   286,   732,    -1,   266,
     732,    -1,   473,   732,    -1,   732,   173,   732,    -1,   732,
     228,   732,    -1,   732,   228,   732,   143,   732,    -1,   732,
     473,   228,   732,    -1,   732,   473,   228,   732,   143,   732,
      -1,   732,   188,   732,    -1,   732,   188,   732,   143,   732,
      -1,   732,   473,   188,   732,    -1,   732,   473,   188,   732,
     143,   732,    -1,   732,   373,   408,   732,    -1,   732,   373,
     408,   732,   143,   732,    -1,   732,   473,   373,   408,   732,
      -1,   732,   473,   373,   408,   732,   143,   732,    -1,   732,
     214,   271,    -1,   732,   215,    -1,   732,   214,   266,   271,
      -1,   732,   266,   271,    -1,   732,   269,    -1,   752,    -1,
     494,   754,   495,    -1,   487,   763,   488,    -1,   752,    15,
     732,    -1,   782,    15,   732,    -1,   752,   292,   752,    -1,
     732,   214,   415,    -1,   732,   214,   266,   415,    -1,   732,
     214,   156,    -1,   732,   214,   266,   156,    -1,   732,   214,
     426,    -1,   732,   214,   266,   426,    -1,   732,   214,   130,
     168,   732,    -1,   732,   214,   266,   130,   168,   732,    -1,
     732,   214,   276,   489,   766,   490,    -1,   732,   214,   266,
     276,   489,   766,   490,    -1,   732,    48,   787,   733,    33,
     732,    -1,   732,   473,    48,   787,   733,    33,   732,    -1,
     732,    48,   394,   733,    33,   732,    -1,   732,   473,    48,
     394,   733,    33,   732,    -1,   732,   193,   776,    -1,   732,
     473,   193,   776,    -1,   732,   760,   755,   627,    -1,   732,
     760,   755,   489,   732,   490,    -1,   115,    -1,    35,   487,
     763,   488,    -1,   734,    -1,   733,    11,   702,    -1,   480,
     733,    -1,   481,   733,    -1,   733,   480,   733,    -1,   733,
     481,   733,    -1,   733,   482,   733,    -1,   733,   483,   733,
      -1,   733,   484,   733,    -1,   733,   485,   733,    -1,   733,
     476,   733,    -1,   733,   477,   733,    -1,   733,   478,   733,
      -1,   733,    16,   733,    -1,   733,    17,   733,    -1,   733,
      18,   733,    -1,   733,   758,   733,    -1,   758,   733,    -1,
     733,   758,    -1,   733,   214,   130,   168,   733,    -1,   733,
     214,   266,   130,   168,   733,    -1,   733,   214,   276,   489,
     766,   490,    -1,   733,   214,   266,   276,   489,   766,   490,
      -1,   782,    -1,   802,    -1,   496,     9,    -1,   497,   786,
      -1,    10,   786,    -1,   489,   732,   490,   786,    -1,   777,
      -1,   736,   786,    -1,   627,    -1,   627,   785,    -1,   150,
     627,    -1,   670,   489,   762,   490,    -1,   801,   489,   490,
      -1,   801,   489,   764,   640,   490,    -1,   801,   489,   440,
     765,   640,   490,    -1,   801,   489,   764,   493,   440,   765,
     640,   490,    -1,   801,   489,    27,   764,   640,   490,    -1,
     801,   489,   130,   764,   640,   490,    -1,   801,   489,   482,
     490,    -1,   735,   739,   740,   744,    -1,   738,    -1,   735,
      -1,   738,    -1,    74,   163,   489,   732,   490,    -1,    99,
      -1,   102,    -1,   102,   489,   803,   490,    -1,   103,    -1,
     103,   489,   803,   490,    -1,   233,    -1,   233,   489,   803,
     490,    -1,   234,    -1,   234,   489,   803,   490,    -1,   100,
      -1,   104,    -1,   367,    -1,   431,    -1,    98,    -1,   101,
      -1,    61,   489,   732,    36,   702,   490,    -1,   418,   489,
     732,    36,   702,   490,    -1,   155,   489,   767,   490,    -1,
     293,   489,   769,   490,    -1,   307,   489,   771,   490,    -1,
     392,   489,   772,   490,    -1,   412,   489,   732,    36,   702,
     490,    -1,   414,   489,    53,   775,   490,    -1,   414,   489,
     224,   775,   490,    -1,   414,   489,   409,   775,   490,    -1,
     414,   489,   775,   490,    -1,   272,   489,   732,   493,   732,
     490,    -1,    72,   489,   762,   490,    -1,   452,   177,   489,
     641,   490,    -1,    -1,   159,   489,   448,   732,   490,    -1,
      -1,   450,   742,    -1,    -1,   743,    -1,   742,   493,   743,
      -1,   805,    36,   745,    -1,   291,   745,    -1,   291,   805,
      -1,    -1,   489,   746,   747,   640,   748,   490,    -1,   805,
      -1,    -1,   300,    54,   762,    -1,    -1,   322,   749,    -1,
     350,   749,    -1,    -1,   750,    -1,    48,   750,    33,   750,
      -1,   421,   309,    -1,   421,   162,    -1,    97,   349,    -1,
     732,   309,    -1,   732,   162,    -1,   349,   489,   762,   490,
      -1,   349,   489,   490,    -1,   751,    -1,   489,   762,   493,
     732,   490,    -1,   806,   498,   732,    -1,   753,    -1,   754,
     493,   753,    -1,    34,    -1,   378,    -1,    27,    -1,     8,
      -1,   757,    -1,   480,    -1,   481,    -1,   482,    -1,   483,
      -1,   484,    -1,   485,    -1,   476,    -1,   477,    -1,   478,
      -1,    16,    -1,    17,    -1,    18,    -1,     8,    -1,   283,
     489,   761,   490,    -1,   756,    -1,   283,   489,   761,   490,
      -1,   756,    -1,   283,   489,   761,   490,    -1,   228,    -1,
     473,   228,    -1,   173,    -1,   473,   173,    -1,   188,    -1,
     473,   188,    -1,   756,    -1,   805,   491,   761,    -1,   732,
      -1,   762,   493,   732,    -1,   762,    -1,    -1,   765,    -1,
     764,   493,   765,    -1,   732,    -1,   813,    13,   732,    -1,
     813,    14,   732,    -1,   702,    -1,   766,   493,   702,    -1,
     768,   168,   732,    -1,    -1,     3,    -1,   723,    -1,   724,
      -1,   725,    -1,   726,    -1,   727,    -1,   728,    -1,   729,
      -1,   730,    -1,   804,    -1,   732,   770,   773,   774,    -1,
     732,   770,   773,    -1,   304,   732,    -1,   733,   193,   733,
      -1,    -1,   732,   773,   774,    -1,   732,   774,   773,    -1,
     732,   773,    -1,   732,   774,    -1,   762,    -1,    -1,   168,
     732,    -1,   163,   732,    -1,   732,   168,   762,    -1,   168,
     762,    -1,   762,    -1,   627,    -1,   489,   762,   490,    -1,
      60,   781,   778,   780,   141,    -1,   779,    -1,   778,   779,
      -1,   447,   732,   405,   732,    -1,   137,   732,    -1,    -1,
     732,    -1,    -1,   805,    -1,   805,   785,    -1,   491,   800,
      -1,   487,   732,   488,    -1,   487,   784,   498,   784,   488,
      -1,   732,    -1,    -1,   783,    -1,   785,   783,    -1,    -1,
     786,   783,    -1,    40,    -1,    -1,   789,    -1,    -1,   790,
      -1,   789,   493,   790,    -1,   732,    36,   815,    -1,   732,
       3,    -1,   732,    -1,   482,   792,   795,    -1,   805,   491,
     482,   792,   795,    -1,   146,   489,   798,   490,    -1,   146,
     805,    -1,   791,    -1,    -1,   732,    36,   805,    -1,   793,
      -1,   794,   493,   793,    -1,   337,   489,   794,   490,    -1,
     337,   793,    -1,    -1,   797,    -1,   796,   493,   797,    -1,
     806,    -1,   805,   785,    -1,   799,    -1,   798,   493,   799,
      -1,   805,    -1,   814,    -1,   808,    -1,   805,   785,    -1,
     803,    -1,     4,    -1,   804,   786,    -1,     6,    -1,     7,
      -1,   801,   804,    -1,   801,   489,   764,   640,   490,   804,
      -1,   705,   804,    -1,   721,   489,   732,   490,   731,    -1,
     721,   803,   731,    -1,   721,   804,   731,    -1,   415,    -1,
     156,    -1,   271,    -1,     9,    -1,     5,    -1,     3,    -1,
     874,    -1,   875,    -1,   805,    -1,     5,    -1,     3,    -1,
     874,    -1,   879,    -1,     3,    -1,   874,    -1,   876,    -1,
       3,    -1,   874,    -1,   877,    -1,   805,    -1,   805,   811,
      -1,   491,   800,    -1,   811,   491,   800,    -1,   489,   798,
     490,    -1,    -1,   807,    -1,     3,    -1,   878,    -1,   874,
      -1,   880,    -1,   814,    -1,     5,    -1,   311,   799,   817,
      36,   818,    -1,   489,   766,   490,    -1,    -1,   626,    -1,
     520,    -1,   608,    -1,   857,    -1,    93,   354,   805,   820,
      -1,    93,   354,   187,   266,   150,   805,   820,    -1,   820,
     821,    -1,    -1,   552,    -1,   822,    -1,   539,    -1,   869,
      -1,    93,   828,   196,   825,   826,   281,   797,   824,   489,
     536,   490,   827,   696,    -1,    93,   828,   196,   825,   187,
     266,   150,   580,   281,   797,   824,   489,   536,   490,   827,
     696,    -1,   805,    -1,   432,   823,    -1,    -1,    82,    -1,
      -1,   580,    -1,    -1,   451,   565,    -1,    -1,   425,    -1,
      -1,    29,   397,   690,   368,   354,   799,    -1,    29,   397,
     187,   150,   690,   368,   354,   799,    -1,    29,   362,   797,
     368,   354,   799,    -1,    29,   362,   187,   150,   797,   368,
     354,   799,    -1,    29,   444,   797,   368,   354,   799,    -1,
      29,   444,   187,   150,   797,   368,   354,   799,    -1,   164,
      68,    -1,    68,    -1,   152,   108,   804,   616,    -1,   192,
     108,   804,    -1,   151,   836,    -1,   151,   840,   834,   836,
      -1,   151,   442,   836,    -1,   151,   489,   839,   490,   836,
      -1,   442,    -1,    -1,   841,    -1,   546,    -1,    -1,   626,
      -1,   520,    -1,   608,    -1,   857,    -1,   871,    -1,     3,
      -1,   874,    -1,   878,    -1,   837,    -1,   804,    -1,   842,
      -1,   839,   493,   842,    -1,    32,    -1,    31,    -1,   415,
      -1,   156,    -1,   281,    -1,   838,    -1,   843,   835,    -1,
     837,    -1,   840,    -1,   368,   845,    -1,   368,   232,   845,
      -1,   368,   366,   845,    -1,   368,   174,   845,    -1,   846,
      -1,   867,   168,    97,    -1,   406,   472,   848,    -1,   354,
     804,    -1,   867,   408,   849,    -1,   867,   478,   849,    -1,
     867,   408,   115,    -1,   867,   478,   115,    -1,   841,    -1,
     546,    -1,   804,    -1,     3,    -1,   721,   804,   731,    -1,
     721,   489,   803,   490,   804,    -1,   546,    -1,   115,    -1,
     232,    -1,   847,    -1,   849,   493,   847,    -1,   231,   851,
      -1,   804,    -1,   433,   854,   856,   834,    -1,   433,   854,
     856,   834,   797,    -1,   433,   854,   856,   834,   861,    -1,
     433,   489,   855,   490,    -1,   433,   489,   855,   490,   797,
     812,    -1,   840,    -1,   442,    -1,   167,    -1,   169,    -1,
       3,    -1,   169,    -1,    -1,   853,    -1,   855,   493,   853,
      -1,   167,    -1,    -1,   524,   120,   168,   858,   860,   859,
     529,    -1,   690,    -1,   690,   805,    -1,   690,    36,   805,
      -1,   448,   732,    -1,    -1,   432,   681,    -1,    -1,   840,
     834,    -1,   840,   834,   797,   812,    -1,   339,   864,    -1,
     867,    -1,    27,    -1,   863,    -1,   406,   472,    -1,   410,
     216,   227,    -1,   866,   626,    -1,   393,   626,    -1,   393,
     867,    -1,   866,   867,    -1,   866,   406,   472,    -1,   866,
     410,   216,   227,    -1,   866,    27,    -1,   372,    -1,   125,
      -1,   805,    -1,   867,   491,   805,    -1,    56,   735,    -1,
      93,   596,   444,   797,   586,   827,    36,   626,   870,    -1,
      93,   286,   337,   596,   444,   797,   586,   827,    36,   626,
     870,    -1,    93,   596,   327,   444,   797,   489,   590,   490,
     827,    36,   626,   870,    -1,    93,   286,   337,   596,   327,
     444,   797,   489,   590,   490,   827,    36,   626,   870,    -1,
     451,    67,   284,    -1,   451,    59,    67,   284,    -1,   451,
     232,    67,   284,    -1,    -1,    93,   596,   397,   873,    36,
     626,   872,    -1,    93,   596,   397,   187,   266,   150,   873,
      36,   626,   872,    -1,   451,   107,    -1,   451,   264,   107,
      -1,    -1,   797,   586,   572,   564,    -1,    19,    -1,    20,
      -1,    21,    -1,    22,    -1,    23,    -1,    24,    -1,    25,
      -1,    26,    -1,    28,    -1,    29,    -1,    30,    -1,    38,
      -1,    39,    -1,    41,    -1,    42,    -1,    43,    -1,    45,
      -1,    46,    -1,    47,    -1,    54,    -1,    55,    -1,    56,
      -1,    57,    -1,    58,    -1,    59,    -1,    62,    -1,    63,
      -1,    66,    -1,    68,    -1,    69,    -1,    70,    -1,    71,
      -1,    76,    -1,    77,    -1,    78,    -1,    79,    -1,    80,
      -1,    81,    -1,    83,    -1,    84,    -1,    85,    -1,    87,
      -1,    88,    -1,    89,    -1,    90,    -1,    91,    -1,    92,
      -1,    95,    -1,    96,    -1,    97,    -1,   105,    -1,   106,
      -1,   107,    -1,   108,    -1,   109,    -1,   110,    -1,   111,
      -1,   114,    -1,   116,    -1,   118,    -1,   119,    -1,   120,
      -1,   121,    -1,   122,    -1,   123,    -1,   125,    -1,   126,
      -1,   127,    -1,   128,    -1,   129,    -1,   132,    -1,   133,
      -1,   134,    -1,   135,    -1,   136,    -1,   138,    -1,   139,
      -1,   140,    -1,   142,    -1,   143,    -1,   144,    -1,   146,
      -1,   147,    -1,   148,    -1,   149,    -1,   151,    -1,   152,
      -1,   153,    -1,   154,    -1,   157,    -1,   159,    -1,   160,
      -1,   162,    -1,   164,    -1,   166,    -1,   170,    -1,   171,
      -1,   172,    -1,   174,    -1,   176,    -1,   180,    -1,   182,
      -1,   183,    -1,   184,    -1,   185,    -1,   186,    -1,   187,
      -1,   189,    -1,   190,    -1,   191,    -1,   192,    -1,   194,
      -1,   195,    -1,   196,    -1,   197,    -1,   198,    -1,   199,
      -1,   201,    -1,   204,    -1,   205,    -1,   206,    -1,   207,
      -1,   213,    -1,   216,    -1,   218,    -1,   219,    -1,   220,
      -1,   221,    -1,   222,    -1,   225,    -1,   227,    -1,   230,
      -1,   231,    -1,   232,    -1,   235,    -1,   236,    -1,   237,
      -1,   238,    -1,   239,    -1,   241,    -1,   242,    -1,   243,
      -1,   244,    -1,   245,    -1,   246,    -1,   247,    -1,   248,
      -1,   249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,
      -1,   254,    -1,   255,    -1,   256,    -1,   257,    -1,   258,
      -1,   262,    -1,   263,    -1,   264,    -1,   267,    -1,   268,
      -1,   270,    -1,   273,    -1,   275,    -1,   276,    -1,   277,
      -1,   279,    -1,   280,    -1,   283,    -1,   284,    -1,   285,
      -1,   288,    -1,   291,    -1,   294,    -1,   295,    -1,   296,
      -1,   297,    -1,   298,    -1,   299,    -1,   300,    -1,   301,
      -1,   302,    -1,   303,    -1,   305,    -1,   306,    -1,   308,
      -1,   309,    -1,   311,    -1,   312,    -1,   313,    -1,   315,
      -1,   316,    -1,   317,    -1,   318,    -1,   319,    -1,   320,
      -1,   321,    -1,   322,    -1,   323,    -1,   325,    -1,   326,
      -1,   327,    -1,   328,    -1,   330,    -1,   331,    -1,   332,
      -1,   333,    -1,   334,    -1,   335,    -1,   336,    -1,   337,
      -1,   338,    -1,   339,    -1,   340,    -1,   341,    -1,   343,
      -1,   344,    -1,   346,    -1,   347,    -1,   348,    -1,   350,
      -1,   351,    -1,   352,    -1,   353,    -1,   354,    -1,   355,
      -1,   356,    -1,   357,    -1,   358,    -1,   359,    -1,   360,
      -1,   362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,
      -1,   368,    -1,   370,    -1,   371,    -1,   372,    -1,   374,
      -1,   375,    -1,   377,    -1,   379,    -1,   380,    -1,   381,
      -1,   382,    -1,   383,    -1,   384,    -1,   385,    -1,   386,
      -1,   387,    -1,   388,    -1,   389,    -1,   391,    -1,   393,
      -1,   395,    -1,   396,    -1,   398,    -1,   400,    -1,   401,
      -1,   402,    -1,   403,    -1,   404,    -1,   410,    -1,   411,
      -1,   413,    -1,   416,    -1,   417,    -1,   419,    -1,   420,
      -1,   421,    -1,   422,    -1,   423,    -1,   426,    -1,   427,
      -1,   428,    -1,   429,    -1,   430,    -1,   433,    -1,   434,
      -1,   435,    -1,   436,    -1,   437,    -1,   441,    -1,   443,
      -1,   444,    -1,   445,    -1,   446,    -1,   449,    -1,   452,
      -1,   453,    -1,   454,    -1,   455,    -1,   456,    -1,   457,
      -1,   469,    -1,   470,    -1,   471,    -1,   472,    -1,    48,
      -1,    49,    -1,    51,    -1,    52,    -1,    64,    -1,    65,
      -1,    72,    -1,   112,    -1,   113,    -1,   150,    -1,   155,
      -1,   161,    -1,   178,    -1,   179,    -1,   203,    -1,   208,
      -1,   209,    -1,   211,    -1,   240,    -1,   259,    -1,   261,
      -1,   265,    -1,   272,    -1,   274,    -1,   289,    -1,   293,
      -1,   307,    -1,   310,    -1,   324,    -1,   349,    -1,   369,
      -1,   376,    -1,   390,    -1,   392,    -1,   406,    -1,   407,
      -1,   412,    -1,   414,    -1,   418,    -1,   438,    -1,   439,
      -1,   458,    -1,   459,    -1,   460,    -1,   461,    -1,   462,
      -1,   463,    -1,   464,    -1,   465,    -1,   466,    -1,   467,
      -1,   468,    -1,    44,    -1,    50,    -1,    74,    -1,    82,
      -1,    94,    -1,   101,    -1,   167,    -1,   169,    -1,   173,
      -1,   188,    -1,   202,    -1,   214,    -1,   215,    -1,   217,
      -1,   226,    -1,   228,    -1,   240,    -1,   260,    -1,   269,
      -1,   290,    -1,   292,    -1,   345,    -1,   373,    -1,   390,
      -1,   399,    -1,   442,    -1,    44,    -1,    50,    -1,    74,
      -1,    82,    -1,    94,    -1,   101,    -1,   167,    -1,   169,
      -1,   173,    -1,   188,    -1,   202,    -1,   214,    -1,   215,
      -1,   217,    -1,   226,    -1,   228,    -1,   260,    -1,   269,
      -1,   290,    -1,   292,    -1,   345,    -1,   373,    -1,   399,
      -1,   418,    -1,   442,    -1,    48,    -1,    49,    -1,    51,
      -1,    52,    -1,    65,    -1,    64,    -1,    72,    -1,   112,
      -1,   113,    -1,   150,    -1,   155,    -1,   161,    -1,   178,
      -1,   179,    -1,   203,    -1,   209,    -1,   211,    -1,   208,
      -1,   240,    -1,   259,    -1,   261,    -1,   265,    -1,   272,
      -1,   274,    -1,   289,    -1,   293,    -1,   307,    -1,   310,
      -1,   324,    -1,   349,    -1,   369,    -1,   376,    -1,   390,
      -1,   392,    -1,   406,    -1,   407,    -1,   412,    -1,   414,
      -1,   418,    -1,   438,    -1,   439,    -1,   458,    -1,   459,
      -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,   464,
      -1,   465,    -1,   466,    -1,   467,    -1,   468,    -1,    44,
      -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,   101,
      -1,   167,    -1,   169,    -1,   173,    -1,   188,    -1,   202,
      -1,   214,    -1,   215,    -1,   217,    -1,   226,    -1,   228,
      -1,   240,    -1,   260,    -1,   269,    -1,   290,    -1,   292,
      -1,   345,    -1,   373,    -1,   390,    -1,   399,    -1,   418,
      -1,   442,    -1,    27,    -1,    31,    -1,    32,    -1,    33,
      -1,    34,    -1,    35,    -1,    36,    -1,    37,    -1,    40,
      -1,    53,    -1,    60,    -1,    61,    -1,    67,    -1,    73,
      -1,    75,    -1,    86,    -1,    93,    -1,    98,    -1,    99,
      -1,   100,    -1,   102,    -1,   103,    -1,   104,    -1,   115,
      -1,   117,    -1,   124,    -1,   130,    -1,   131,    -1,   137,
      -1,   141,    -1,   145,    -1,   156,    -1,   158,    -1,   163,
      -1,   165,    -1,   168,    -1,   175,    -1,   177,    -1,   181,
      -1,   193,    -1,   200,    -1,   210,    -1,   212,    -1,   223,
      -1,   224,    -1,   229,    -1,   233,    -1,   234,    -1,   266,
      -1,   271,    -1,   278,    -1,   281,    -1,   282,    -1,   286,
      -1,   287,    -1,   304,    -1,   314,    -1,   329,    -1,   342,
      -1,   361,    -1,   367,    -1,   378,    -1,   394,    -1,   397,
      -1,   405,    -1,   408,    -1,   409,    -1,   415,    -1,   424,
      -1,   425,    -1,   431,    -1,   432,    -1,   440,    -1,   447,
      -1,   448,    -1,   450,    -1,   451,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   464,   464,   480,   492,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   536,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     7,    17,    18,    21,    23,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   256,     7,    14,    22,     9,    19,    32,    33,     7,
      14,    31,    51,    52,     9,    17,    29,    30,    34,    35,
      36,    41,    42,    43,    48,    52,    56,    60,    64,    68,
      72,    76,    80,    84,    88,    92,    97,   101,   105,   112,
     113,   117,   118,   119,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     7,    21,    36,    56,    57,    84,    85,
      86,    87,    88,    89,    93,    94,    99,   104,   105,   106,
     107,   108,   113,   120,   121,   122,   139,   146,   153,   163,
     173,   185,   193,   202,   211,   230,   237,   242,   244,   246,
     248,   251,   256,   257,   261,   262,   263,   264,   269,   273,
     274,   279,   286,   291,   292,   293,   294,   295,   296,   297,
     298,   304,   305,   309,   314,   321,   328,   335,   347,   348,
     349,   350,   354,   359,   360,   361,   366,   371,   372,   373,
     374,   375,   376,   381,   404,   408,   415,   416,   420,   424,
     425,   426,   430,   434,   442,   443,   448,   449,   453,   461,
     462,   467,   468,   472,   477,   481,   485,   490,   498,   499,
     503,   504,   510,   521,   534,   548,   562,   576,   590,   613,
     617,   624,   628,   636,   641,   648,   658,   659,   660,   661,
     662,   669,   676,   677,   682,   683,     9,    19,    29,    39,
      49,    59,    69,    79,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   112,
     113,   114,   115,   116,   117,   118,   123,   124,   129,   130,
     131,   136,   137,   138,   141,   142,     7,    18,    19,    23,
      27,     7,     1,    30,    53,    54,    59,    63,    68,    72,
      80,    81,    85,    86,    91,    92,    96,    97,   102,   103,
     104,   105,   106,   111,   119,   123,   128,   129,   134,   138,
     143,   147,   151,   155,   159,   163,   167,   171,   175,   179,
     183,   187,   191,   195,   203,   209,   210,   211,   216,   220,
      47,    48,    52,    53,    68,    69,    76,    84,    92,   100,
     108,   116,   127,   128,   155,   170,   186,   187,   206,   210,
     214,   231,   238,   245,   255,   256,   259,   271,   282,   290,
     295,   300,   305,   310,   318,   326,   331,   336,   343,   344,
     348,   349,   350,   357,   358,   362,   363,   367,   368,   372,
     376,   377,   380,   389,   400,   401,   402,   405,   406,   407,
     411,   412,   413,   414,   418,   419,   423,   425,   441,   443,
     448,   451,   459,   463,   467,   471,   475,   479,   486,   491,
     498,   499,   503,   507,   511,   515,   522,   529,   530,   535,
     536,   540,   541,   549,   569,   570,   572,   577,   578,   582,
     583,   586,   587,   612,   613,   617,   618,   622,   623,   624,
     625,   626,   630,   643,   650,   657,   664,   665,   669,   670,
     674,   675,   679,   680,   684,   685,   689,   700,   701,   702,
     703,   707,   708,   713,   714,   715,   724,   730,   748,   749,
     753,   754,   760,   766,   774,   782,   791,   800,   804,   830,
     834,   847,   861,   876,   888,   904,   910,   915,   921,   928,
     929,   937,   941,   945,   951,   958,   963,   964,   965,   966,
     970,   971,   983,   984,   989,   996,  1003,  1010,  1042,  1053,
    1066,  1071,  1072,  1075,  1076,  1079,  1080,  1085,  1086,  1091,
    1095,  1101,  1122,  1130,  1143,  1146,  1150,  1150,  1152,  1157,
    1164,  1169,  1175,  1180,  1186,  1192,  1201,  1203,  1206,  1210,
    1211,  1212,  1213,  1214,  1215,  1220,  1240,  1241,  1242,  1243,
    1254,  1268,  1269,  1275,  1280,  1285,  1290,  1295,  1300,  1305,
    1310,  1316,  1322,  1328,  1335,  1357,  1366,  1370,  1378,  1382,
    1390,  1402,  1423,  1427,  1433,  1437,  1450,  1458,  1468,  1470,
    1472,  1474,  1476,  1478,  1483,  1484,  1491,  1500,  1508,  1517,
    1528,  1536,  1537,  1538,  1542,  1542,  1545,  1545,  1548,  1548,
    1551,  1551,  1554,  1554,  1557,  1557,  1560,  1560,  1563,  1563,
    1566,  1568,  1570,  1572,  1574,  1576,  1578,  1580,  1582,  1587,
    1592,  1598,  1605,  1610,  1616,  1622,  1653,  1655,  1657,  1665,
    1680,  1682,  1684,  1686,  1688,  1690,  1692,  1694,  1696,  1698,
    1700,  1702,  1704,  1706,  1709,  1711,  1713,  1716,  1718,  1720,
    1722,  1725,  1730,  1735,  1742,  1747,  1754,  1759,  1767,  1772,
    1781,  1789,  1797,  1805,  1823,  1831,  1839,  1847,  1855,  1863,
    1867,  1871,  1875,  1883,  1891,  1907,  1915,  1923,  1931,  1939,
    1947,  1955,  1959,  1963,  1967,  1971,  1979,  1987,  1995,  2003,
    2023,  2045,  2056,  2063,  2077,  2093,  2095,  2097,  2099,  2101,
    2103,  2105,  2107,  2109,  2111,  2113,  2115,  2117,  2119,  2121,
    2123,  2125,  2127,  2129,  2131,  2135,  2139,  2143,  2157,  2158,
    2159,  2166,  2178,  2193,  2205,  2207,  2219,  2230,  2254,  2265,
    2274,  2278,  2284,  2291,  2298,  2308,  2315,  2343,  2378,  2389,
    2390,  2397,  2403,  2407,  2411,  2415,  2419,  2423,  2427,  2431,
    2435,  2439,  2443,  2447,  2451,  2455,  2459,  2463,  2465,  2467,
    2471,  2480,  2485,  2492,  2507,  2514,  2518,  2522,  2526,  2530,
    2544,  2545,  2549,  2550,  2558,  2559,  2563,  2564,  2569,  2577,
    2579,  2593,  2596,  2623,  2624,  2627,  2628,  2639,  2645,  2652,
    2661,  2678,  2723,  2731,  2739,  2747,  2755,  2776,  2777,  2780,
    2781,  2785,  2795,  2796,  2798,  2799,  2800,  2803,  2804,  2807,
    2808,  2809,  2810,  2811,  2812,  2813,  2814,  2815,  2816,  2817,
    2818,  2821,  2823,  2828,  2830,  2835,  2837,  2839,  2841,  2843,
    2845,  2847,  2849,  2863,  2865,  2869,  2873,  2880,  2885,  2892,
    2896,  2902,  2906,  2915,  2926,  2927,  2931,  2935,  2942,  2943,
    2944,  2945,  2946,  2947,  2948,  2949,  2950,  2951,  2961,  2965,
    2972,  2979,  2980,  2996,  3000,  3005,  3009,  3024,  3029,  3033,
    3036,  3039,  3040,  3041,  3044,  3051,  3061,  3075,  3076,  3080,
    3091,  3092,  3095,  3096,  3099,  3103,  3110,  3114,  3122,  3133,
    3134,  3138,  3139,  3143,  3144,  3147,  3148,  3158,  3159,  3163,
    3164,  3167,  3183,  3191,  3199,  3214,  3232,  3233,  3236,  3237,
    3240,  3244,  3245,  3248,  3249,  3250,  3260,  3261,  3272,  3276,
    3303,  3305,  3310,  3312,  3322,  3325,  3336,  3340,  3344,  3356,
    3360,  3369,  3376,  3408,  3412,  3416,  3420,  3424,  3428,  3432,
    3438,  3439,  3455,  3456,  3457,  3460,  3461,  3467,  3468,  3469,
    3472,  3473,  3474,  3477,  3478,  3479,  3482,  3483,  3486,  3488,
    3493,  3494,  3497,  3505,  3506,  3507,  3508,  3511,  3512,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    72,    73,    78,    82,    90,    91,
      96,    97,    98,   104,   109,   117,   118,    10,    16,    22,
      28,    38,    39,    47,    58,    70,    78,    86,    93,   103,
     105,   111,   115,   119,   134,   141,   142,   143,   147,   148,
       7,    16,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     7,    21,
      25,    32,    43,    44,    50,    51,     9,    19,     2,     7,
      14,    24,    25,    32,     3,    10,    17,    24,    31,    38,
      45,    55,    55,    57,    58,     6,     8,    21,    34,    52,
      74,    75,    76,    77,    11,    24,    41,    42,    43,    48,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL",
  "GRANT", "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER",
  "HAVING", "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P",
  "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT", "INHERITS",
  "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE",
  "INSERT", "INSTEAD", "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO",
  "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL",
  "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF",
  "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
  "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO",
  "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list", "enum_val_list",
  "RenameStmt", "opt_column", "InsertStmt", "insert_rest", "insert_target",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
  "set_target_list", "opt_collate", "opt_class", "insert_column_list",
  "set_clause_list", "index_params", "set_target", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateFunctionStmt",
  "macro_alias", "param_list", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name", "attr_name", "func_name",
  "AexprConst", "Iconst", "Sconst", "ColId", "ColIdOrString",
  "type_function_name", "function_name_token", "type_name_token",
  "any_name", "attrs", "opt_name_list", "param_name", "ColLabel",
  "ColLabelOrString", "PrepareStmt", "prep_type_clause", "PreparableStmt",
  "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt", "IndexStmt",
  "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,    60,    62,    61,   731,
      43,    45,    42,    47,    37,    94,   732,    91,    93,    40,
      41,    46,    59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   499,   500,   501,   501,   502,   502,   502,   502,   502,
     502,   502,   502,   502,   502,   502,   502,   502,   502,   502,
     502,   502,   502,   502,   502,   502,   502,   502,   502,   502,
     502,   502,   502,   502,   502,   502,   502,   502,   502,   502,
     503,   503,   503,   503,   503,   503,   503,   503,   504,   504,
     505,   505,   506,   506,   506,   506,   507,   507,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   509,   509,   510,
     510,   510,   510,   511,   511,   512,   513,   513,   513,   514,
     514,   514,   514,   515,   516,   516,   517,   517,   518,   518,
     518,   518,   518,   518,   518,   518,   518,   518,   518,   518,
     518,   519,   519,   520,   521,   521,   521,   521,   521,   522,
     522,   523,   523,   523,   524,   524,   525,   526,   526,   527,
     527,   527,   528,   528,   528,   529,   529,   530,   530,   531,
     531,   532,   532,   533,   533,   534,   534,   535,   535,   536,
     536,   537,   538,   538,   538,   539,   539,   540,   540,   541,
     541,   541,   542,   542,   543,   543,   544,   544,   545,   545,
     545,   546,   546,   546,   546,   547,   547,   547,   547,   547,
     547,   547,   547,   547,   547,   547,   547,   547,   547,   548,
     548,   549,   549,   549,   550,   550,   550,   550,   550,   550,
     551,   551,   551,   552,   552,   552,   553,   553,   554,   554,
     554,   554,   554,   554,   555,   555,   556,   557,   557,   557,
     557,   557,   558,   558,   558,   558,   559,   559,   559,   559,
     559,   559,   559,   559,   559,   560,   561,   562,   562,   562,
     562,   562,   563,   563,   564,   564,   564,   564,   565,   566,
     566,   567,   567,   568,   568,   568,   568,   568,   568,   568,
     568,   569,   569,   570,   571,   571,   571,   571,   572,   572,
     572,   572,   573,   574,   574,   574,   575,   576,   576,   576,
     576,   576,   576,   577,   578,   578,   579,   579,   580,   581,
     581,   581,   582,   582,   583,   583,   584,   584,   585,   586,
     586,   587,   587,   588,   589,   589,   589,   589,   590,   590,
     591,   591,   591,   592,   592,   592,   592,   592,   592,   593,
     593,   594,   594,   594,   594,   595,   596,   596,   596,   596,
     596,   596,   596,   596,   597,   597,   598,   598,   598,   598,
     598,   598,   598,   598,   599,   599,   599,   599,   599,   599,
     599,   599,   599,   599,   599,   599,   599,   599,   599,   600,
     600,   600,   600,   600,   600,   600,   601,   601,   602,   602,
     602,   603,   603,   603,   604,   604,   605,   606,   606,   607,
     607,   608,   609,   609,   610,   610,   611,   611,   612,   612,
     613,   613,   614,   614,   615,   615,   616,   616,   617,   617,
     617,   617,   617,   618,   619,   619,   620,   620,   621,   621,
     622,   622,   622,   622,   622,   622,   622,   622,   622,   622,
     622,   622,   622,   622,   623,   624,   624,   624,   625,   625,
     626,   626,   627,   627,   628,   628,   628,   628,   628,   628,
     628,   628,   629,   629,   630,   630,   630,   630,   630,   630,
     630,   631,   631,   631,   632,   632,   633,   634,   634,   635,
     635,   635,   635,   635,   635,   635,   635,   635,   636,   636,
     637,   637,   637,   638,   638,   639,   639,   640,   640,   641,
     642,   642,   643,   643,   644,   644,   644,   645,   645,   645,
     646,   646,   646,   646,   647,   647,   648,   648,   648,   648,
     649,   649,   650,   650,   650,   650,   650,   650,   651,   651,
     652,   652,   653,   653,   653,   653,   654,   655,   655,   656,
     656,   657,   657,   658,   659,   659,   659,   660,   660,   661,
     661,   662,   662,   663,   663,   664,   664,   665,   665,   665,
     665,   665,   666,   667,   668,   669,   670,   670,   671,   671,
     672,   672,   673,   673,   674,   674,   675,   676,   676,   676,
     676,   677,   677,   678,   678,   678,   679,   679,   680,   680,
     681,   681,   682,   682,   682,   682,   682,   682,   682,   683,
     683,   683,   683,   683,   683,   684,   684,   684,   684,   685,
     685,   686,   686,   686,   686,   686,   687,   687,   687,   687,
     688,   688,   689,   689,   690,   690,   690,   690,   691,   691,
     692,   693,   693,   694,   694,   695,   695,   696,   696,   697,
     697,   698,   699,   699,   700,   700,   701,   701,   702,   702,
     702,   702,   702,   702,   702,   702,   703,   703,   703,   704,
     704,   704,   704,   704,   704,   704,   705,   705,   705,   705,
     706,   707,   707,   708,   708,   708,   708,   708,   708,   708,
     708,   708,   708,   708,   709,   709,   710,   710,   711,   711,
     712,   713,   714,   714,   715,   715,   716,   717,   718,   718,
     718,   718,   718,   718,   719,   719,   720,   720,   720,   720,
     721,   722,   722,   722,   723,   723,   724,   724,   725,   725,
     726,   726,   727,   727,   728,   728,   729,   729,   730,   730,
     731,   731,   731,   731,   731,   731,   731,   731,   731,   731,
     731,   731,   731,   731,   731,   731,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   733,   733,   733,   733,   733,   734,   734,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     735,   735,   735,   735,   735,   735,   735,   736,   736,   737,
     737,   738,   738,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   738,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   738,   738,   738,   738,   738,   738,   738,   738,
     739,   739,   740,   740,   741,   741,   742,   742,   743,   744,
     744,   744,   745,   746,   746,   747,   747,   748,   748,   748,
     749,   749,   750,   750,   750,   750,   750,   751,   751,   752,
     752,   753,   754,   754,   755,   755,   755,   756,   756,   757,
     757,   757,   757,   757,   757,   757,   757,   757,   757,   757,
     757,   758,   758,   759,   759,   760,   760,   760,   760,   760,
     760,   760,   760,   761,   761,   762,   762,   763,   763,   764,
     764,   765,   765,   765,   766,   766,   767,   767,   768,   768,
     768,   768,   768,   768,   768,   768,   768,   768,   769,   769,
     770,   771,   771,   772,   772,   772,   772,   772,   772,   773,
     774,   775,   775,   775,   776,   776,   777,   778,   778,   779,
     780,   780,   781,   781,   782,   782,   783,   783,   783,   784,
     784,   785,   785,   786,   786,   787,   787,   788,   788,   789,
     789,   790,   790,   790,   790,   790,   791,   791,   792,   792,
     793,   794,   794,   795,   795,   795,   796,   796,   797,   797,
     798,   798,   799,   800,   801,   801,   802,   802,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     803,   804,   805,   805,   805,   806,   806,   807,   807,   807,
     808,   808,   808,   809,   809,   809,   810,   810,   811,   811,
     812,   812,   813,   814,   814,   814,   814,   815,   815,   816,
     817,   817,   818,   818,   818,   818,   819,   819,   820,   820,
     821,   821,   821,   821,   822,   822,   823,   824,   824,   825,
     825,   826,   826,   827,   827,   828,   828,   829,   829,   829,
     829,   829,   829,   830,   830,   831,   832,   833,   833,   833,
     833,   834,   834,   835,   835,   835,   836,   836,   836,   836,
     836,   837,   837,   837,   838,   838,   839,   839,   840,   840,
     841,   841,   841,   841,   842,   843,   843,   844,   844,   844,
     844,   845,   845,   845,   845,   846,   846,   846,   846,   847,
     847,   848,   848,   848,   848,   848,   848,   848,   849,   849,
     850,   851,   852,   852,   852,   852,   852,   853,   853,   853,
     853,   853,   854,   854,   855,   855,   856,   856,   857,   858,
     858,   858,   859,   859,   860,   860,   861,   861,   862,   863,
     863,   864,   864,   864,   865,   865,   865,   865,   865,   865,
     865,   866,   866,   867,   867,   868,   869,   869,   869,   869,
     870,   870,   870,   870,   871,   871,   872,   872,   872,   873,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     8,     1,     0,     1,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       3,     2,     2,     4,     5,     5,     8,     1,     0,     3,
       9,    12,     3,     0,     4,     6,     1,     2,     1,     1,
       0,     1,     2,     2,     1,     2,     2,     1,     2,     3,
       2,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       0,     1,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     9,    12,    11,     0,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     2,     1,     2,     3,
       5,     3,     2,     5,     5,     2,     3,     1,     1,     2,
       2,     0,     4,     0,     3,     4,     4,     0,     3,     2,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     2,     2,     2,     2,     2,
       2,     0,     3,     3,     3,     0,     1,     2,     1,     2,
       2,     2,     2,     4,     1,     3,     1,     3,     1,     1,
       1,     1,     3,     1,     2,     0,     1,     0,     1,     3,
       0,     2,     0,     3,     3,     1,     5,     3,     1,     3,
       1,     4,     5,     5,     6,     3,     7,     4,    11,     1,
       3,     2,     2,     2,     0,     3,     1,     1,     2,     2,
       2,     2,     1,     0,     1,     2,     6,     4,     6,     4,
       6,     8,     4,     6,     1,     1,     1,     1,     1,     2,
       1,     2,     1,     1,     1,     3,     3,     3,     3,     2,
       2,     1,     3,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     3,     6,     1,     1,     2,
       3,     8,    11,     9,     1,     1,     3,     0,     1,     3,
       1,     0,     1,     0,     1,     0,     1,     3,     1,     1,
       1,     3,     0,     2,     2,     0,     2,     0,     1,     0,
       1,     1,     1,     3,     3,     1,     1,     3,     3,     3,
       3,     4,     3,     2,     1,     1,     1,     1,     1,     3,
       1,     1,     3,     3,     1,     2,     4,     4,     2,     3,
       5,     5,     1,     1,    10,    10,     1,     2,     4,     4,
       4,     2,     2,     3,     1,     3,     6,     2,     0,     3,
       3,     4,     4,     4,     4,     3,     2,     1,     1,     0,
       1,     1,     0,     1,     5,     1,     0,     1,     0,     3,
       1,     3,     4,     3,     1,     1,     0,     2,     2,     0,
       2,     2,     1,     1,     1,     0,     2,     4,     5,     4,
       2,     3,     2,     2,     2,     2,     1,     2,     3,     0,
       1,     0,     5,     1,     4,     6,     2,     1,     0,     4,
       0,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     3,     0,     1,     3,     1,     1,     1,
       1,     1,     2,     4,     4,     5,     1,     1,     2,     0,
       1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
       3,     2,     0,     1,     2,     0,     4,     5,     2,     0,
       1,     3,     3,     3,     3,     3,     3,     1,     4,     3,
       4,     5,     4,     5,     4,     5,     2,     4,     1,     1,
       0,     1,     4,     5,     4,     0,     2,     2,     2,     1,
       1,     0,     4,     2,     1,     2,     2,     4,     2,     6,
       2,     1,     3,     4,     0,     2,     0,     2,     0,     1,
       3,     3,     2,     0,     2,     4,     1,     1,     2,     3,
       5,     6,     2,     3,     5,     5,     3,     4,     0,     1,
       1,     1,     1,     1,     2,     4,     1,     1,     1,     1,
       2,     3,     0,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     2,     1,     3,     0,     1,     1,     1,     1,
       5,     2,     1,     1,     1,     1,     4,     1,     2,     2,
       1,     3,     3,     2,     1,     0,     5,     2,     5,     2,
       1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     0,     1,     3,     3,     5,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     3,     3,     2,
       2,     3,     3,     5,     4,     6,     3,     5,     4,     6,
       4,     6,     5,     7,     3,     2,     4,     3,     2,     1,
       3,     3,     3,     3,     3,     3,     4,     3,     4,     3,
       4,     5,     6,     6,     7,     6,     7,     6,     7,     3,
       4,     4,     6,     1,     4,     1,     3,     2,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     2,     5,     6,     6,     7,     1,     1,
       2,     2,     2,     4,     1,     2,     1,     2,     2,     4,
       3,     5,     6,     8,     6,     6,     4,     4,     1,     1,
       1,     5,     1,     1,     4,     1,     4,     1,     4,     1,
       4,     1,     1,     1,     1,     1,     1,     6,     6,     4,
       4,     4,     4,     6,     5,     5,     5,     4,     6,     4,
       5,     0,     5,     0,     2,     0,     1,     3,     3,     2,
       2,     0,     6,     1,     0,     3,     0,     2,     2,     0,
       1,     4,     2,     2,     2,     2,     2,     4,     3,     1,
       5,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     1,     4,     1,     4,     1,     2,     1,
       2,     1,     2,     1,     3,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     4,     3,
       2,     3,     0,     3,     3,     2,     2,     1,     0,     2,
       2,     3,     2,     1,     1,     3,     5,     1,     2,     4,
       2,     0,     1,     0,     1,     2,     2,     3,     5,     1,
       0,     1,     2,     0,     2,     1,     0,     1,     0,     1,
       3,     3,     2,     1,     3,     5,     4,     2,     1,     0,
       3,     1,     3,     4,     2,     0,     1,     3,     1,     2,
       1,     3,     1,     1,     1,     2,     1,     1,     2,     1,
       1,     2,     6,     2,     5,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     2,     1,     4,     3,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     1,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     7,     1,
       2,     3,     2,     0,     2,     0,     2,     4,     2,     1,
       1,     1,     2,     3,     2,     2,     2,     2,     3,     4,
       2,     1,     1,     1,     3,     2,     9,    11,    12,    14,
       3,     4,     4,     0,     7,    10,     2,     3,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     135,   212,     0,  1139,  1138,   212,     0,  1114,   212,   419,
     343,     0,  1212,     0,   212,     0,   135,     0,     0,     0,
       0,     0,     0,     0,   212,   486,     0,  1211,   212,     0,
       0,  1183,     0,     0,     0,     0,     0,     2,     4,     7,
      18,    13,    30,    26,     0,    28,    16,    21,     6,    32,
      17,    20,    14,    33,    11,    31,   453,   440,   488,   452,
     134,   456,    29,    15,    25,     5,    10,    23,    24,    22,
    1122,    36,    27,    34,    19,     8,    35,    37,     0,     9,
      38,    12,   211,   210,   204,     0,     0,     0,     0,     0,
     205,  1052,  1230,  1231,  1232,  1233,  1234,  1235,  1236,  1237,
    1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,  1583,  1246,
    1247,  1248,  1531,  1532,  1584,  1533,  1534,  1249,  1250,  1251,
    1252,  1253,  1254,  1255,  1256,  1535,  1536,  1257,  1258,  1259,
    1260,  1261,  1537,  1585,  1262,  1263,  1264,  1265,  1266,  1267,
    1586,  1268,  1269,  1270,  1271,  1272,  1273,  1274,  1275,  1276,
    1587,  1277,  1278,  1279,  1588,  1280,  1281,  1282,  1283,  1284,
    1285,  1286,  1538,  1539,  1287,  1288,  1289,  1290,  1291,  1292,
    1293,  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,
    1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1311,  1312,
    1313,  1314,  1540,  1315,  1316,  1317,  1318,  1541,  1319,  1320,
    1321,  1542,  1322,  1323,  1324,  1589,  1590,  1325,  1326,  1327,
    1591,  1328,  1329,  1543,  1544,  1330,  1331,  1332,  1333,  1334,
    1335,  1336,  1592,  1337,  1338,  1339,  1340,  1341,  1342,  1343,
    1344,  1345,  1346,  1347,  1593,  1545,  1348,  1349,  1350,  1351,
    1546,  1547,  1548,  1352,  1594,  1595,  1353,  1596,  1354,  1355,
    1356,  1357,  1358,  1359,  1597,  1360,  1598,  1361,  1362,  1363,
    1364,  1365,  1366,  1367,  1368,  1549,  1369,  1370,  1371,  1372,
    1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,
    1383,  1384,  1385,  1386,  1550,  1600,  1551,  1387,  1388,  1389,
    1552,  1390,  1391,  1601,  1392,  1553,  1393,  1554,  1394,  1395,
    1396,  1397,  1398,  1399,  1400,  1401,  1402,  1555,  1602,  1403,
    1603,  1556,  1404,  1405,  1406,  1407,  1408,  1409,  1410,  1411,
    1412,  1413,  1414,  1415,  1557,  1416,  1417,  1558,  1418,  1419,
    1420,  1421,  1422,  1423,  1424,  1425,  1426,  1427,  1428,  1429,
    1559,  1430,  1431,  1432,  1433,  1434,  1435,  1436,  1437,  1438,
    1439,  1440,  1441,  1442,  1443,  1444,  1445,  1446,  1447,  1604,
    1448,  1449,  1450,  1560,  1451,  1452,  1453,  1454,  1455,  1456,
    1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,
    1467,  1561,  1468,  1469,  1470,  1605,  1471,  1472,  1562,  1473,
    1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,
    1484,  1563,  1485,  1564,  1486,  1487,  1488,  1489,  1607,  1490,
    1491,  1492,  1493,  1494,  1565,  1566,  1495,  1496,  1567,  1497,
    1568,  1498,  1499,  1569,  1500,  1501,  1502,  1503,  1504,  1505,
    1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,  1514,  1570,
    1571,  1515,  1608,  1516,  1517,  1518,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1572,  1573,  1574,  1575,  1576,  1577,
    1578,  1579,  1580,  1581,  1582,  1527,  1528,  1529,  1530,  1215,
       0,     0,  1034,  1053,  1054,  1062,   207,   418,   135,     0,
     387,     0,     0,   388,     0,     0,   337,   336,     0,  1105,
     342,     0,     0,     0,  1052,   101,  1549,  1418,  1563,    99,
    1032,  1053,     0,   362,   363,     0,   371,     0,   356,   360,
     357,     0,   381,   373,   382,   374,   355,   375,   364,   354,
       0,   383,     0,   358,     0,     0,     0,   208,   173,   343,
     135,     0,  1127,  1128,  1126,  1117,  1122,  1129,  1130,     0,
    1113,     0,  1051,  1171,  1170,   162,  1081,  1200,  1565,  1495,
    1213,  1201,  1198,  1199,   209,   485,   483,     0,  1008,  1328,
    1363,  1455,  1466,  1565,  1147,  1151,     0,   206,  1570,  1205,
       0,  1206,  1056,     0,   457,   614,  1055,  1028,  1182,     0,
    1187,     0,  1432,   461,   464,  1071,   462,   453,     0,     1,
     135,     0,     0,     0,   482,   482,     0,   482,     0,   445,
     453,   448,   452,     0,  1121,  1196,  1210,  1565,  1495,  1204,
    1207,  1336,     0,     0,  1336,     0,  1336,     0,  1336,     0,
       0,  1000,     0,  1001,  1035,  1083,  1084,  1082,     0,  1085,
     310,   341,   340,   339,   338,   343,  1336,  1089,  1066,     0,
       0,     0,     0,     0,     0,  1100,   102,   100,   369,   370,
       0,   361,   359,     0,  1063,  1609,   666,  1610,   695,   673,
     695,   695,  1611,  1612,  1613,  1614,   662,   662,  1302,   675,
    1615,  1616,  1617,  1336,  1618,  1619,   663,   664,   700,  1620,
    1621,  1622,  1623,  1624,     0,     0,  1625,   695,  1626,   662,
    1627,  1628,   667,  1629,   636,     0,  1630,   665,   637,  1631,
     703,   703,  1632,   690,  1633,   380,     0,   384,   648,   649,
     650,   651,   676,   677,   652,   682,   683,   687,   653,   735,
     662,  1064,  1065,  1336,   380,   376,  1336,   380,  1030,  1336,
       0,     0,   169,     0,  1119,  1131,  1634,  1635,  1636,  1637,
    1639,  1638,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,  1651,  1649,  1650,  1652,  1653,  1654,  1655,  1656,  1657,
    1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,  1677,
    1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1145,     0,
    1146,  1136,  1125,  1132,  1133,   135,   417,  1116,     0,     0,
       0,     0,  1202,     0,     0,     0,  1037,  1039,  1040,   931,
    1050,  1003,     0,  1532,  1533,  1534,   993,     0,  1535,  1536,
    1537,  1585,   865,   852,   861,   866,   853,   855,   862,  1538,
    1539,   803,  1540,  1541,  1048,  1542,  1543,  1544,  1546,  1547,
    1548,   857,   859,  1550,  1551,     0,  1049,  1553,  1554,  1399,
    1556,  1557,  1559,  1560,   863,  1562,  1564,  1565,  1566,  1567,
    1568,  1047,  1569,   864,  1571,     0,     0,     0,  1019,   948,
       0,     0,     0,  1003,   836,     0,     0,   656,   657,   678,
     679,   658,   684,   685,   659,     0,  1013,   736,   881,  1003,
     848,   909,   779,     0,   834,   828,   468,  1009,     0,   829,
    1036,  1003,   994,   468,  1007,  1150,  1148,  1154,  1149,     0,
       0,     0,     0,     0,   616,   615,  1029,  1181,  1179,  1180,
    1178,  1177,  1184,     0,  1186,  1122,   945,     0,   994,   463,
       0,     0,     0,   443,   442,     3,     0,     0,  1189,     0,
     480,   481,     0,     0,     0,     0,     0,     0,     0,     0,
     563,   502,   503,   505,   560,   564,   572,     0,   449,     0,
    1071,  1208,     0,     0,     0,   122,   122,     0,     0,     0,
       0,     0,    93,    42,    86,     0,     0,     0,     0,   187,
     200,     0,     0,     0,     0,     0,   197,     0,     0,   180,
      44,   174,   176,     0,   122,     0,    40,     0,     0,     0,
      46,  1052,     0,  1583,  1584,  1585,  1586,  1587,   866,     0,
    1589,  1590,  1591,  1592,  1593,  1594,  1595,  1596,  1597,  1598,
    1549,  1600,  1601,  1602,  1603,  1604,  1605,  1563,  1607,  1569,
       0,  1608,     0,   840,   951,   488,   949,  1072,     0,  1053,
    1059,   999,     0,  1073,  1713,  1714,  1715,  1716,  1717,  1718,
    1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,
    1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,
    1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,
    1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,  1758,
    1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  1770,  1771,  1772,  1773,  1774,  1775,  1776,  1777,  1778,
    1779,  1780,  1781,  1782,  1783,  1784,  1673,  1785,  1786,  1787,
    1788,  1789,   996,  1033,  1075,  1074,  1076,  1002,     0,     0,
     415,     0,     0,  1086,     0,  1067,     0,     0,  1336,   168,
    1336,   310,     0,   310,     0,     0,  1099,  1102,   372,   368,
     366,   365,   367,   694,   681,   689,   688,     0,   671,   670,
     669,     0,   668,     0,     0,   695,   695,   693,   672,   648,
       0,     0,     0,   699,     0,   697,   378,   379,     0,   352,
       0,   642,   638,     0,   708,   709,   710,   711,   718,   719,
     716,   717,   712,   713,   706,   707,   714,   715,   704,   705,
       0,   720,   721,   722,   723,   724,   725,   726,   727,   654,
     660,     0,     0,   347,     0,     0,   349,     0,     0,     0,
       0,   135,     0,   181,  1141,  1142,  1140,     0,     0,  1124,
     184,   201,  1135,  1144,  1134,  1143,  1123,  1118,     0,  1115,
     406,  1160,  1159,  1168,   163,     0,   954,     0,   135,  1203,
    1214,     0,   832,   948,   992,     0,     0,     0,     0,     0,
       0,   838,   957,     0,     0,   759,     0,     0,     0,   972,
       0,   978,     0,     0,     0,   760,   740,   741,     0,  1018,
    1025,   947,     0,   836,   945,     0,   912,     0,  1055,     0,
     830,   831,   837,     0,  1043,     0,   735,   735,  1012,   931,
       0,   928,   929,   930,     0,     0,     0,  1006,     0,   939,
     941,     0,     0,   775,   937,     0,   778,     0,     0,     0,
       0,   925,   926,   927,   919,   920,   921,   922,   923,   924,
     935,   918,   756,     0,     0,   883,   835,     0,     0,   755,
       0,     0,     0,   579,     0,  1041,  1038,     0,   995,   579,
    1162,  1166,  1167,  1165,     0,  1161,  1153,  1152,  1157,  1155,
    1158,  1156,     0,  1175,     0,  1172,   576,     0,   465,     0,
       0,  1195,     0,   129,     0,  1190,     0,   460,   459,   489,
     490,   496,   458,   541,   542,     0,     0,     0,     0,   569,
     567,   532,   506,   531,     0,     0,   510,     0,   533,   736,
     562,   447,   500,   501,   504,   446,     0,   565,     0,   575,
     563,   505,     0,  1197,  1209,     0,     0,     0,     0,     0,
    1336,     0,     0,    77,    58,   262,     0,   121,     0,     0,
       0,     0,     0,     0,     0,    85,    82,    83,    84,     0,
       0,     0,     0,   185,   186,   199,     0,   190,   191,   188,
     192,   193,     0,     0,   178,   179,     0,     0,     0,     0,
     177,     0,     0,     0,     0,     0,     0,     0,     0,   488,
     488,   488,   846,     0,     0,   487,     0,     0,   997,  1000,
     405,   318,     0,   308,     0,     0,     0,     0,     0,     0,
     343,  1092,  1090,  1088,  1091,  1093,  1068,     0,     0,     0,
       0,   165,   167,     0,   307,   281,     0,  1104,   389,     0,
       0,  1336,  1101,   298,     0,     0,     0,     0,   380,     0,
     692,   691,   643,   639,     0,     0,     0,     0,   385,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   380,
     377,   380,  1031,     0,   380,   172,  1336,   310,     0,  1120,
    1137,   182,   202,   183,   203,   438,     0,   412,   420,   425,
     403,     0,   403,     0,   422,   426,   403,   421,   403,   416,
       0,   164,     0,  1080,     0,  1079,     0,  1004,     0,     0,
     991,   987,     0,     0,     0,     0,     0,   958,   959,   960,
     961,   962,   963,   964,   965,   966,     0,     0,   967,     0,
       0,     0,   917,   928,   929,   930,   925,   926,   927,   919,
     920,   921,   922,   923,   924,   943,     0,     0,     0,     0,
       0,     0,     0,     0,   805,     0,     0,   828,   908,     0,
     945,   977,     0,     0,     0,     0,     0,     0,   945,   983,
       0,     0,     0,  1017,     0,  1014,   781,  1003,     0,     0,
     780,     0,     0,     0,  1045,  1046,   737,   751,   752,   753,
     757,  1078,  1077,  1011,     0,  1005,     0,     0,   738,   761,
     766,     0,   984,   799,     0,   787,     0,   774,     0,   785,
     789,   762,   777,     0,   758,     0,  1006,   940,   942,     0,
     938,     0,   748,   749,   750,   742,   743,   744,   745,   746,
     747,   754,   916,   914,   915,     0,     0,     0,   891,   782,
       0,     0,   784,   783,  1328,  1363,     0,   479,   479,   479,
     467,   477,  1010,     0,   628,   488,  1019,   628,     0,   735,
     617,  1071,  1185,  1173,  1174,   946,  1070,   135,     0,  1193,
       0,     0,     0,   141,   124,     0,  1191,     0,   157,   579,
       0,  1003,     0,   494,   495,     0,   499,  1560,  1451,     0,
       0,     0,     0,   534,   570,     0,   561,     0,  1037,   535,
    1036,   536,   539,   540,   511,   571,  1026,   573,     0,   566,
     451,   450,   577,     0,    43,     0,  1336,    60,     0,     0,
       0,     0,     0,     0,   216,   253,   216,    98,  1336,   380,
    1336,   380,  1234,  1303,  1467,     0,    56,    89,     0,   286,
     115,     0,   271,   315,    79,    94,   108,     0,     0,    45,
     175,   189,   194,   111,   198,   195,  1109,   196,   122,     0,
      41,     0,   109,     0,  1107,     0,     0,    47,   113,  1111,
       0,     0,     0,     0,   950,   841,   952,   953,   999,     0,
     404,     0,   309,     0,   414,   394,   395,   405,     0,     0,
     310,  1089,     0,  1069,   105,     0,     0,     0,     0,   301,
     299,   329,     0,   306,   300,   308,     0,     0,   257,     0,
    1228,     0,     0,   390,   386,     0,     0,     0,   661,   674,
     353,   648,     0,   702,   701,   703,   703,   648,     0,   634,
       0,   646,     0,   686,   655,   728,   729,   730,   731,   732,
     733,   734,   346,   348,     0,   350,     0,     0,   407,     0,
     410,     0,   409,   413,   408,   402,     0,   433,     0,     0,
       0,     0,     0,     0,  1169,   955,   484,   804,     0,     0,
     988,     0,     0,   879,     0,   854,   856,   869,     0,   858,
     860,     0,   932,     0,     0,     0,   870,   807,   808,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   823,   822,   871,   907,
       0,     0,   975,   976,   872,     0,     0,   982,     0,     0,
       0,   877,     0,     0,     0,     0,  1024,   833,   946,   913,
     911,   839,   735,     0,     0,     0,     0,     0,     0,     0,
     788,   776,     0,   786,   790,     0,     0,     0,   770,     0,
       0,   768,   800,   764,     0,     0,   801,     0,     0,     0,
     847,   479,   479,   479,   479,   476,   478,     0,     0,     0,
       0,  1451,     0,   600,   578,   580,   587,   600,   605,   849,
     626,   850,  1055,     0,   544,     0,  1025,   544,     0,  1163,
    1176,     0,  1194,     0,   146,   128,   148,   147,     0,   155,
       0,  1003,     0,   146,   130,     0,   149,     0,  1193,     0,
     161,   491,     0,   933,   499,     0,   493,   538,   537,     0,
     509,   568,   507,     0,   574,     0,     0,     0,   261,     0,
       0,     0,   216,     0,     0,   325,     0,   312,    78,     0,
       0,     0,    52,    97,    70,    62,    48,    76,     0,     0,
      81,     0,    74,    91,    92,    90,    95,     0,   245,   226,
     258,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   844,   845,   842,   488,   998,   436,
     437,   180,   435,   319,     0,     0,   307,  1104,  1087,     0,
       0,   104,   106,     0,   168,   310,     0,   285,   281,     0,
     279,   278,   280,     0,  1229,   173,     0,  1224,  1103,     0,
       0,  1098,   680,   645,     0,   698,   696,   644,     0,   640,
     647,   380,     0,   439,     0,   398,   434,   423,   428,     0,
     432,   430,   429,   424,   427,     0,   990,   986,     0,   851,
     956,     0,   944,   970,   969,   806,   818,   819,   820,   971,
       0,     0,     0,   815,   816,   817,   809,   810,   811,   812,
     813,   814,   821,   980,   979,   973,   974,     0,   874,   875,
     876,   981,     0,  1016,   945,  1021,     0,     0,   910,  1044,
     739,     0,     0,   767,   985,   791,     0,     0,     0,   763,
     932,     0,     0,     0,     0,     0,   772,     0,     0,     0,
     894,   889,   890,     0,     0,     0,     0,   470,   469,   475,
     600,   605,     0,   453,     0,   587,     0,   599,   528,   598,
       0,     0,   611,   609,     0,   611,     0,   611,     0,   528,
       0,   601,   528,   598,     0,   618,  1029,   627,     0,   559,
     841,  1015,   559,     0,   466,  1192,     0,  1188,     0,     0,
       0,   136,   133,   123,     0,     0,   158,   146,   137,     0,
     492,   497,   498,   508,  1027,   116,   216,     0,     0,    59,
       0,   327,   273,   305,   288,     0,     0,     0,   217,     0,
     293,     0,    51,    71,     0,    67,     0,    96,     0,     0,
       0,     0,     0,    54,    66,     0,    49,     0,   380,   380,
      57,   272,  1063,  1609,  1610,  1611,  1612,  1613,  1614,  1615,
    1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1702,
    1625,   223,  1626,  1399,  1627,  1628,  1629,     0,  1630,   637,
    1631,  1632,  1633,   919,   920,   221,   314,   218,   320,   220,
     222,     0,  1064,   219,   317,   112,  1110,     0,   110,     0,
    1108,   119,   117,   114,  1112,     0,   417,   397,     0,     0,
       0,  1336,     0,   103,     0,  1104,   166,   307,     0,   335,
     257,   330,     0,  1228,  1226,     0,  1223,     0,     0,     0,
     641,   635,   351,     0,   411,     0,   431,   989,   867,   878,
     968,     0,     0,     0,     0,   873,   868,  1023,     0,  1020,
     797,   795,   792,     0,   793,   771,     0,     0,   769,   765,
       0,   802,   880,     0,   896,   893,   474,   473,   472,   471,
     586,   584,     0,   589,  1055,   596,   521,   527,   585,     0,
     581,     0,   610,   606,     0,   607,     0,     0,   608,     0,
     582,     0,  1055,   583,     0,   625,     0,     0,   885,  1042,
     885,  1164,   145,   125,     0,   126,   156,     0,     0,     0,
       0,   150,   391,     0,   323,    61,     0,   305,     0,   216,
     290,   289,   292,   287,   291,   294,     0,     0,     0,     0,
       0,   274,     0,     0,     0,   237,     0,     0,   305,     0,
     311,   233,   234,   344,     0,     0,     0,    63,    53,    50,
      55,    64,     0,     0,    65,    68,   633,    80,    73,  1702,
    1709,     0,     0,     0,     0,     0,   843,   393,   400,   180,
       0,     0,   281,     0,     0,   307,   107,     0,     0,     0,
    1228,     0,     0,   213,     0,   254,     0,   170,  1227,     0,
    1216,     0,  1096,  1097,     0,     0,   399,   824,     0,     0,
       0,  1022,   794,   798,   796,   773,   882,     0,   488,   621,
       0,   624,   588,     0,     0,   516,   523,     0,   526,   520,
       0,   590,     0,     0,   592,   594,     0,     0,     0,   629,
       0,     0,     0,  1032,  1278,  1543,  1450,     0,   543,   545,
     548,   550,   549,   551,   547,   558,     0,   519,   519,     0,
       0,     0,   159,     0,   152,   152,     0,   138,   934,     0,
     216,     0,   304,   324,   252,     0,     0,   235,     0,   242,
       0,   276,   277,   275,   236,   305,   310,   238,     0,   345,
       0,    72,     0,    88,     0,     0,   316,   120,   118,   417,
       0,  1104,   257,  1223,     0,     0,   281,   173,  1225,   270,
     263,   264,   265,   266,   267,   268,   269,   284,   283,   255,
     256,     0,     0,     0,  1098,     0,   825,     0,   826,     0,
     899,   626,     0,     0,   620,     0,   514,   512,   515,   517,
     513,     0,     0,   597,   613,     0,   593,   591,   602,     0,
     633,     0,   604,     0,     0,     0,   552,     0,   884,   886,
       0,     0,   455,   454,     0,   132,     0,   628,     0,     0,
     154,   154,   140,     0,   310,   326,     0,   296,   303,   295,
       0,     0,   232,     0,   239,   334,   241,   225,   632,     0,
      75,     0,   321,   392,   396,     0,   215,  1217,     0,  1223,
     257,  1228,     0,  1220,     0,     0,  1104,   827,   895,     0,
       0,     0,   619,   622,     0,   595,     0,     0,     0,   630,
     631,   603,     0,     0,     0,   546,     0,     0,   521,   127,
     152,   131,   160,   151,   496,   153,   496,     0,   334,   282,
       0,     0,   260,   225,     0,   251,     0,    69,    87,   322,
       0,   307,  1218,   214,   171,  1221,  1222,     0,   628,  1531,
    1279,  1502,     0,   897,   900,   898,   892,     0,   524,     0,
     530,   612,   554,     0,   553,   887,   888,   518,   154,   499,
     499,   628,   251,   297,   302,     0,   240,   243,   331,   332,
     333,     0,   247,   244,   248,     0,  1223,     0,  1094,     0,
     904,   903,   902,   906,   905,   623,     0,     0,   522,   555,
     496,   143,   142,   139,   216,   259,     0,     0,     0,   249,
       0,   250,   224,  1219,  1104,     0,   525,     0,   499,   328,
     229,     0,   228,     0,   313,   246,   628,   901,     0,   144,
     227,   231,   230,  1095,   529
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    36,    37,    38,    39,  2114,  2115,  2116,  1805,   972,
    2800,  1806,   973,   974,  2118,    40,    41,  2160,  2161,    42,
    1429,   532,  1743,  1372,  2529,    44,  2069,  1748,  2073,  2672,
    2317,  2068,  2075,  2780,  2844,  2070,  1749,  2673,  1750,    45,
      46,  1501,    47,   732,    48,  1502,  1456,  1241,   992,  1446,
    1230,    49,    84,    50,  2105,  2406,  2857,  2128,  2944,  2560,
    2561,  1807,  2902,  2903,  2107,  2174,  1438,  2896,  1869,  2727,
    1811,  1794,  2562,  1878,  2682,  2439,  1808,  2348,  1870,  2546,
    2786,  1512,  1871,  2787,  2539,  1872,  1481,  1505,  2350,  2904,
    1812,  1482,  2407,  1425,  1873,  2855,  1874,   491,  2565,    51,
     524,   525,   724,  1179,   526,   705,    52,   492,  1145,   533,
      54,  1857,  2589,  2194,  2590,  1926,  1851,  1239,  1923,  1555,
    1485,  1240,   479,  1569,  2195,  2151,  1556,   534,   874,    57,
      58,    59,   570,   583,   584,  1343,  1720,  2037,   942,   557,
     558,   598,  1475,  1379,  1380,  1756,  2086,  1404,  1405,   951,
     952,  2636,  2772,  2637,  2638,  2497,  2498,  2918,  1392,  1396,
    1397,  1769,  1762,  1385,  2309,  2658,  2659,  2660,  2661,  2662,
    2663,   875,  2518,  1400,  1401,   954,   955,   956,  1409,  1779,
      61,  1724,  2044,  2045,  2046,  2287,  2288,  2302,  2298,  2503,
    2644,  2047,  2048,  2629,  2630,  2744,  2305,  2054,  2648,  2649,
    2703,  1529,   706,  1246,  1182,   708,   876,   709,  1158,   877,
    1162,   711,   878,   879,   880,   714,   881,   882,   883,   717,
    1154,   884,   885,  1173,  1201,  1202,  1203,  1204,  1205,  1206,
    1207,  1208,  1209,   926,  1623,   887,   888,   889,  2050,   890,
    1335,  1708,  2667,  2768,  2769,  2030,  2271,  2484,  2628,  2821,
    2873,  2874,   891,   892,  1286,  1287,  1705,  1330,  1331,   893,
    2409,  1333,  1616,  1285,  1282,  1035,  1036,  1247,  1596,  1597,
    1619,  1955,  1626,  1632,  1982,  1983,  1640,  1673,   894,  1580,
    1581,  1941,  1255,   895,   623,  1042,   624,  1252,  1667,   903,
     896,   897,  1279,  1280,  1996,  2246,  1645,  1775,   575,  2640,
     728,  1122,   898,   899,   900,   901,   928,   577,  1037,   472,
     720,  2845,  1135,   932,  1038,  1809,  1663,    62,   801,   628,
      63,  1133,  1493,    64,  2613,  2449,  1147,  1514,  1882,   493,
      65,    66,    67,    68,    69,   605,  1233,   535,  1234,  1235,
     789,    70,  1242,   791,   792,    71,   564,   565,  1243,  1356,
    1244,    72,   544,    73,   922,   580,   923,   925,   537,   939,
    2064,  1739,    75,    76,   551,   552,    77,    78,   566,    79,
      80,  2610,   538,  2177,  1142,   501,   474,   475,   722,  1125,
    1040,  1126
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2529
static const int yypact[] =
{
    4084,   -86,    38, -2529, -2529,   -86, 31849, -2529,   -86,    57,
    2391, 36549, -2529, 25800,   -86, 42659,   968,   265,   282,   411,
     429, 42659, 42659, 37019,   -86,   219, 43129, -2529,   -86, 22081,
   34199,    -8,    74, 43599, 42659,   568,   639,   178, -2529, -2529,
   -2529, -2529, -2529, -2529,    64, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529,    88, -2529,    53,   102,
     439,   226, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
     286, -2529, -2529, -2529, -2529, -2529, -2529, -2529, 21610, -2529,
   -2529, -2529, -2529, -2529, -2529, 37489, 42659, 37959, 34669, 38429,
   -2529,   106, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529,   131, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529,   132, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
     249,   274, -2529,   135, -2529, -2529, -2529, -2529,   568, 38899,
   -2529,   -93,   567, -2529,   445, 44069, -2529, -2529, 42659, -2529,
   -2529,   649, 38899,   592, -2529, -2529, -2529, 39369, -2529, -2529,
   -2529, -2529,   566, -2529, -2529,   437, -2529,    41, -2529, -2529,
   -2529,   380, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
     516, -2529, 49239, -2529, 44539, 45009, 45479, -2529,   399,   594,
     394, 21139, -2529, -2529, -2529, -2529,   286, -2529, -2529,   429,
   -2529,   429, -2529, -2529, -2529,   193,   420, -2529,   453,   767,
   -2529, -2529, -2529,   519, -2529, -2529,   736,  8937,  8937, 45949,
   45949,   429, 45949,   558, -2529, -2529,   285, -2529,    74, -2529,
     439,   519, -2529, 22552, -2529,   613,   274, -2529, -2529,   188,
     891, 11907, 42659,   571, -2529,   620,   571,   635,   700, -2529,
    4084,  1042,   988, 34199,   241,   241,  1158,   241,   691,   735,
   -2529,  1411, -2529,   738, -2529, 38899, -2529,   757,  1009, -2529,
     519,  1081,   467,   903,  1094,  2224,  1096,   681,  1098,   839,
    6957, 11907, 30439, -2529,   274, -2529, -2529, -2529,   769, -2529,
     768, -2529, -2529, -2529, -2529,   594,   989, -2529,   770,  1240,
     846, 39839, 40309, 38899,   799,  1250, -2529, -2529, -2529, -2529,
     884, -2529, -2529,   110, -2529, -2529, -2529, -2529,   905, -2529,
     905,   905, -2529, -2529, -2529, -2529,   875,   875,  1045,   882,
   -2529, -2529, -2529,  1212, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529,   902,  1012, -2529,   905, -2529,   875,
   -2529, -2529, -2529, -2529, -2529, 50604, -2529, -2529, -2529, -2529,
     197,   486, -2529, -2529, -2529,    45,   911, -2529,  1345, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529,   920, -2529,  4601,
     875, -2529, -2529,  1248,    47, -2529,  1265,   100, -2529,  1295,
    1172, 11907, -2529,  1071, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529,    74, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,   308,
   -2529, -2529, 28246, -2529, -2529,   394,   994, -2529, 28246, 12402,
   49694,  1439, -2529,  1270, 42659,   998, -2529, -2529, -2529, -2529,
   -2529, -2529,  1015,  1501,   129,  1506, 11907,  1033,   129,   129,
    1037,  1383, -2529, -2529, -2529,   136,  1064,  1074, -2529,   140,
     140, -2529,  1076,  1087, -2529,   145,  1090,  1103,  1596,  1608,
      82,  1129,  1138,  1012,   129, 11907, -2529,  1150,   140,  1154,
    1159,  1161,  1646,  1163, -2529,  1648,  1166,    90,   114,  1167,
    1168, -2529,  1169, -2529,   146, 11907, 11907, 11907,  1513, 11907,
    7947, 38899,  1653, -2529,   274,  1174,   429, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529,   121,  4575, -2529,  1214, -2529,
   -2529, -2529,   181, 11907, -2529,  1649,   -32, -2529,   147, -2529,
   -2529, -2529,   551,  1456,  1176, -2529, -2529, -2529, -2529,   165,
    1575, 27306, 27776, 38899, -2529, -2529,   274, -2529, -2529, -2529,
   -2529, -2529, -2529,   601, -2529,   286, 29463,   614,   274,   571,
   42659, 42659,  1637, -2529, -2529, -2529, 34199, 38899, 46419,  1306,
   -2529, -2529,   439,   439, 11907,   439,   473,    33,  9432, 12897,
    1512,  1398,   141,   608,  1515, -2529,  1404,   691,   735, 11907,
     620, -2529,  1454, 38899, 32319,   765,   844,  1194,  1278,  1198,
     403,  1602, -2529,  1199, -2529,  1288, 38899, 50604,   163, -2529,
    1643,   163,   163,   278,  1650,  1294,   200,  1443,   -39,   260,
    1199,  2023, -2529, 34199,    87,   518,  1199, 38899,  1299,   577,
    1199,    84, 12402,  1100,  1185,   325,  1206,  1287,   101, 12402,
    1292,  1372,  1410,  1417,  1423,  1448,  1507,  1547,  1558,  1568,
     108,  1570,  1572,  1574,  1577,  1581,  1583,   111,  1585,    79,
   12402,  1590,  1218, -2529, 29463,   -38, -2529, -2529,  1593,   118,
   -2529, 25895,  1213, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,  1307, 42659,
    1268,   363,  1566,  1628, 30439,  1231,  1582, 38899,  1457,  2023,
    1459,  1239,  1694,   768,  9927,  1698, -2529, 46889, -2529, -2529,
   -2529, -2529, -2529, -2529,  1264, -2529, -2529, 11907, -2529, -2529,
   -2529,  1743, -2529, 49694, 49694,   905,   905, -2529, -2529,  1704,
    1349,  1350,  1743, -2529,  1743, -2529, -2529, -2529, 49694, -2529,
   42659,  1275,  1277,  1743, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
    1743,  1358, -2529,  1359,  1360,  1362, -2529, -2529, -2529, -2529,
   -2529, 42659, 42659, -2529, 42659, 42659, -2529, 42659, 42659,   630,
   40779,   394, 35139, -2529, -2529, -2529, -2529,   326,   953, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, 30439, -2529,
    2048, -2529, -2529, -2529,  1280,   660, -2529,   673,   568, -2529,
   -2529, 11907,   274, 11907, 29463,  1310, 11907, 11907,  1282,  1743,
    1743, -2529,  1744,  1743,  1743, 29502, 11907, 25381, 11907, 16362,
   10422, 11907, 11907,  8442, 11907, 29502,  1763,  1763, 23494, -2529,
    1438,  1284,  1290,  2546,  4881,  1289, -2529,   536, -2529,  1285,
   -2529,   274,   274, 11907, -2529, 11907,  5263,  5263, -2529,   155,
   49694, 11907, 11907, 11907, 11907, 29969,  1370,   119, 42659, 11907,
   11907,  1296,   826, -2529, 11907,  1510, -2529,  1298, 11907,  1378,
     138, 11907, 11907, 11907, 11907, 11907, 11907, 11907, 11907, 11907,
   -2529, -2529, 17833,   221,  1611,  1630,   274, 11907,   -96,   172,
   11907, 35609,  8937,  1622,  6957, -2529,   274, 26366,    85,  1622,
   -2529, -2529, -2529, -2529,   151, -2529, -2529, -2529, -2529,  1280,
   -2529,  1280,  1301, 38899,   188, 33729, -2529, 11907, -2529,   715,
    1312,  1371,   576,  1766, 42659, -2529, 23965,  1595, -2529,  1313,
   -2529, 28712,  1595, -2529, -2529, 16843,  1436,  1598,  1526, -2529,
   -2529, -2529,  1320, 29463, 13392, 13392, -2529,  1260, 29463,  1262,
   -2529, -2529, -2529, -2529, -2529, -2529,   485, -2529, 38899,   -14,
    1512,   608,   728, -2529, -2529,   867,  1325, 47359, 42659,  1603,
    1554,  1606,  -147, -2529, -2529, -2529, 49694, -2529, 42659, 42659,
   47829, 48299, 30909, 42659, 30439, -2529, -2529, -2529, -2529, 42659,
     749, 42659,  5279, -2529, -2529, -2529,   163, -2529, -2529, -2529,
   -2529, -2529, 42659, 42659, -2529, -2529,   163, 42659, 42659,   163,
   -2529,   874, 42659, 42659, 42659, 42659,  1082, 42659, 42659,   -37,
     -37,  1538, -2529, 10917,  1336, -2529, 11907, 11907, -2529, 11907,
    1508, -2529,   743, -2529,  1549,    40,  1386, 38899, 38899, 42659,
    1041, -2529, -2529, -2529, -2529, -2529, -2529, 30439,  1342,  1343,
    1684, -2529,  2023,  1688, 32789,   634,   722,  1390, -2529,   782,
   11907,  1576, -2529, -2529,  1559, 11907,   817,  1353,    45,   821,
   -2529, -2529,  1361,  1277,  1373,  1374,  1357,  1365, -2529,   835,
   49694,  1743,   103,  1366,  1367,  1369,  1190,   563,  1267,    47,
   -2529,   100, -2529,  1569,   113, -2529,  1586,   768,  1813, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529,   840, 20668, -2529, -2529,
    1822,   429,  1822,   586, -2529, -2529,  1822, -2529,  1822, -2529,
   28246, -2529, 12402, -2529, 49694, -2529,   847, -2529,  1376, 11907,
      89, -2529, 28776,   854, 11907,  1392,  1393, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529,  1394,  1691, -2529,  1395,
    1397,  3329, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529,  1400,  1377, 28836,  1401,
   16362, 16362,  7947,  3295, -2529, 16362,  1402, -2529, -2529,   855,
   28730,  1284,  1403, 29075, 11412, 11907, 11412, 11412, 29109,  1284,
    1407, 29258, 42659, -2529, 13887, -2529, -2529, -2529, 11907, 38899,
   -2529, 11907,   860,  5112, -2529, -2529, -2529,  5484,  5484,  5484,
   29502, -2529, -2529, -2529,  1408, -2529, 16362, 16362, -2529,  4401,
    3016,  7947, -2529, -2529,  1705, -2529,   624, -2529,  1399, -2529,
   -2529,  4013, -2529, 25381,  3521, 11907,   120, -2529, 11907,  1296,
   11907,  1471,  5484,  5484,  5484,   194,   194,   124,   124,   124,
     305,   172, -2529, -2529, -2529,  1405,  1409,  1416,  1609, 29463,
    1163, 11907, -2529, 29463,   753,   761, 38899,    94,  1412,  2834,
   -2529, -2529, -2529, 19255,  1453,   -38,  1513,  1453,  1743,  5263,
   -2529,   620, -2529, -2529, -2529, 29463, -2529,   568, 19255,  1458,
    1469,   -98, 22081,  1627, -2529, 42659, -2529, 42659, -2529,   -35,
    1431, -2529, 11907, -2529, -2529,   184,  1440,  1634,  1635,   954,
     954,  1260,  1636, -2529, -2529,  1482, -2529, 11907,  1283, -2529,
    1297, -2529, -2529, -2529, -2529,  1426, -2529, -2529,  1683, -2529,
   -2529, -2529, -2529,  1514,  1199, 11907,  1655, -2529,    60,  1435,
    1775,  -145,  1731, 42659, -2529,  1641, -2529,   750,  1780,   113,
    1781,   113, 30439, 30439, 30439,   861, -2529, -2529,   429, -2529,
   -2529,   866, -2529,  -186, -2529, -2529, -2529,  1524,   640,  1199,
    2023, -2529, -2529, -2529, -2529, -2529, -2529, -2529,   156,   672,
    1199,  1527, -2529,  1529, -2529,  1530,   678,  1199, -2529, -2529,
    1444,  1451,  1460, 12402, -2529, -2529, 29463, 29463, 29463,  1455,
   -2529,   173, -2529, 42659, -2529, -2529, -2529,  1508, 38899,  1462,
     768, -2529,   748, -2529,   429, 42659, 38899, 38899, 38899, -2529,
   -2529, -2529,  1463,  1466, -2529, 49694,   -47,  1665,  1666, 42659,
    1495,  1198,  1916, -2529, 29463,  1810, 38899,   873, -2529, -2529,
   -2529, -2529,  1743, -2529, -2529,   355,   355, -2529, 42659, -2529,
    1483, -2529,  1488, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, -2529, -2529, 42659, -2529,  1827,   568, -2529, 30439,
   -2529, 33259, -2529, -2529, -2529, -2529,   429, -2529,   429,  1707,
   42659, 26836,   429,   429, -2529, -2529, -2529, -2529, 29349, 11907,
   -2529,  1839, 49694, -2529,  5211, -2529, -2529, -2529, 11907, -2529,
   -2529, 11907, -2529, 25381, 11907,  1814, -2529,  1970,  1970,  4881,
   49694, 16362, 16362, 16362, 16362,   675,  1154, 16362, 16362, 16362,
   16362, 16362, 16362, 16362, 16362, 16362, 17338,   262, -2529, -2529,
   11907, 11907,  1820,  1814, -2529, 49694,  1497,  1284,  1511,  1516,
   11907, -2529, 49694,   879,  7947, 29388, -2529,   274,  5455, -2529,
   29463, -2529,  5263, 11907,  2965,  3395, 11907,   880, 11907,  1817,
   -2529, -2529,  1518, -2529, -2529, 49694, 11907,  1521,  4634, 16362,
   16362,  4751, -2529,  6273, 11907,  7947, -2529,  1538,  1548, 24436,
   -2529,  1607,  1607,  1607,  1607, -2529, -2529, 38899, 38899, 38899,
   19726,  1837, 18784, 41249,  1519,  1032, -2529, 41249, 41719, -2529,
    1540, -2529,   274, 11907,  1840,  1531,  1438,  1840,  1532, -2529,
   -2529,  1533,  1519, 11907,  1674, -2529, -2529, -2529,  1587, -2529,
     894, -2529,  1941,  1674, -2529,   900, -2529, 23965,  1458, 11907,
     274, -2529,  1537, -2529,  1440,   130, -2529, -2529, -2529,  1745,
   -2529, -2529, -2529, 38899, -2529, 42659,  5530,  1878, -2529, 42659,
   42659, 42659, -2529, 42659,   909,   185,  1541, -2529,   185,  1857,
     179,  1198,   200,  5799,   -59, -2529, -2529, -2529,  1619, 42659,
   -2529, 42659, -2529, -2529, -2529, -2529, -2529, 30909, -2529, -2529,
   -2529, 30439, 24910, 30439, 42659, 42659, 42659, 42659, 42659, 42659,
   42659, 42659, 42659, 42659, -2529, -2529, -2529,  1538, -2529, -2529,
   -2529,   260, -2529, -2529,   173,  1550, 32789,  1390,  1628, 42189,
    1551,  1556, -2529,   914,  2023,  1553,  2004, -2529,   634, 32789,
   -2529, -2529, -2529,  1964, -2529,   399,   123, -2529, -2529,   568,
   42659,  1612, -2529,  1277,  1562, -2529, -2529,  1277, 49694, -2529,
   -2529,   113, 38899, -2529,   918, -2529, -2529, -2529, -2529, 42659,
    1560, -2529,  1560, -2529, -2529, 11907, 29463, -2529,  1561, -2529,
   29463,  6014, -2529, 29463,  1820, -2529,   801,   801,   801,  3550,
    1884,   202,  1565,   801,   801,   801,   247,   247,   143,   143,
     143,  1970,   262, 29463, 29463, -2529, -2529,  1571, -2529, -2529,
   -2529,  1284,  1579, -2529,  4797, -2529,   923, 42659, -2529, -2529,
     685, 11907, 11907,  4401, -2529,  3150, 11907, 49694,   932,  4401,
     227, 11907,  3568,  4521, 11907, 11907,  6441,  6058,  1580, 11907,
   48769, -2529, -2529, 38899, 38899, 38899, 38899, -2529, -2529, -2529,
   41249, 41719,  1567, 18312,  1032,  1589, 38899, -2529,  1656,  1578,
   19255,  1841,  1770, -2529, 19255,  1770,   134,  1770,  1847,  1656,
   23023, -2529,  1656,  1588,  1777, -2529,   696, 29463,  2012,  1890,
     429, -2529,  1890,   429, -2529, 29463,  8937, -2529,   568,   997,
   42659,   274,    77, -2529,  1594, 42659, -2529,  1674, 29463, 25381,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, 42659,   956, -2529,
     961,   185, -2529,  1629, -2529,   201,  1885,    49, -2529, 30439,
    1995,   720, -2529,  1895,  1815, -2529,   163, -2529, 11907,   720,
    1818,   168, 42659, -2529, -2529,  2059, -2529, 49694,   113,   113,
   -2529, -2529,  1597,  1599,  1600,  1601,  1605,  1610,  1613,  1615,
    1616,  1617,  1618,  1620,  1624,  1625,  1626,  1632,  1639,   902,
    1642, -2529,  1654,  1537,  1657,  1663,  1668, 50149,  1670,  1671,
    1672,  1675,  1680,   326,   953, -2529, -2529, -2529, -2529, -2529,
   -2529,   770,  1682, -2529,  1621, -2529, -2529,  1677, -2529,  1686,
   -2529, -2529, -2529, -2529, -2529,  1638,   994,    99, 42659,  1647,
    2064,  1852,  1631, -2529,   429,  1390, -2529, 32789,   963,   327,
    1666, -2529,   242,  1495, -2529,  2025,  1690,  1838, 42659,  1658,
   -2529, -2529, -2529,  2103, -2529, 33259,  1560, 29463, -2529, -2529,
   -2529, 16362,  1978,  1685, 49694, -2529, -2529, -2529, 11907, -2529,
    4401,  4401,  3150,   965, -2529,  4401, 11907, 11907,  4401,  4401,
   11907, -2529, -2529,  6392,  1876, -2529, -2529, -2529, -2529, -2529,
   -2529, -2529, 31379, 41249,  1692, -2529, 36079, -2529, -2529, 42659,
    1032, 19255, -2529, -2529,  1263, -2529, 19255,  1940, -2529, 19255,
   -2529, 42659,  1695, -2529, 42659, -2529, 14382, 11907,  1727, -2529,
    1727, -2529,  1176, -2529,   -98, -2529, -2529,  2093, 20197,  2049,
   11907, -2529, -2529,  1696,   185, -2529,  1856,  1629,  1699, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529,   966,  1701, 42659, 42659,
   16362, -2529,   720,   216,   161, -2529,  1974, 38899,  1629,  2112,
   -2529, -2529, -2529, -2529,  2079,  2160,  2047, -2529, -2529, 29463,
   -2529, -2529,  1743,  1743, -2529, -2529,  2125, -2529, -2529, -2529,
   -2529,   770,   398, 24910, 42659, 42659, -2529, -2529, -2529,   260,
    2078,   970,   634,   568,  2051, 32789, -2529,  2168,  1715, 42659,
    1495,   661,   661, -2529,  1858, -2529,  1861, -2529, -2529,   261,
   -2529, 38899, -2529, -2529, 20197,   568, -2529,  3885, 16362, 49694,
     984, -2529, -2529,  4401,  4401,  4401, -2529,  2152,  1538, -2529,
     986,  2180, -2529, 42659,   -85,   -67,  1732,  1733, -2529, -2529,
     991, -2529, 11907,  1734, -2529, -2529, 19255,  1263,  1002, -2529,
   49694, 42659,  1006, 49694,  1735,  -126,  1736,  7452,  1726, -2529,
   -2529, -2529, -2529, -2529, 29463, 29463, 42659,  1788,  1788,  1790,
   42659, 11907, -2529,  1020,  2153,    69,   -29, 29463, -2529, 38899,
   -2529, 30439, -2529,   185, -2529, 30439, 11907, -2529,   910,  3550,
    2192, -2529, -2529, -2529, -2529,  1629,   768, -2529, 42659, -2529,
    2043, -2529, 42659,  1800,   433,  1821, -2529, -2529, -2529,   994,
     429,  1390,  1666,  1690, 38899,   568,   634,   399, -2529, -2529,
   -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529, -2529,
   -2529,  2167,  1952,  2170,  1612,  1022,  3885,  1026, -2529, 11907,
     401,  1540, 31379,  1750, -2529,  1038, -2529, -2529, -2529, -2529,
   -2529, 42659,  1019, -2529, 29463, 42659, -2529, -2529, -2529, 42659,
    2125,  1040, -2529, 11907,  1752, 11907, -2529, 14382,  1749, -2529,
    2212,  1897, -2529, -2529,   568, -2529, 25859,  1453, 20197, 42659,
   42659, 42659, -2529,  1888,   768,   185,  1044, -2529,  1779, -2529,
   25877,  1993, -2529,  2083, -2529,  2028, -2529,  1776, -2529, 11907,
   -2529,  1854, -2529, -2529, -2529,  2235, -2529, -2529,  1787,  1690,
    1666,  1495,  1994, -2529,  1996,  1794,  1390, -2529,  1284, 14877,
   14877,  1801, -2529, -2529, 42659, -2529,  1046,  1802,  1048, -2529,
   -2529, -2529,  1050, 14382,  1052, -2529, 42659,  1804, 36079, -2529,
    2153, -2529, -2529, -2529,   240, -2529,   240, 23965,  2028, -2529,
   30439, 24910,  2026,  1776,    95,  2014,  2023, -2529, 29463, -2529,
     568, 32789, -2529, -2529, -2529, -2529, -2529, 20197,  1453, 15867,
    1948,    97, 28748, -2529, -2529, -2529, -2529,  1057, -2529,  2289,
    1963, -2529, -2529,  1065, -2529, -2529, -2529, -2529, 42659,  1440,
    1440,  -176,  2014, -2529, -2529,  2104, -2529, -2529, -2529, -2529,
   -2529,   127,  2020, -2529,  2024,  1499,  1690,  1069, -2529,  2271,
   -2529, -2529, -2529, -2529, -2529, -2529,  1826,  1819, -2529, -2529,
     240, -2529, -2529, -2529, -2529, -2529,   164,   164,  2197, -2529,
    1882, -2529, -2529, -2529,  1390, 15372, -2529,  2311,  1440,   185,
   -2529,  2299, -2529,   176, -2529, -2529,  1453, -2529,  1832, -2529,
   -2529, -2529, -2529, -2529, -2529
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2529, -2529, -2529,  1738, -2529, -2529, -2529,   211, -2529,   886,
   -2529,   204,  -562,   532, -2529, -2529, -2529, -2529, -2529, -2529,
    -917,     8, -2529, -2529, -2529, -2529,    12,   256, -2529,  -444,
   -1870,  -189, -2529, -2442, -2521, -2529,  -511, -2407, -1678, -2529,
   -1102,   174, -2529, -2094, -2529,  -613,  -972,  -754,  -982, -2529,
     -24, -2529,  1039, -1099, -1754, -2389,  -514, -2529,  -587, -2529,
    -344, -1741,  -559,  -539, -2529, -2302,  -936, -2529,  1396,  -246,
   -2529,   573, -2529, -2089, -2529, -2529,   554, -2529,  -945, -2529,
   -2529, -1789,   189,  -483, -2258, -2090,   512,  -620, -2529,  -532,
     243, -1719, -2529,   584, -2529,  -473, -2529,  -482, -2136, -2529,
   -2529, -2529,  1165,  -698, -2529,  1215, -2529, -2529, -2529,    21,
   -2529, -2529, -2529, -2529, -2529,  -429,   522, -2250, -2529,   461,
   -2529, -2529, -2529, -2529,   -74,   229, -2529,    23,   128,   -22,
      -9,     7,    32,    44,  1465,  1481, -2529,  -885,   574, -2529,
   -2529,  -595,   -54, -2529,   636, -1965, -2024,  -459,   975,  1437,
    1442,  -365,  -278, -2529,  -442, -2529, -1113, -2529, -2529,   633,
    1016, -1285, -1277, -2529,   340,  -431,  -364, -2529, -2529, -2529,
   -2529, -2529,    92,  -451,  1007, -2529,  1470, -2529, -2529, -2529,
   -2529, -1245,   688, -1972,   381, -1952, -1837,   148,   137, -1115,
    -219,    11,   395,  -308, -2529, -2529,  -305, -1703, -2297,  -322,
    -321, -2529, -2529,  -478, -1110,  -684, -2529, -2529,   366,   708,
   -2529, -2529, -2529,   732,   972, -2529, -2529,  1389,  1730, -2529,
    -578,  2193,   218,  -673,  1178, -1033,  1180, -1072,  -829,  -988,
    1181,  1183, -1212,  3399, -1549,  1175,    -5, -2529, -2313, -1574,
   -2529, -2529,   -82, -2529,  -388, -2529,  -387, -2529, -2529, -2529,
    -369, -2528, -2529,  1114,   804, -2529, -2529, -1231, -2529,  4152,
     699, -2529, -1608,  -556,  1203,  -713,  -976, -1121, -2529, -2529,
   -2529, -2529, -2529, -2529, -1158, -1768,  -443,   771, -2529, -2529,
     877, -2529, -2529,  -983,  -579,   980,  -549,  -843,   777, -2529,
    -551,  1122, -2529,   739, -1851, -2529,   410, -2529,  2053,  -520,
     273, -1005,     6, -2529,  3375,   223,  1789,  -853, -2076, -2529,
   -2529,  -485, -2142,  -910, -2529,  -606, -2529, -2529, -2529, -1168,
   -2529,   606, -2529, -1098, -2529,  -265, -2529, -2529, -2092, -2529,
   -2529, -2529, -2529, -2529, -2529,  -436, -2529,  -468,  -463, -2529,
   -2529,     4,  -778,  1251, -2529, -2529,   582, -2529,   907, -2529,
     725, -2529, -2529, -2529,  1108, -2529, -2529, -2529,    22,  1542,
     402, -2529,  1116, -2529, -2529, -2529, -2529, -2529,   766, -2529,
   -1096, -2497,    73, -2335, -1180,    -6, -2529, -2529, -2529,  -516,
   -2529, -2068
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1713
static const yytype_int16 yytable[] =
{
     473,   469,   991,   639,   599,   727,   957,   904,    43,  1460,
    1130,  1169,   470,   588,  1236,   794,  1123,  1459,  1289,  1424,
     536,    53,    74,    55,  2057,   927,  1213,   916,  1175,  1216,
    1291,  1491,    60,  1435,  1492,  1494,  1615,  1495,  1229,   725,
    1548,   574,  2108,  1519,   707,  1127,  1336,   733,    60,  1431,
    1413,   601,   569,   990,  1471,   996,  2411,  1000,  1346,  1523,
    2330,  2123,   734,  2125,  2413,  2430,  2429,   602,   788,  2076,
    2284,  1957,  1958,    81,  2104,  2017,  1977,  1464,   586,  2440,
    1575,  2443,  1155,  1156,  1654,  1655,  1245,  -700,  -441, -1060,
   -1035,  -700, -1711, -1711, -1491,  -703,  2301, -1057, -1057,   617,
     795,   609,  -444,  1176,  1727,  1176, -1588,   477,  2607,  1167,
    1771, -1060,   810, -1599, -1691, -1691, -1606,  2004,  2005,  -703,
    1774, -1702, -1702, -1061, -1709, -1709,   542,  1416,    56,  1496,
     810, -1058, -1058,  1723,  -695,  1300, -1599, -1606,  2603,   950,
   -1061, -1588,  2779,  2245,    56,  -662,  2163,   953,   650,  2051,
    -675,  -690,   542,  1131,  1960,  1353,   542,    56,  1176,  1665,
    1665,   578,  1427,   587,  2051,  1306,  2543,  1223,  1350,  1223,
     542,  1176,   810,  1462,   810,  1219,  2587,   810,   542,  2631,
    1341,  -441,  -917,  1300,   591,  1175,  1686, -1491,   600,  -917,
    1591,   917,  1602,  1149,  2706,  -444,  1337,  1308,   594,  1436,
    1603,  1604,  1605,  2323,  -180,  1300,    56,  2735,  1855,  -180,
    2299,  2200,  2202,  1306,  2235,  2674,  2807,  2652,  2746,     3,
       4,  -401,  2940,  2570,  1444,  1419,  1939,  1447,  1448,  1589,
    2444,  1427,  2170,  2781,    85,  1306,  2748,  1150,  2782, -1491,
    1155,  1156,  2136,   543,  2764,  1308,   555,  2926,  1702,   596,
     596,  1386, -1491,  1710,  -936,  1703,  1777, -1491,  1960,  2911,
    2846,  -936, -1491,   595,  2898,  2718,  1167,  1308,   940,  2582,
     592, -1491,  2053,  1960,  1593, -1491,   794,  1753,  2693,  2680,
    1351,  2112,   794,  2749,   499,  1792,  1627,  1792,   528,  1469,
    2331,  2951,  2132,  1443,  2352,   546,  1470,  1387,  2066,   946,
    2697,  2674,  2344,  2292, -1491,  2133,   585,   585,   631,  2365,
     632,  1687,  2862,  1281,  2342,  1458,  1300,  2077,  2500,  2540,
    2731,  2581,  2504, -1491,    82,  1292,  1688,  1237,  2732,  2301,
    1551,  1689,  2462,  2067,  2691,   810,  2293,  1127, -1688, -1688,
     596,  2909,  1793,  2597,  2101,  2212,  1306,  2598,  2341,   556,
     540,  2506,  2332,  1348,  2761,   918,  1388,   919,  2527,   613,
    2295,  1778,  2604,  -556,  1754,  2353,  1690,  2920,    83,  -441,
     948,   941, -1491,   539,  1421, -1491,   678,  2605,  1308,  1348,
    2338, -1491,  2340,  -444,  1449,  2345,  1177,  2445,  1177,  1437,
    2541,  2447,    86,  1711,  2899,   794,   794,  1352,  2888,  2747,
      87,  2783,  1627,  1412,  1389,  2692,  2912,  2947,  1151,  2933,
    2806,  1369,  2216,  2217,  2218,  2219,  2690,  2750,  2223,  2224,
    2225,  2226,  2227,  2228,  2229,  2230,  2231,  2232,  2941,  2631,
    -441,  1509,  2694,  1592,   542,    88, -1491,  2794,   651,  2704,
    1474,  1177,  1434,  2490,  -444,  2354,  2460,  2952,  1856,  2346,
    1434,  2347,  1615,   910,  1177,  1473,  1572,  2532,  2077,  2803,
    2907,  1342,  2894,  1390,  1906,  2674,  2051,  2082,  2051,  2900,
    2262,  2263,  1787,  1338,  2601,  1771,  2864,   597,  2463,  2297,
    2456,   579,    89,  2544,  2089,  1422,   625,   529,  1258,  1365,
     964,  2036,  1863,  2733,   593,  1463,   965,  1844,  1410,   626,
     629,   627,  1905,  2712,  2078,  2942,  1411,  2411,  2863,   588,
      60,  1691,  1152,  1666,  2019,  2413,   721,  2059, -1491,   541,
    1460,  2602,  1450,  1507,  2083,   793, -1491,  2877,  1123,  2641,
    1451,  2588,  2943,  -917,  2645,   790,  1579,  2647,  1178,  -441,
    1212,  2632, -1491,  1170, -1491, -1491,   478,   958,  1908,  1910,
    1911,   473,   473,  -444,  2674,  2606,   621,  2927,  2149,  2150,
     622,   601,    60,   581,  2137,  1171,  2528,  1170,  1274,  2061,
    1153,  -700,   621, -1060, -1035,   473,   622,   602,  -441,  1172,
    -441, -1491,  2534,   921, -1491, -1491, -1491,  1520,  1521,  1171,
   -1588,  1901,  -444,  1215,  -444, -1060,  1844, -1599,    43,  1704,
   -1606,  1516,   966,  1174,   938,  -936,    56, -1061,  2545,  1329,
    1295,    53,    74,    55,  1039,   473,  1124,  2621,  -695,  2805,
   -1599, -1606,    60,  2811, -1061, -1588,   929,  2810,  1975,  1157,
     920,  1725,  1557,  1383,  1161,  -690,  1344,  1627,  1627,   589,
    1728,  1436,  1627,  1227,  1228,  1227,  1228,  2531,  2572,  2573,
    1170,  1454,  1324,  1325,  1326,  1327,  1328,  1329,    56,   587,
    1606,  1607,  1608,    81,  1609,  1610,  1611,  1612,  1613,  1614,
     590,   798,  1171,  1577,  2756,  1455,  1326,  1327,  1328,  1329,
    -180,  -180,   799,  1627,  1627,   707,  1172,  2166,  2719,   721,
    1486,  1740,  1821,   911,  1541,  1576,  1300,  1281,   600,  1662,
    1528,  1583,  1824,  1386,   964,  1827,   794,  1907,  1909,  2591,
     965,  1454,  1577,  1127,  1629,  1631,  2051,  1639,    56,   603,
    2051,  2533,  1615,  2819,  2868,   473,   725,  1540,   604,  1972,
    1973,  1974,  1975,  1544,  1292,  1455,  1384,  1652,   620,  2720,
     719,  1123,  1970,  1971,  1972,  1973,  1974,  1975,  2721,  1387,
    2563,  2820,   967,  1549,  2009,    25,  1436,  1577,  1308,   788,
    1487,   621,   796,   912,   797,   622,   946,  1577,   481,  1127,
     647,  2598,   964,  2109,  2564,  2411,   804,  2722,   965,  1924,
    2010,  2183,   635,  2413,   907,  2683,   793,  2187,   645,   553,
    2249,    30,   793,  1039,   721,   571,  1289,  2214,  1221,   730,
      25,  1222,   968,  1922,  1997,  2220,   969,  1488,  1170,   809,
     473,   648,  1960,  1192,  1193,  1436,   966, -1713, -1713, -1713,
    1890,  2060,  1656,  1668,   652,  2236,   482,    60,  1813,  1820,
    1171,  1437,    32,  2038,  2039,   970,    30,   948,  1460,   473,
    1427,  1912,  2946,  1913,   610,    33,  1915,  2723,   588,   946,
     649,  1428,  1929,  1784,   947,   585,  1389,  1930,  2724,   473,
     473,   473,   964,   473,   473,  2921,  2922,  2147,   965,    34,
    1741,  1879,  1465,   653,  1840,  1841,  1842,    32,  1436,  2889,
    1819,  2890,  2705,    35,   966,  2110,   949,   473,   731,  1497,
     964,  1123,  1434,  -487,  2258,  2011,   965,   964,  -487,  1830,
    2012,  2083,   971,   965,  1837,   793,   793,  1931,  2080,   800,
    1436,  2138,  2617,   719,  2949,  1390,  1436,  2801,  2051,  1427,
     948,  1196,  1197,    56,  1497,   802,  2785,  2051,    35,    25,
    1430,  1468,  2051,  1377,  1378,  2051,  1382,    25,   473,  1170,
    2171,  2221,   473,   473,  2789,  2178,  1437,   938,  1795,   602,
     602,  2222,   602,   473,  2051,  2938,  1674,  1553,  2087,  1887,
    1261,  1171,   810,   810,  -487,    30,   967,  1822,   633,   949,
     634,   721,  1825,    30,   966,  1174,   640,  2547,  1627,  1627,
    1627,  1627,  1675,   803,  1627,  1627,  1627,  1627,  1627,  1627,
    1627,  1627,  1627,  1627,  2135,   486,  1039,   487,  1283,     3,
       4,  2689,   966,  1039,  1461,  1437,    32,  1434,  1862,   966,
     804,   641,  2453,  -487,    32,  1232,   994,   805,   719,    33,
     969,  1232,   490,  2634,  1039,  2550,  2139,    33,  2635,  1649,
     909,  1650,  2143,  1159,   967,   967,  1627,  1627,   621,  2013,
    2051,   794,  1347,    34,    90,  2725,   642,   476,  2726,   995,
    2014,    34,  1899,   527,   794,  1168,  1491,    35,   924,  1492,
    1494,   529,  1495,   554,   930,  1742,  1434,   567,  1437,  2736,
     600,   600,  2051,   600,  2841,   640,  1165,  1166,  1639,  1987,
    1639,  1639,  2552,    25,  1966,  1876,  1210,  1877,   969,  2111,
    2112,  1363,  1676,   643,  1364,   915,  1935,  1677,  1615,  1294,
    1437,  2120,  1678,  2122,  1366,   964,  1437,  1367,  1297,   931,
     641,   965,  2599, -1686, -1686,  2007,   971,   970,  2113,    30,
    1545,  1345,  1993,  1367,   967,   933,  2291,  1354,  1124,  1434,
    2055,  2363,  1355,  1928,  1232,  1232,  2473,  1932,  1039,  1933,
    2356,   905,   906,  2196,   908,  2159,  2273,  2274,  2275,  2276,
    1571,   473,   967,  1572,  2031,  2339,  2032,   721,   721,   967,
      32,  1434,  2033,  1573,  2034,  2908,  1574,  1434,  2051,   943,
    2939,   945,   721,    33,   998,  2355,  2791,  2364,   969,  2426,
    2505,  2555,  2508,   621,   971, -1035,  2510,   622,  2923,  2513,
     934,  1986,   643,  1988,  1989,   719,  1159,    34, -1687, -1687,
     937,  2292,  1783,   585,  2051,  1736,   969,   999,  1215,  1828,
     936,    35,   944,   969,  1168,   481,   793,   966,  1782, -1689,
   -1689,  1367,  2185,  2186,  2556,   962,   790,   959,  2321,   961,
     710,   963,  1124,  1852,  2293,   970,  1853, -1106,   975,  2557,
    2157,  1679,  1829,  2953,   976,   473,   993,   473,   997,  2294,
     473,   473,  1680,    60,   712,  1132,   625,  1129,  2295,  1128,
     473,  1134,   473,   473,   473,   473,   473,   473,   473,   626,
     629,   627,  1883,   482,   971,  1572,  1136, -1713, -1713, -1713,
      60,  1970,  1971,  1972,  1973,  1974,  1975,   473,  1144,   473,
    1137,  2524,  2296,  2051,   721,   473,   473,   473,   473,  1124,
   -1690, -1690,   971,   473,   473, -1692, -1692,  1888,   473,   971,
    1367,  1891,   473,  1557,  1574,   473,   473,   473,   473,   473,
     473,   473,   473,   473,    25,  1897,   473,   484,  1898,    25,
    1918,   473,  1146,  1919,   473,  2558,   473,  1936,  1039,  1148,
    1367,  1124,  2559,  2620,  1943,  1979,  1153,  1367,  1367,    56,
    2001,  2126,  2083,  1367,  2127,  1160,  2130,  2291,    25,  2131,
      30,   473,  1163,  2182,  1157,    30,  1367,   967,   921,  2243,
    2254,  1161,  1215,  1367,  1186,  1187,    56,  2297,  2405,   473,
    1181,   719,   719,  2363,  2319, -1693, -1693,  2320,   473,   473,
    2324,  1164,  2535,  2325,    30,  1744,   719,  1795,  1211,  2343,
    1180,    32,  1853,   710,  2435,   794,    32,  1853,  2454,  1183,
     530,  2455, -1493,  2467,    33,  1214,  2468,  1835,  1577,    33,
     721,   969,  2474, -1694, -1694,  1574,  1124,   712,  1124,  2191,
   -1695, -1695,  2292,  2495,  2241,    32, -1696, -1696,    34,  1672,
    1192,  1193,   486,    34,   487,  1217,  2536,  2495,    33,  1853,
    1836,  2537,    35,  1218,  1853,  2622,  2684,   531,  1574,  2685,
    2711, -1697, -1697,  1853,  2208,  2293,   489,  1039,  1220,   490,
     473,   473,    34,   473,  2738,  1248,  2741,  1574,  1627,  2742,
    2294,  2753,  2215,  1238,  1215,  1598,    35,  1251,  1542,  2295,
    1543,  1124,  2758,  2452,   713,  2759,  2762,  1249,  2737,  2759,
      56,  1577,  1253,  2306,   473, -1493,  -666,  2237,   710,   473,
    2777,  -673,  2816,  2778,  2242,  2778,  2817,   971,   719,  1574,
   -1698, -1698,  1256,  2296,   721,  1813,  1257,  2414,  2825,  1880,
    2831,  1215,   712,  2759,  2849,   977,  2878,  2850,  2881,  2879,
    2882,  1215,  2884,  1367,  2642,  1367,  1258,  2915,  1196,  1197,
    2759,   793,  2425,  1259,   978,  2919,   594, -1493,  2767,  2934,
   -1699, -1699,  2778,  1260,   793,    35,  1039,  1627,   721,  -488,
   -1493, -1700, -1700,   473,  -488, -1493,  1262,  1729,   473,  -556,
   -1493, -1701, -1701, -1703, -1703, -1704, -1704, -1705, -1705, -1493,
   -1706, -1706,  -557, -1493, -1707, -1707, -1708, -1708, -1710, -1710,
     588,  -663,  2568, -1712, -1712,   979,  1476,  1477,  2297,  1772,
    1773,  -534,  -534,  -664,   473,   473,   473,  2709,  1263,   473,
    2083,   595, -1493,  1194,  1195,  1196,  1197,  1264,   473,   473,
     473,   473,  -538,  -538,    56,  1627,  1359,  1361,   473,  1266,
    -488, -1493,   473,  1267,   719,   473,  -537,  -537,  1268,   588,
    1269,  -667,  1270,  -665,  2408,  1271,  1272,  1273,  1274,  1278,
     473,   473,  1290,  1293,  1340,   473,  1334,   713,  1341,  1342,
    2577,  2578,  1357,  1370,  1376,   947,   949,  2196,  1406,   473,
    1408,  1414,   473,  1432,   473,   710,  1433,  1434,  1439,  -488,
   -1493,  1788,  1440, -1493,   980,  2643,  1441,  1445,   596, -1493,
    1457,  1796,  1453,  1799,  1452,   473,  1810,  1467,  1472,   712,
    2451,  1479,  1814,  1169,  1816,  1480,  1489,   473,  2049,  1484,
     588,  1490,  1497,  1500,  1498,  1503,  1823,  1127,  1504,   470,
    1506,  1826,   473,  2049,  1510,  1831,  1832,  1833,  1834,  1522,
    1838,  1839,  1577,   981,   470,   625,   473,  1587,   719,   542,
    1283,   982,   810,  1515, -1493,  1524,  1525,  1579,   626,   629,
     627,   473,  1531,   983,  1532,  2522,  1535,  1536,  1537,    60,
    1538,  1584,   713,  1570,  1300,  1644,  1664,  1367,  1646,   473,
    1232,  1682,  1648,  1651,  1927,  1671,  1685,  1683,  1706,  1707,
    1723,  1730,   719,  1232,   984,   471,  1124,  1124,  1124,  1283,
     500,  1737,  1745,  1738,   500,   595,  1752,  1764,  1766,  2036,
     545,   500,   550,  1767,  1785,   550,  1765,  1672,   550,   576,
    1790,  1789,   500,   500,  1791,   596,  1845,  1850,  1854,  2405,
    1858,  1864,  1865,  2026,  1866,   597, -1493,  1039,  1867,   986,
    1886,  1881,  1885,  1889, -1493,  1893,  1894,  1895,  1892,  1917,
    1914,  2043,  1916,  1184,  1185,  1896,  1903,  1904,  1925,  1948,
   -1493,   987, -1493, -1493,  1937,    56,  2043,   550,  1953,   721,
     587,   710,   710,  2008,   576,   500,   576,   576,   576,  2024,
    2003,   989,  1945,  1946,  1947,  1949,   710,  1950,  2015,  2576,
    1952,  1956,  1978,  1984,  2025,   712,   712,  1991,  2027, -1493,
    2029,  2053, -1493, -1493, -1493,  2028,  2063,  2065,  2072,  2079,
     712,   715,  2091,  1124,  2085,   793,  -539,  -540,  2090,  2093,
    2094,  2097,  2095,  1460,  2099,  2100,  2106,  2103,  1186,  1187,
    2119,  2121,  2134,   473,  2144,  2140,   721,  2141,  2142,   794,
    1880,  2145,   473,  2148,  2172,   473,  2176,  2173,   473,   713,
    2146,  2156,  2179,  2168,   721,   473,   473,   473,   473,  2169,
    2180,   473,   473,   473,   473,   473,   473,   473,   473,   473,
     473,  2189,   588,  2268,   473,   473,  2190,  2192,  2199,   721,
    2207,  1960,  1981,  1980,   473,  2256,   721,  2238,   473,  2932,
    1188,  1189,  1190,  1191,  1192,  1193,  2269,   473,  1194,  1195,
     473,  2239,   473,   588,  2036,  2282,  2240,  2257,   710,   721,
     473,  2260,  2290,   473,   473,  2304,  2316,  2308,   473,   473,
     588,  2310,  2313,  2314,  2318,  2322,  2329,  2333,  2337,  2351,
    2349,  2129,   712,  2740,   473,  2049,   473,  2049,  2367,  2428,
    2438,  2433,  2437,  2442,  2448,    56,   470,   473,   470,  2434,
    2450,  2458,  2461,  1853,  2464,  2496,  2492,   473,  2501,   977,
    2502,  2465,  2547,  2687,  2509,  2515,  2516,  2499,  2548,  2466,
    2482,  2517,  2530,   473,  2152,  2788,  2795,  2514,   978,  2493,
    2538,  2549,  2566,  2542,   715,  2584,  2567,  2162, -1057,  2571,
   -1686, -1687, -1688,   719,  2585,   977, -1689,  2405,  1558,  2583,
    2593, -1690,  1196,  1197, -1691,  2408, -1692, -1693, -1694, -1695,
    2550, -1696,  2551,  2745,   978, -1697, -1698, -1699,  2594,  2611,
    2595,  1124,  1283, -1700,  1399,  1124,  2412,  1124,  2586,   979,
   -1701,  2745,  2608, -1703,   710,   713,   713,  2592,   612,  2615,
     615,  2609,   619,  1559,  1232, -1704,  2618,  2614, -1705,  2197,
     713,  2198,  2175,  1283, -1706,  2203,  2204,  2646,   712, -1707,
     719, -1708, -1709, -1710,  2848,   979, -1711,  2552,  2280,  1560,
    2283, -1712,  2760, -1058,  2619,  2760,  2627,  2666,   719,  2670,
    2676,  2633,   721,  2818,  2651,  2679,  2678,  1561,  2681,   715,
    2686,  1562,  2695,  2698,  2699,  2553,  2700,  2701,  2702,   473,
    2710,  2714,  2446,   719,  2715,  2716,  2739,  2832,  2729,  2834,
     719,  2730,  1563,  1198,  1199,  1564,  2743,  2798,   980,  2767,
    2771,  2751,  2752,  2755,  2763,  2765,  2779,  2774,  2793,  2797,
    1565,  2359,  2799,   719,  2812,  2828,  2813,  2814,   710,  2824,
    2802,  2833,  2836,  2905,  2788,   473,   473,   964,  2837,  2838,
     473,   721,   716,   965,   980,   473,  2847,  2851,   473,   473,
     977,  2554,   712,   473,  2694,  2856,  2555,   981,   576,  2853,
    2854,  2860,   713,  2859,   637,   982,  2861,   638,  2865,   978,
    2866,   576,   710,  2867,   473,  2049,   500,   983,   473,  2049,
    2895,  2876,  2880,  2270,  2843,  2901,   470,  2910,  2916,  2917,
     470,  2928,  2925,   981,  2935,  2930,   712,    56,  2937,  2556,
     473,   982,  2927,   638,   500,   500,  2936,  2926,   984,  1566,
    2948,  2950,  2954,   983,  2557,  2366,  1815,  1567,   935,  2117,
     979,  2370,  2526,  2326,  2842,  2669,  2891,  2574,  2436,  2897,
    2945,  2523,  2525,  1124,  2792,  2931,   902,   902,   550,   550,
     719,   550,   473,  2924,   984,  2410,  2728,  2124,  2441,   966,
    1423,   721,   576,   986,  2102,  2153,   715,  2893,  2335,  1568,
    2929,   500,  2098,  2408,  2371,  2892,  1539,  2152,  1518,  2154,
    2193,  2616,   576,  2427,  1349,   987,  1781,  2827,  2081,  1403,
    2773,  2412,  2368,  1402,   576,  1368,  2887,  2312,   713,   986,
    2092,  1761,  2883,  2835,  2520,   989,   719,  2415,  2416,  2417,
    2418,  2419,  2420,  2421,  2422,  2423,  2424,  1780,  2043,   980,
    2558,   987,  2043,  2285,  1407,   716,  2062,  2559,  2757,  2491,
     576,   576,   576,  2507,  2823,  2281,  2822,  2829,  2668,  2830,
    1588,   989,  1590,  1594,  1624,  1595,    56,    56,  2885,   793,
    2886,  2875,  1712,  1999,  2084,   473,  1578,  1940,   721,  1849,
    2022,  2600,   473,  2020,  1722,  2056,  2311,  2158,   981,  2815,
     473,   473,  1732,  1550,   473,   719,   982,  1934,  1371,     0,
    2327,  1734,     0,     0,     0,     0,   473,  2049,   983,     0,
       0,     0,     0,     0,     0,   473,  2049,     0,   470,     0,
     473,  2049,   713,   473,  2049,     0,     0,   470,     0,   967,
     473,   473,   470,     0,     0,   470,     0,     0,     0,   984,
       0,     0,   473,  2049,   473,     0,     0,     0,     0,     0,
     716,     0,   630,  2519,   470,     0,  2521,     0,     0,     0,
       0,     0,     0,     0,   473,   644,   713,     0,     0,     0,
       0,     0,   715,   715,     0,     0,     0,     0,     0,   985,
    1763,   480,     0,   969,   986,   481,    56,   715,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2412,     0,     0,
       0,     0,     0,   710,     0,   719,   987, -1106,     0,     0,
       0,     0,   988,  1250,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   989,   712,   473,  2049,
       0,     0,   473,   721,     0,   719,  2713,     0,     0,     0,
     470,     0,     0,   482,     0,     0,   914,     0,     0,  2043,
     483,     0,     0,     0,  2043,   588,   473,  2043,  2600,     0,
     473,  2049,     0,     0,   721,     0,     0,   721,     0,     0,
     710,   473,   470,     0,     0,     0,     0,  2596,   960,   971,
    1288,     0,     0,     0,     0,   473,     0,     0,   710,     0,
       0,     0,     0,     0,   712,  1124,     0,   484,  1232,  1124,
     473,     0,   719,     0,     0,     0,     0,     0,     0,   715,
       0,  -453,   712,   710,  1139,  1141,  1143,     0,     0,     0,
     710,     0,   576,     0,  -453,     0,     0,   716,     0,  -453,
       0,     0,     0,     0,     0,   718,     0,   712,     0,   500,
     500,    56,     0,   710,   712,   576,   576,  1375,     0,     0,
       0,     0,     0,   473,     0,     0,   473,  2049,  2809,     0,
       0,     0,     0,    56,     0,   485,     0,   712,   470,     0,
       0,     0,   576,  1426,     0,     0,  -453,   473,     0,   473,
       0,   473,     0,     0,     0,   576,     0,     0,     0,     0,
       0,     0,   473,  2049,  2043,  -453,     0,     0,     0,     0,
       0,     0,   576,     0,   470,  1283,   576,     0,     0,     0,
       0,     0,   486,   473,   487,  1624,  1624,  2839,     0,     0,
    1624,   719,     0,     0,     0,     0,  2410,     0,     0,     0,
     488,     0,     0,   473,   473,   715,   489,     0,     0,   490,
       0,     0,  2688,     0,  -453,     0,     0,   473,     0,     0,
       0,     0,     0,  -453, -1507,     0,     0,   719,     0,     0,
     710,  1624,  1624,    56,  1124,  2412,     0,   713,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2707,  2708,     0,
       0,   473,  2049,   473,   712,     0,     0,     0,   719,     0,
       0,   719,  2717,   470,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2906,     0,     0,     0,     0,   718,     0,
       0,     0,     0,   716,   716,     0,   710,     0,     0,     0,
       0,     0,    56,     0,     0,     0,     0,     0,   716,     0,
       0,     0,     0,     0,   713,     0,     0,     0,  1483,   715,
     712,     0,     0,     0,     0,     0,   576, -1507,     0,   473,
       0,     0,   713,  2804,     0,     0,  1513,     0,     0,     0,
       0,     0,     0,  2775,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   713,     0,     0,
       0,     0,     0,   715,   713,   710,  1362,     0,     0,  1530,
    -453,  2796,     0,   809,     0,     0,  1960,     0,     0, -1507,
       0,  1961,  1962,  1963,     0,     0,     0,   713,    56,   712,
    1373,     0, -1507,   718,     0,     0,     0, -1507,  2251,     0,
     638,   638, -1507,   500,   500,     0,   500,   638,     0,   576,
       0, -1507,     0,     0,     0, -1507,  1415,     0,     0,     0,
       0,     0,     0,     0,  1299,     0,     0,  1300,     0,  1442,
     716,     0,     0,   621,     0,     0,   933,   622,     0,     0,
       0,     0,     0,     0, -1507,     0,     0,     0,     0,     0,
    1466,     0,     0,     0,     0,     0,  1617,  1306,     0,     0,
       0,     0,     0, -1507, -1713,     0,     0,  1643,     0,   719,
       0,     0,     0,     0,  2410,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1308,
       0,     0,     0,     0,     0,     0,     0,   638,     0,   712,
       0,     0,     0,     0,   713,   710,     0,     0,     0,     0,
       0,     0, -1507,     0,     0, -1507,     0,     0,     0,     0,
       0, -1507,     0,     0,     0,     0,     0,     0,     0,   712,
     576,   902,     0,     0,     0,     0,  1624,  1624,  1624,  1624,
       0,     0,  1624,  1624,  1624,  1624,  1624,  1624,  1624,  1624,
    1624,  1624,   576,     0,   576,     0,   716,     0,  1299,  2006,
     713,  1300,     0,  1746,     0,  1751,  1301,  1302,  1303,     0,
     718,     0,   710,     0,     0,     0, -1507,     0,     0,  1965,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1713,
    1499,  1306,     0,     0,  1624,  1624,   712,   576,  1307,     0,
       0,     0,     0,     0, -1713,     0,  1426,   500,     0, -1713,
       0,     0,     0,     0,     0,     0,     0,   500,  1797,   500,
    1801,     0,   500,  1308,     0,     0,     0,     0,   500,   713,
     500,  2036,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   638,   500,     0, -1713,     0,   638,   500,  1966,     0,
       0,   500,   500,   500,   500,     0,   500,   500, -1507,     0,
     716,     0,     0,     0,   715,     0, -1507,     0,     0,     0,
       0,     0,     0,  1547,     0,     0,   576,   576,  1861,     0,
       0,     0, -1507,     0, -1507, -1507,     0,     0,     0,     0,
       0,   710,     0,  1875,     0,     0,     0,     0,     0,  1317,
       0,     0,     0,   809,   716,     0,  1960,     0,     0,     0,
       0,  1961,  1962,  1963,     0,   712,     0,     0,     0,     0,
       0, -1507,     0,  1309, -1507, -1507, -1507,   710,     0,     0,
       0,   715,     0,     0,     0,     0,     0,  1299,  1310,   713,
    1300,     0,     0,  1311,     0,  1301,  1302,  1303,     0,   715,
       0,   712,     0,     0,     0,     0,   718,   718,   710,     0,
       0,   710,  1304,     0, -1713, -1713,     0,     0,     0,   713,
    1306,   718,     0,     0,   715,     0,     0,  1307,  1314,     0,
       0,   715,   712,     0,     0,   712,     0,     0,     0, -1713,
       0,     0,     0,     0,  1721,     0,     0,     0,     0,     0,
       0,     0,  1308,   809,   715,     0,  1960,     0,     0,     0,
       0,  1961,  1962,  1963,     0,     0,  1731,     0,  1733, -1713,
       0,     0,     0,     0,     0,     0,     0,     0,  2252,     0,
       0,   500,     0,  1317,     0,     0,   713,     0,  1288,     0,
       0,  1967,  1968,  1969,     0,  1970,  1971,  1972,  1973,  1974,
    1975,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1776,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1617,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1964, -1713,
       0,     0,     0,   718,     0,     0,  1324,  1325,  1326,  1327,
    1328,  1329,  1309,     0,     0,   576,     0,     0,     0,  1965,
       0,     0,  2052,     0,     0,     0,     0,  1310,     0,     0,
       0,   715,  1311,  1319,     0,     0,     0,  2052,     0,  1299,
       0,  2071,  1300,     0,  2074,     0,  1751,  1301,  1302,  1303,
    1859,  1860,     0,  1312,  1313,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1304,   713,     0,  1314,   809,   710,
       0,  1960,  1306,     0,     0,     0,  1961,  1962,  1963,  1307,
       0,     0,     0,     0,     0,     0,   809,   715,  1966,  1960,
       0,     0,  1483,   712,  1961,  1962,  1963,     0,     0,     0,
       0,   713,     0,     0,  1308,  1315,     0,     0,  1316,     0,
       0,  2476,     0,     0,     0,   716,     0,     0,     0,  1965,
       0,     0,  1317,     0,     0,  1318,     0,     0,     0,   718,
       0,     0,   713,  1320,     0,   713,  1321,  1322,  1323,     0,
    1324,  1325,  1326,  1327,  1328,  1329,  1624,     0,     0,     0,
       0,     0,  1483,     0,     0,     0,   715,   576,     0,     0,
       0,     0,     0,     0,  1483,   576,   576,   576,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   500,     0,
       0,     0,   716,     0,     0,   576,     0,     0,  1966,     0,
       0,     0,     0,     0,     0,     0,     0,  2188,     0,     0,
     716,     0,     0,     0,  1309,     0,     0,     0,     0,     0,
       0,     0,  1319,   638,     0,     0,     0,     0,     0,  1310,
       0,     0,     0,     0,  1311,   716,     0,     0,     0,  1483,
    1483,     0,   716,   718,     0,  1624,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1312,  1313,     0,     0,     0,
       0,     0,  1617,     0,     0,   716,     0,     0,     0,  1314,
       0,     0,     0,     0,     0,     0,   715,     0,     0,     0,
       0,     0,     0,     0,  1965,     0,     0,   718,     0,  2035,
       0,  1967,  1968,  1969,     0,  1970,  1971,  1972,  1973,  1974,
    1975,     0,  1965,     0,     0,     0,   715,  1315,     0,     0,
    1316,     0,     0,  1624,     0,     0,     0,     0,     0,     0,
       0,     0,  1320,     0,  1317,  1321,  1322,  1323,     0,  1324,
    1325,  1326,  1327,  1328,  1329,     0,     0,     0,  2272,     0,
       0,     0,  1951,   713,     0,     0,   576,   576,   576,   471,
       0,  2052,  2289,  1966,     0,     0,  2289,  2303,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1966,     0,   715,     0,     0,     0,     0,     0,     0,
       0,     0,   716,     0,     0,     0,  1751,     0,     0,     0,
       0,  1967,  1968,  1969,     0,  1970,  1971,  1972,  1973,  1974,
    1975,     0,   576,     0,   500,     0,     0,     0,  1483,  1426,
    1483,     0,  1513,   809,  1319,     0,  1960,     0,     0,     0,
       0,  1961,  1962,  1963,     0,     0,     0,     0,   500,     0,
    2369,  2155,     0,     0,     0,     0,     0,     0,   716,  2164,
    2165,  2167,     0,   500,   500,   500,   500,   500,   500,   500,
     500,   500,   500,     0,     0,     0,     0,     0,     0,  2181,
       0,     0,     0,     0,     0,  1426,     0,     0,   576,     0,
       0,     0,     0,     0,     0,     0,   886,   886,  1426,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1513,
       0,     0,   715,     0,     0,     0,     0,     0,     0,     0,
       0,   576,     0,     0,     0,     0,     0,   716,  1483,     0,
       0,     0,     0,     0,  1320,     0,     0,  1321,  1322,  1323,
       0,  1324,  1325,  1326,  1327,  1328,  1329,     0,   715,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1034,
    1041,  1299,     0,     0,  1300,     0,  1967,  1968,  1969,     0,
    1970,  1971,  1972,  1973,  1974,  1975,  2469,     0,     0,   715,
       0,     0,   715,     0,  1967,  1968,  1969,     0,  1970,  1971,
    1972,  1973,  1974,  1975,  1306,     0,     0,     0,     0,  2485,
       0, -1713,   576,   576,   576,   576,     0,     0,   718,  2289,
    2303,     0,  2289,     0,     0,  2494,     0,     0,     0,  2052,
       0,     0,     0,  2052,   -39,     0,  1308,     0,     0,  2512,
    2277,  2278,  2279,     0,     0,     0,     0,   716,     0, -1713,
       0,     0,     0,     1,     0,   902,     0,     0,     0,  2071,
       0,     0,     0,     2,  1751,     3,     4,     0,  1617,     0,
       0,     0,     0,     0,     0,     0,  1426,   716,     0,     0,
       0,     5,     0,     0,     0,   718,     0,     0,     0,     0,
       6,     0,     0,     0,     0,     0,  2334,     0,     0,     0,
       0,  2575,     7,   718,     0,     0,  2016,     0,     0,     0,
       0,     0,     0,     8,     0,     0,     0,  1231,  1966,     0,
       0,     0,     0,  1231,     0,     9,     0,    10,   718,     0,
       0,     0,     0,     0,     0,   718, -1713,     0,     0,     0,
       0,     0,     0,     0,   716,    11,     0,     0,  1034,     0,
       0, -1713,     0,     0,     0,     0, -1713,     0,   718,    12,
       0,     0,  2432,     0,     0,  1254,     0,  1483,     0,    13,
       0,     0,     0,     0,     0,    14,  1875,     0,     0,     0,
       0,     0,     0,    15,     0,    16,    17,  2612,     0,     0,
     715, -1713,     0,     0,  1265,  1547,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1296,     0,     0,     0,  1275,  1276,  1277,     0,     0,  1284,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,   471,  2289,     0,  1231,  2639,  1231,  1231,   500,     0,
    2052,     0,  1339,     0,     0,  2052,  1317,     0,  2052,     0,
    2650,     0,     0,  2653,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   716,     0,    20,     0,  2675,     0,     0,
       0,     0,     0,     0,     0,   718,  2486,  2487,  2488,  2489,
       0,     0,     0,     0,     0,     0,     0,   638,   500,     0,
       0,     0,     0,  1381,     0,     0,   576,  1393,  1398,   716,
       0,     0,     0,  1231,     0,     0,  1231,  1231,     0,     0,
       0,  1967,  1968,  1969,     0,  1970,  1971,  1972,  1973,  1974,
    1975,     0,     0,   500,   500,     0,     0,     0,     0,     0,
     716,   718,     0,   716,  1426,     0, -1713,     0,   500,     0,
       0,     0,    21,     0,     0,    22,     0,     0,     0,     0,
     576,  1034,     0,  2675,     0,     0,     0,     0,  1034,  1299,
       0,     0,  1300,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   500,    23,     0,     0,     0,     0,     0,  1034,
       0,    24,     0,     0,     0,  2052,     0,     0,     0,     0,
    2653,     0,  1306,     0,     0,    25,     0,     0,     0, -1713,
     718,     0,    26,     0,     0,  2770,    27,     0,     0,   500,
       0,     0,     0,     0,     0,     0,    28,     0,   576,     0,
       0,     0,     0,     0,  1308,     0,     0,    29,     0,     0,
       0,    30,     0,     0,     0,     0, -1713,   500,     0,     0,
       0,   638,     0,  1324,  1325,  1326,  1327,  1328,  1329,     0,
       0,     0,     0,   576,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,    32,     0,     0,     0,     0,     0,     0,   809,
       0,   471,  1960,     0,     0,    33,  1517,  1961,  1962,  1963,
    2826,     0,     0,  1034,   500,     0,     0,  1526,  2650,  1527,
       0,     0,     0,     0,  2477,     0,     0,     0,  1533,    34,
     718,     0,     0,     0,     0,     0,     0,  2675,   638,   638,
     638,     0,     0,    35, -1713,  1534,   -39,     0,  1298,     0,
       0,   716,     0,  1299,     0,     0,  1300,     0,     0, -1713,
     718,  1301,  1302,  1303, -1713,     0,     0,     0,     0,     0,
       0,     0,  1552,  1554,     0,     0,     0,     0,  1304,     0,
    2696,  1305,     0,  2650,     0,     0,  1306,     0,     0,     0,
       0,     0,     0,  1307,     0,  2770,     0,  2639,     0, -1713,
       0,     0,     0,     0,  1585,  1586,  1751,     0,  1599,  1600,
       0,     0,  1299,     0,     0,  1300,     0,     0,  1308,     0,
    1426,     0,     0,     0,     0,  1582,  2675,   718,     0,     0,
       0,     0,     0,     0,  2734,  1601,     0,  1618,     0,     0,
    1630,  1633,  1638,  1641,     0,  1306,     0,   638,     0,     0,
       0,     0, -1713,     0,  1317,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1653,     0,     0,     0,     0,     0,
    1657,  1658,  1659,  1660,     0,     0,     0,  1308,  1669,  1670,
    1184,  1185,     0,  1681,     0,     0,     0,  1684,     0,     0,
    1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,     0,
       0,  1701,  2784,     0,     0,  1965,  1709,     0,     0,  1713,
       0,   886,     0,  1034,     0,     0,     0,     0,  1309,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1299,
       0,     0,  1300,  1310,     0,     0,  1735,  2808,  1311,  1770,
    1770,     0,     0,     0, -1713,     0,   718,  2261,     0,     0,
       0,     0,     0,     0,     0,  1186,  1187,     0,     0,  1312,
    1313,     0,  1306,  1276,  1277,     0,     0,     0,     0, -1713,
       0,     0,     0,  1314,  1966,  1299,     0, -1713,  1300,     0,
       0,     0,   718,  1301,  1302,  1303,     0,     0,     0,     0,
       0,  1231, -1713,     0,  1308,     0,     0, -1713,     0,     0,
    1304,  1231,     0,  2247,  1231,     0,     0,     0,  1306,     0,
       0,  1315,     0,   718,  1316,  1307,   718,  1188,  1189,  1190,
    1191,  1192,  1193,     0,     0,  1194,  1195,     0,  1317,     0,
       0,  1318, -1713,     0,     0,     0,     0,     0,     0,     0,
    1308,     0,  1034,     0, -1713,  1846,  1847,     0,  1848,     0,
       0,  1324,  1325,  1326,  1327,  1328,  1329,     0,     0,  1299,
       0,     0,  1300,     0,  2264,     0,     0,  1301,  1302,  1303,
       0,     0,     0,     0,     0,     0,  1900,  1902,     0,  1884,
       0,     0,     0,     0,  1304,     0,     0,  1317,     0,     0,
       0,     0,  1306,     0, -1713,     0,     0,     0,     0,  1307,
       0,     0,  1231,     0,     0,     0,     0,     0,     0, -1713,
       0,     0,     0,     0, -1713,  1231,     0,     0,  1319,     0,
       0,     0,     0,     0,  1308,     0,     0,     0,     0,  1196,
    1197,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1309,  1034,     0,     0,     0,     0,     0,     0,  1938, -1713,
       0,     0,     0,  1944,     0,  1310,     0,     0,     0,     0,
    1311,     0,     0,     0,     0,     0,     0,  1967,  1968,  1969,
       0,  1970,  1971,  1972,  1973,  1974,  1975, -1713,     0,     0,
       0,  1312,  1313,     0,     0,     0,     0,     0,     0,     0,
       0,  1959,     0,     0,     0,  1314,     0,     0,     0,     0,
       0,     0,     0,  1638,  1317,  1638,  1638,     0,  1332,     0,
       0,     0,     0,  1995,   718,     0,     0,  1998,  1320,     0,
    2000,  1321,  1322,  1323,  1309,  1324,  1325,  1326,  1327,  1328,
    1329,     0,     0,  1315,     0,     0,  1316,     0,     0,  1310,
    1198,  1199,     0,     0,  1311,     0,     0,     0,  1332,     0,
    1317,     0,     0,  1318,  2018,     0,     0,  2021,     0,  2023,
    1200,     0,     0,     0,     0,  1312,  1313,     0,     0,     0,
       0,     0,     0,  2058,     0,     0,     0, -1713,     0,  1314,
       0,     0,     0,     0,  1324,  1325,  1326,  1327,  1328,  1329,
    1299,     0,     0,  1300, -1713,     0,     0,     0,  1301,  1302,
    1303,     0,     0,     0,  2088,  2088,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1304,     0,  1315,     0,     0,
    1316,  1381,     0,  1306,     0,     0,     0,     0,     0,     0,
    1307,     0,     0,     0,  1317,     0,  1398,  1318,     0,     0,
    1319,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2096,  1308,  1332,     0,     0,     0,
       0,     0,     0,  1332,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1299,
       0,     0,  1300,     0, -1713,     0,     0,  1301,  1302,  1303,
       0,  1324,  1325,  1326,  1327,  1328,  1329,     0,     0,     0,
       0,     0,  1034,     0,  1304,     0,     0,     0,     0,     0,
       0,     0,  1306,     0,  1319,     0,     0,     0,     0,  1307,
       0,     0,     0,     0,     0,     0,     0,  2184,     0,     0,
    1320,     0,     0,  1321,  1322,  1323,     0,  1324,  1325,  1326,
    1327,  1328,  1329,     0,  1308,  1309,     0,  1647,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1310,     0,   964,     0,     0,  1311,     0,     0,   965,     0,
       0,     0,     0,     0,     0,   977,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1312,  1313,     0,     0,
       0,     0,     0,     0,   978,     0,     0,     0,  2206,     0,
    1314,     0,     0,     0,     0,     0,     0,  2210,     0,     0,
    2211,     0,     0,  2213,  1320,     0,     0,  1321,  1322,  1323,
       0,  1324,  1325,  1326,  1327,  1328,  1329,     0,     0,     0,
       0,  1647,  1184,  1185,     0,     0,     0,     0,  1315,  2233,
    2234,  1316,     0,     0,  1309,   979,     0,     0,     0,     0,
       0,     0,     0,  2244,     0,  1317,     0,     0,  1318,  1310,
       0,     0,  2250,     0,  1311,  2253,  1332,  2255,     0,     0,
       0,     0,     0,     0,   966,  2259,     0,  1332,     0,     0,
       0,  1625,     0,  2266,  2267,  1312,  1313,  1332,  1332,  1332,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,  1314,
       0,     0,     0,     0,     0,     0,     0,  1186,  1187,     0,
       0,     0,  2307,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2315,  1299,     0,     0,  1300,     0,     0,     0,
       0,  1301,  1302,  1303,   980,     0,     0,  1315,  2328,     0,
    1316,     0,     0,     0,     0,  1319,     0,     0,  1304,     0,
       0,  1332,  1299,     0,  1317,  1300,  1306,  1318,     0,     0,
   -1713, -1713, -1713,  1307,     0,     0,     0,  1231,     0,  1188,
    1189,  1190,  1191,  1192,  1193,     0,     0,  1194,  1195,     0,
       0,     0,     0,   981,     0,  1306,     0,     0,  1308,     0,
       0,   982,  1307,  1332,     0,     0,     0,     0,  1299,     0,
       0,  1300,     0,   983,     0,  1332,  1301,  1302,  1303,     0,
    1332,     0,     0,     0,     0,     0,     0,  1308,     0,     0,
       0,     0,     0,  1304,   967,     0,     0,     0,     0,     0,
       0,  1306,     0,     0,   984,     0,     0,     0,  1307,     0,
       0,     0,     0,     0,  1319,  1320,     0,     0,  1321,  1322,
    1323,     0,  1324,  1325,  1326,  1327,  1328,  1329,     0,     0,
       0,     0,  2002,  1308,  2457,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1817,     0,     0,     0,   969,   986,
       0,  1196,  1197,     0,     0,     0,     0,     0,  1309,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   987,     0,  1310,     0,     0,     0,  1818,  1311,     0,
    2470,  2471,     0,     0,     0,  2472,     0,  1309,     0,     0,
    2475,   989,     0,  2478,  2479,     0,     0,     0,  2483,  1312,
    1313,     0,  1310,     0,     0,     0,     0,  1311,     0,     0,
       0,     0,     0,  1314,  1320,     0,     0,  1321,  1322,  1323,
       0,  1324,  1325,  1326,  1327,  1328,  1329,     0,     0,     0,
       0,  2209,     0,  1309,     0,     0,     0,     0,     0,     0,
       0,     0,  1314,     0,   971,   886,     0,     0,  1310,     0,
       0,  1315,     0,  1311,  1316,     0,     0,     0,     0,     0,
       0,  1231,  1198,  1199,  1332,     0,  1231,     0,  1317,     0,
       0,  1318,     0,     0,  1312,  1313,     0,     0,     0,     0,
       0,     0,     0,  1332,     0,     0,     0,  2569,  1314,     0,
       0,     0,     0,     0,     0,     0,     0,  1317,     0,     0,
    1332,     0,  1625,  1625,     0,  1976,     0,  1625,  1552,  1554,
       0,     0,  1332,     0,     0,  1332,     0,     0,     0,     0,
    1332,     0,     0,  1332,     0,     0,  1315,     0,     0,  1316,
       0,     0,     0,     0,     0,  1332,     0,     0,     0,  1332,
    1332,  1332,  1332,  1317,     0,     0,  1318,     0,  1625,  1625,
       0,  1332,  1332,     0,     0,     0,     0,     0,  1319,     0,
       0,     0,     0,  1332,     0,   977,  1332,     0,     0,     0,
       0,     0,     0,     0,  1332,  1332,  1332,  1332,  1332,  1332,
    1332,  1332,  1332,  1332,   978,     0,     0,  1319,     0,     0,
       0,  1332,     0,     0,     0,  1332,     0,  1995,     0,     0,
       0,     0,     0,     0,     0,  2623,  2624,     0,     0,  2625,
       0,     0,     0,     0,     0,     0,     0,  1332,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1319,     0,   979,  2357,     0,     0,     0,
       0,     0,     0,     0,  2358,  2664,  2665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1320,  2677,
       0,  1321,  1322,  1323,     0,  1324,  1325,  1326,  1327,  1328,
    1329,     0,     0,     0,     0,  2248,     0,  1552,  1554,     0,
       0,     0,     0,     0,     0,     0,     0,  1320,  1231,     0,
   -1713, -1713, -1713,     0,  1324,  1325,  1326,  1327,  1328,  1329,
       0,  2359,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   980,     0,     0,     0,  1332,  1332,
    1332,     0,     0,  1320,     0,     0,  1321,  1322,  1323,     0,
    1324,  1325,  1326,  1327,  1328,  1329,     0,     0,     0,     0,
    2336,     0,  1299,     0,     0,  1300,     0,     0,     0,     0,
    1301,  1302,  1303,     0,     0,     0,  1332,     0,     0,     0,
       0,  2754,     0,   981,     0,     0,     0,  1304,     0,     0,
       0,   982,     0,     0,     0,  1306,  1284,     0,     0,     0,
       0,     0,  1307,   983,     0,  2360,  1299,     0,     0,  1300,
    2776,     0,     0,     0,  1301,  1302,  1303,     0,     0,     0,
       0,     0,     0,     0,     0,  2790,     0,  1308,     0,     0,
    1332,  1304,     0,     0,   984,     0,  1332,     0,     0,  1306,
       0,     0,     0,     0,     0,     0,  1307,     0,     0,  1976,
    1976,  1332,     0,  1625,  1625,  1625,  1625,     0,     0,  1625,
    1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1976,
       0,  1308,     0,     0,     0,     0,     0,     0,     0,   986,
       0,     0,     0,     0,     0,     0,     0,  1332,     0,     0,
    1332,     0,  1332,     0,     0,     0,  1976,  1976,     0,     0,
       0,   987,     0,     0,     0,     0,  2664,     0,     0,     0,
    1332,  1625,  1625,  1332,     0,  1332,     0,     0,     0,     0,
       0,   989,     0,  2361,     0,     0,  2362,  1309,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2858,     0,
       0,     0,  1310,     0,     0,     0,     0,  1311,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2872,  2872,
       0,     0,     0,     0,     0,     0,  1231,     0,  1312,  1313,
       0,  1309,  2664,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1314,     0,     0,     0,  1310,     0,  1332,     0,
       0,  1311,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2872,     0,
       0,     0,  1312,  1313,     0,     0,     0,     0,     0,     0,
    1315,  1299,     0,  1316,  1300,     0,  1314,     0,  1434,     0,
       0,     0,     0,     0,     0,     0,     0,  1317,     0,     0,
    1318,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1306,     0,     0,     0,     0,     0,
       0, -1713,     0,     0,  1315,     0,     0,  1316,     0,     0,
       0,     0,     0,     0,  2872,     0,     0,     0,     0,     0,
       0,  1317,     0,     0,  1318,     0,  1308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1332,     0,
       0,     0,  1332,  1332,     0,  1332,     0,     0,  1976,  1976,
    1976,  1976,     0,     0,     0,  1976,  1976,  1976,  1976,  1976,
    1976,  1976,  1976,  1976,  1976,  1332,  1332,  1319,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,     0,
    1299,     0,  1332,  1300,     0,  1332,     0,  1332,  1301,  1302,
    1303,  1332,     0,     0,  1976,  1976,  2265,     0,  1332,  1332,
       0,     0,     0,     0,     0,  1304,     0,     0,     0,     0,
       0,  1319,     0,  1306,     0,     0,     0,     0,     0,     0,
    1307,     0,     0,     0,     0,     0, -1713,     0,     0,  1299,
       0,     0,  1300,     0,     0,     0,     0,     0,     0,  1332,
       0, -1713,     0,     0,     0,  1308, -1713,  1332,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1332,     0,  1306,     0,     0,     0,     0,  1320,     0, -1713,
    1321,  1322,  1323,     0,  1324,  1325,  1326,  1327,  1328,  1329,
       0, -1713,     0,     0,  2459,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1308,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1320,     0,     0,  1321,  1322,  1323,     0,  1324,  1325,
    1326,  1327,  1328,  1329,     0,     0,     0,     0,  2481,     0,
       0,     0,     0,     0,     0,     0,  1317,     0,     0,     0,
       0,     0,     0,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1310,     0,     0,     0,  2480,  1311,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1312,  1313,     0,  1332,
       0,     0,     0,  1625, -1713,     0,     0,     0,     0,     0,
    1314,     0,  1332,  1332,  1332,     0,     0,  1332,     0, -1713,
    1332,  1332,     0,     0, -1713,  1332,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1713,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1315,     0,
       0,  1316,     0,     0,     0,     0,     0,     0,     0, -1713,
       0,     0,     0,     0,     0,  1317,     0,     0,  1318,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1625,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1332,     0,     0,  1317,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1713,     0,     0,     0,
       0,     0,     0,  1324,  1325,  1326,  1327,  1328,  1329,     0,
       0,     0,     0,     0,     0,  1319,     0,     0,     0,  1976,
    1625,     0,     0,     0,     0,  1332,  1332,  1332,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1713,     0,  1332,  1332,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1320,     0,     0,  1321,  1322,
    1323,     0,  1324,  1325,  1326,  1327,  1328,  1329,     0,     0,
       0,     0,  2626,     0,     0,     0,     0,     0,  1976,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,     0,
       0,     0,     0,     0, -1713,     0,     0,     0,     0,     0,
       0,  1324,  1325,  1326,  1327,  1328,  1329,     0,  1332,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1332,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1001,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,  1002,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,  1003,   109,   110,   111,   112,   813,  1004,   814,   815,
    1332,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,  1332,   128,   129,   130,   131,   820,
       0,  1005,     0,   134,   135,   136,   137,   138,   139,  1006,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,  1007,   151,   152,   153,   822,   823,   824,  1008,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,  1009,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,  1010,     0,  1011,   207,   208,   209,
    1012,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,  1013,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,  1014,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,  1015,  1016,   246,  1017,   248,   249,   250,   251,   252,
       0,     0,   253,  1018,   255,  1019,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,  1020,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,  1021,   844,   287,
     288,   289,   290,   845,   291,   292,  1022,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,  1023,   309,  1024,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,  1025,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
    1026,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,  1027,   402,   856,
     404,     0,   405,   406,     0,   407,  1028,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,  1029,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,  1030,   441,  1031,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,  1032,
       0,     0,     0,     0,   869,     0,   870,  1033,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    25,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,    30,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     568,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,    33,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,    34,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,  2766,     0,     0,     0,   871,     0,   872,   873,
      91,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   813,   114,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,   153,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    25,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,    30,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   568,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,    33,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,    34,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,  1634,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
    1635,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,  1636,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,  1637,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,     0,     0,     0,     0,   871,     0,   872,   873,
      91,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   813,   114,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,   153,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,   868,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,  1391,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,     0,     0,     0,     0,   871,     0,   872,   873,
    1001,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,  1003,   109,   110,   111,   112,   813,  1004,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,  1005,     0,   134,   135,   136,   137,   138,   139,  1006,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,  1007,   151,   152,   153,   822,   823,   824,  1008,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,  1010,     0,  1011,   207,   208,   209,
    1012,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,  1013,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,  1014,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,  1015,  1016,   246,  1017,   248,   249,   250,   251,   252,
       0,     0,   253,  1018,   255,  1019,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,  1020,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,  1021,   844,   287,
     288,   289,   290,   845,   291,   292,  1022,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,  1023,   309,  1024,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,  1025,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
    1026,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,  1027,   402,   856,
     404,     0,   405,   406,     0,   407,  1028,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,  1029,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,  1031,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,  1508,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,  1628,     0,     0,     0,   871,     0,   872,   873,
    1001,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,  1003,   109,   110,   111,   112,   813,  1004,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,  1005,     0,   134,   135,   136,   137,   138,   139,  1006,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,  1007,   151,   152,   153,   822,   823,   824,  1008,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,  1010,     0,  1011,   207,   208,   209,
    1012,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,  1013,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,  1014,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,  1015,  1016,   246,  1017,   248,   249,   250,   251,   252,
       0,     0,   253,  1018,   255,  1019,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,  1020,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,  1021,   844,   287,
     288,   289,   290,   845,   291,   292,  1022,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,  1023,   309,  1024,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,  1025,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
    1026,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,  1027,   402,   856,
     404,     0,   405,   406,     0,   407,  1028,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,  1029,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,  1843,   441,  1031,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
    1635,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,     0,     0,     0,     0,   871,     0,   872,   873,
      91,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   813,   114,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,   153,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,  1001,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,  1003,   109,   110,   111,
     112,   813,  1004,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,  1005,     0,   134,   135,
     136,   137,   138,   139,  1006,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,  1007,   151,   152,   153,
     822,   823,   824,  1008,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,  1010,
       0,  1011,   207,   208,   209,  1012,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
    1013,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,  1014,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,  1015,  1016,   246,  1017,
     248,   249,   250,   251,   252,     0,     0,   253,  1018,   255,
    1019,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,  1020,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,  1021,   844,   287,   288,   289,   290,   845,   291,
     292,  1022,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,  1023,   309,  1024,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,  1025,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,  1026,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,  1027,   402,   856,   404,     0,   405,   406,     0,
     407,  1028,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
    1029,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,  1031,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,     0,     0,     0,     0,   871,     0,   872,   873,
      91,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   813,   114,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,   153,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,  1394,  1395,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,  1768,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,     0,     0,     0,     0,   871,     0,   872,   873,
      91,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   813,   114,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,   153,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,  1994,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,  2654,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
    2655,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
    2656,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,  2657,     0,     0,     0,     0,   871,     0,   872,   873,
      91,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,  2869,   813,   114,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,  2870,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,   845,   291,   292,   293,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,  2871,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     865,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   812,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,  2870,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,   831,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,   845,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   853,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,  2871,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   865,     0,     0,     0,     0,
       0,     0,   866,   867,     0,     0,     0,     0,     0,   869,
       0,   870,     0,     0,     0,     0,   871,     0,   872,   873,
      91,   806,   542,   807,   808,   809,   810,   811,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   812,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111, -1713,   813,   114,   814,   815,
       0,   117,   118,   119,   120,   121,   122,   816,   817,   123,
     124,   818,   819,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,  2870,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   829,
     830,   164,   831,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   668,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   832,   193,   194,
     195,   196,   833,   834,   198,     0,   199,   200,   835,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
   -1713,   211,     0,   212,     0,   836,   837,   215,     0,   216,
     217,   218,   219,   220,   221, -1713,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   838,   839,     0,   840,     0,
     243,     0,     0,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255, -1713,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   843,   285,   844,   287,
     288,   289,   290,     0,   291,   292,     0,   294,   846,   847,
     296,   848,   298,   299,   300,     0,   301,   302,     0,     0,
     849,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   852,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   853,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
   -1713,   386,   387,   855,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   857,   858,     0,     0,   416,   417,   859,
     419,   860,   861,   421,   422,   862,   424,   425,  2871,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   864,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
   -1713,     0,     0,     0,     0,     0,     0,   866,   867,     0,
       0,     0,     0,     0,   869,     0,   870,     0,     0,     0,
       0,   871,     0,   872,   873,    91,   806,   542,   807,   808,
     809,   810,   811,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   813,   114,   814,   815,     0,   117,   118,   119,   120,
     121,   122,   816,   817,   123,   124,   818,   819,   127,     0,
     128,   129,   130,   131,   820,     0,   821,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     822,   823,   824,   825,   826,   827,   828,   155,   156,   157,
     158,   159,   160,   161,   829,   830,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   668,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   832,   193,   194,   195,   196,   833,   834,   198,
       0,   199,   200,   835,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     836,   837,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,   234,   235,   236,   237,   238,   239,
     838,   839,     0,   840,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,     0,     0,   253,   254,   255,
     256,     0,   257,   258,   259,   841,   842,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   843,   285,   844,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   846,   847,   296,   848,   298,   299,   300,
       0,   301,   302,     0,     0,   849,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   850,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   851,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   852,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   854,
     380,   381,   382,   383,   384,   385,   386,   387,   855,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   856,   404,     0,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,   857,   858,
       0,     0,   416,   417,   859,   419,   860,   861,   421,   422,
     862,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   863,     0,   434,   435,   436,   437,   438,
     439,   864,     0,   441,   442,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     0,     0,     0,     0,     0,
       0,     0,  1620,  1621,     0,     0,    91,   806,   542,   807,
     808,  1622,   810,   811,     0,     0,     0,     0,   872,   873,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   813,   114,   814,   815,     0,   117,   118,   119,
     120,   121,   122,   816,   817,   123,   124,   818,   819,   127,
       0,   128,   129,   130,   131,   820,     0,   821,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,   151,   152,
     153,   822,   823,   824,   825,   826,   827,   828,   155,   156,
     157,   158,   159,   160,   161,   829,   830,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   668,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   832,   193,   194,   195,   196,   833,   834,
     198,     0,   199,   200,   835,   202,     0,   203,     0,   204,
     205,     0,   206,   207,   208,   209,   210,   211,     0,   212,
       0,   836,   837,   215,     0,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,   234,   235,   236,   237,   238,
     239,   838,   839,     0,   840,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,     0,     0,   253,   254,
     255,   256,     0,   257,   258,   259,   841,   842,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   843,   285,   844,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   846,   847,   296,   848,   298,   299,
     300,     0,   301,   302,     0,     0,   303,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   850,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     851,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   852,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
     361,   362,  1757,  1758,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     854,   380,   381,   382,   383,   384,   385,   386,   387,   855,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   856,   404,     0,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,   857,
     858,     0,     0,   416,   417,   859,   419,   860,   861,   421,
     422,   862,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   863,     0,   434,   435,   436,   437,
     438,   439,   864,     0,   441,   442,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,     0,     0,     0,     0,
       0,     0,     0,  1759,  1760,     0,     0,     0,     0,     0,
       0,     0,  1622,     0,     0,     0,     0,     0,     0,   872,
     873,    91,   806,   542,   807,   808,   809,   810,   811,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   813,   114,   814,
     815,     0,   117,   118,   119,   120,   121,   122,   816,   817,
     123,   124,   818,   819,   127,     0,   128,   129,   130,   131,
     820,     0,   821,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   822,   823,   824,   825,
     826,   827,   828,   155,   156,   157,   158,   159,   160,   161,
     829,   830,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   668,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   832,   193,
     194,   195,   196,   833,   834,   198,     0,   199,   200,   835,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   836,   837,   215,     0,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
     234,   235,   236,   237,   238,   239,   838,   839,     0,   840,
       0,   243,     0,   245,   246,   247,   248,   249,   250,   251,
     252,     0,     0,   253,   254,   255,   256,     0,   257,   258,
     259,   841,   842,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   843,   285,   844,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   846,
     847,   296,   848,   298,   299,   300,     0,   301,   302,     0,
       0,   849,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   850,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   851,   325,   326,   327,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   852,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,   854,   380,   381,   382,   383,
     384,   385,   386,   387,   855,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     856,   404,     0,   405,   406,     0,   407,   408,   409,   410,
     411,   412,   413,     0,   857,   858,     0,     0,   416,   417,
     859,   419,   860,   861,   421,   422,   862,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   863,
       0,   434,   435,   436,   437,   438,   439,   864,     0,   441,
     442,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     0,     0,     0,     0,     0,     0,     0,  1620,  1621,
       0,     0,     0,     0,     0,     0,     0,  1622,     0,     0,
       0,     0,     0,     0,   872,   873,    91,   806,   542,   807,
     808,   809,   810,   811,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,   812,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,     0,   813,   114,   814,   815,     0,   117,   118,   119,
     120,   121,   122,   816,   817,   123,   124,   818,   819,   127,
       0,   128,   129,   130,   131,   820,     0,   821,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,   151,   152,
     153,   822,   823,   824,   825,   826,   827,   828,   155,   156,
     157,   158,   159,   160,   161,   829,   830,   164,   831,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   668,   180,   181,
       0,   182,   183,   184,     0,   185,     0,   187,     0,   188,
     189,   190,   191,   832,   193,   194,   195,   196,   833,   834,
     198,     0,   199,   200,   835,   202,     0,   203,     0,   204,
     205,     0,   206,   207,   208,   209,     0,   211,     0,   212,
       0,   836,   837,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,   234,   235,   236,   237,   238,
     239,   838,   839,     0,   840,     0,   243,     0,     0,   246,
     247,   248,   249,   250,   251,   252,     0,     0,   253,   254,
     255,     0,     0,   257,   258,   259,   841,   842,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   843,   285,   844,   287,   288,   289,   290,     0,
     291,   292,     0,   294,   846,   847,   296,   848,   298,   299,
     300,     0,   301,   302,     0,     0,   849,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   850,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     851,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   852,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
     361,   362,   853,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     854,   380,   381,   382,   383,   384,     0,   386,   387,   855,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   856,   404,     0,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,   857,
     858,     0,     0,   416,   417,   859,   419,   860,   861,   421,
     422,   862,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   863,     0,   434,   435,   436,   437,
     438,   439,   864,     0,   441,   442,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,     0,     0,     0,     0,
       0,     0,     0,   866,   867,   494,     0,     0,     0,     0,
     869,     0,   870,     0,     0,     0,     0,   871,     0,   872,
     873,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,  2286,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,  -600,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,  -600,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,  -600,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,  -600,
     248,   249,   250,   251,   252,     0,     0,   253,  -600,   255,
       0,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,  -600,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,  -600,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,     0,
     407,  -600,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     0,     0,    91,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   933,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,   817,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   820,     0,   821,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,   822,   823,   824,   825,   826,   827,   828,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   833,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,  2040,     0,   253,
     254,   255,   256,     0,   257,   258,   259,   841,   842,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,     0,   847,   296,   297,   298,
     299,   300,     0,   301,   302,     0,   573,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   850,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   851,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,   359,
     360,   361,   362,   363,  2041,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    25,   375,   376,   377,   378,
     379,   854,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   856,   404,     0,   405,
     406,    30,   407,   408,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   859,   419,   860,     0,
     421,   422,   862,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   863,     0,   434,   435,   436,
     437,   438,   568,   440,     0,   441,   442,   443,   444,   445,
     446,     0,     0,   447,     0,    33,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     0,    91,    34,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2042,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,   817,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   820,     0,   821,
       0,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
     151,   152,   153,   822,   823,   824,   825,   826,   827,   828,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     833,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,   205,     0,   206,   207,   208,   209,   210,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,   234,   235,   236,
     237,   238,   239,   240,   241,     0,   242,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,  2040,     0,
     253,   254,   255,   256,     0,   257,   258,   259,   841,   842,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,     0,   847,   296,   297,
     298,   299,   300,     0,   301,   302,     0,   573,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   850,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   851,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,   361,   362,   363,  2041,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,   854,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   856,   404,     0,
     405,   406,     0,   407,   408,   409,   410,   411,   412,   413,
       0,   414,   415,     0,     0,   416,   417,   859,   419,   860,
       0,   421,   422,   862,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   863,     0,   434,   435,
     436,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,     0,    91,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2042,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,   817,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   820,     0,
     821,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   822,   823,   824,   825,   826,   827,
     828,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   833,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
       0,   253,   254,   255,   256,     0,   257,   258,   259,   841,
     842,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,     0,   847,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   850,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   851,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,   359,   360,   361,   362,   363,  2041,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,   854,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   856,   404,
       0,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   859,   419,
     860,     0,   421,   422,   862,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   863,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     0,
      91,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,   817,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   820,
       0,   821,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,   153,   822,   823,   824,   825,   826,
     827,   828,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   833,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
       0,   227,   228,   229,   230,   231,   232,     0,   233,   234,
     235,   236,   237,   238,   239,   240,   241,     0,   242,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
       0,     0,   253,   254,   255,   256,     0,   257,   258,   259,
     841,   842,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,     0,   847,
     296,   297,   298,   299,   300,     0,   301,   302,     0,     0,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     850,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   851,   325,   326,   327,   328,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   854,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   856,
     404,     0,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,   414,   415,     0,     0,   416,   417,   859,
     419,   860,     0,   421,   422,   862,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   863,     0,
     434,   435,   436,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,   446,     0,     0,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
       0,   735,  1223,   542,     0,     0,     0,   810,     0,     0,
       0,     0,     0,     0,     0,     0,  2671,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   736,   737,     0,   738,
     739,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   740,   741,   127,     0,   128,   129,   130,   131,
     742,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     743,   744,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   745,   193,
     194,   195,   196,   746,  1224,   198,     0,   199,   200,   747,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   748,   749,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   223,   224,   225,
     226,     0,   227,   228,   229,   230,   231,   232,     0,   233,
       0,   750,   236,   237,   238,   239,   751,   752,     0,   753,
       0,   243,     0,     0,   246,     0,   248,   249,   250,   251,
     252,     0,     0,   253,     0,   255,     0,     0,   257,   258,
     259,     0,     0,   260,   261,   262,   263,   264,   754,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   755,     0,   756,
     287,   288,   289,   757,     0,   291,   292,     0,   294,     0,
     758,   296,   759,   298,   299,   300,     0,   301,   302,  1225,
       0,   303,   304,   305,     0,     0,   306,   760,     0,   309,
       0,   761,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,   322,   323,   762,   325,   326,   763,   328,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   764,   341,   342,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   360,   361,   362,   765,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   766,   382,   383,
     384,     0,   386,   387,   767,   389,     0,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   768,   402,
     769,   404,     0,   405,   406,     0,   407,     0,   409,   410,
     411,   412,   413,     0,   770,   771,     0,     0,   416,   417,
     772,   419,   773,  1226,   421,   422,   774,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,   438,  1116,   776,     0,   441,
       0,   443,   444,   445,   446,     0,     0,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   465,   466,   467,
     468,     0,   735,     0,     0,     0,     0,     0,  1227,  1228,
    1920,     0,     0,     0,     0,     0,     0,  1921,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       3,     4,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   740,   741,   127,     0,   128,   129,   130,
     131,   742,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,     0,   198,     0,   199,   200,
     747,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   748,   749,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   750,   236,   237,   238,   239,   751,   752,     0,
     753,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   754,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   755,     0,
     756,   287,   288,   289,   757,     0,   291,   292,     0,   294,
       0,   758,   296,   759,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   760,     0,
     309,     0,   761,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   762,   325,   326,   763,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   764,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   765,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      25,   375,   376,   377,   378,   379,     0,   380,   766,   382,
     383,   384,     0,   386,   387,   767,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   768,
     402,   769,   404,     0,   405,   406,    30,   407,     0,   409,
     410,   411,   412,   413,     0,   770,   771,     0,     0,   416,
     417,   772,   419,   773,     0,   421,   422,   774,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   775,   776,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
      33,   448,   449,   450,   451,   452,   453,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   465,   466,
     467,   468,     0,   494,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    35,    92,
      93,    94,    95,    96,    97,    98,    99,   606,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   223,
     224,   225,   226,     0,   227,   228,   229,   230,   231,   232,
       0,   233,     0,   235,   236,   237,   238,   239,   240,   241,
       0,   242,     0,   243,     0,     0,   246,     0,   248,   249,
     250,   251,   252,     0,     0,   253,     0,   255,     0,     0,
     257,   258,   259,     0,     0,   260,   261,   262,   263,   264,
     496,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     294,     0,   295,   296,   297,   298,   299,   300,     0,   301,
     302,     0,     0,   303,   304,   305,     0,     0,   306,   307,
       0,   309,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    25,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     498,   402,   403,   404,     0,   405,   406,    30,   407,     0,
     409,   410,   411,   412,   413,     0,   607,   415,     0,     0,
     608,   417,   418,   419,   420,     0,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,   438,   568,   440,
       0,   441,     0,   443,   444,   445,   446,     0,     0,   447,
       0,    33,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     0,   494,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   235,   236,   237,   238,   239,   240,
     241,     0,   242,     0,   243,     0,     0,   246,     0,   248,
     249,   250,   251,   252,     0,     0,   253,     0,   255,     0,
       0,   257,   258,   259,     0,     0,   260,   261,   262,   263,
     264,   496,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,     0,   295,   296,   297,   298,   299,   300,     0,
     301,   302,     0,     0,   303,   304,   305,     0,     0,   306,
     307,     0,   309,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    25,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   498,   402,   403,   404,     0,   405,   406,    30,   407,
       0,   409,   410,   411,   412,   413,     0,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,   438,   568,
     440,     0,   441,     0,   443,   444,   445,   446,     0,     0,
     447,     0,    33,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,     0,   494,    34,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      35,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   223,   224,   225,   226,     0,   227,   228,   229,   230,
     231,   232,     0,   233,     0,   235,   236,   237,   238,   239,
     240,   241,     0,   242,     0,   243,     0,     0,   246,     0,
     248,   249,   250,   251,   252,     0,     0,   253,     0,   255,
       0,     0,   257,   258,   259,     0,     0,   260,   261,   262,
     263,   264,   496,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   294,     0,   295,   296,   297,   298,   299,   300,
       0,   301,   302,     0,     0,   303,   304,   305,     0,     0,
     306,   307,     0,   309,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   498,   402,   403,   404,     0,   405,   406,     0,
     407,     0,   409,   410,   411,   412,   413,     0,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,   438,
     439,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     0,   494,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   913,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   223,   224,   225,   226,     0,   227,   228,   229,
     230,   231,   232,     0,   233,     0,   235,   236,   237,   238,
     239,   240,   241,     0,   242,     0,   243,     0,     0,   246,
       0,   248,   249,   250,   251,   252,     0,     0,   253,     0,
     255,     0,     0,   257,   258,   259,     0,     0,   260,   261,
     262,   263,   264,   496,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   286,   287,   288,   289,   290,     0,
     291,   292,     0,   294,     0,   295,   296,   297,   298,   299,
     300,     0,   301,   302,     0,     0,   303,   304,   305,     0,
       0,   306,   307,     0,   309,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   498,   402,   403,   404,     0,   405,   406,
       0,   407,     0,   409,   410,   411,   412,   413,     0,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,   421,
     422,   423,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
     438,   439,   440,     0,   441,     0,   443,   444,   445,   446,
       0,     0,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,     0,   494,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2511,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,     0,   235,   236,   237,
     238,   239,   240,   241,     0,   242,     0,   243,     0,     0,
     246,     0,   248,   249,   250,   251,   252,     0,     0,   253,
       0,   255,     0,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,   496,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,     0,   295,   296,   297,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,   307,     0,   309,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   498,   402,   403,   404,     0,   405,
     406,     0,   407,     0,   409,   410,   411,   412,   413,     0,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
     421,   422,   423,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,   439,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     0,   494,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1642,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   223,   224,   225,   226,     0,   227,
     228,   229,   230,   231,   232,     0,   233,     0,   235,   236,
     237,   238,   239,   240,   241,     0,   242,     0,   243,     0,
       0,   246,     0,   248,   249,   250,   251,   252,     0,     0,
     253,     0,   255,     0,     0,   257,   258,   259,     0,     0,
     260,   261,   262,   263,   264,   496,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
     290,     0,   291,   292,     0,   294,     0,   295,   296,   297,
     298,   299,   300,     0,   301,   302,     0,     0,   303,   304,
     305,     0,     0,   306,   307,     0,   309,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   498,   402,   403,   404,     0,
     405,   406,     0,   407,     0,   409,   410,   411,   412,   413,
       0,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,   438,   439,   440,     0,   441,     0,   443,   444,
     445,   446,     0,     0,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,     0,   494,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1747,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   496,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   294,     0,   295,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,     0,   309,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   498,   402,   403,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     0,
       0,     0,     0,  2372,  1223,   542,     0,     0,  1602,   810,
       0,     0,     0,     0,     0,  2270,  1603,  1604,  1605,    92,
      93,    94,    95,    96,    97,    98,    99,  1044,   100,   101,
     102,  1045,  1046,  1047,  1048,  1049,  1050,  1051,   103,   104,
    1052,   105,   106,   107,  2373,   109,   110,   111,     0,   656,
    2374,   658,   659,  1053,   117,   118,   119,   120,   121,   122,
    1054,  1055,   123,   124,   660,   661,   127,  1056,   128,   129,
     130,   131,     0,  1057,  2375,  1058,   134,   135,   136,   137,
     138,   139,  2376,   141,   142,   143,  1059,   144,   145,   146,
     147,   148,   149,  1060,  2377,   151,   152,   153,  1061,  1062,
    1063,  2378,  1064,  1065,  1066,   155,   156,   157,   158,   159,
     160,   161,   666,   667,   164,  1067,   165,  1068,   166,   167,
     168,   169,   170,   171,  1069,   172,   173,   174,   175,   176,
    1070,  1071,   177,   178,   668,   180,   181,  1072,   182,   183,
     184,  1073,   185,   186,   187,  1074,   188,   189,   190,   191,
       0,   193,   194,   195,   196,     0,  1075,   198,  1076,   199,
     200,   669,   202,  1077,   203,  1078,   204,  2379,  1079,  2380,
     207,   208,   209,  2381,   211,  1080,   212,  1081,     0,     0,
     215,  1082,   216,   217,   218,   219,   220,   221,  2382,   223,
     224,   225,   226,  1083,   227,   228,   229,   230,   231,   232,
    1084,   233,  2383,     0,   236,   237,   238,   239,   676,   677,
    1085,   678,  1086,   243,  2384,  2385,   246,  2386,   248,   249,
     250,   251,   252,  1087,  1088,   253,  2387,   255,  2388,  1089,
     257,   258,   259,  1090,  1091,   260,   261,   262,   263,   264,
    2389,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   685,
    2390,   687,   287,   288,   289,  2391,  1092,   291,   292,  2392,
     294,  1093,     0,   296,   689,   298,   299,   300,  1094,   301,
     302,  1095,  1096,  2393,   304,   305,  1097,  1098,   306,     0,
    2394,   309,  2395,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,  1099,   322,   323,     0,   325,   326,
       0,   328,   329,   330,  1100,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   692,   341,   342,   343,   344,  1101,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,  1102,   357,   358,  2396,   360,   361,   362,   694,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,  1103,   375,   376,   377,   378,   379,  1104,   380,  2397,
     382,   383,   384,  2398,   386,   387,   697,   389,  1105,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
    2399,   402,     0,   404,  1106,   405,   406,  1107,   407,  2400,
     409,   410,   411,   412,   413,  1108,   700,   701,  1109,  1110,
     416,   417,     0,   419,     0,  1111,   421,   422,  2401,   424,
     425,   426,   427,   428,  1112,  1113,   429,   430,   431,   432,
     433,  1114,  1115,   434,   435,   436,   437,   438,     0,   703,
    1117,   441,  2402,   443,   444,   445,   446,  1118,  1119,   447,
    1120,  1121,   448,   449,   450,   451,   452,   453,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   465,
     466,   467,   468,     0,   494,     0,  1606,  1607,  1608,  1602,
    2403,  2404,  1611,  1612,  1613,  1614,     0,  1603,  1604,  1605,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     223,   224,   225,   226,     0,   227,   228,   229,   230,   231,
     232,     0,   233,     0,   235,   236,   237,   238,   239,   240,
     241,     0,   242,     0,   243,     0,     0,   246,     0,   248,
     249,   250,   251,   252,     0,     0,   253,     0,   255,     0,
       0,   257,   258,   259,     0,     0,   260,   261,   262,   263,
     264,   496,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,     0,   295,   296,   297,   298,   299,   300,     0,
     301,   302,     0,     0,   303,   304,   305,     0,     0,   306,
     307,     0,   309,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   498,   402,   403,   404,     0,   405,   406,     0,   407,
       0,   409,   410,   411,   412,   413,     0,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,   438,   439,
     440,   502,   441,     0,   443,   444,   445,   446,     0,     0,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,     0,     0,     0,  1606,  1607,  1608,
       0,  1609,  1610,  1611,  1612,  1613,  1614,  1299,     0,     0,
    1300,     0,     0,     0,   503,  1301,  1302,  1303,     0,     0,
       0,     0,     0,     0,     0,  1299,     0,     0,  1300,     0,
     504,     0,  1304,  1301,  1302,  1303,     0,     0,     0,     0,
    1306,     0,     0,  1299,     0,     0,  1300,  1307,     0,     0,
    1304,  1301,  1302,  1303,     0,     0,     0,     0,  1306,     0,
       0,     0,     0,     0,     0,  1307,     0,     0,  1304,     0,
       0,     0,  1308,     0,     0,     0,  1306,     0,     0,     0,
       0,     0,     0,  1307,   505,     0,     0,     0,     0,     0,
    1308,     0,     0,   506,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   507,     0,     0,  1308,     0,
     508,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   509,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,   510,
       0,     0,     0,   511,     0,     0,     0,  1310,     0,     0,
    1309,     0,  1311,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1310,     0,     0,  1309,     0,
    1311,     0,     0,  1312,  1313,     0,     0,     0,     0,     0,
       0,     0,     0,  1310,     0,     0,     0,  1314,  1311,     0,
       0,  1312,  1313,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1314,   512,     0,     0,  1312,
    1313,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     513,     0,     0,  1314,     0,  1315,     0,     0,  1316,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1317,  1315,     0,  1318,  1316,     0,     0,     0,
       0,   514,     0,     0,   515,     0,     0,     0,     0,     0,
    1317,  1315,   516,  1318,  1316,   517,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1317,     0,
       0,  1318,     0,     0,   518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   519,     0,     0,
       0,     0,     0,     0,   520,     0,     0,     0,     0,     0,
       0,     0,     0,   521,     0,     0,     0,     0,     0,   522,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1319,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   523,     0,     0,     0,     0,     0,
    1319,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1319,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1320,     0,     0,  1321,  1322,  1323,     0,  1324,
    1325,  1326,  1327,  1328,  1329,     0,     0,     0,     0,  2840,
    1320,     0,     0,  1321,  1322,  1323,     0,  1324,  1325,  1326,
    1327,  1328,  1329,     0,     0,     0,     0,  2852,  1320,  1043,
       0,  1321,  1322,  1323,     0,  1324,  1325,  1326,  1327,  1328,
    1329,     0,     0,  1478,     0,    92,    93,    94,    95,    96,
      97,    98,    99,  1044,   100,   101,   102,  1045,  1046,  1047,
    1048,  1049,  1050,  1051,   103,   104,  1052,   105,   106,   107,
       0,   109,   110,   111,   736,   737,     0,   738,   739,  1053,
     117,   118,   119,   120,   121,   122,  1054,  1055,   123,   124,
     740,   741,   127,  1056,   128,   129,   130,   131,   742,  1057,
       0,  1058,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,  1059,   144,   145,   146,   147,   148,   149,  1060,
       0,   151,   152,   153,  1061,  1062,  1063,     0,  1064,  1065,
    1066,   155,   156,   157,   158,   159,   160,   161,   743,   744,
     164,  1067,   165,  1068,   166,   167,   168,   169,   170,   171,
    1069,   172,   173,   174,   175,   176,  1070,  1071,   177,   178,
     179,   180,   181,  1072,   182,   183,   184,  1073,   185,   186,
     187,  1074,   188,   189,   190,   191,   745,   193,   194,   195,
     196,   746,  1075,   198,  1076,   199,   200,   747,   202,  1077,
     203,  1078,   204,     0,  1079,     0,   207,   208,   209,     0,
     211,  1080,   212,  1081,   748,   749,   215,  1082,   216,   217,
     218,   219,   220,   221,     0,   223,   224,   225,   226,  1083,
     227,   228,   229,   230,   231,   232,  1084,   233,     0,   750,
     236,   237,   238,   239,   751,   752,  1085,   753,  1086,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,  1087,
    1088,   253,     0,   255,     0,  1089,   257,   258,   259,  1090,
    1091,   260,   261,   262,   263,   264,   754,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   755,     0,   756,   287,   288,
     289,   757,  1092,   291,   292,     0,   294,  1093,   758,   296,
     759,   298,   299,   300,  1094,   301,   302,  1095,  1096,   303,
     304,   305,  1097,  1098,   306,   760,     0,   309,     0,   761,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1099,   322,   323,   762,   325,   326,   763,   328,   329,   330,
    1100,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     764,   341,   342,   343,   344,  1101,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,  1102,   357,
     358,     0,   360,   361,   362,   765,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,  1103,   375,   376,
     377,   378,   379,  1104,   380,   766,   382,   383,   384,     0,
     386,   387,   767,   389,  1105,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   768,   402,   769,   404,
    1106,   405,   406,  1107,   407,     0,   409,   410,   411,   412,
     413,  1108,   770,   771,  1109,  1110,   416,   417,   772,   419,
     773,  1111,   421,   422,   774,   424,   425,   426,   427,   428,
    1112,  1113,   429,   430,   431,   432,   433,  1114,  1115,   434,
     435,   436,   437,   438,  1116,   776,  1117,   441,     0,   443,
     444,   445,   446,  1118,  1119,   447,  1120,  1121,   448,   449,
     450,   451,   452,   453,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   465,   466,   467,   468,   494,
       0,     0,     0,     0,     0,     0,     0,     0,  1726,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   235,
     236,   237,   238,   239,   240,   241,     0,   242,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   496,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   294,     0,   295,   296,
     297,   298,   299,   300,     0,   301,   302,     0,     0,   303,
     304,   305,     0,     0,   306,   307,     0,   309,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,     0,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   498,   402,   403,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,   439,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   735,
    1223,   542,     0,     0,     0,   810,     0,     0,  2201,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   736,   737,     0,   738,   739,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     740,   741,   127,     0,   128,   129,   130,   131,   742,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   743,   744,
     164,  1358,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   745,   193,   194,   195,
     196,   746,  1224,   198,     0,   199,   200,   747,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   748,   749,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   750,
     236,   237,   238,   239,   751,   752,     0,   753,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   754,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   755,     0,   756,   287,   288,
     289,   757,     0,   291,   292,     0,   294,     0,   758,   296,
     759,   298,   299,   300,     0,   301,   302,  1225,     0,   303,
     304,   305,     0,     0,   306,   760,     0,   309,     0,   761,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   762,   325,   326,   763,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     764,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   765,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   766,   382,   383,   384,     0,
     386,   387,   767,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   768,   402,   769,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   770,   771,     0,     0,   416,   417,   772,   419,
     773,  1226,   421,   422,   774,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,  1116,   776,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   465,   466,   467,   468,   735,
    1223,   542,     0,     0,     0,   810,  1227,  1228,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   736,   737,     0,   738,   739,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     740,   741,   127,     0,   128,   129,   130,   131,   742,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   743,   744,
     164,  1360,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   745,   193,   194,   195,
     196,   746,  1224,   198,     0,   199,   200,   747,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   748,   749,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   750,
     236,   237,   238,   239,   751,   752,     0,   753,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   754,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   755,     0,   756,   287,   288,
     289,   757,     0,   291,   292,     0,   294,     0,   758,   296,
     759,   298,   299,   300,     0,   301,   302,  1225,     0,   303,
     304,   305,     0,     0,   306,   760,     0,   309,     0,   761,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   762,   325,   326,   763,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     764,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   765,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   766,   382,   383,   384,     0,
     386,   387,   767,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   768,   402,   769,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   770,   771,     0,     0,   416,   417,   772,   419,
     773,  1226,   421,   422,   774,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,  1116,   776,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   465,   466,   467,   468,   735,
    1223,   542,     0,     0,     0,   810,  1227,  1228,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   736,   737,     0,   738,   739,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     740,   741,   127,     0,   128,   129,   130,   131,   742,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   743,   744,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   745,   193,   194,   195,
     196,   746,  1224,   198,     0,   199,   200,   747,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   748,   749,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   223,   224,   225,   226,     0,
     227,   228,   229,   230,   231,   232,     0,   233,     0,   750,
     236,   237,   238,   239,   751,   752,     0,   753,     0,   243,
       0,     0,   246,     0,   248,   249,   250,   251,   252,     0,
       0,   253,     0,   255,     0,     0,   257,   258,   259,     0,
       0,   260,   261,   262,   263,   264,   754,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   755,     0,   756,   287,   288,
     289,   757,     0,   291,   292,     0,   294,     0,   758,   296,
     759,   298,   299,   300,     0,   301,   302,  1225,     0,   303,
     304,   305,     0,     0,   306,   760,     0,   309,     0,   761,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   762,   325,   326,   763,   328,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     764,   341,   342,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   360,   361,   362,   765,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   766,   382,   383,   384,     0,
     386,   387,   767,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   768,   402,   769,   404,
       0,   405,   406,     0,   407,     0,   409,   410,   411,   412,
     413,     0,   770,   771,     0,     0,   416,   417,   772,   419,
     773,  1226,   421,   422,   774,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,   438,  1116,   776,     0,   441,     0,   443,
     444,   445,   446,     0,     0,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   465,   466,   467,   468,     0,
    1299,     0,     0,  1300,     0,     0,  1227,  1228,  1301,  1302,
    1303,     0,     0,     0,     0,     0,     0,     0,  1299,     0,
       0,  1300,     0,     0,     0,  1304,  1301,  1302,  1303,  1753,
       0,     0,     0,  1306,     0,     0,  1299,     0,     0,  1300,
    1307,     0,     0,  1304,  1301,  1302,  1303,     0,     0,     0,
       0,  1306,     0,     0,     0,     0,     0,     0,  1307,     0,
       0,  1304,     0,     0,  1299,  1308,     0,  1300,     0,  1306,
       0,     0,  1301,  1302,  1303,     0,  1307,     0,     0,     0,
       0,     0,     0,  1308,     0,     0,     0,     0,     0,  1304,
       0,     0,  1942,     0,     0,     0,     0,  1306,     0,     0,
       0,  1308,     0,     0,  1307,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1754,     0,     0,     0,
       0,     0,     0,     0,  1299,     0,     0,  1300,     0,  1308,
       0,     0,  1301,  1302,  1303,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1304,
       0,     0,     0,     0,     0,     0,     0,  1306,     0,     0,
       0,     0,     0,     0,  1307,  1309,     0,     0,     0,     0,
       0,     0,     0,  1980,     0,     0,     0,     0,  1981,     0,
    1310,     0,     0,  1309,     0,  1311,     0,     0,     0,  1308,
    2913,     0,     0,     0,     0,     0,     0,     0,  1310,     0,
       0,  1309,     0,  1311,     0,     0,  1312,  1313,     0,     0,
       0,     0,     0,     0,     0,     0,  1310,     0,     0,     0,
    1314,  1311,     0,     0,  1312,  1313,     0,     0,     0,  1309,
       0,     0,     0,     0,     0,     0,     0,     0,  1314,     0,
       0,     0,  1312,  1313,  1310,     0,     0,     0,     0,  1311,
       0,     0,     0,     0,     0,     0,  1314,     0,  1315,     0,
       0,  1316,     0,     0,     0,     0,     0,     0,     0,     0,
    1312,  1313,     0,     0,     0,  1317,  1315,     0,  1318,  1316,
       0,     0,     0,     0,  1314,     0,     0,     0,     0,  1309,
       0,     0,     0,  1317,  1315,     0,  1318,  1316,     0,     0,
       0,     0,     0,     0,  1310,     0,     0,     0,     0,  1311,
       0,  1317,     0,     0,  1318,     0,     0,     0,     0,     0,
       0,     0,  1315,     0,     0,  1316,     0,     0,     0,     0,
    1312,  1313,     0,     0,     0,     0,     0,  2914,     0,  1317,
       0,     0,  1318,     0,  1314,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1299,     0,  1319,  1300,     0,     0,     0,
       0,  1301,  1302,  1303,     0,     0,     0,     0,     0,     0,
       0,     0,  1315,  1319,     0,  1316,     0,     0,  1304,     0,
       0,  1985,     0,     0,     0,     0,  1306,  1299,     0,  1317,
    1300,  1319,  1318,  1307,     0,  1301,  1302,  1303,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1954,     0,  1304,     0,  1755,     0,     0,     0,  1308,  1319,
    1306,     0,     0,     0,     0,     0,     0,  1307,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1308,     0,     0,  1320,     0,     0,  1321,  1322,
    1323,     0,  1324,  1325,  1326,  1327,  1328,  1329,     0,     0,
       0,     0,     0,  1320,     0,     0,  1321,  1322,  1323,  1319,
    1324,  1325,  1326,  1327,  1328,  1329,     0,     0,     0,     0,
       0,  1320,     0,     0,  1321,  1322,  1323,     0,  1324,  1325,
    1326,  1327,  1328,  1329,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1309,  1320,
       0,     0,  1321,  1322,  1323,     0,  1324,  1325,  1326,  1327,
    1328,  1329,     0,  1310,     0,     0,  1299,     0,  1311,  1300,
       0,     0,     0,     0,  1301,  1302,  1303,  1990,     0,     0,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,  1312,
    1313,  1304,     0,     0,  1992,     0,     0,  1310,     0,  1306,
       0,     0,  1311,  1314,     0,     0,  1307,     0,     0,  1320,
       0,     0,  1321,  1322,  1323,     0,  1324,  1325,  1326,  1327,
    1328,  1329,     0,  1312,  1313,     0,     0,     0,     0,     0,
       0,  1308,     0,     0,     0,     0,     0,  1314,     0,     0,
       0,  1315,     0,     0,  1316,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1299,  1317,     0,
    1300,  1318,     0,     0,     0,  1301,  1302,  1303,     0,     0,
       0,     0,     0,     0,     0,  1315,     0,     0,  1316,     0,
       0,     0,  1304,     0,     0,     0,     0,     0,     0,     0,
    1306,     0,  1317,     0,     0,  1318,  1299,  1307,     0,  1300,
       0,     0,     0,     0,  1301,  1302,  1303,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1304,  1308,     0,  2247,     0,     0,     0,     0,  1306,
       0,  1309,     0,     0,     0,     0,  1307,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1310,     0,  1319,     0,
       0,  1311,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1308,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1299,  1312,  1313,  1300,     0,     0,     0,     0,  1301,
    1302,  1303,  1319,     0,     0,     0,  1314,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1304,     0,     0,     0,
       0,     0,     0,     0,  1306,     0,     0,     0,     0,     0,
    1299,  1307,     0,  1300,     0,     0,     0,     0,  1301,  1302,
    1303,     0,  1309,     0,  1315,     0,     0,  1316,     0,     0,
       0,     0,     0,     0,     0,     0,  1308,  1310,     0,     0,
       0,  1317,  1311,  1306,  1318,     0,     0,     0,  1320,     0,
    1307,  1321,  1322,  1323,     0,  1324,  1325,  1326,  1327,  1328,
    1329,  1309,     0,  1312,  1313,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1308,  1310,  1314,     0,     0,
       0,  1311,  1320,     0,     0,  1321,  1322,  1323,     0,  1324,
    1325,  1326,  1327,  1328,  1329,     0,     0,     0,     0,     0,
       0,     0,  1312,  1313,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1315,  1314,     0,  1316,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1319,  1317,     0,     0,  1318,  1309,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1310,     0,     0,  1315,     0,  1311,  1316,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1317,     0,     0,  1318,  1309,     0,  1312,  1313,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1310,  1314,     0,     0,     0,  1311,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1312,  1313,     0,     0,
       0,     0,  1319,     0,     0,     0,     0,     0,     0,  1315,
    1314,  1320,  1316,     0,  1321,  1322,  1323,     0,  1324,  1325,
    1326,  1327,  1328,  1329,     0,     0,  1317,     0,     0,  1318,
       0,     0,     0,     0,  2205,     0,     0,     0,     0,     0,
       0,  1319,     0,     0,     0,     0,     0,     0,  1315,     0,
       0,  1316,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1317,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1320,     0,     0,  1321,  1322,  1323,     0,  1324,
    1325,  1326,  1327,  1328,  1329,     0,  1319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1320,     0,     0,  1321,  1322,  1323,     0,  1324,  1325,
    1326,  1327,  1328,  1329,     0,  1319,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1320,     0,     0,  1321,
    1322,  1323,     0,  1324,  1325,  1326,  1327,  1328,  1329,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1043,     0,  1661,  1320,     0,     0,  1321,  1322,
    1323,     0,  1324,  1325,  1326,  1327,  1328,  1329,    92,    93,
      94,    95,    96,    97,    98,    99,  1044,   100,   101,   102,
    1045,  1046,  1047,  1048,  1049,  1050,  1051,   103,   104,  1052,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,  1053,   117,   118,   119,   120,   121,   122,  1054,
    1055,   123,   124,   740,   741,   127,  1056,   128,   129,   130,
     131,   742,  1057,     0,  1058,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,  1059,   144,   145,   146,   147,
     148,   149,  1060,     0,   151,   152,   153,  1061,  1062,  1063,
       0,  1064,  1065,  1066,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,  1067,   165,  1068,   166,   167,   168,
     169,   170,   171,  1069,   172,   173,   174,   175,   176,  1070,
    1071,   177,   178,   179,   180,   181,  1072,   182,   183,   184,
    1073,   185,   186,   187,  1074,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,  1075,   198,  1076,   199,   200,
     747,   202,  1077,   203,  1078,   204,     0,  1079,     0,   207,
     208,   209,     0,   211,  1080,   212,  1081,   748,   749,   215,
    1082,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,  1083,   227,   228,   229,   230,   231,   232,  1084,
     233,     0,   750,   236,   237,   238,   239,   751,   752,  1085,
     753,  1086,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,  1087,  1088,   253,     0,   255,     0,  1089,   257,
     258,   259,  1090,  1091,   260,   261,   262,   263,   264,   754,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   755,     0,
     756,   287,   288,   289,   757,  1092,   291,   292,     0,   294,
    1093,   758,   296,   759,   298,   299,   300,  1094,   301,   302,
    1095,  1096,   303,   304,   305,  1097,  1098,   306,   760,     0,
     309,     0,   761,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,  1099,   322,   323,   762,   325,   326,   763,
     328,   329,   330,  1100,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   764,   341,   342,   343,   344,  1101,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,  1102,   357,   358,     0,   360,   361,   362,   765,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
    1103,   375,   376,   377,   378,   379,  1104,   380,   766,   382,
     383,   384,     0,   386,   387,   767,   389,  1105,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   768,
     402,   769,   404,  1106,   405,   406,  1107,   407,     0,   409,
     410,   411,   412,   413,  1108,   770,   771,  1109,  1110,   416,
     417,   772,   419,   773,  1111,   421,   422,   774,   424,   425,
     426,   427,   428,  1112,  1113,   429,   430,   431,   432,   433,
    1114,  1115,   434,   435,   436,   437,   438,  1116,   776,  1117,
     441,     0,   443,   444,   445,   446,  1118,  1119,   447,  1120,
    1121,   448,   449,   450,   451,   452,   453,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   465,   466,
     467,   468,  1043,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,  1044,   100,   101,   102,
    1045,  1046,  1047,  1048,  1049,  1050,  1051,   103,   104,  1052,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,  1053,   117,   118,   119,   120,   121,   122,  1054,
    1055,   123,   124,   740,   741,   127,  1056,   128,   129,   130,
     131,   742,  1057,     0,  1058,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,  1059,   144,   145,   146,   147,
     148,   149,  1060,     0,   151,   152,   153,  1061,  1062,  1063,
       0,  1064,  1065,  1066,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,  1067,   165,  1068,   166,   167,   168,
     169,   170,   171,  1069,   172,   173,   174,   175,   176,  1070,
    1071,   177,   178,   179,   180,   181,  1072,   182,   183,   184,
    1073,   185,   186,   187,  1074,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,  1075,   198,  1076,   199,   200,
     747,   202,  1077,   203,  1078,   204,     0,  1079,     0,   207,
     208,   209,     0,   211,  1080,   212,  1081,   748,   749,   215,
    1082,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,  1083,   227,   228,   229,   230,   231,   232,  1084,
     233,     0,   750,   236,   237,   238,   239,   751,   752,  1085,
     753,  1086,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,  1087,  1088,   253,     0,   255,     0,  1089,   257,
     258,   259,  1090,  1091,   260,   261,   262,   263,   264,   754,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   755,     0,
     756,   287,   288,   289,   757,  1092,   291,   292,     0,   294,
    1093,   758,   296,   759,   298,   299,   300,  1094,   301,   302,
    1095,  1096,   303,   304,   305,  1097,  1098,   306,   760,     0,
     309,     0,   761,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,  1099,   322,   323,   762,   325,   326,   763,
     328,   329,   330,  1100,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   764,   341,   342,   343,   344,  1101,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,  1102,   357,   358,     0,   360,   361,   362,   765,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
    1103,   375,   376,   377,   378,   379,  1104,   380,   766,   382,
     383,   384,     0,   386,   387,   767,   389,  1105,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   768,
     402,   769,   404,  1106,   405,   406,  1107,   407,     0,   409,
     410,   411,   412,   413,  1108,   770,   771,  1109,  1110,   416,
     417,   772,   419,   773,  1111,   421,   422,   774,   424,   425,
     426,   427,   428,  1112,  1113,   429,   430,   431,   432,   433,
    1114,  1115,   434,   435,   436,   437,   438,  1116,   776,  1117,
     441,     0,   443,   444,   445,   446,  1118,  1119,   447,  1120,
    1121,   448,   449,   450,   451,   452,   453,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   465,   466,
     467,   468,  1043,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,  1802,    97,    98,    99,  1044,   100,   101,   102,
    1045,  1046,  1047,  1048,  1049,  1050,  1051,   103,   104,  1052,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,  1053,   117,   118,   119,   120,   121,   122,  1054,
    1055,   123,   124,   740,   741,   127,  1056,   128,   129,   130,
     131,   742,  1057,     0,  1058,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,  1059,   144,   145,   146,   147,
     148,   149,  1060,     0,   151,   152,   153,  1061,  1062,  1063,
       0,  1064,  1065,  1066,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,  1067,   165,  1068,   166,   167,   168,
     169,   170,   171,  1069,   172,   173,   174,   175,   176,  1070,
    1071,   177,   178,   179,  1803,   181,  1072,   182,   183,   184,
    1073,   185,   186,   187,  1074,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,  1075,   198,  1076,   199,   200,
     747,   202,  1077,   203,  1078,   204,     0,  1079,     0,   207,
     208,   209,     0,   211,  1080,   212,  1081,   748,   749,   215,
    1082,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,  1083,   227,   228,   229,   230,   231,   232,  1084,
     233,     0,   750,   236,   237,   238,   239,   751,   752,  1085,
     753,  1086,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,  1087,  1088,   253,     0,   255,     0,  1089,   257,
     258,   259,  1090,  1091,   260,   261,   262,   263,   264,   754,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   755,     0,
     756,   287,   288,   289,   757,  1092,   291,   292,     0,   294,
    1093,   758,   296,   759,   298,   299,   300,  1094,   301,   302,
    1095,  1096,   303,   304,   305,  1097,  1098,   306,   760,     0,
     309,     0,   761,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,  1099,   322,   323,   762,   325,   326,   763,
     328,   329,   330,  1100,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   764,   341,   342,   343,   344,  1101,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,  1102,   357,   358,     0,   360,   361,   362,   765,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
    1103,   375,   376,   377,   378,   379,  1104,  1804,   766,   382,
     383,   384,     0,   386,   387,   767,   389,  1105,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   768,
     402,   769,   404,  1106,   405,   406,  1107,   407,     0,   409,
     410,   411,   412,   413,  1108,   770,   771,  1109,  1110,   416,
     417,   772,   419,   773,  1111,   421,   422,   774,   424,   425,
     426,   427,   428,  1112,  1113,   429,   430,   431,   432,   433,
    1114,  1115,   434,   435,   436,   437,   438,  1116,   776,  1117,
     441,     0,   443,   444,   445,   446,  1118,  1119,   447,  1120,
    1121,   448,   449,   450,   451,   452,   453,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   465,   466,
     467,   468,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
     817,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   820,     0,   821,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,   822,   823,   824,
     825,   826,   827,   828,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   833,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,   205,     0,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,     0,   253,   254,   255,   256,     0,   257,
     258,   259,   841,   842,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
       0,   847,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   850,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   851,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   854,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   856,   404,     0,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   859,   419,   860,     0,   421,   422,   862,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     863,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,   133,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,     0,     0,     0,
     154,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,   205,     0,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,     0,     0,   253,   254,   255,   256,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,     0,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,  1416,   128,   129,   130,
     131,   132,     0,     0,  1417,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,  1418,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,  1419,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1420,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,  1421,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,  1422,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,  1416,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,  1418,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,  1419,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,  1868,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,  1421,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,  1422,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   735,     0,   542,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   740,   741,   127,     0,   128,   129,   130,
     131,   742,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,  1224,   198,     0,   199,   200,
     747,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   748,   749,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   750,   236,   237,   238,   239,   751,   752,     0,
     753,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   754,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   755,     0,
     756,   287,   288,   289,   757,     0,   291,   292,     0,   294,
       0,   758,   296,   759,   298,   299,   300,     0,   301,   302,
    1225,     0,   303,   304,   305,     0,     0,   306,   760,     0,
     309,     0,   761,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   762,   325,   326,   763,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   764,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   765,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   766,   382,
     383,   384,     0,   386,   387,   767,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   768,
     402,   769,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   770,   771,     0,     0,   416,
     417,   772,   419,   773,  1226,   421,   422,   774,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,  1116,   776,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       3,     4,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,   573,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   616,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,   573,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   735,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       3,     4,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   736,   737,     0,
     738,   739,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   740,   741,   127,     0,   128,   129,   130,
     131,   742,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   743,   744,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   745,
     193,   194,   195,   196,   746,     0,   198,     0,   199,   200,
     747,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   748,   749,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   750,   236,   237,   238,   239,   751,   752,     0,
     753,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   754,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   755,     0,
     756,   287,   288,   289,   757,     0,   291,   292,     0,   294,
       0,   758,   296,   759,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   760,     0,
     309,     0,   761,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   762,   325,   326,   763,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   764,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   765,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   766,   382,
     383,   384,     0,   386,   387,   767,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   768,
     402,   769,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   770,   771,     0,     0,   416,
     417,   772,   419,   773,     0,   421,   422,   774,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,  1116,   776,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,  1714,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,  1715,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,  1716,   407,     0,   409,
    1717,   411,  1718,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,  1719,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,  2634,     0,     0,     0,     0,  2635,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   495,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     497,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   547,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   548,   415,     0,     0,   549,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   611,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   614,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   618,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   646,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1138,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1140,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1546,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,  2286,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,  2300,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  2431,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   559,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   560,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   561,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   562,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   563,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   582,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   636,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   723,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   726,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   729,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   561,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   563,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,  1374,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,     0,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1511,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1786,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1798,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1800,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,     0,   235,   236,   237,   238,   239,   240,   241,     0,
     242,     0,   243,     0,     0,   246,     0,   248,   249,   250,
     251,   252,     0,     0,   253,     0,   255,     0,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   496,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,   290,     0,   291,   292,     0,   294,
       0,   295,   296,   297,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,   307,     0,
     309,     0,   311,   312,   313,   314,   315,   316,   317,     0,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,     0,   339,   340,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   360,   361,   362,   363,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   498,
     402,   403,   404,     0,   405,   406,     0,   407,     0,   409,
     410,   411,   412,   413,     0,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,   439,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   654,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   655,   109,   110,   111,     0,   656,   657,
     658,   659,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   660,   661,   127,     0,   128,   129,   130,
     131,     0,     0,   662,     0,   134,   135,   136,   137,   138,
     139,   663,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   664,   151,   152,   153,     0,     0,     0,
     665,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   666,   667,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   668,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,     0,
     193,   194,   195,   196,     0,     0,   198,     0,   199,   200,
     669,   202,     0,   203,     0,   204,   670,     0,   671,   207,
     208,   209,   672,   211,     0,   212,     0,     0,     0,   215,
       0,   216,   217,   218,   219,   220,   673,   674,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,   675,     0,   236,   237,   238,   239,   676,   677,     0,
     678,     0,   243,   679,   680,   246,   681,   248,   249,   250,
     251,   252,     0,     0,   253,   682,   255,   683,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,   684,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   685,   686,
     687,   287,   288,   289,     0,     0,   291,   292,   688,   294,
       0,     0,   296,   689,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,     0,   690,
     309,   691,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,     0,   325,   326,     0,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   692,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,   693,   360,   361,   362,   694,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,   695,   382,
     383,   384,   696,   386,   387,   697,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   698,
     402,     0,   404,     0,   405,   406,     0,   407,   699,   409,
     410,   411,   412,   413,     0,   700,   701,     0,     0,   416,
     417,     0,   419,     0,     0,   421,   422,   702,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,     0,   703,     0,
     441,   704,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   654,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   465,   466,
     467,   468,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   655,   109,
     110,   111,     0,   656,   657,   658,   659,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   660,   661,
     127,     0,   128,   129,   130,   131,     0,     0,   662,     0,
     134,   135,   136,   137,   138,   139,   663,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   664,   151,
     152,   153,     0,     0,     0,   665,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   666,   667,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,     0,   193,   194,   195,   196,     0,
       0,   198,     0,   199,   200,   669,   202,     0,   203,     0,
     204,   670,     0,   671,   207,   208,   209,   672,   211,     0,
     212,     0,     0,     0,   215,     0,   216,   217,   218,   219,
     220,   221,   674,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,   675,     0,   236,   237,
     238,   239,   676,   677,     0,   678,     0,   243,   679,   680,
     246,   681,   248,   249,   250,   251,   252,     0,     0,   253,
     682,   255,   683,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,   684,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   685,   686,   687,   287,   288,   289,     0,
       0,   291,   292,   688,   294,     0,     0,   296,   689,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,     0,   690,   309,   691,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,     0,   325,   326,     0,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   692,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,   693,
     360,   361,   362,   694,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   695,   382,   383,   384,   696,   386,   387,
     697,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   698,   402,     0,   404,     0,   405,
     406,     0,   407,   699,   409,   410,   411,   412,   413,     0,
     700,   701,     0,     0,   416,   417,     0,   419,     0,     0,
     421,   422,   702,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,     0,   703,     0,   441,   704,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,  2372,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   465,   466,   467,   468,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,  2373,   109,   110,   111,     0,   656,  2374,
     658,   659,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   660,   661,   127,     0,   128,   129,   130,
     131,     0,     0,  2375,     0,   134,   135,   136,   137,   138,
     139,  2376,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,  2377,   151,   152,   153,     0,     0,     0,
    2378,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   666,   667,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   668,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,     0,
     193,   194,   195,   196,     0,     0,   198,     0,   199,   200,
     669,   202,     0,   203,     0,   204,  2379,     0,  2380,   207,
     208,   209,  2381,   211,     0,   212,     0,     0,     0,   215,
       0,   216,   217,   218,   219,   220,   221,  2382,   223,   224,
     225,   226,     0,   227,   228,   229,   230,   231,   232,     0,
     233,  2383,     0,   236,   237,   238,   239,   676,   677,     0,
     678,     0,   243,  2384,  2385,   246,  2386,   248,   249,   250,
     251,   252,     0,     0,   253,  2387,   255,  2388,     0,   257,
     258,   259,     0,     0,   260,   261,   262,   263,   264,  2579,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   685,  2390,
     687,   287,   288,   289,     0,     0,   291,   292,  2392,   294,
       0,     0,   296,   689,   298,   299,   300,     0,   301,   302,
       0,     0,   303,   304,   305,     0,     0,   306,     0,  2394,
     309,  2395,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,     0,   325,   326,     0,
     328,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   692,   341,   342,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   357,   358,  2396,   360,   361,   362,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   380,     0,   382,
     383,   384,  2398,   386,   387,   697,   389,     0,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,  2580,
     402,     0,   404,     0,   405,   406,     0,   407,  2400,   409,
     410,   411,   412,   413,     0,   700,   701,     0,     0,   416,
     417,     0,   419,     0,     0,   421,   422,  2401,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,   438,     0,   703,     0,
     441,  2402,   443,   444,   445,   446,     0,     0,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   654,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   465,   466,
     467,   468,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   655,   109,
     110,   111,     0,   656,   657,   658,   659,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   660,   661,
     127,     0,   128,   129,   130,   131,     0,     0,   662,     0,
     134,   135,   136,   137,   138,   139,   663,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   664,   151,
     152,   153,     0,     0,     0,   665,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   666,   667,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   668,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,     0,   193,   194,   195,   196,     0,
       0,   198,     0,   199,   200,   669,   202,     0,   203,     0,
     204,   670,     0,   671,   207,   208,   209,   672,   211,     0,
     212,     0,     0,     0,   215,     0,   216,   217,   218,   219,
     220,   221,   674,   223,   224,   225,   226,     0,   227,   228,
     229,   230,   231,   232,     0,   233,   675,     0,   236,   237,
     238,   239,   676,   677,     0,   678,     0,   243,   679,   680,
     246,   681,   248,   249,   250,   251,   252,     0,     0,   253,
     682,   255,   683,     0,   257,   258,   259,     0,     0,   260,
     261,   262,   263,   264,     0,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   685,   686,   687,   287,   288,   289,     0,
       0,   291,   292,   688,   294,     0,     0,   296,   689,   298,
     299,   300,     0,   301,   302,     0,     0,   303,   304,   305,
       0,     0,   306,     0,   690,   309,   691,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,     0,   325,   326,     0,   328,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   692,   341,
     342,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,   357,   358,   693,
     360,   361,   362,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   380,     0,   382,   383,   384,   696,   386,   387,
     697,   389,     0,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   402,     0,   404,     0,   405,
     406,     0,   407,   699,   409,   410,   411,   412,   413,     0,
     700,   701,     0,     0,   416,   417,     0,   419,     0,     0,
     421,   422,   702,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,   438,     0,   703,     0,   441,   704,   443,   444,   445,
     446,     0,     0,   447,     0,     0,   448,   449,   450,   451,
     452,   453,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   465,   466,   467,   468
};

static const yytype_int16 yycheck[] =
{
       6,     6,   615,   488,    58,   525,   601,   558,     0,   991,
     630,   695,     6,    35,   792,   531,   622,   989,   871,   964,
      16,     0,     0,     0,  1727,   581,   724,   576,   701,   727,
     873,  1133,     0,   969,  1133,  1133,  1267,  1133,   792,   524,
    1220,    30,  1796,  1164,   522,   624,   889,   529,    16,   966,
     960,    60,    29,   615,  1030,   617,  2132,   619,   901,  1169,
    2084,  1802,   530,  1804,  2132,  2157,  2156,    60,   531,  1747,
    2042,  1620,  1621,     0,  1793,  1683,  1625,   994,    34,  2168,
    1248,  2175,   660,   661,  1296,  1297,   799,     5,     0,     5,
       5,     9,    13,    14,     0,     5,  2048,    13,    14,    88,
     536,    78,     0,    58,  1349,    58,     5,    50,  2443,   687,
    1395,     5,     9,     5,    13,    14,     5,  1666,  1667,     5,
    1397,    13,    14,     5,    13,    14,     5,    67,     0,  1134,
       9,    13,    14,   168,     5,    11,     5,     5,  2440,   598,
       5,     5,    73,  1994,    16,     5,  1865,   598,   107,  1723,
       5,     5,     5,   635,    11,   909,     5,    29,    58,    40,
      40,   169,    75,    35,  1738,    41,   117,     4,     3,     4,
       5,    58,     9,    86,     9,   731,  2426,     9,     5,  2492,
     212,    93,    27,    11,   120,   858,    48,    93,    60,    34,
    1262,     3,     8,    83,  2583,    93,    15,    73,   145,   238,
      16,    17,    18,  2073,     4,    11,    78,  2614,   168,     9,
    2047,  1930,  1931,    41,  1982,  2528,  2713,  2514,   303,    31,
      32,   122,    58,  2359,   978,   165,   137,   981,   982,  1262,
     107,    75,   279,  2675,   196,    41,   303,   127,   267,   145,
     818,   819,    86,    20,   370,    73,    27,   120,    27,   287,
     287,   218,   158,   349,    27,    34,   270,   163,    11,   162,
    2781,    34,   168,   210,   169,  2600,   844,    73,    27,  2411,
     206,   177,   448,    11,  1262,   181,   792,    37,   117,  2537,
     115,   340,   798,   350,    11,   432,  1269,   432,    15,  1002,
     160,   115,   478,   977,   115,    22,  1009,   264,   396,   158,
    2558,  2614,   117,   169,   210,   491,    33,    34,   401,   368,
     403,   173,  2809,   869,  2103,   354,    11,   493,  2290,   118,
      59,  2397,  2294,   229,   410,   874,   188,   795,    67,  2281,
       4,   193,   130,   431,   118,     9,   202,   916,    13,    14,
     287,  2869,   489,  2435,   489,  1953,    41,  2437,  2102,   130,
      68,   217,   222,   902,  2651,   167,   323,   169,   281,    86,
     226,   375,   120,   489,   124,   186,   228,  2888,   454,   281,
     229,   130,   278,   108,   314,   281,   211,   135,    73,   928,
    2099,   287,  2101,   281,   106,   200,   341,   264,   341,   428,
     189,  2180,   354,   489,   299,   911,   912,   232,  2840,   484,
     362,   430,  1385,   959,   371,   189,   309,  2935,   298,  2906,
    2712,   931,  1961,  1962,  1963,  1964,  2552,   484,  1967,  1968,
    1969,  1970,  1971,  1972,  1973,  1974,  1975,  1976,   264,  2742,
     342,  1144,   271,  1262,     5,   397,   342,  2695,   397,  2581,
    1035,   341,   489,  2280,   342,   266,  2214,   271,   408,   264,
     489,   266,  1683,   168,   341,   493,   493,  2327,   493,  2709,
    2867,   493,  2851,   430,  1536,  2778,  2040,   283,  2042,   374,
    2019,  2020,  1417,   292,   147,  1760,  2811,   424,   276,   345,
    2199,   489,   444,   434,  1761,   425,   478,    93,   163,   925,
      23,   397,  1497,   232,   430,   408,    29,  1473,   957,   478,
     478,   478,  1535,  2592,  1749,   341,   957,  2583,  2810,   531,
     478,   373,   402,   394,   394,  2583,   522,  1729,   424,   108,
    1502,   194,   244,  1143,  1755,   531,   432,  2824,  1134,  2501,
     252,   432,   368,   378,  2506,   531,   447,  2509,   493,   451,
     493,  2493,   448,   453,   450,   451,   489,   601,  1536,  1537,
    1538,   557,   558,   451,  2867,   313,   487,   430,   385,   386,
     491,   570,   530,   489,   408,   475,   489,   453,   489,  1737,
     441,   489,   487,   489,   489,   581,   491,   570,   490,   489,
     492,   487,  2336,   579,   490,   491,   492,  1165,  1166,   475,
     489,   488,   490,   493,   492,   489,  1572,   489,   590,   378,
     489,  1157,   135,   489,   593,   378,   478,   489,  2349,   485,
     489,   590,   590,   590,   620,   621,   622,  2468,   489,  2711,
     489,   489,   590,  2717,   489,   489,   582,  2716,   485,   489,
     442,  1344,  1238,   160,   489,   489,   489,  1620,  1621,     0,
     489,   238,  1625,   480,   481,   480,   481,  2325,   480,   481,
     453,   451,   480,   481,   482,   483,   484,   485,   530,   531,
     476,   477,   478,   590,   480,   481,   482,   483,   484,   485,
     492,   478,   475,  1252,  2646,   475,   482,   483,   484,   485,
     480,   481,   489,  1666,  1667,  1163,   489,  1867,    27,   695,
     327,   115,  1446,   408,  1214,  1251,    11,  1253,   570,  1305,
    1178,  1257,  1456,   218,    23,  1459,  1222,  1536,  1537,  2428,
      29,   451,  1291,  1292,  1270,  1271,  2290,  1273,   590,   493,
    2294,  2329,  1953,   322,  2816,   731,  1211,  1212,   442,   482,
     483,   484,   485,  1218,  1283,   475,   263,  1293,   489,    78,
     522,  1347,   480,   481,   482,   483,   484,   485,    87,   264,
      30,   350,   285,  1221,   130,   361,   238,  1336,    73,  1222,
     397,   487,   539,   478,   541,   491,   158,  1346,   174,  1348,
     497,  2861,    23,    23,    54,  2851,   491,   116,    29,  1557,
     156,  1891,   337,  2851,   561,  2539,   792,  1897,   196,    23,
    2002,   397,   798,   799,   800,    29,  1649,  1955,   490,   526,
     361,   493,   335,  1557,  1647,   130,   339,   444,   453,     8,
     816,   245,    11,   250,   251,   238,   135,    16,    17,    18,
    1518,  1731,  1300,  1308,   444,  1983,   232,   795,  1434,  1442,
     475,   428,   438,  1718,  1719,   368,   397,   229,  1820,   845,
      75,  1539,  2934,  1541,    78,   451,  1544,   186,   870,   158,
     413,    86,   266,  1415,   163,   582,   371,   271,   197,   865,
     866,   867,    23,   869,   870,  2889,  2890,  1843,    29,   475,
     294,   149,   354,   357,  1469,  1470,  1471,   438,   238,  2844,
    1442,  2846,   484,   489,   135,   135,   278,   893,   489,   491,
      23,  1497,   489,   158,  2015,   271,    29,    23,   163,  1461,
     276,  2132,   435,    29,  1466,   911,   912,   321,  1751,   489,
     238,  1828,  2461,   695,  2938,   430,   238,   484,  2492,    75,
     229,   358,   359,   795,   491,   472,  2680,  2501,   489,   361,
      86,   354,  2506,   942,   943,  2509,   945,   361,   944,   453,
    1876,   266,   948,   949,  2685,  1881,   428,   936,  1426,   942,
     943,   276,   945,   959,  2528,  2920,   130,     4,     4,  1515,
     832,   475,     9,     9,   229,   397,   285,  1452,   401,   278,
     403,   977,  1457,   397,   135,   489,   327,    67,  1961,  1962,
    1963,  1964,   156,   216,  1967,  1968,  1969,  1970,  1971,  1972,
    1973,  1974,  1975,  1976,   354,   401,  1002,   403,   870,    31,
      32,  2550,   135,  1009,   993,   428,   438,   489,  1490,   135,
     491,   362,  2192,   278,   438,   792,   335,   281,   800,   451,
     339,   798,   428,     4,  1030,   115,   354,   451,     9,   493,
     472,   495,   354,   667,   285,   285,  2019,  2020,   487,   415,
    2614,  1557,   491,   475,     5,   384,   397,     8,   387,   368,
     426,   475,  1530,    14,  1570,   689,  2158,   489,   167,  2158,
    2158,    93,  2158,    24,   493,   489,   489,    28,   428,  2618,
     942,   943,  2646,   945,  2777,   327,    64,    65,  1634,  1635,
    1636,  1637,   172,   361,   283,   451,   720,   453,   339,   339,
     340,   490,   266,   444,   493,   482,  1574,   271,  2329,   876,
     428,  1799,   276,  1801,   490,    23,   428,   493,   885,   489,
     362,    29,   149,    13,    14,  1671,   435,   368,   368,   397,
     490,   898,  1642,   493,   285,   490,    94,   909,  1134,   489,
    1725,  2113,   909,  1562,   911,   912,  2257,  1566,  1144,  1568,
    2112,   559,   560,  1921,   562,   397,  2031,  2032,  2033,  2034,
     490,  1157,   285,   493,   401,  2100,   403,  1163,  1164,   285,
     438,   489,   401,   490,   403,  2868,   493,   489,  2742,   595,
    2924,   597,  1178,   451,   335,  2111,   266,  2113,   339,  2151,
    2295,   271,  2297,   487,   435,   489,  2299,   491,  2891,  2302,
     490,  1634,   444,  1636,  1637,   977,   830,   475,    13,    14,
     212,   169,   335,   930,  2778,   490,   339,   368,   493,   335,
     168,   489,    54,   339,   848,   174,  1222,   135,   490,    13,
      14,   493,  1895,  1896,   314,   216,  1222,   489,  2071,   472,
     522,   150,  1238,   490,   202,   368,   493,   196,   335,   329,
    1860,   415,   368,  2946,   150,  1251,   150,  1253,   150,   217,
    1256,  1257,   426,  1221,   522,   266,  1248,   489,   226,   490,
    1266,   491,  1268,  1269,  1270,  1271,  1272,  1273,  1274,  1248,
    1248,  1248,   490,   232,   435,   493,    36,   476,   477,   478,
    1248,   480,   481,   482,   483,   484,   485,  1293,   489,  1295,
     444,   294,   260,  2867,  1300,  1301,  1302,  1303,  1304,  1305,
      13,    14,   435,  1309,  1310,    13,    14,   490,  1314,   435,
     493,   490,  1318,  1919,   493,  1321,  1322,  1323,  1324,  1325,
    1326,  1327,  1328,  1329,   361,   490,  1332,   286,   493,   361,
     490,  1337,    82,   493,  1340,   425,  1342,   490,  1344,   455,
     493,  1347,   432,  2464,   490,   490,   441,   493,   493,  1221,
     490,   490,  2583,   493,   493,   310,   490,    94,   361,   493,
     397,  1367,   150,   490,   489,   397,   493,   285,  1364,   490,
     490,   489,   493,   493,   184,   185,  1248,   345,  2132,  1385,
      35,  1163,  1164,  2365,   490,    13,    14,   493,  1394,  1395,
     490,   489,  2337,   493,   397,  1372,  1178,  1875,   150,   490,
     489,   438,   493,   695,   490,  1921,   438,   493,   490,   489,
     442,   493,     0,   490,   451,   150,   493,   335,  1997,   451,
    1426,   339,   490,    13,    14,   493,  1432,   695,  1434,  1914,
      13,    14,   169,  2286,  1990,   438,    13,    14,   475,  1311,
     250,   251,   401,   475,   403,   150,   490,  2300,   451,   493,
     368,   490,   489,   281,   493,   490,   490,   489,   493,   493,
     490,    13,    14,   493,  1942,   202,   425,  1473,   397,   428,
    1476,  1477,   475,  1479,   490,    36,   490,   493,  2461,   493,
     217,   490,  1960,   489,   493,  1262,   489,   489,  1215,   226,
    1217,  1497,   490,  2191,   522,   493,   490,   227,  2619,   493,
    1372,  2080,   487,  2052,  1510,    93,     5,  1985,   800,  1515,
     490,     5,   490,   493,  1992,   493,   490,   435,  1300,   493,
      13,    14,   489,   260,  1530,  2131,   489,  2133,   490,  1506,
     490,   493,   800,   493,   490,    36,   490,   493,   490,   493,
     490,   493,   490,   493,   281,   493,   163,   490,   358,   359,
     493,  1557,  2147,   489,    55,   490,   145,   145,   493,   490,
      13,    14,   493,   489,  1570,   489,  1572,  2550,  1574,   158,
     158,    13,    14,  1579,   163,   163,   489,  1354,  1584,   489,
     168,    13,    14,    13,    14,    13,    14,    13,    14,   177,
      13,    14,   489,   181,    13,    14,    13,    14,    13,    14,
    1622,     5,  2356,    13,    14,   106,    13,    14,   345,   349,
     350,   349,   350,     5,  1620,  1621,  1622,  2589,   489,  1625,
    2851,   210,   210,   254,   255,   358,   359,   489,  1634,  1635,
    1636,  1637,   349,   350,  1506,  2618,   911,   912,  1644,   489,
     229,   229,  1648,   489,  1426,  1651,   349,   350,   489,  1671,
     489,     5,   489,     5,  2132,   489,   489,   489,   489,   146,
    1666,  1667,     9,   489,    15,  1671,   452,   695,   212,   493,
    2368,  2369,    97,    36,   368,   163,   278,  2455,   163,  1685,
     276,   227,  1688,   489,  1690,   977,   408,   489,    86,   278,
     278,  1418,   493,   281,   195,   432,   408,    54,   287,   287,
     257,  1428,   408,  1430,    54,  1711,  1433,   408,   490,   977,
    2188,   498,  1439,  2397,  1441,   408,   150,  1723,  1723,   451,
    1742,    93,   491,   266,   142,   266,  1453,  2306,   489,  1723,
      36,  1458,  1738,  1738,    36,  1462,  1463,  1464,  1465,    35,
    1467,  1468,  2321,   244,  1738,  1737,  1752,     3,  1530,     5,
    1622,   252,     9,   489,   342,   406,   406,   447,  1737,  1737,
    1737,  1767,   487,   264,   487,  2316,   408,   408,   408,  1737,
     408,   489,   800,   493,    11,   337,   406,   493,   488,  1785,
    1557,   271,   493,   498,  1561,   489,   408,   489,   177,   159,
     168,   490,  1574,  1570,   295,     6,  1802,  1803,  1804,  1671,
      11,   489,    36,   432,    15,   210,   493,   371,   282,   397,
      21,    22,    23,   493,   489,    26,   218,  1689,    29,    30,
     266,   218,    33,    34,   218,   287,   490,   319,   279,  2583,
     444,   489,   489,  1705,   150,   424,   424,  1843,   150,   340,
     281,   451,   266,   490,   432,   472,   472,   490,   487,    36,
     281,  1723,   266,   109,   110,   490,   490,   490,    36,   168,
     448,   362,   450,   451,   488,  1737,  1738,    78,   491,  1875,
    1742,  1163,  1164,   168,    85,    86,    87,    88,    89,   408,
     472,   382,   490,   490,   490,   490,  1178,   490,   489,  2367,
     490,   490,   490,   490,   489,  1163,  1164,   490,   489,   487,
     291,   448,   490,   491,   492,   489,   448,   438,   281,   478,
    1178,   522,   430,  1919,   474,  1921,   282,   282,   282,   493,
     237,   266,   408,  2905,   489,   150,   285,   196,   184,   185,
     150,   150,   408,  1939,   490,   408,  1942,   408,   408,  2455,
    1917,   490,  1948,   488,   279,  1951,   451,   281,  1954,   977,
     490,   489,    36,   490,  1960,  1961,  1962,  1963,  1964,   493,
     150,  1967,  1968,  1969,  1970,  1971,  1972,  1973,  1974,  1975,
    1976,   488,  1994,  2027,  1980,  1981,   488,   150,   271,  1985,
     141,    11,   168,   163,  1990,   168,  1992,   490,  1994,   490,
     246,   247,   248,   249,   250,   251,   448,  2003,   254,   255,
    2006,   490,  2008,  2025,   397,   168,   490,   489,  1300,  2015,
    2016,   490,   493,  2019,  2020,   475,   342,   177,  2024,  2025,
    2042,   490,   490,   490,   437,    84,   489,   282,   150,   172,
     489,  1808,  1300,  2628,  2040,  2040,  2042,  2042,   419,   489,
      36,   490,   489,    79,   432,  1917,  2040,  2053,  2042,   493,
     488,   490,   168,   493,   489,   399,   489,  2063,   217,    36,
     290,   490,    67,  2548,   217,   288,    54,   489,    73,   490,
     490,   181,   478,  2079,  1851,  2681,  2696,   489,    55,   490,
     451,    86,   187,   198,   695,   408,   271,  1864,   491,   271,
     491,   491,   491,  1875,   408,    36,   491,  2851,    50,   478,
      36,   491,   358,   359,   491,  2583,   491,   491,   491,   491,
     115,   491,   117,  2633,    55,   491,   491,   491,   266,   281,
     489,  2127,  1994,   491,   949,  2131,  2132,  2133,   490,   106,
     491,  2651,   107,   491,  1426,  1163,  1164,   490,    85,    36,
      87,   451,    89,    95,  1921,   491,   168,   489,   491,  1926,
    1178,  1928,  1879,  2025,   491,  1932,  1933,   217,  1426,   491,
    1942,   491,   491,   491,  2784,   106,   491,   172,  2040,   121,
    2042,   491,  2650,   491,   489,  2653,   300,   450,  1960,    86,
     131,   489,  2188,  2739,   489,   329,   490,   139,   489,   800,
     489,   143,   218,    81,   115,   200,    36,   150,    73,  2205,
     122,   150,  2179,  1985,    36,   490,    54,  2763,   350,  2765,
    1992,   350,   164,   469,   470,   167,    36,  2702,   195,   493,
     432,   489,   489,   489,   489,   489,    73,   437,    36,   186,
     182,   172,   432,  2015,    67,  2755,   284,    67,  1530,   489,
     419,   489,   493,  2856,  2850,  2251,  2252,    23,    36,   352,
    2256,  2257,   522,    29,   195,  2261,   368,   478,  2264,  2265,
      36,   266,  1530,  2269,   271,   489,   271,   244,   479,   186,
     242,    36,  1300,   419,   485,   252,   489,   488,   284,    55,
     284,   492,  1574,   489,  2290,  2290,   497,   264,  2294,  2294,
     264,   490,   490,   489,  2779,   281,  2290,   349,     9,   336,
    2294,   281,   198,   244,    33,   281,  1574,  2179,   489,   314,
    2316,   252,   430,   524,   525,   526,   490,   120,   295,   271,
       9,    22,   490,   264,   329,  2114,  1440,   279,   590,  1797,
     106,  2127,  2320,  2077,  2778,  2524,  2847,  2361,  2164,  2853,
    2927,  2318,  2319,  2349,  2688,  2904,   557,   558,   559,   560,
    2132,   562,  2358,  2892,   295,  2132,  2602,  1803,  2169,   135,
     964,  2367,   573,   340,  1791,  1853,   977,  2850,  2095,   321,
    2902,   582,  1788,  2851,  2131,  2848,  1211,  2154,  1163,  1857,
    1919,  2455,   593,  2154,   903,   362,  1411,  2752,  1752,   952,
    2668,  2397,  2119,   951,   605,   930,  2838,  2057,  1426,   340,
    1767,  1385,  2833,  2767,  2312,   382,  2188,  2134,  2135,  2136,
    2137,  2138,  2139,  2140,  2141,  2142,  2143,  1410,  2290,   195,
     425,   362,  2294,  2042,   954,   695,  1738,   432,  2647,  2281,
     641,   642,   643,  2296,  2742,  2040,  2741,  2759,  2520,  2760,
    1262,   382,  1262,  1262,  1269,  1262,  2318,  2319,  2836,  2455,
    2837,  2820,  1338,  1649,  1755,  2461,  1253,  1580,  2464,  1479,
    1689,  2438,  2468,  1686,  1342,  1726,  2056,  1861,   244,  2734,
    2476,  2477,  1364,  1222,  2480,  2257,   252,  1570,   936,    -1,
    2078,  1365,    -1,    -1,    -1,    -1,  2492,  2492,   264,    -1,
      -1,    -1,    -1,    -1,    -1,  2501,  2501,    -1,  2492,    -1,
    2506,  2506,  1530,  2509,  2509,    -1,    -1,  2501,    -1,   285,
    2516,  2517,  2506,    -1,    -1,  2509,    -1,    -1,    -1,   295,
      -1,    -1,  2528,  2528,  2530,    -1,    -1,    -1,    -1,    -1,
     800,    -1,   479,  2310,  2528,    -1,  2313,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2550,   492,  1574,    -1,    -1,    -1,
      -1,    -1,  1163,  1164,    -1,    -1,    -1,    -1,    -1,   335,
    1385,   170,    -1,   339,   340,   174,  2438,  1178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2583,    -1,    -1,
      -1,    -1,    -1,  1875,    -1,  2367,   362,   196,    -1,    -1,
      -1,    -1,   368,   804,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   382,  1875,  2614,  2614,
      -1,    -1,  2618,  2619,    -1,  2397,  2593,    -1,    -1,    -1,
    2614,    -1,    -1,   232,    -1,    -1,   573,    -1,    -1,  2501,
     239,    -1,    -1,    -1,  2506,  2657,  2642,  2509,  2615,    -1,
    2646,  2646,    -1,    -1,  2650,    -1,    -1,  2653,    -1,    -1,
    1942,  2657,  2646,    -1,    -1,    -1,    -1,  2434,   605,   435,
     871,    -1,    -1,    -1,    -1,  2671,    -1,    -1,  1960,    -1,
      -1,    -1,    -1,    -1,  1942,  2681,    -1,   286,  2455,  2685,
    2686,    -1,  2464,    -1,    -1,    -1,    -1,    -1,    -1,  1300,
      -1,   145,  1960,  1985,   641,   642,   643,    -1,    -1,    -1,
    1992,    -1,   913,    -1,   158,    -1,    -1,   977,    -1,   163,
      -1,    -1,    -1,    -1,    -1,   522,    -1,  1985,    -1,   930,
     931,  2593,    -1,  2015,  1992,   936,   937,   938,    -1,    -1,
      -1,    -1,    -1,  2739,    -1,    -1,  2742,  2742,  2715,    -1,
      -1,    -1,    -1,  2615,    -1,   354,    -1,  2015,  2742,    -1,
      -1,    -1,   963,   964,    -1,    -1,   210,  2763,    -1,  2765,
      -1,  2767,    -1,    -1,    -1,   976,    -1,    -1,    -1,    -1,
      -1,    -1,  2778,  2778,  2646,   229,    -1,    -1,    -1,    -1,
      -1,    -1,   993,    -1,  2778,  2657,   997,    -1,    -1,    -1,
      -1,    -1,   401,  2799,   403,  1620,  1621,  2774,    -1,    -1,
    1625,  2583,    -1,    -1,    -1,    -1,  2583,    -1,    -1,    -1,
     419,    -1,    -1,  2819,  2820,  1426,   425,    -1,    -1,   428,
      -1,    -1,  2549,    -1,   278,    -1,    -1,  2833,    -1,    -1,
      -1,    -1,    -1,   287,     0,    -1,    -1,  2619,    -1,    -1,
    2132,  1666,  1667,  2715,  2850,  2851,    -1,  1875,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2584,  2585,    -1,
      -1,  2867,  2867,  2869,  2132,    -1,    -1,    -1,  2650,    -1,
      -1,  2653,  2599,  2867,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2860,    -1,    -1,    -1,    -1,   695,    -1,
      -1,    -1,    -1,  1163,  1164,    -1,  2188,    -1,    -1,    -1,
      -1,    -1,  2774,    -1,    -1,    -1,    -1,    -1,  1178,    -1,
      -1,    -1,    -1,    -1,  1942,    -1,    -1,    -1,  1129,  1530,
    2188,    -1,    -1,    -1,    -1,    -1,  1137,    93,    -1,  2935,
      -1,    -1,  1960,  2710,    -1,    -1,  1147,    -1,    -1,    -1,
      -1,    -1,    -1,  2670,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1985,    -1,    -1,
      -1,    -1,    -1,  1574,  1992,  2257,   913,    -1,    -1,  1180,
     424,  2698,    -1,     8,    -1,    -1,    11,    -1,    -1,   145,
      -1,    16,    17,    18,    -1,    -1,    -1,  2015,  2860,  2257,
     937,    -1,   158,   800,    -1,    -1,    -1,   163,    33,    -1,
    1211,  1212,   168,  1214,  1215,    -1,  1217,  1218,    -1,  1220,
      -1,   177,    -1,    -1,    -1,   181,   963,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,   976,
    1300,    -1,    -1,   487,    -1,    -1,   490,   491,    -1,    -1,
      -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,
     997,    -1,    -1,    -1,    -1,    -1,  1267,    41,    -1,    -1,
      -1,    -1,    -1,   229,    48,    -1,    -1,  1278,    -1,  2851,
      -1,    -1,    -1,    -1,  2851,  2367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1308,    -1,  2367,
      -1,    -1,    -1,    -1,  2132,  2397,    -1,    -1,    -1,    -1,
      -1,    -1,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,
      -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2397,
    1341,  1342,    -1,    -1,    -1,    -1,  1961,  1962,  1963,  1964,
      -1,    -1,  1967,  1968,  1969,  1970,  1971,  1972,  1973,  1974,
    1975,  1976,  1363,    -1,  1365,    -1,  1426,    -1,     8,   143,
    2188,    11,    -1,  1374,    -1,  1376,    16,    17,    18,    -1,
     977,    -1,  2464,    -1,    -1,    -1,   342,    -1,    -1,   214,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
    1137,    41,    -1,    -1,  2019,  2020,  2464,  1408,    48,    -1,
      -1,    -1,    -1,    -1,   188,    -1,  1417,  1418,    -1,   193,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1428,  1429,  1430,
    1431,    -1,  1433,    73,    -1,    -1,    -1,    -1,  1439,  2257,
    1441,   397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1452,  1453,    -1,   228,    -1,  1457,  1458,   283,    -1,
      -1,  1462,  1463,  1464,  1465,    -1,  1467,  1468,   424,    -1,
    1530,    -1,    -1,    -1,  1875,    -1,   432,    -1,    -1,    -1,
      -1,    -1,    -1,  1220,    -1,    -1,  1487,  1488,  1489,    -1,
      -1,    -1,   448,    -1,   450,   451,    -1,    -1,    -1,    -1,
      -1,  2583,    -1,  1504,    -1,    -1,    -1,    -1,    -1,   283,
      -1,    -1,    -1,     8,  1574,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,  2583,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   173,   490,   491,   492,  2619,    -1,    -1,
      -1,  1942,    -1,    -1,    -1,    -1,    -1,     8,   188,  2367,
      11,    -1,    -1,   193,    -1,    16,    17,    18,    -1,  1960,
      -1,  2619,    -1,    -1,    -1,    -1,  1163,  1164,  2650,    -1,
      -1,  2653,    33,    -1,   214,   215,    -1,    -1,    -1,  2397,
      41,  1178,    -1,    -1,  1985,    -1,    -1,    48,   228,    -1,
      -1,  1992,  2650,    -1,    -1,  2653,    -1,    -1,    -1,   373,
      -1,    -1,    -1,    -1,  1341,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,     8,  2015,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,  1363,    -1,  1365,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,  1642,    -1,   283,    -1,    -1,  2464,    -1,  1649,    -1,
      -1,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1408,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1683,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,   473,
      -1,    -1,    -1,  1300,    -1,    -1,   480,   481,   482,   483,
     484,   485,   173,    -1,    -1,  1716,    -1,    -1,    -1,   214,
      -1,    -1,  1723,    -1,    -1,    -1,    -1,   188,    -1,    -1,
      -1,  2132,   193,   373,    -1,    -1,    -1,  1738,    -1,     8,
      -1,  1742,    11,    -1,  1745,    -1,  1747,    16,    17,    18,
    1487,  1488,    -1,   214,   215,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,  2583,    -1,   228,     8,  2851,
      -1,    11,    41,    -1,    -1,    -1,    16,    17,    18,    48,
      -1,    -1,    -1,    -1,    -1,    -1,     8,  2188,   283,    11,
      -1,    -1,  1793,  2851,    16,    17,    18,    -1,    -1,    -1,
      -1,  2619,    -1,    -1,    73,   266,    -1,    -1,   269,    -1,
      -1,    33,    -1,    -1,    -1,  1875,    -1,    -1,    -1,   214,
      -1,    -1,   283,    -1,    -1,   286,    -1,    -1,    -1,  1426,
      -1,    -1,  2650,   473,    -1,  2653,   476,   477,   478,    -1,
     480,   481,   482,   483,   484,   485,  2461,    -1,    -1,    -1,
      -1,    -1,  1853,    -1,    -1,    -1,  2257,  1858,    -1,    -1,
      -1,    -1,    -1,    -1,  1865,  1866,  1867,  1868,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1879,    -1,
      -1,    -1,  1942,    -1,    -1,  1886,    -1,    -1,   283,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1898,    -1,    -1,
    1960,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,  1914,    -1,    -1,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,  1985,    -1,    -1,    -1,  1930,
    1931,    -1,  1992,  1530,    -1,  2550,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   214,   215,    -1,    -1,    -1,
      -1,    -1,  1953,    -1,    -1,  2015,    -1,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,  2367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   214,    -1,    -1,  1574,    -1,  1716,
      -1,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,    -1,   214,    -1,    -1,    -1,  2397,   266,    -1,    -1,
     269,    -1,    -1,  2618,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   473,    -1,   283,   476,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,    -1,    -1,    -1,  2029,    -1,
      -1,    -1,   493,  2851,    -1,    -1,  2037,  2038,  2039,  2040,
      -1,  2042,  2043,   283,    -1,    -1,  2047,  2048,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   283,    -1,  2464,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2132,    -1,    -1,    -1,  2077,    -1,    -1,    -1,
      -1,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,    -1,  2093,    -1,  2095,    -1,    -1,    -1,  2099,  2100,
    2101,    -1,  2103,     8,   373,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,  2119,    -1,
    2121,  1858,    -1,    -1,    -1,    -1,    -1,    -1,  2188,  1866,
    1867,  1868,    -1,  2134,  2135,  2136,  2137,  2138,  2139,  2140,
    2141,  2142,  2143,    -1,    -1,    -1,    -1,    -1,    -1,  1886,
      -1,    -1,    -1,    -1,    -1,  2156,    -1,    -1,  2159,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   557,   558,  2169,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2180,
      -1,    -1,  2583,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2192,    -1,    -1,    -1,    -1,    -1,  2257,  2199,    -1,
      -1,    -1,    -1,    -1,   473,    -1,    -1,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,    -1,  2619,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   620,
     621,     8,    -1,    -1,    11,    -1,   476,   477,   478,    -1,
     480,   481,   482,   483,   484,   485,  2247,    -1,    -1,  2650,
      -1,    -1,  2653,    -1,   476,   477,   478,    -1,   480,   481,
     482,   483,   484,   485,    41,    -1,    -1,    -1,    -1,  2270,
      -1,    48,  2273,  2274,  2275,  2276,    -1,    -1,  1875,  2280,
    2281,    -1,  2283,    -1,    -1,  2286,    -1,    -1,    -1,  2290,
      -1,    -1,    -1,  2294,     0,    -1,    73,    -1,    -1,  2300,
    2037,  2038,  2039,    -1,    -1,    -1,    -1,  2367,    -1,   214,
      -1,    -1,    -1,    19,    -1,  2316,    -1,    -1,    -1,  2320,
      -1,    -1,    -1,    29,  2325,    31,    32,    -1,  2329,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2337,  2397,    -1,    -1,
      -1,    47,    -1,    -1,    -1,  1942,    -1,    -1,    -1,    -1,
      56,    -1,    -1,    -1,    -1,    -1,  2093,    -1,    -1,    -1,
      -1,  2362,    68,  1960,    -1,    -1,   143,    -1,    -1,    -1,
      -1,    -1,    -1,    79,    -1,    -1,    -1,   792,   283,    -1,
      -1,    -1,    -1,   798,    -1,    91,    -1,    93,  1985,    -1,
      -1,    -1,    -1,    -1,    -1,  1992,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2464,   111,    -1,    -1,   799,    -1,
      -1,   188,    -1,    -1,    -1,    -1,   193,    -1,  2015,   125,
      -1,    -1,  2159,    -1,    -1,   816,    -1,  2428,    -1,   135,
      -1,    -1,    -1,    -1,    -1,   141,  2437,    -1,    -1,    -1,
      -1,    -1,    -1,   149,    -1,   151,   152,  2448,    -1,    -1,
    2851,   228,    -1,    -1,   845,  2192,    -1,    -1,   164,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     885,    -1,    -1,    -1,   865,   866,   867,    -1,    -1,   870,
      -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
      -1,  2492,  2493,    -1,   909,  2496,   911,   912,  2499,    -1,
    2501,    -1,   893,    -1,    -1,  2506,   283,    -1,  2509,    -1,
    2511,    -1,    -1,  2514,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2583,    -1,   231,    -1,  2528,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2132,  2273,  2274,  2275,  2276,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2548,  2549,    -1,
      -1,    -1,    -1,   944,    -1,    -1,  2557,   948,   949,  2619,
      -1,    -1,    -1,   978,    -1,    -1,   981,   982,    -1,    -1,
      -1,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,    -1,    -1,  2584,  2585,    -1,    -1,    -1,    -1,    -1,
    2650,  2188,    -1,  2653,  2595,    -1,   373,    -1,  2599,    -1,
      -1,    -1,   308,    -1,    -1,   311,    -1,    -1,    -1,    -1,
    2611,  1002,    -1,  2614,    -1,    -1,    -1,    -1,  1009,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2633,   339,    -1,    -1,    -1,    -1,    -1,  1030,
      -1,   347,    -1,    -1,    -1,  2646,    -1,    -1,    -1,    -1,
    2651,    -1,    41,    -1,    -1,   361,    -1,    -1,    -1,    48,
    2257,    -1,   368,    -1,    -1,  2666,   372,    -1,    -1,  2670,
      -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,  2679,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,   393,    -1,    -1,
      -1,   397,    -1,    -1,    -1,    -1,   473,  2698,    -1,    -1,
      -1,  2702,    -1,   480,   481,   482,   483,   484,   485,    -1,
      -1,    -1,    -1,  2714,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   433,    -1,    -1,
      -1,    -1,   438,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,  2742,    11,    -1,    -1,   451,  1161,    16,    17,    18,
    2751,    -1,    -1,  1144,  2755,    -1,    -1,  1172,  2759,  1174,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,  1183,   475,
    2367,    -1,    -1,    -1,    -1,    -1,    -1,  2778,  2779,  2780,
    2781,    -1,    -1,   489,   173,  1200,   492,    -1,     3,    -1,
      -1,  2851,    -1,     8,    -1,    -1,    11,    -1,    -1,   188,
    2397,    16,    17,    18,   193,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1227,  1228,    -1,    -1,    -1,    -1,    33,    -1,
    2557,    36,    -1,  2824,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,  2836,    -1,  2838,    -1,   228,
      -1,    -1,    -1,    -1,  1259,  1260,  2847,    -1,  1263,  1264,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    73,    -1,
    2861,    -1,    -1,    -1,    -1,  1256,  2867,  2464,    -1,    -1,
      -1,    -1,    -1,    -1,  2611,  1266,    -1,  1268,    -1,    -1,
    1271,  1272,  1273,  1274,    -1,    41,    -1,  2888,    -1,    -1,
      -1,    -1,    48,    -1,   283,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1295,    -1,    -1,    -1,    -1,    -1,
    1301,  1302,  1303,  1304,    -1,    -1,    -1,    73,  1309,  1310,
     109,   110,    -1,  1314,    -1,    -1,    -1,  1318,    -1,    -1,
    1321,  1322,  1323,  1324,  1325,  1326,  1327,  1328,  1329,    -1,
      -1,  1332,  2679,    -1,    -1,   214,  1337,    -1,    -1,  1340,
      -1,  1342,    -1,  1344,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,   188,    -1,    -1,  1367,  2714,   193,  1394,
    1395,    -1,    -1,    -1,   373,    -1,  2583,   143,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   184,   185,    -1,    -1,   214,
     215,    -1,    41,  1394,  1395,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,   228,   283,     8,    -1,   173,    11,    -1,
      -1,    -1,  2619,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,  1446,   188,    -1,    73,    -1,    -1,   193,    -1,    -1,
      33,  1456,    -1,    36,  1459,    -1,    -1,    -1,    41,    -1,
      -1,   266,    -1,  2650,   269,    48,  2653,   246,   247,   248,
     249,   250,   251,    -1,    -1,   254,   255,    -1,   283,    -1,
      -1,   286,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,  1473,    -1,   473,  1476,  1477,    -1,  1479,    -1,
      -1,   480,   481,   482,   483,   484,   485,    -1,    -1,     8,
      -1,    -1,    11,    -1,   143,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,  1531,  1532,    -1,  1510,
      -1,    -1,    -1,    -1,    33,    -1,    -1,   283,    -1,    -1,
      -1,    -1,    41,    -1,   173,    -1,    -1,    -1,    -1,    48,
      -1,    -1,  1557,    -1,    -1,    -1,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,  1570,    -1,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,   358,
     359,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     173,  1572,    -1,    -1,    -1,    -1,    -1,    -1,  1579,   228,
      -1,    -1,    -1,  1584,    -1,   188,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   373,    -1,    -1,
      -1,   214,   215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1622,    -1,    -1,    -1,   228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1634,   283,  1636,  1637,    -1,   886,    -1,
      -1,    -1,    -1,  1644,  2851,    -1,    -1,  1648,   473,    -1,
    1651,   476,   477,   478,   173,   480,   481,   482,   483,   484,
     485,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   188,
     469,   470,    -1,    -1,   193,    -1,    -1,    -1,   926,    -1,
     283,    -1,    -1,   286,  1685,    -1,    -1,  1688,    -1,  1690,
     489,    -1,    -1,    -1,    -1,   214,   215,    -1,    -1,    -1,
      -1,    -1,    -1,  1728,    -1,    -1,    -1,   473,    -1,   228,
      -1,    -1,    -1,    -1,   480,   481,   482,   483,   484,   485,
       8,    -1,    -1,    11,   373,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,  1759,  1760,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    -1,   266,    -1,    -1,
     269,  1752,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    -1,   283,    -1,  1767,   286,    -1,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1785,    73,  1034,    -1,    -1,    -1,
      -1,    -1,    -1,  1041,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,   473,    -1,    -1,    16,    17,    18,
      -1,   480,   481,   482,   483,   484,   485,    -1,    -1,    -1,
      -1,    -1,  1843,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,   373,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1892,    -1,    -1,
     473,    -1,    -1,   476,   477,   478,    -1,   480,   481,   482,
     483,   484,   485,    -1,    73,   173,    -1,   490,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     188,    -1,    23,    -1,    -1,   193,    -1,    -1,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   214,   215,    -1,    -1,
      -1,    -1,    -1,    -1,    55,    -1,    -1,    -1,  1939,    -1,
     228,    -1,    -1,    -1,    -1,    -1,    -1,  1948,    -1,    -1,
    1951,    -1,    -1,  1954,   473,    -1,    -1,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,    -1,    -1,    -1,
      -1,   490,   109,   110,    -1,    -1,    -1,    -1,   266,  1980,
    1981,   269,    -1,    -1,   173,   106,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1994,    -1,   283,    -1,    -1,   286,   188,
      -1,    -1,  2003,    -1,   193,  2006,  1254,  2008,    -1,    -1,
      -1,    -1,    -1,    -1,   135,  2016,    -1,  1265,    -1,    -1,
      -1,  1269,    -1,  2024,  2025,   214,   215,  1275,  1276,  1277,
      -1,    -1,    -1,    -1,    -1,    -1,  1284,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,   185,    -1,
      -1,    -1,  2053,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2063,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,   195,    -1,    -1,   266,  2079,    -1,
     269,    -1,    -1,    -1,    -1,   373,    -1,    -1,    33,    -1,
      -1,  1339,     8,    -1,   283,    11,    41,   286,    -1,    -1,
      16,    17,    18,    48,    -1,    -1,    -1,  2132,    -1,   246,
     247,   248,   249,   250,   251,    -1,    -1,   254,   255,    -1,
      -1,    -1,    -1,   244,    -1,    41,    -1,    -1,    73,    -1,
      -1,   252,    48,  1381,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,   264,    -1,  1393,    16,    17,    18,    -1,
    1398,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    33,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,   295,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,   373,   473,    -1,    -1,   476,   477,
     478,    -1,   480,   481,   482,   483,   484,   485,    -1,    -1,
      -1,    -1,   490,    73,  2205,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   335,    -1,    -1,    -1,   339,   340,
      -1,   358,   359,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   362,    -1,   188,    -1,    -1,    -1,   368,   193,    -1,
    2251,  2252,    -1,    -1,    -1,  2256,    -1,   173,    -1,    -1,
    2261,   382,    -1,  2264,  2265,    -1,    -1,    -1,  2269,   214,
     215,    -1,   188,    -1,    -1,    -1,    -1,   193,    -1,    -1,
      -1,    -1,    -1,   228,   473,    -1,    -1,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,    -1,    -1,    -1,
      -1,   490,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   228,    -1,   435,  2316,    -1,    -1,   188,    -1,
      -1,   266,    -1,   193,   269,    -1,    -1,    -1,    -1,    -1,
      -1,  2356,   469,   470,  1582,    -1,  2361,    -1,   283,    -1,
      -1,   286,    -1,    -1,   214,   215,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1601,    -1,    -1,    -1,  2358,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,
    1618,    -1,  1620,  1621,    -1,  1623,    -1,  1625,  2403,  2404,
      -1,    -1,  1630,    -1,    -1,  1633,    -1,    -1,    -1,    -1,
    1638,    -1,    -1,  1641,    -1,    -1,   266,    -1,    -1,   269,
      -1,    -1,    -1,    -1,    -1,  1653,    -1,    -1,    -1,  1657,
    1658,  1659,  1660,   283,    -1,    -1,   286,    -1,  1666,  1667,
      -1,  1669,  1670,    -1,    -1,    -1,    -1,    -1,   373,    -1,
      -1,    -1,    -1,  1681,    -1,    36,  1684,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1692,  1693,  1694,  1695,  1696,  1697,
    1698,  1699,  1700,  1701,    55,    -1,    -1,   373,    -1,    -1,
      -1,  1709,    -1,    -1,    -1,  1713,    -1,  2468,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2476,  2477,    -1,    -1,  2480,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1735,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,    -1,   106,   107,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   115,  2516,  2517,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,  2530,
      -1,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,    -1,    -1,    -1,    -1,   490,    -1,  2572,  2573,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,  2583,    -1,
     476,   477,   478,    -1,   480,   481,   482,   483,   484,   485,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,  1846,  1847,
    1848,    -1,    -1,   473,    -1,    -1,   476,   477,   478,    -1,
     480,   481,   482,   483,   484,   485,    -1,    -1,    -1,    -1,
     490,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,  1884,    -1,    -1,    -1,
      -1,  2642,    -1,   244,    -1,    -1,    -1,    33,    -1,    -1,
      -1,   252,    -1,    -1,    -1,    41,  2657,    -1,    -1,    -1,
      -1,    -1,    48,   264,    -1,   266,     8,    -1,    -1,    11,
    2671,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2686,    -1,    73,    -1,    -1,
    1938,    33,    -1,    -1,   295,    -1,  1944,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,  1957,
    1958,  1959,    -1,  1961,  1962,  1963,  1964,    -1,    -1,  1967,
    1968,  1969,  1970,  1971,  1972,  1973,  1974,  1975,  1976,  1977,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1995,    -1,    -1,
    1998,    -1,  2000,    -1,    -1,    -1,  2004,  2005,    -1,    -1,
      -1,   362,    -1,    -1,    -1,    -1,  2767,    -1,    -1,    -1,
    2018,  2019,  2020,  2021,    -1,  2023,    -1,    -1,    -1,    -1,
      -1,   382,    -1,   384,    -1,    -1,   387,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2799,    -1,
      -1,    -1,   188,    -1,    -1,    -1,    -1,   193,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2819,  2820,
      -1,    -1,    -1,    -1,    -1,    -1,  2851,    -1,   214,   215,
      -1,   173,  2833,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   228,    -1,    -1,    -1,   188,    -1,  2096,    -1,
      -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2869,    -1,
      -1,    -1,   214,   215,    -1,    -1,    -1,    -1,    -1,    -1,
     266,     8,    -1,   269,    11,    -1,   228,    -1,   489,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,
     286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,
      -1,    -1,    -1,    -1,  2935,    -1,    -1,    -1,    -1,    -1,
      -1,   283,    -1,    -1,   286,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2206,    -1,
      -1,    -1,  2210,  2211,    -1,  2213,    -1,    -1,  2216,  2217,
    2218,  2219,    -1,    -1,    -1,  2223,  2224,  2225,  2226,  2227,
    2228,  2229,  2230,  2231,  2232,  2233,  2234,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2244,    -1,    -1,    -1,
       8,    -1,  2250,    11,    -1,  2253,    -1,  2255,    16,    17,
      18,  2259,    -1,    -1,  2262,  2263,   143,    -1,  2266,  2267,
      -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,   373,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,  2307,
      -1,   188,    -1,    -1,    -1,    73,   193,  2315,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2328,    -1,    41,    -1,    -1,    -1,    -1,   473,    -1,    48,
     476,   477,   478,    -1,   480,   481,   482,   483,   484,   485,
      -1,   228,    -1,    -1,   490,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   473,    -1,    -1,   476,   477,   478,    -1,   480,   481,
     482,   483,   484,   485,    -1,    -1,    -1,    -1,   490,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     188,    -1,    -1,    -1,   143,   193,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   214,   215,    -1,  2457,
      -1,    -1,    -1,  2461,   173,    -1,    -1,    -1,    -1,    -1,
     228,    -1,  2470,  2471,  2472,    -1,    -1,  2475,    -1,   188,
    2478,  2479,    -1,    -1,   193,  2483,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,
      -1,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,   286,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2550,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2569,    -1,    -1,   283,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,
      -1,    -1,    -1,   480,   481,   482,   483,   484,   485,    -1,
      -1,    -1,    -1,    -1,    -1,   373,    -1,    -1,    -1,  2617,
    2618,    -1,    -1,    -1,    -1,  2623,  2624,  2625,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   373,    -1,  2664,  2665,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2677,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2689,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,   476,   477,
     478,    -1,   480,   481,   482,   483,   484,   485,    -1,    -1,
      -1,    -1,   490,    -1,    -1,    -1,    -1,    -1,  2736,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,    -1,
      -1,   480,   481,   482,   483,   484,   485,    -1,  2776,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2790,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
    2858,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,  2872,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,   130,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,   482,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,   224,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,   482,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,   497,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,    -1,    -1,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,    -1,   270,   271,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
      -1,   494,    -1,   496,   497,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   480,   481,    -1,    -1,     3,     4,     5,     6,
       7,   489,     9,    10,    -1,    -1,    -1,    -1,   496,   497,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,    -1,   211,    -1,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,    -1,    -1,   225,   226,
     227,   228,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,    -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
      -1,   398,   399,   400,   401,   402,   403,   404,    -1,   406,
     407,    -1,    -1,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   480,   481,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   489,    -1,    -1,    -1,    -1,    -1,    -1,   496,
     497,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,   208,   209,    -1,   211,
      -1,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,    -1,    -1,   225,   226,   227,   228,    -1,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,    -1,   279,   280,    -1,
      -1,   283,   284,   285,    -1,    -1,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,    -1,   398,   399,   400,   401,
     402,   403,   404,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,    -1,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,   481,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,    -1,    -1,
      -1,    -1,    -1,    -1,   496,   497,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,    -1,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,    -1,   211,    -1,   213,    -1,    -1,   216,
     217,   218,   219,   220,   221,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,    -1,   270,   271,   272,   273,   274,   275,   276,
     277,    -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
      -1,   398,   399,   400,   401,   402,   403,   404,    -1,   406,
     407,    -1,    -1,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   480,   481,     3,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,
     497,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,   169,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,    -1,    -1,   216,   217,
     218,   219,   220,   221,   222,    -1,    -1,   225,   226,   227,
      -1,    -1,   230,   231,   232,    -1,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,    -1,   270,    -1,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,    -1,   291,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,    -1,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,    -1,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   490,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,   208,   209,    -1,   211,    -1,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,   225,
     226,   227,   228,    -1,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,    -1,   272,   273,   274,   275,
     276,   277,    -1,   279,   280,    -1,   282,   283,   284,   285,
      -1,    -1,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,    -1,
     406,   407,    -1,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,    -1,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,     3,   475,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   489,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,    -1,   211,    -1,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
     225,   226,   227,   228,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,    -1,   267,   268,   269,   270,    -1,   272,   273,   274,
     275,   276,   277,    -1,   279,   280,    -1,   282,   283,   284,
     285,    -1,    -1,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,    -1,   398,   399,   400,   401,   402,   403,   404,
      -1,   406,   407,    -1,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   489,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,   208,   209,    -1,   211,    -1,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,    -1,
      -1,   225,   226,   227,   228,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,   267,   268,   269,   270,    -1,   272,   273,
     274,   275,   276,   277,    -1,   279,   280,    -1,    -1,   283,
     284,   285,    -1,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,    -1,   398,   399,   400,   401,   402,   403,
     404,    -1,   406,   407,    -1,    -1,   410,   411,   412,   413,
     414,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,    -1,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   489,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,    -1,   211,    -1,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,    -1,   272,
     273,   274,   275,   276,   277,    -1,   279,   280,    -1,    -1,
     283,   284,   285,    -1,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,   406,   407,    -1,    -1,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   489,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,    -1,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,    -1,   211,
      -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,   221,
     222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,   231,
     232,    -1,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,    -1,   261,
     262,   263,   264,   265,    -1,   267,   268,    -1,   270,    -1,
     272,   273,   274,   275,   276,   277,    -1,   279,   280,   281,
      -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,   291,
      -1,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,    -1,   398,    -1,   400,   401,
     402,   403,   404,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,   439,    -1,   441,
      -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,     3,    -1,    -1,    -1,    -1,    -1,   480,   481,
     482,    -1,    -1,    -1,    -1,    -1,    -1,   489,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,     3,   475,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
      -1,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
      -1,   211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,
     220,   221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,
     230,   231,   232,    -1,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
      -1,   261,   262,   263,   264,   265,    -1,   267,   268,    -1,
     270,    -1,   272,   273,   274,   275,   276,   277,    -1,   279,
     280,    -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,
      -1,   291,    -1,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,    -1,   406,   407,    -1,    -1,
     410,   411,   412,   413,   414,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
      -1,   441,    -1,   443,   444,   445,   446,    -1,    -1,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,     3,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,    -1,   211,    -1,   213,    -1,    -1,   216,    -1,   218,
     219,   220,   221,   222,    -1,    -1,   225,    -1,   227,    -1,
      -1,   230,   231,   232,    -1,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,    -1,   261,   262,   263,   264,   265,    -1,   267,   268,
      -1,   270,    -1,   272,   273,   274,   275,   276,   277,    -1,
     279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,   288,
     289,    -1,   291,    -1,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,    -1,   406,   407,    -1,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,    -1,   441,    -1,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,     3,   475,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     489,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,    -1,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,    -1,   211,    -1,   213,    -1,    -1,   216,    -1,
     218,   219,   220,   221,   222,    -1,    -1,   225,    -1,   227,
      -1,    -1,   230,   231,   232,    -1,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,    -1,   261,   262,   263,   264,   265,    -1,   267,
     268,    -1,   270,    -1,   272,   273,   274,   275,   276,   277,
      -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,
     288,   289,    -1,   291,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,    -1,
     398,    -1,   400,   401,   402,   403,   404,    -1,   406,   407,
      -1,    -1,   410,   411,   412,   413,   414,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,    -1,   443,   444,   445,   446,    -1,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   489,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,    -1,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,    -1,   211,    -1,   213,    -1,    -1,   216,
      -1,   218,   219,   220,   221,   222,    -1,    -1,   225,    -1,
     227,    -1,    -1,   230,   231,   232,    -1,    -1,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,    -1,   261,   262,   263,   264,   265,    -1,
     267,   268,    -1,   270,    -1,   272,   273,   274,   275,   276,
     277,    -1,   279,   280,    -1,    -1,   283,   284,   285,    -1,
      -1,   288,   289,    -1,   291,    -1,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
      -1,   398,    -1,   400,   401,   402,   403,   404,    -1,   406,
     407,    -1,    -1,   410,   411,   412,   413,   414,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,   439,    -1,   441,    -1,   443,   444,   445,   446,
      -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   489,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,    -1,   211,    -1,   213,    -1,    -1,
     216,    -1,   218,   219,   220,   221,   222,    -1,    -1,   225,
      -1,   227,    -1,    -1,   230,   231,   232,    -1,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,    -1,   261,   262,   263,   264,   265,
      -1,   267,   268,    -1,   270,    -1,   272,   273,   274,   275,
     276,   277,    -1,   279,   280,    -1,    -1,   283,   284,   285,
      -1,    -1,   288,   289,    -1,   291,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,    -1,   398,    -1,   400,   401,   402,   403,   404,    -1,
     406,   407,    -1,    -1,   410,   411,   412,   413,   414,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,   439,    -1,   441,    -1,   443,   444,   445,
     446,    -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   489,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,    -1,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,    -1,   211,    -1,   213,    -1,
      -1,   216,    -1,   218,   219,   220,   221,   222,    -1,    -1,
     225,    -1,   227,    -1,    -1,   230,   231,   232,    -1,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,    -1,   261,   262,   263,   264,
     265,    -1,   267,   268,    -1,   270,    -1,   272,   273,   274,
     275,   276,   277,    -1,   279,   280,    -1,    -1,   283,   284,
     285,    -1,    -1,   288,   289,    -1,   291,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,    -1,   398,    -1,   400,   401,   402,   403,   404,
      -1,   406,   407,    -1,    -1,   410,   411,   412,   413,   414,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,   439,    -1,   441,    -1,   443,   444,
     445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   489,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,    -1,   211,    -1,   213,
      -1,    -1,   216,    -1,   218,   219,   220,   221,   222,    -1,
      -1,   225,    -1,   227,    -1,    -1,   230,   231,   232,    -1,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,    -1,   261,   262,   263,
     264,   265,    -1,   267,   268,    -1,   270,    -1,   272,   273,
     274,   275,   276,   277,    -1,   279,   280,    -1,    -1,   283,
     284,   285,    -1,    -1,   288,   289,    -1,   291,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,    -1,   398,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,    -1,    -1,   410,   411,   412,   413,
     414,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,     9,
      -1,    -1,    -1,    -1,    -1,   489,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    47,    -1,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    -1,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,   152,   153,   154,    -1,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,    -1,
     290,   291,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,
     470,   471,   472,    -1,     3,    -1,   476,   477,   478,     8,
     480,   481,   482,   483,   484,   485,    -1,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,    -1,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,    -1,   211,    -1,   213,    -1,    -1,   216,    -1,   218,
     219,   220,   221,   222,    -1,    -1,   225,    -1,   227,    -1,
      -1,   230,   231,   232,    -1,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,    -1,   261,   262,   263,   264,   265,    -1,   267,   268,
      -1,   270,    -1,   272,   273,   274,   275,   276,   277,    -1,
     279,   280,    -1,    -1,   283,   284,   285,    -1,    -1,   288,
     289,    -1,   291,    -1,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,    -1,   398,
      -1,   400,   401,   402,   403,   404,    -1,   406,   407,    -1,
      -1,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,    21,   441,    -1,   443,   444,   445,   446,    -1,    -1,
     449,    -1,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,    -1,    -1,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,     8,    -1,    -1,
      11,    -1,    -1,    -1,    74,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      90,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,   144,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   165,    -1,    -1,    73,    -1,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,    -1,    -1,    -1,   188,    -1,    -1,
     173,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   188,    -1,    -1,   173,    -1,
     193,    -1,    -1,   214,   215,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   188,    -1,    -1,    -1,   228,   193,    -1,
      -1,   214,   215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,   306,    -1,    -1,   214,
     215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,    -1,    -1,   228,    -1,   266,    -1,    -1,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   283,   266,    -1,   286,   269,    -1,    -1,    -1,
      -1,   351,    -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,
     283,   266,   362,   286,   269,   365,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,
      -1,   286,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   397,    -1,    -1,
      -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   413,    -1,    -1,    -1,    -1,    -1,   419,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   444,    -1,    -1,    -1,    -1,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   473,    -1,    -1,   476,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,    -1,    -1,    -1,    -1,   490,
     473,    -1,    -1,   476,   477,   478,    -1,   480,   481,   482,
     483,   484,   485,    -1,    -1,    -1,    -1,   490,   473,     3,
      -1,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,    -1,    -1,   488,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,    -1,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,    -1,   216,    -1,   218,   219,   220,   221,   222,   223,
     224,   225,    -1,   227,    -1,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,    -1,   261,   262,   263,
     264,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,   291,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,    -1,   211,    -1,   213,
      -1,    -1,   216,    -1,   218,   219,   220,   221,   222,    -1,
      -1,   225,    -1,   227,    -1,    -1,   230,   231,   232,    -1,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,    -1,   261,   262,   263,
     264,   265,    -1,   267,   268,    -1,   270,    -1,   272,   273,
     274,   275,   276,   277,    -1,   279,   280,    -1,    -1,   283,
     284,   285,    -1,    -1,   288,   289,    -1,   291,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,    -1,   398,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,    -1,    -1,   410,   411,   412,   413,
     414,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,    -1,   211,    -1,   213,
      -1,    -1,   216,    -1,   218,   219,   220,   221,   222,    -1,
      -1,   225,    -1,   227,    -1,    -1,   230,   231,   232,    -1,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,    -1,   261,   262,   263,
     264,   265,    -1,   267,   268,    -1,   270,    -1,   272,   273,
     274,   275,   276,   277,    -1,   279,   280,   281,    -1,   283,
     284,   285,    -1,    -1,   288,   289,    -1,   291,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,    -1,   398,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,    -1,    -1,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,     3,
       4,     5,    -1,    -1,    -1,     9,   480,   481,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,    -1,   211,    -1,   213,
      -1,    -1,   216,    -1,   218,   219,   220,   221,   222,    -1,
      -1,   225,    -1,   227,    -1,    -1,   230,   231,   232,    -1,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,    -1,   261,   262,   263,
     264,   265,    -1,   267,   268,    -1,   270,    -1,   272,   273,
     274,   275,   276,   277,    -1,   279,   280,   281,    -1,   283,
     284,   285,    -1,    -1,   288,   289,    -1,   291,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,    -1,   398,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,    -1,    -1,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,     3,
       4,     5,    -1,    -1,    -1,     9,   480,   481,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,    -1,   211,    -1,   213,
      -1,    -1,   216,    -1,   218,   219,   220,   221,   222,    -1,
      -1,   225,    -1,   227,    -1,    -1,   230,   231,   232,    -1,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,    -1,   261,   262,   263,
     264,   265,    -1,   267,   268,    -1,   270,    -1,   272,   273,
     274,   275,   276,   277,    -1,   279,   280,   281,    -1,   283,
     284,   285,    -1,    -1,   288,   289,    -1,   291,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,    -1,   398,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,    -1,    -1,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,   445,   446,    -1,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
       8,    -1,    -1,    11,    -1,    -1,   480,   481,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    33,    16,    17,    18,    37,
      -1,    -1,    -1,    41,    -1,    -1,     8,    -1,    -1,    11,
      48,    -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    33,    -1,    -1,     8,    73,    -1,    11,    -1,    41,
      -1,    -1,    16,    17,    18,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    73,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    73,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,   173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   163,    -1,    -1,    -1,    -1,   168,    -1,
     188,    -1,    -1,   173,    -1,   193,    -1,    -1,    -1,    73,
     162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,
      -1,   173,    -1,   193,    -1,    -1,   214,   215,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,
     228,   193,    -1,    -1,   214,   215,    -1,    -1,    -1,   173,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,
      -1,    -1,   214,   215,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,   266,    -1,
      -1,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     214,   215,    -1,    -1,    -1,   283,   266,    -1,   286,   269,
      -1,    -1,    -1,    -1,   228,    -1,    -1,    -1,    -1,   173,
      -1,    -1,    -1,   283,   266,    -1,   286,   269,    -1,    -1,
      -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,   283,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,    -1,    -1,   269,    -1,    -1,    -1,    -1,
     214,   215,    -1,    -1,    -1,    -1,    -1,   309,    -1,   283,
      -1,    -1,   286,    -1,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,   373,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,   373,    -1,   269,    -1,    -1,    33,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    41,     8,    -1,   283,
      11,   373,   286,    48,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     304,    -1,    33,    -1,   432,    -1,    -1,    -1,    73,   373,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,   473,    -1,    -1,   476,   477,
     478,    -1,   480,   481,   482,   483,   484,   485,    -1,    -1,
      -1,    -1,    -1,   473,    -1,    -1,   476,   477,   478,   373,
     480,   481,   482,   483,   484,   485,    -1,    -1,    -1,    -1,
      -1,   473,    -1,    -1,   476,   477,   478,    -1,   480,   481,
     482,   483,   484,   485,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,   473,
      -1,    -1,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,    -1,   188,    -1,    -1,     8,    -1,   193,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,   168,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,   214,
     215,    33,    -1,    -1,    36,    -1,    -1,   188,    -1,    41,
      -1,    -1,   193,   228,    -1,    -1,    48,    -1,    -1,   473,
      -1,    -1,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,    -1,   214,   215,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
      -1,   266,    -1,    -1,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,   283,    -1,
      11,   286,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,   269,    -1,
      -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      41,    -1,   283,    -1,    -1,   286,     8,    48,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    73,    -1,    36,    -1,    -1,    -1,    -1,    41,
      -1,   173,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,   373,    -1,
      -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,   214,   215,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,   373,    -1,    -1,    -1,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
       8,    48,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,   173,    -1,   266,    -1,    -1,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,   188,    -1,    -1,
      -1,   283,   193,    41,   286,    -1,    -1,    -1,   473,    -1,
      48,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,   173,    -1,   214,   215,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,   188,   228,    -1,    -1,
      -1,   193,   473,    -1,    -1,   476,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   214,   215,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,   228,    -1,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   283,    -1,    -1,   286,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   188,    -1,    -1,   266,    -1,   193,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   283,    -1,    -1,   286,   173,    -1,   214,   215,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     188,   228,    -1,    -1,    -1,   193,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   214,   215,    -1,    -1,
      -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,   266,
     228,   473,   269,    -1,   476,   477,   478,    -1,   480,   481,
     482,   483,   484,   485,    -1,    -1,   283,    -1,    -1,   286,
      -1,    -1,    -1,    -1,   405,    -1,    -1,    -1,    -1,    -1,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,
      -1,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   473,    -1,    -1,   476,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   473,    -1,    -1,   476,   477,   478,    -1,   480,   481,
     482,   483,   484,   485,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,   476,
     477,   478,    -1,   480,   481,   482,   483,   484,   485,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,    -1,     5,   473,    -1,    -1,   476,   477,
     478,    -1,   480,   481,   482,   483,   484,   485,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,    -1,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,   223,   224,   225,    -1,   227,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,    -1,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,   223,   224,   225,    -1,   227,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,    -1,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,   223,   224,   225,    -1,   227,    -1,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,   266,   267,   268,    -1,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,    -1,    -1,   225,   226,   227,   228,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,    -1,   267,   268,   269,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,    -1,    -1,   225,   226,   227,   228,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,    -1,   267,   268,   269,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    -1,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,   165,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,   165,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,   228,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
     281,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,   282,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,   282,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,     4,    -1,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,    -1,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,    -1,    -1,   216,    -1,   218,   219,   220,
     221,   222,    -1,    -1,   225,    -1,   227,    -1,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,    -1,   267,   268,    -1,   270,
      -1,   272,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,   289,    -1,
     291,    -1,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,    -1,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    -1,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,    -1,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,    -1,    -1,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,    -1,    -1,   225,   226,   227,   228,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,    -1,   267,   268,   269,   270,
      -1,    -1,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,    -1,   290,
     291,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,    -1,   308,   309,    -1,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,    -1,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,    -1,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,    -1,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,    -1,   211,    -1,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,    -1,    -1,   225,
     226,   227,   228,    -1,   230,   231,   232,    -1,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
      -1,   267,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,    -1,   279,   280,    -1,    -1,   283,   284,   285,
      -1,    -1,   288,    -1,   290,   291,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,    -1,   305,
     306,    -1,   308,   309,    -1,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,    -1,   395,
     396,    -1,   398,   399,   400,   401,   402,   403,   404,    -1,
     406,   407,    -1,    -1,   410,   411,    -1,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,   439,    -1,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   469,   470,   471,   472,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    -1,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,    -1,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,    -1,    -1,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,    -1,
     211,    -1,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,    -1,    -1,   225,   226,   227,   228,    -1,   230,
     231,   232,    -1,    -1,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,    -1,   267,   268,   269,   270,
      -1,    -1,   273,   274,   275,   276,   277,    -1,   279,   280,
      -1,    -1,   283,   284,   285,    -1,    -1,   288,    -1,   290,
     291,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,    -1,   305,   306,    -1,   308,   309,    -1,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,   364,   365,   366,    -1,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,    -1,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,   406,   407,    -1,    -1,   410,
     411,    -1,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,    -1,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,    -1,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,    -1,   211,    -1,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,    -1,    -1,   225,
     226,   227,   228,    -1,   230,   231,   232,    -1,    -1,   235,
     236,   237,   238,   239,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
      -1,   267,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,    -1,   279,   280,    -1,    -1,   283,   284,   285,
      -1,    -1,   288,    -1,   290,   291,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,    -1,   305,
     306,    -1,   308,   309,    -1,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,   364,   365,
     366,    -1,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,    -1,   393,    -1,   395,
     396,    -1,   398,   399,   400,   401,   402,   403,   404,    -1,
     406,   407,    -1,    -1,   410,   411,    -1,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,   439,    -1,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   469,   470,   471,   472
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   164,   192,
     231,   308,   311,   339,   347,   361,   368,   372,   382,   393,
     397,   433,   438,   451,   475,   489,   500,   501,   502,   503,
     514,   515,   518,   520,   524,   538,   539,   541,   543,   550,
     552,   598,   605,   608,   609,   626,   627,   628,   629,   630,
     631,   679,   816,   819,   822,   829,   830,   831,   832,   833,
     840,   844,   850,   852,   857,   861,   862,   865,   866,   868,
     869,   871,   410,   454,   551,   196,   354,   362,   397,   444,
     551,     3,    19,    20,    21,    22,    23,    24,    25,    26,
      28,    29,    30,    38,    39,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    54,    55,    56,
      57,    58,    59,    62,    63,    64,    65,    66,    68,    69,
      70,    71,    72,    74,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    89,    90,    91,    92,
      94,    95,    96,    97,   101,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   116,   118,   119,   120,   121,
     122,   123,   125,   126,   127,   128,   129,   132,   133,   134,
     135,   136,   138,   139,   140,   142,   143,   144,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   157,   159,
     160,   161,   162,   164,   166,   167,   169,   170,   171,   172,
     173,   174,   176,   178,   179,   180,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   194,   195,   196,
     197,   198,   199,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   211,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   225,   226,   227,   228,   230,   231,   232,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   267,   268,   269,   270,   272,   273,   274,   275,   276,
     277,   279,   280,   283,   284,   285,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   362,   363,   364,   365,   366,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   395,   396,   398,   399,   400,
     401,   402,   403,   404,   406,   407,   410,   411,   412,   413,
     414,   416,   417,   418,   419,   420,   421,   422,   423,   426,
     427,   428,   429,   430,   433,   434,   435,   436,   437,   438,
     439,   441,   442,   443,   444,   445,   446,   449,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   735,
     801,   805,   808,   874,   875,   876,   551,    50,   489,   621,
     170,   174,   232,   239,   286,   354,   401,   403,   419,   425,
     428,   596,   606,   828,     3,    27,   240,   311,   390,   799,
     805,   874,    21,    74,    90,   144,   153,   165,   170,   196,
     239,   243,   306,   320,   351,   354,   362,   365,   384,   397,
     404,   413,   419,   444,   599,   600,   603,   551,   799,    93,
     442,   489,   520,   608,   626,   836,   840,   857,   871,   108,
      68,   108,     5,   804,   851,   805,   799,    27,   406,   410,
     805,   863,   864,   867,   551,    27,   130,   638,   639,   174,
     232,   354,   366,   406,   845,   846,   867,   551,   438,   626,
     631,   867,     5,   282,   690,   797,   805,   806,   169,   489,
     854,   489,   327,   632,   633,   799,   632,   627,   628,     0,
     492,   120,   206,   430,   145,   210,   287,   424,   640,   641,
     627,   629,   630,   493,   442,   834,    27,   406,   410,   626,
     867,   187,   797,   799,   187,   797,   187,   690,   187,   797,
     489,   487,   491,   783,   785,   520,   608,   626,   818,   857,
     797,   401,   403,   401,   403,   337,   187,   805,   805,   810,
     327,   362,   397,   444,   797,   196,    27,   799,   245,   413,
     107,   397,   444,   357,     3,    44,    49,    50,    51,    52,
      64,    65,    74,    82,    94,   101,   112,   113,   134,   161,
     167,   169,   173,   187,   188,   202,   208,   209,   211,   214,
     215,   217,   226,   228,   240,   259,   260,   261,   269,   274,
     290,   292,   324,   345,   349,   369,   373,   376,   390,   399,
     406,   407,   418,   439,   442,   604,   701,   702,   704,   706,
     708,   710,   712,   713,   714,   716,   717,   718,   720,   721,
     809,   874,   877,   187,   601,   810,   187,   798,   799,   187,
     799,   489,   542,   596,   836,     3,    48,    49,    51,    52,
      64,    65,    72,   112,   113,   150,   155,   161,   178,   179,
     203,   208,   209,   211,   240,   259,   261,   265,   272,   274,
     289,   293,   307,   310,   324,   349,   369,   376,   390,   392,
     406,   407,   412,   414,   418,   438,   439,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   837,   839,
     840,   842,   843,   874,   878,   834,   804,   804,   478,   489,
     489,   817,   472,   216,   491,   281,     4,     6,     7,     8,
       9,    10,    35,    49,    51,    52,    60,    61,    64,    65,
      72,    74,    98,    99,   100,   101,   102,   103,   104,   112,
     113,   115,   150,   155,   156,   161,   178,   179,   208,   209,
     211,   233,   234,   259,   261,   266,   271,   272,   274,   283,
     293,   307,   324,   349,   367,   376,   392,   406,   407,   412,
     414,   415,   418,   431,   439,   473,   480,   481,   482,   487,
     489,   494,   496,   497,   627,   670,   705,   708,   711,   712,
     713,   715,   716,   717,   720,   721,   732,   734,   735,   736,
     738,   751,   752,   758,   777,   782,   789,   790,   801,   802,
     803,   804,   805,   788,   789,   845,   845,   804,   845,   472,
     168,   408,   478,   489,   797,   482,   785,     3,   167,   169,
     442,   840,   853,   855,   167,   856,   732,   762,   805,   632,
     493,   489,   812,   490,   490,   502,   168,   212,   690,   858,
      27,   130,   637,   637,    54,   637,   158,   163,   229,   278,
     646,   648,   649,   672,   674,   675,   676,   640,   641,   489,
     797,   472,   216,   150,    23,    29,   135,   285,   335,   339,
     368,   435,   508,   511,   512,   335,   150,    36,    55,   106,
     195,   244,   252,   264,   295,   335,   340,   362,   368,   382,
     511,   544,   547,   150,   335,   368,   511,   150,   335,   368,
     511,     3,    27,    44,    50,    74,    82,    94,   101,   130,
     167,   169,   173,   188,   202,   214,   215,   217,   226,   228,
     240,   260,   269,   290,   292,   345,   373,   390,   399,   418,
     440,   442,   482,   490,   732,   764,   765,   807,   813,   874,
     879,   732,   784,     3,    27,    31,    32,    33,    34,    35,
      36,    37,    40,    53,    60,    61,    67,    73,    75,    86,
      93,    98,    99,   100,   102,   103,   104,   115,   117,   124,
     130,   131,   137,   141,   145,   156,   158,   163,   165,   168,
     175,   177,   181,   193,   200,   210,   212,   223,   224,   229,
     233,   234,   266,   271,   278,   281,   282,   286,   287,   304,
     314,   329,   342,   361,   367,   378,   394,   397,   405,   408,
     409,   415,   424,   425,   431,   432,   438,   440,   447,   448,
     450,   451,   800,   814,   874,   878,   880,   783,   490,   489,
     586,   596,   266,   820,   491,   811,    36,   444,   187,   797,
     187,   797,   873,   797,   489,   607,    82,   825,   455,    83,
     127,   298,   402,   441,   719,   719,   719,   489,   707,   707,
     310,   489,   709,   150,   489,    64,    65,   719,   707,   704,
     453,   475,   489,   722,   489,   722,    58,   341,   493,   602,
     489,    35,   703,   489,   109,   110,   184,   185,   246,   247,
     248,   249,   250,   251,   254,   255,   358,   359,   469,   470,
     489,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     707,   150,   493,   602,   150,   493,   602,   150,   281,   762,
     397,   490,   493,     4,   156,   281,   415,   480,   481,   546,
     549,   803,   804,   835,   837,   838,   841,   836,   489,   616,
     620,   546,   841,   847,   849,   764,   702,   766,    36,   227,
     805,   489,   786,   487,   732,   781,   489,   489,   163,   489,
     489,   627,   489,   489,   489,   732,   489,   489,   489,   489,
     489,   489,   489,   489,   489,   732,   732,   732,   146,   791,
     792,   762,   763,   627,   732,   762,   753,   754,   805,   806,
       9,   786,   785,   489,   804,   489,   803,   804,     3,     8,
      11,    16,    17,    18,    33,    36,    41,    48,    73,   173,
     188,   193,   214,   215,   228,   266,   269,   283,   286,   373,
     473,   476,   477,   478,   480,   481,   482,   483,   484,   485,
     756,   757,   758,   760,   452,   739,   786,    15,   292,   732,
      15,   212,   493,   634,   489,   804,   786,   491,   785,   634,
       3,   115,   232,   546,   721,   804,   848,    97,   115,   849,
     115,   849,   797,   490,   493,   834,   490,   493,   633,   798,
      36,   858,   522,   797,    36,   805,   368,   629,   629,   642,
     643,   732,   629,   160,   263,   662,   218,   264,   323,   371,
     430,    27,   657,   732,   480,   481,   658,   659,   732,   734,
     672,   673,   649,   648,   646,   647,   163,   675,   276,   677,
     646,   672,   762,   812,   227,   797,    67,    75,    86,   165,
     187,   314,   425,   567,   577,   592,   805,    75,    86,   519,
      86,   519,   489,   408,   489,   565,   238,   428,   565,    86,
     493,   408,   797,   704,   546,    54,   548,   546,   546,   106,
     244,   252,    54,   408,   451,   475,   545,   257,   354,   545,
     547,   690,    86,   408,   519,   354,   797,   408,   354,   764,
     764,   765,   490,   493,   640,   641,    13,    14,   488,   498,
     408,   585,   590,   805,   451,   619,   327,   397,   444,   150,
      93,   539,   552,   821,   822,   869,   800,   491,   142,   797,
     266,   540,   544,   266,   489,   586,    36,   586,   490,   764,
      36,   187,   580,   805,   826,   489,   762,   803,   604,   766,
     719,   719,    35,   703,   406,   406,   803,   803,   702,   700,
     805,   487,   487,   803,   803,   408,   408,   408,   408,   601,
     810,   798,   799,   799,   810,   490,   187,   797,   873,   836,
     842,     4,   803,     4,   803,   618,   625,   814,    50,    95,
     121,   139,   143,   164,   167,   182,   271,   279,   321,   622,
     493,   490,   493,   490,   493,   818,   762,   783,   763,   447,
     778,   779,   732,   762,   489,   803,   803,     3,   723,   724,
     725,   726,   727,   728,   729,   730,   767,   768,   804,   803,
     803,   732,     8,    16,    17,    18,   476,   477,   478,   480,
     481,   482,   483,   484,   485,   756,   761,   805,   732,   769,
     480,   481,   489,   733,   734,   758,   771,   782,   490,   762,
     732,   762,   772,   732,    53,   168,   224,   409,   732,   762,
     775,   732,   489,   805,   337,   795,   488,   490,   493,   493,
     495,   498,   762,   732,   731,   731,   702,   732,   732,   732,
     732,     5,   814,   815,   406,    40,   394,   787,   810,   732,
     732,   489,   627,   776,   130,   156,   266,   271,   276,   415,
     426,   732,   271,   489,   732,   408,    48,   173,   188,   193,
     228,   373,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,    27,    34,   378,   755,   177,   159,   740,   732,
     349,   489,   752,   732,   174,   232,   397,   401,   403,   428,
     635,   797,   790,   168,   680,   764,   482,   680,   489,   804,
     490,   797,   853,   797,   861,   732,   490,   489,   432,   860,
     115,   294,   489,   521,   626,    36,   805,   489,   526,   535,
     537,   805,   493,    37,   124,   432,   644,   349,   350,   480,
     481,   659,   661,   734,   371,   218,   282,   493,     4,   660,
     803,   660,   349,   350,   661,   796,   797,   270,   375,   678,
     673,   647,   490,   335,   511,   489,   187,   577,   799,   218,
     266,   218,   432,   489,   570,   702,   799,   805,   187,   799,
     187,   805,    23,   135,   368,   507,   510,   560,   575,   814,
     799,   569,   589,   814,   799,   508,   799,   335,   368,   511,
     544,   546,   810,   799,   546,   810,   799,   546,   335,   368,
     511,   799,   799,   799,   799,   335,   368,   511,   799,   799,
     640,   640,   640,   440,   765,   490,   732,   732,   732,   784,
     319,   615,   490,   493,   279,   168,   408,   610,   444,   797,
     797,   805,   596,   800,   489,   489,   150,   150,   228,   567,
     577,   581,   584,   593,   595,   805,   451,   453,   572,   149,
     626,   451,   827,   490,   732,   266,   281,   762,   490,   490,
     602,   490,   487,   472,   472,   490,   490,   490,   493,   702,
     803,   488,   803,   490,   490,   724,   726,   727,   728,   727,
     728,   728,   602,   602,   281,   602,   266,    36,   490,   493,
     482,   489,   546,   617,   841,    36,   614,   804,   614,   266,
     271,   321,   614,   614,   847,   702,   490,   488,   732,   137,
     779,   780,    36,   490,   732,   490,   490,   490,   168,   490,
     490,   493,   490,   491,   304,   770,   490,   733,   733,   732,
      11,    16,    17,    18,   193,   214,   283,   476,   477,   478,
     480,   481,   482,   483,   484,   485,   758,   733,   490,   490,
     163,   168,   773,   774,   490,    36,   775,   762,   775,   775,
     168,   490,    36,   798,   489,   732,   793,   786,   732,   753,
     732,   490,   490,   472,   733,   733,   143,   762,   168,   130,
     156,   271,   276,   415,   426,   489,   143,   761,   732,   394,
     787,   732,   776,   732,   408,   489,   627,   489,   489,   291,
     744,   401,   403,   401,   403,   797,   397,   636,   636,   636,
     223,   350,   489,   627,   681,   682,   683,   690,   691,   735,
     737,   738,   805,   448,   696,   640,   792,   696,   803,   731,
     812,   818,   681,   448,   859,   438,   396,   431,   530,   525,
     534,   805,   281,   527,   805,   531,   537,   493,   680,   478,
     786,   643,   283,   756,   759,   474,   645,     4,   803,   661,
     282,   430,   658,   493,   237,   408,   732,   266,   592,   489,
     150,   489,   570,   196,   590,   553,   285,   563,   553,    23,
     135,   339,   340,   368,   504,   505,   506,   512,   513,   150,
     602,   150,   602,   560,   575,   560,   490,   493,   556,   804,
     490,   493,   478,   491,   408,   354,    86,   408,   519,   354,
     408,   408,   408,   354,   490,   490,   490,   765,   488,   385,
     386,   624,   804,   585,   615,   797,   489,   586,   820,   397,
     516,   517,   804,   590,   797,   797,   873,   797,   490,   493,
     279,   565,   279,   281,   564,   799,   451,   872,   565,    36,
     150,   797,   490,   703,   803,   722,   722,   703,   805,   488,
     488,   810,   150,   618,   612,   623,   841,   804,   804,   271,
     590,   482,   590,   804,   804,   405,   732,   141,   702,   490,
     732,   732,   761,   732,   773,   702,   733,   733,   733,   733,
     130,   266,   276,   733,   733,   733,   733,   733,   733,   733,
     733,   733,   733,   732,   732,   774,   773,   702,   490,   490,
     490,   762,   702,   490,   732,   793,   794,    36,   490,   731,
     732,    33,    33,   732,   490,   732,   168,   489,   766,   732,
     490,   143,   733,   733,   143,   143,   732,   732,   641,   448,
     489,   745,   805,   636,   636,   636,   636,   797,   797,   797,
     627,   691,   168,   627,   682,   683,    36,   684,   685,   805,
     493,    94,   169,   202,   217,   226,   260,   345,   687,   685,
      36,   684,   686,   805,   475,   695,   785,   732,   177,   663,
     490,   795,   663,   490,   490,   732,   342,   529,   437,   490,
     493,   786,    84,   529,   490,   493,   526,   859,   732,   489,
     645,   160,   222,   282,   797,   799,   490,   150,   590,   577,
     590,   553,   580,   490,   117,   200,   264,   266,   576,   489,
     587,   172,   115,   186,   266,   565,   545,   107,   115,   172,
     266,   384,   387,   547,   565,   368,   506,   419,   799,   805,
     510,   589,     3,    44,    50,    74,    82,    94,   101,   167,
     169,   173,   188,   202,   214,   215,   217,   226,   228,   240,
     260,   265,   269,   283,   290,   292,   345,   369,   373,   390,
     399,   418,   442,   480,   481,   546,   554,   591,   702,   759,
     804,   807,   874,   880,   814,   799,   799,   799,   799,   799,
     799,   799,   799,   799,   799,   640,   545,   624,   489,   584,
     827,   187,   797,   490,   493,   490,   540,   489,    36,   574,
     572,   581,    79,   542,   107,   264,   626,   580,   432,   824,
     488,   702,   602,   873,   490,   493,   590,   732,   490,   490,
     774,   168,   130,   276,   489,   490,   490,   490,   493,   805,
     732,   732,   732,   766,   490,   732,    33,    33,   732,   732,
     143,   490,   490,   732,   746,   805,   797,   797,   797,   797,
     685,   686,   489,   490,   805,   806,   399,   654,   655,   489,
     682,   217,   290,   688,   682,   688,   217,   687,   688,   217,
     655,   489,   805,   655,   489,   288,    54,   181,   671,   804,
     671,   804,   789,   626,   294,   626,   525,   281,   489,   523,
     478,   537,   529,   761,   553,   577,   490,   490,   451,   583,
     118,   189,   198,   117,   434,   560,   578,    67,    73,    86,
     115,   117,   172,   200,   266,   271,   314,   329,   425,   432,
     558,   559,   571,    30,    54,   597,   187,   271,   546,   732,
     597,   271,   480,   481,   549,   805,   702,   602,   602,   240,
     390,   807,   811,   478,   408,   408,   490,   616,   432,   611,
     613,   590,   490,    36,   266,   489,   804,   827,   584,   149,
     626,   147,   194,   564,   120,   135,   313,   872,   107,   451,
     870,   281,   805,   823,   489,    36,   623,   733,   168,   489,
     766,   793,   490,   732,   732,   732,   490,   300,   747,   692,
     693,   737,   684,   489,     4,     9,   650,   652,   653,   805,
     798,   682,   281,   432,   689,   682,   217,   682,   697,   698,
     805,   489,   697,   805,    96,   178,   348,   489,   664,   665,
     666,   667,   668,   669,   732,   732,   450,   741,   741,   530,
      86,   489,   528,   536,   737,   805,   131,   732,   490,   329,
     583,   489,   573,   553,   490,   493,   489,   810,   799,   733,
     597,   118,   189,   117,   271,   218,   797,   583,    81,   115,
      36,   150,    73,   699,   811,   484,   554,   799,   799,   545,
     122,   490,   572,   626,   150,    36,   490,   799,   872,    27,
      78,    87,   116,   186,   197,   384,   387,   568,   568,   350,
     350,    59,    67,   232,   797,   536,   733,   766,   490,    54,
     640,   490,   493,    36,   694,   798,   303,   484,   303,   350,
     484,   489,   489,   490,   732,   489,   682,   689,   490,   493,
     702,   697,   490,   489,   370,   489,   490,   493,   742,   743,
     805,   432,   651,   651,   437,   799,   732,   490,   493,    73,
     532,   532,   267,   430,   797,   553,   579,   582,   814,   560,
     732,   266,   559,    36,   583,   586,   799,   186,   810,   432,
     509,   484,   419,   616,   804,   827,   564,   870,   797,   626,
     572,   542,    67,   284,    67,   824,   490,   490,   762,   322,
     350,   748,   695,   692,   489,   490,   805,   650,   798,   698,
     699,   490,   762,   489,   762,   665,   493,    36,   352,   626,
     490,   696,   528,   810,   533,   810,   533,   368,   586,   490,
     493,   478,   490,   186,   242,   594,   489,   555,   732,   419,
      36,   489,   870,   564,   872,   284,   284,   489,   827,    48,
      97,   421,   732,   749,   750,   749,   490,   697,   490,   493,
     490,   490,   490,   664,   490,   743,   745,   653,   532,   644,
     644,   535,   594,   582,   554,   264,   566,   555,   169,   299,
     374,   281,   561,   562,   588,   544,   626,   536,   696,   750,
     349,   162,   309,   162,   309,   490,     9,   336,   656,   490,
     533,   645,   645,   696,   562,   198,   120,   430,   281,   588,
     281,   561,   490,   870,   490,    33,   490,   489,   644,   553,
      58,   264,   341,   368,   557,   557,   827,   750,     9,   645,
      22,   115,   271,   696,   490
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 465 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 481 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 493 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 536 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 105:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 106:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 107:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 108:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 122:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 123:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 124:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 125:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 128:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 129:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 130:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 131:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 132:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 133:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 134:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 135:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 136:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 137:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 138:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 139:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 140:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 141:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 142:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 145:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 146:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 148:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 149:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 150:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 151:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 152:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 153:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 154:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 155:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 156:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 157:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 159:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 160:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 161:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 163:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 168:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 169:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 170:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 172:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 173:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 174:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 175:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 176:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 177:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 178:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 179:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 180:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 181:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 182:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 183:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 184:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 185:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 188:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 195:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 196:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 197:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 198:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 200:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 201:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 202:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 203:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 204:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 211:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 212:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 213:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 214:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 215:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 216:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 217:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 219:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 220:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 221:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 222:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 223:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 224:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 225:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 226:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 227:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 228:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 229:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 230:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 231:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 232:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 233:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 234:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 235:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 237:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 238:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 246:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 247:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 248:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 249:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 250:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 252:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 253:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 254:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 255:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 256:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 257:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 258:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 261:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 262:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 263:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 264:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 265:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 266:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 267:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 268:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 269:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 270:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 271:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 272:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 273:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 274:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 275:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 276:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 277:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 279:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 280:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 281:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 282:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 283:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 284:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 285:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 286:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 287:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 288:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 289:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 290:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 291:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 292:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 293:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 294:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 295:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 296:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 297:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 298:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 299:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 300:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 301:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 302:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 303:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 304:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 305:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 306:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 307:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 308:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 309:
#line 461 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 310:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 311:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 312:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 313:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 314:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 315:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 316:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 317:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 318:
#line 498 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 319:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 320:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 321:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 322:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 323:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 549 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 564 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 577 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 328:
#line 592 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 329:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 330:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 331:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 332:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 333:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 334:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 335:
#line 649 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 337:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 338:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 339:
#line 661 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 340:
#line 663 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 341:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 342:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 343:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 344:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 345:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 346:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 348:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 349:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 350:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 351:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 352:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 353:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 354:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 355:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 356:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 357:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 358:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 359:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 360:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 361:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 362:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 363:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 364:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 365:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 366:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 367:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 368:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 369:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 370:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 371:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 372:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 373:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 374:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 375:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 376:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 377:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 378:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 379:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 380:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 381:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 382:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 383:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 384:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 385:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 386:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 389:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 390:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 391:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 392:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 393:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 394:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 395:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 396:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 397:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 398:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 399:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 400:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 401:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 402:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 403:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 404:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 405:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 406:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 407:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 408:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 409:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 410:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 411:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 412:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 413:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 414:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 415:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 416:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 417:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 418:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 419:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 420:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 421:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 422:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 423:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 424:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 425:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 426:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 427:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 428:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 429:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 430:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 431:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 432:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 433:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 434:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 435:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 436:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 437:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 438:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 439:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 442:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 443:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 444:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 445:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 446:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 447:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 448:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 449:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 450:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 451:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 452:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 454:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 455:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 456:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 457:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 458:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 459:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 460:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 461:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 462:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 463:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 464:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 465:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 466:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 467:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 468:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 469:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 470:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 471:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 472:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 473:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 474:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 475:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 476:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 477:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 478:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 479:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 480:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 481:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 482:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 483:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 484:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 485:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 486:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 487:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 488:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 489:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 490:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 491:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 492:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 493:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 494:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 495:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 496:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 497:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 498:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 499:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 500:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 501:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 502:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 503:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 504:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 505:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 506:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 507:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 508:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 509:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 510:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 511:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 512:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 513:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 514:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 515:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 516:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 517:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 518:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 519:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 520:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 521:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 522:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 523:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 524:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 525:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 526:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 527:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 528:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 529:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 530:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 531:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 532:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 533:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 534:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 536:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 537:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 538:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 539:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 540:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 541:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 542:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 543:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 544:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 545:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 546:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 547:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 548:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 549:
#line 624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 550:
#line 625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 551:
#line 626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 552:
#line 631 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 553:
#line 644 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 554:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 555:
#line 658 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 556:
#line 664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 557:
#line 665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 558:
#line 669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 559:
#line 670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 560:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 561:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 562:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 563:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 564:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 565:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 566:
#line 690 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 567:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 568:
#line 701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 569:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 570:
#line 703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 571:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 572:
#line 708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 573:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 574:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 575:
#line 715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 576:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 577:
#line 731 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 578:
#line 748 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 579:
#line 749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 580:
#line 753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 581:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 582:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 583:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 584:
#line 775 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 585:
#line 783 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 586:
#line 792 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 587:
#line 801 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 588:
#line 805 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 589:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 590:
#line 835 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 591:
#line 848 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 592:
#line 862 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 593:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 594:
#line 889 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 595:
#line 905 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 596:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 597:
#line 916 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 598:
#line 922 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 599:
#line 928 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 600:
#line 929 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 601:
#line 938 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 602:
#line 942 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 603:
#line 946 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 604:
#line 952 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 605:
#line 958 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 606:
#line 963 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 607:
#line 964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 608:
#line 965 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 609:
#line 966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 610:
#line 970 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 611:
#line 971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 612:
#line 983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 613:
#line 984 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 614:
#line 990 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 615:
#line 997 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 616:
#line 1004 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 617:
#line 1011 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 618:
#line 1043 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 619:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 620:
#line 1067 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 621:
#line 1071 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 622:
#line 1072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 623:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 624:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 625:
#line 1079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 626:
#line 1080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 627:
#line 1085 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 628:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 629:
#line 1092 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 630:
#line 1096 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 631:
#line 1102 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 632:
#line 1123 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 633:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 634:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 635:
#line 1146 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 638:
#line 1153 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 639:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 640:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 641:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 642:
#line 1176 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 643:
#line 1181 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 644:
#line 1186 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 645:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 646:
#line 1202 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 647:
#line 1204 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 648:
#line 1206 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 649:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 650:
#line 1211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 651:
#line 1212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 652:
#line 1213 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 653:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 654:
#line 1216 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 655:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 656:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 657:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 658:
#line 1242 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 659:
#line 1243 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 660:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 662:
#line 1269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 663:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 664:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 665:
#line 1286 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 666:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 667:
#line 1296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 668:
#line 1301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 669:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 670:
#line 1311 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 671:
#line 1317 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 672:
#line 1323 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 673:
#line 1329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 674:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 675:
#line 1357 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 676:
#line 1367 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 677:
#line 1371 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 678:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 679:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 680:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 681:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 682:
#line 1424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 683:
#line 1428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 684:
#line 1434 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 685:
#line 1438 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 686:
#line 1451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 687:
#line 1459 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 688:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 689:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 690:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 691:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 692:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 693:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 694:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 695:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 696:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 697:
#line 1501 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 698:
#line 1509 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 699:
#line 1518 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 700:
#line 1529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 701:
#line 1536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 702:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 703:
#line 1538 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 720:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 721:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 722:
#line 1571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 723:
#line 1573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 724:
#line 1575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 725:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 726:
#line 1579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 727:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 728:
#line 1583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 729:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 730:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 731:
#line 1599 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 732:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 733:
#line 1611 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 734:
#line 1617 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 735:
#line 1622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 736:
#line 1653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 737:
#line 1656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1658 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 739:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 740:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 741:
#line 1683 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 742:
#line 1685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1693 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 1697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 1699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 1701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 751:
#line 1703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 752:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 753:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 754:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 755:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 756:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 757:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 758:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 759:
#line 1721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 760:
#line 1723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 761:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 762:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 763:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 764:
#line 1743 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 765:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 766:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 767:
#line 1760 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 768:
#line 1768 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 769:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 770:
#line 1782 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 771:
#line 1790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 772:
#line 1798 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 773:
#line 1806 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 774:
#line 1824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 775:
#line 1832 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 776:
#line 1840 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 777:
#line 1848 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 778:
#line 1856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 1863 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 780:
#line 1867 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 781:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 782:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 783:
#line 1884 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 784:
#line 1892 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 785:
#line 1908 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 786:
#line 1916 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 787:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 788:
#line 1932 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 789:
#line 1940 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 790:
#line 1948 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 791:
#line 1956 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 792:
#line 1960 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 793:
#line 1964 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 794:
#line 1968 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 795:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 796:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 797:
#line 1988 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 798:
#line 1996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 799:
#line 2004 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 800:
#line 2024 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 801:
#line 2046 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 802:
#line 2057 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 803:
#line 2064 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 2077 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 805:
#line 2094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 806:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 807:
#line 2098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 808:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 809:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 810:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 811:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 812:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 813:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 814:
#line 2112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 815:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 816:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 817:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 818:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 819:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 820:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 821:
#line 2126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 822:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 823:
#line 2130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 824:
#line 2132 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 825:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 826:
#line 2140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 827:
#line 2144 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 828:
#line 2157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 829:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 830:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 831:
#line 2167 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 832:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 833:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 834:
#line 2206 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 835:
#line 2208 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 836:
#line 2220 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 837:
#line 2231 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 838:
#line 2255 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 839:
#line 2266 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 840:
#line 2275 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 841:
#line 2279 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 842:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 843:
#line 2292 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 844:
#line 2299 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 845:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 846:
#line 2316 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 847:
#line 2344 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 848:
#line 2379 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 849:
#line 2389 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 850:
#line 2390 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 851:
#line 2398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 852:
#line 2404 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 853:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 854:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 855:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 856:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 857:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 858:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 859:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 860:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 861:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 862:
#line 2444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 863:
#line 2448 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 864:
#line 2452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 865:
#line 2456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 866:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 867:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 868:
#line 2466 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 869:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 870:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 871:
#line 2481 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 872:
#line 2486 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 873:
#line 2493 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 874:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 875:
#line 2515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 876:
#line 2519 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 877:
#line 2523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 878:
#line 2527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 879:
#line 2531 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 880:
#line 2544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 881:
#line 2545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 882:
#line 2549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 883:
#line 2550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 884:
#line 2558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 885:
#line 2559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 886:
#line 2563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 887:
#line 2565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 888:
#line 2570 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 889:
#line 2578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 890:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 891:
#line 2593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 892:
#line 2598 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 893:
#line 2623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 894:
#line 2624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 895:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 896:
#line 2628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 897:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 898:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 899:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 900:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 901:
#line 2679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 902:
#line 2724 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 903:
#line 2732 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 904:
#line 2740 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 905:
#line 2748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 906:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 907:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 908:
#line 2777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 909:
#line 2780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 910:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 911:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 912:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 913:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 914:
#line 2798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 915:
#line 2799 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 916:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 917:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 918:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 919:
#line 2807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 920:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 921:
#line 2809 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 922:
#line 2810 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 923:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 924:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 925:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 926:
#line 2814 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 927:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 928:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 929:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 930:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 931:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 932:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 933:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 934:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 935:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 936:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 937:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 938:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 939:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 940:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 941:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 942:
#line 2850 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 943:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 944:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 945:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 946:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 947:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 948:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 949:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 950:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 951:
#line 2903 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 952:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 953:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 954:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 955:
#line 2927 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 956:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 957:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 958:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 959:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 960:
#line 2944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 961:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 962:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 963:
#line 2947 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 964:
#line 2948 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 965:
#line 2949 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 966:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 967:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 968:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 969:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 970:
#line 2973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 971:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 972:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 973:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 974:
#line 3001 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 975:
#line 3006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 976:
#line 3010 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 977:
#line 3025 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 978:
#line 3029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 979:
#line 3033 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 980:
#line 3036 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 981:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 982:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 983:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 984:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 985:
#line 3051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 986:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 987:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 988:
#line 3076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 989:
#line 3081 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 990:
#line 3091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 991:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 992:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 993:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 994:
#line 3100 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 995:
#line 3104 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 996:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 997:
#line 3115 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 998:
#line 3123 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 999:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1000:
#line 3134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1001:
#line 3138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1002:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1003:
#line 3143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1004:
#line 3144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1007:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1008:
#line 3159 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1009:
#line 3163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1010:
#line 3164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1011:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1012:
#line 3184 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1013:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1014:
#line 3200 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1015:
#line 3215 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1016:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1017:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1018:
#line 3236 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1019:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1020:
#line 3240 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1021:
#line 3244 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1022:
#line 3245 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1023:
#line 3248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1024:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1025:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1026:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1027:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1028:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1029:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1030:
#line 3304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1031:
#line 3306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1032:
#line 3310 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1033:
#line 3312 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1034:
#line 3323 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1035:
#line 3326 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1036:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1037:
#line 3341 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1038:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1039:
#line 3357 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1040:
#line 3361 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1041:
#line 3370 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1042:
#line 3377 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1043:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1044:
#line 3413 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1045:
#line 3417 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1046:
#line 3421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1047:
#line 3425 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1048:
#line 3429 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1049:
#line 3433 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1050:
#line 3438 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1051:
#line 3439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1052:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1053:
#line 3456 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1054:
#line 3457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1055:
#line 3460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1056:
#line 3461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1057:
#line 3467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1058:
#line 3468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1059:
#line 3469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1060:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1061:
#line 3473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1062:
#line 3474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1063:
#line 3477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1064:
#line 3478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1065:
#line 3479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1066:
#line 3482 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1067:
#line 3483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1068:
#line 3487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1069:
#line 3489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1070:
#line 3493 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1071:
#line 3494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1073:
#line 3505 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 3506 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1075:
#line 3507 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1076:
#line 3508 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1077:
#line 3511 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1078:
#line 3512 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1079:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1080:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1081:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1086:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1087:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1088:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1089:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1094:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1095:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1096:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1098:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1099:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1100:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1101:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1102:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1103:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1104:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1105:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1106:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1107:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1108:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1109:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1110:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1111:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1112:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1113:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1114:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1115:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1116:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1117:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1118:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1119:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1120:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1121:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1122:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1123:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1124:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1125:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1131:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1132:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1133:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1134:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1135:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1136:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1137:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1138:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1139:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1140:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1141:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1142:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1143:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1144:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1145:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1146:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1147:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1148:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1149:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1150:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1151:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1152:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1153:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1154:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1155:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1156:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1157:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1158:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1159:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1160:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1161:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1162:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1163:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1164:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1165:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1166:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1167:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1168:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1169:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1170:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1171:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1173:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1174:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1175:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1176:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1177:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1178:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1179:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1180:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1181:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1182:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1183:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1184:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1185:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1186:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1187:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1188:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1189:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1190:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1191:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1192:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1193:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1194:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1195:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1196:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1197:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1198:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1199:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1200:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1201:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1202:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1203:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1204:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1205:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1206:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1207:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1208:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1209:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1210:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1213:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1214:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1215:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1216:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1217:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1218:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1219:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1220:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1221:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1222:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1223:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1224:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1225:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1226:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1227:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1228:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1229:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 24115 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
