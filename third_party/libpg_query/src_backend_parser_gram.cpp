/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXTENSION = 408,
     EXTERNAL = 409,
     EXTRACT = 410,
     FALSE_P = 411,
     FAMILY = 412,
     FETCH = 413,
     FILTER = 414,
     FIRST_P = 415,
     FLOAT_P = 416,
     FOLLOWING = 417,
     FOR = 418,
     FORCE = 419,
     FOREIGN = 420,
     FORWARD = 421,
     FREEZE = 422,
     FROM = 423,
     FULL = 424,
     FUNCTION = 425,
     FUNCTIONS = 426,
     GENERATED = 427,
     GLOB = 428,
     GLOBAL = 429,
     GRANT = 430,
     GRANTED = 431,
     GROUP_P = 432,
     GROUPING = 433,
     GROUPING_ID = 434,
     HANDLER = 435,
     HAVING = 436,
     HEADER_P = 437,
     HOLD = 438,
     HOUR_P = 439,
     HOURS_P = 440,
     IDENTITY_P = 441,
     IF_P = 442,
     IGNORE_P = 443,
     ILIKE = 444,
     IMMEDIATE = 445,
     IMMUTABLE = 446,
     IMPLICIT_P = 447,
     IMPORT_P = 448,
     IN_P = 449,
     INCLUDING = 450,
     INCREMENT = 451,
     INDEX = 452,
     INDEXES = 453,
     INHERIT = 454,
     INHERITS = 455,
     INITIALLY = 456,
     INLINE_P = 457,
     INNER_P = 458,
     INOUT = 459,
     INPUT_P = 460,
     INSENSITIVE = 461,
     INSERT = 462,
     INSTALL = 463,
     INSTEAD = 464,
     INT_P = 465,
     INTEGER = 466,
     INTERSECT = 467,
     INTERVAL = 468,
     INTO = 469,
     INVOKER = 470,
     IS = 471,
     ISNULL = 472,
     ISOLATION = 473,
     JOIN = 474,
     KEY = 475,
     LABEL = 476,
     LANGUAGE = 477,
     LARGE_P = 478,
     LAST_P = 479,
     LATERAL_P = 480,
     LEADING = 481,
     LEAKPROOF = 482,
     LEFT = 483,
     LEVEL = 484,
     LIKE = 485,
     LIMIT = 486,
     LISTEN = 487,
     LOAD = 488,
     LOCAL = 489,
     LOCALTIME = 490,
     LOCALTIMESTAMP = 491,
     LOCATION = 492,
     LOCK_P = 493,
     LOCKED = 494,
     LOGGED = 495,
     MACRO = 496,
     MAP = 497,
     MAPPING = 498,
     MATCH = 499,
     MATERIALIZED = 500,
     MAXVALUE = 501,
     METHOD = 502,
     MICROSECOND_P = 503,
     MICROSECONDS_P = 504,
     MILLISECOND_P = 505,
     MILLISECONDS_P = 506,
     MINUTE_P = 507,
     MINUTES_P = 508,
     MINVALUE = 509,
     MODE = 510,
     MONTH_P = 511,
     MONTHS_P = 512,
     MOVE = 513,
     NAME_P = 514,
     NAMES = 515,
     NATIONAL = 516,
     NATURAL = 517,
     NCHAR = 518,
     NEW = 519,
     NEXT = 520,
     NO = 521,
     NONE = 522,
     NOT = 523,
     NOTHING = 524,
     NOTIFY = 525,
     NOTNULL = 526,
     NOWAIT = 527,
     NULL_P = 528,
     NULLIF = 529,
     NULLS_P = 530,
     NUMERIC = 531,
     OBJECT_P = 532,
     OF = 533,
     OFF = 534,
     OFFSET = 535,
     OIDS = 536,
     OLD = 537,
     ON = 538,
     ONLY = 539,
     OPERATOR = 540,
     OPTION = 541,
     OPTIONS = 542,
     OR = 543,
     ORDER = 544,
     ORDINALITY = 545,
     OUT_P = 546,
     OUTER_P = 547,
     OVER = 548,
     OVERLAPS = 549,
     OVERLAY = 550,
     OVERRIDING = 551,
     OWNED = 552,
     OWNER = 553,
     PARALLEL = 554,
     PARSER = 555,
     PARTIAL = 556,
     PARTITION = 557,
     PASSING = 558,
     PASSWORD = 559,
     PERCENT = 560,
     PLACING = 561,
     PLANS = 562,
     POLICY = 563,
     POSITION = 564,
     PRAGMA_P = 565,
     PRECEDING = 566,
     PRECISION = 567,
     PREPARE = 568,
     PREPARED = 569,
     PRESERVE = 570,
     PRIMARY = 571,
     PRIOR = 572,
     PRIVILEGES = 573,
     PROCEDURAL = 574,
     PROCEDURE = 575,
     PROGRAM = 576,
     PUBLICATION = 577,
     QUOTE = 578,
     RANGE = 579,
     READ_P = 580,
     REAL = 581,
     REASSIGN = 582,
     RECHECK = 583,
     RECURSIVE = 584,
     REF = 585,
     REFERENCES = 586,
     REFERENCING = 587,
     REFRESH = 588,
     REINDEX = 589,
     RELATIVE_P = 590,
     RELEASE = 591,
     RENAME = 592,
     REPEATABLE = 593,
     REPLACE = 594,
     REPLICA = 595,
     RESET = 596,
     RESPECT_P = 597,
     RESTART = 598,
     RESTRICT = 599,
     RETURNING = 600,
     RETURNS = 601,
     REVOKE = 602,
     RIGHT = 603,
     ROLE = 604,
     ROLLBACK = 605,
     ROLLUP = 606,
     ROW = 607,
     ROWS = 608,
     RULE = 609,
     SAMPLE = 610,
     SAVEPOINT = 611,
     SCHEMA = 612,
     SCHEMAS = 613,
     SCROLL = 614,
     SEARCH = 615,
     SECOND_P = 616,
     SECONDS_P = 617,
     SECURITY = 618,
     SELECT = 619,
     SEQUENCE = 620,
     SEQUENCES = 621,
     SERIALIZABLE = 622,
     SERVER = 623,
     SESSION = 624,
     SESSION_USER = 625,
     SET = 626,
     SETOF = 627,
     SETS = 628,
     SHARE = 629,
     SHOW = 630,
     SIMILAR = 631,
     SIMPLE = 632,
     SKIP = 633,
     SMALLINT = 634,
     SNAPSHOT = 635,
     SOME = 636,
     SQL_P = 637,
     STABLE = 638,
     STANDALONE_P = 639,
     START = 640,
     STATEMENT = 641,
     STATISTICS = 642,
     STDIN = 643,
     STDOUT = 644,
     STORAGE = 645,
     STRICT_P = 646,
     STRIP_P = 647,
     STRUCT = 648,
     SUBSCRIPTION = 649,
     SUBSTRING = 650,
     SUMMARIZE = 651,
     SYMMETRIC = 652,
     SYSID = 653,
     SYSTEM_P = 654,
     TABLE = 655,
     TABLES = 656,
     TABLESAMPLE = 657,
     TABLESPACE = 658,
     TEMP = 659,
     TEMPLATE = 660,
     TEMPORARY = 661,
     TEXT_P = 662,
     THEN = 663,
     TIME = 664,
     TIMESTAMP = 665,
     TO = 666,
     TRAILING = 667,
     TRANSACTION = 668,
     TRANSFORM = 669,
     TREAT = 670,
     TRIGGER = 671,
     TRIM = 672,
     TRUE_P = 673,
     TRUNCATE = 674,
     TRUSTED = 675,
     TRY_CAST = 676,
     TYPE_P = 677,
     TYPES_P = 678,
     UNBOUNDED = 679,
     UNCOMMITTED = 680,
     UNENCRYPTED = 681,
     UNION = 682,
     UNIQUE = 683,
     UNKNOWN = 684,
     UNLISTEN = 685,
     UNLOGGED = 686,
     UNTIL = 687,
     UPDATE = 688,
     USER = 689,
     USING = 690,
     VACUUM = 691,
     VALID = 692,
     VALIDATE = 693,
     VALIDATOR = 694,
     VALUE_P = 695,
     VALUES = 696,
     VARCHAR = 697,
     VARIADIC = 698,
     VARYING = 699,
     VERBOSE = 700,
     VERSION_P = 701,
     VIEW = 702,
     VIEWS = 703,
     VOLATILE = 704,
     WHEN = 705,
     WHERE = 706,
     WHITESPACE_P = 707,
     WINDOW = 708,
     WITH = 709,
     WITHIN = 710,
     WITHOUT = 711,
     WORK = 712,
     WRAPPER = 713,
     WRITE_P = 714,
     XML_P = 715,
     XMLATTRIBUTES = 716,
     XMLCONCAT = 717,
     XMLELEMENT = 718,
     XMLEXISTS = 719,
     XMLFOREST = 720,
     XMLNAMESPACES = 721,
     XMLPARSE = 722,
     XMLPI = 723,
     XMLROOT = 724,
     XMLSERIALIZE = 725,
     XMLTABLE = 726,
     YEAR_P = 727,
     YEARS_P = 728,
     YES_P = 729,
     ZONE = 730,
     NOT_LA = 731,
     NULLS_LA = 732,
     WITH_LA = 733,
     POSTFIXOP = 734,
     UMINUS = 735
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXTENSION 408
#define EXTERNAL 409
#define EXTRACT 410
#define FALSE_P 411
#define FAMILY 412
#define FETCH 413
#define FILTER 414
#define FIRST_P 415
#define FLOAT_P 416
#define FOLLOWING 417
#define FOR 418
#define FORCE 419
#define FOREIGN 420
#define FORWARD 421
#define FREEZE 422
#define FROM 423
#define FULL 424
#define FUNCTION 425
#define FUNCTIONS 426
#define GENERATED 427
#define GLOB 428
#define GLOBAL 429
#define GRANT 430
#define GRANTED 431
#define GROUP_P 432
#define GROUPING 433
#define GROUPING_ID 434
#define HANDLER 435
#define HAVING 436
#define HEADER_P 437
#define HOLD 438
#define HOUR_P 439
#define HOURS_P 440
#define IDENTITY_P 441
#define IF_P 442
#define IGNORE_P 443
#define ILIKE 444
#define IMMEDIATE 445
#define IMMUTABLE 446
#define IMPLICIT_P 447
#define IMPORT_P 448
#define IN_P 449
#define INCLUDING 450
#define INCREMENT 451
#define INDEX 452
#define INDEXES 453
#define INHERIT 454
#define INHERITS 455
#define INITIALLY 456
#define INLINE_P 457
#define INNER_P 458
#define INOUT 459
#define INPUT_P 460
#define INSENSITIVE 461
#define INSERT 462
#define INSTALL 463
#define INSTEAD 464
#define INT_P 465
#define INTEGER 466
#define INTERSECT 467
#define INTERVAL 468
#define INTO 469
#define INVOKER 470
#define IS 471
#define ISNULL 472
#define ISOLATION 473
#define JOIN 474
#define KEY 475
#define LABEL 476
#define LANGUAGE 477
#define LARGE_P 478
#define LAST_P 479
#define LATERAL_P 480
#define LEADING 481
#define LEAKPROOF 482
#define LEFT 483
#define LEVEL 484
#define LIKE 485
#define LIMIT 486
#define LISTEN 487
#define LOAD 488
#define LOCAL 489
#define LOCALTIME 490
#define LOCALTIMESTAMP 491
#define LOCATION 492
#define LOCK_P 493
#define LOCKED 494
#define LOGGED 495
#define MACRO 496
#define MAP 497
#define MAPPING 498
#define MATCH 499
#define MATERIALIZED 500
#define MAXVALUE 501
#define METHOD 502
#define MICROSECOND_P 503
#define MICROSECONDS_P 504
#define MILLISECOND_P 505
#define MILLISECONDS_P 506
#define MINUTE_P 507
#define MINUTES_P 508
#define MINVALUE 509
#define MODE 510
#define MONTH_P 511
#define MONTHS_P 512
#define MOVE 513
#define NAME_P 514
#define NAMES 515
#define NATIONAL 516
#define NATURAL 517
#define NCHAR 518
#define NEW 519
#define NEXT 520
#define NO 521
#define NONE 522
#define NOT 523
#define NOTHING 524
#define NOTIFY 525
#define NOTNULL 526
#define NOWAIT 527
#define NULL_P 528
#define NULLIF 529
#define NULLS_P 530
#define NUMERIC 531
#define OBJECT_P 532
#define OF 533
#define OFF 534
#define OFFSET 535
#define OIDS 536
#define OLD 537
#define ON 538
#define ONLY 539
#define OPERATOR 540
#define OPTION 541
#define OPTIONS 542
#define OR 543
#define ORDER 544
#define ORDINALITY 545
#define OUT_P 546
#define OUTER_P 547
#define OVER 548
#define OVERLAPS 549
#define OVERLAY 550
#define OVERRIDING 551
#define OWNED 552
#define OWNER 553
#define PARALLEL 554
#define PARSER 555
#define PARTIAL 556
#define PARTITION 557
#define PASSING 558
#define PASSWORD 559
#define PERCENT 560
#define PLACING 561
#define PLANS 562
#define POLICY 563
#define POSITION 564
#define PRAGMA_P 565
#define PRECEDING 566
#define PRECISION 567
#define PREPARE 568
#define PREPARED 569
#define PRESERVE 570
#define PRIMARY 571
#define PRIOR 572
#define PRIVILEGES 573
#define PROCEDURAL 574
#define PROCEDURE 575
#define PROGRAM 576
#define PUBLICATION 577
#define QUOTE 578
#define RANGE 579
#define READ_P 580
#define REAL 581
#define REASSIGN 582
#define RECHECK 583
#define RECURSIVE 584
#define REF 585
#define REFERENCES 586
#define REFERENCING 587
#define REFRESH 588
#define REINDEX 589
#define RELATIVE_P 590
#define RELEASE 591
#define RENAME 592
#define REPEATABLE 593
#define REPLACE 594
#define REPLICA 595
#define RESET 596
#define RESPECT_P 597
#define RESTART 598
#define RESTRICT 599
#define RETURNING 600
#define RETURNS 601
#define REVOKE 602
#define RIGHT 603
#define ROLE 604
#define ROLLBACK 605
#define ROLLUP 606
#define ROW 607
#define ROWS 608
#define RULE 609
#define SAMPLE 610
#define SAVEPOINT 611
#define SCHEMA 612
#define SCHEMAS 613
#define SCROLL 614
#define SEARCH 615
#define SECOND_P 616
#define SECONDS_P 617
#define SECURITY 618
#define SELECT 619
#define SEQUENCE 620
#define SEQUENCES 621
#define SERIALIZABLE 622
#define SERVER 623
#define SESSION 624
#define SESSION_USER 625
#define SET 626
#define SETOF 627
#define SETS 628
#define SHARE 629
#define SHOW 630
#define SIMILAR 631
#define SIMPLE 632
#define SKIP 633
#define SMALLINT 634
#define SNAPSHOT 635
#define SOME 636
#define SQL_P 637
#define STABLE 638
#define STANDALONE_P 639
#define START 640
#define STATEMENT 641
#define STATISTICS 642
#define STDIN 643
#define STDOUT 644
#define STORAGE 645
#define STRICT_P 646
#define STRIP_P 647
#define STRUCT 648
#define SUBSCRIPTION 649
#define SUBSTRING 650
#define SUMMARIZE 651
#define SYMMETRIC 652
#define SYSID 653
#define SYSTEM_P 654
#define TABLE 655
#define TABLES 656
#define TABLESAMPLE 657
#define TABLESPACE 658
#define TEMP 659
#define TEMPLATE 660
#define TEMPORARY 661
#define TEXT_P 662
#define THEN 663
#define TIME 664
#define TIMESTAMP 665
#define TO 666
#define TRAILING 667
#define TRANSACTION 668
#define TRANSFORM 669
#define TREAT 670
#define TRIGGER 671
#define TRIM 672
#define TRUE_P 673
#define TRUNCATE 674
#define TRUSTED 675
#define TRY_CAST 676
#define TYPE_P 677
#define TYPES_P 678
#define UNBOUNDED 679
#define UNCOMMITTED 680
#define UNENCRYPTED 681
#define UNION 682
#define UNIQUE 683
#define UNKNOWN 684
#define UNLISTEN 685
#define UNLOGGED 686
#define UNTIL 687
#define UPDATE 688
#define USER 689
#define USING 690
#define VACUUM 691
#define VALID 692
#define VALIDATE 693
#define VALIDATOR 694
#define VALUE_P 695
#define VALUES 696
#define VARCHAR 697
#define VARIADIC 698
#define VARYING 699
#define VERBOSE 700
#define VERSION_P 701
#define VIEW 702
#define VIEWS 703
#define VOLATILE 704
#define WHEN 705
#define WHERE 706
#define WHITESPACE_P 707
#define WINDOW 708
#define WITH 709
#define WITHIN 710
#define WITHOUT 711
#define WORK 712
#define WRAPPER 713
#define WRITE_P 714
#define XML_P 715
#define XMLATTRIBUTES 716
#define XMLCONCAT 717
#define XMLELEMENT 718
#define XMLEXISTS 719
#define XMLFOREST 720
#define XMLNAMESPACES 721
#define XMLPARSE 722
#define XMLPI 723
#define XMLROOT 724
#define XMLSERIALIZE 725
#define XMLTABLE 726
#define YEAR_P 727
#define YEARS_P 728
#define YES_P 729
#define ZONE 730
#define NOT_LA 731
#define NULLS_LA 732
#define WITH_LA 733
#define POSTFIXOP 734
#define UMINUS 735




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 187 of yacc.c.  */
#line 1274 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1299 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  596
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   52642

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  502
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  383
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1801
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2978

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   735

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   499,     2,   487,     2,     2,
     492,   493,   485,   483,   496,   484,   494,   486,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   501,   495,
     479,   481,   480,   500,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   490,     2,   491,   488,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   497,     2,   498,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   482,   489
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     354,   358,   361,   366,   372,   379,   388,   395,   404,   411,
     420,   423,   428,   432,   438,   440,   441,   443,   445,   446,
     448,   450,   452,   454,   456,   458,   460,   462,   464,   466,
     468,   472,   474,   476,   478,   480,   482,   484,   487,   489,
     491,   494,   497,   501,   503,   505,   508,   513,   521,   523,
     528,   533,   541,   544,   546,   550,   555,   559,   560,   562,
     563,   566,   570,   576,   585,   591,   592,   598,   604,   612,
     615,   616,   618,   620,   622,   626,   629,   630,   632,   633,
     635,   639,   641,   645,   647,   651,   654,   661,   668,   677,
     684,   693,   700,   709,   716,   725,   734,   745,   754,   765,
     767,   768,   773,   780,   782,   785,   787,   789,   790,   792,
     795,   798,   800,   803,   806,   808,   811,   815,   818,   821,
     824,   827,   831,   835,   839,   841,   845,   847,   848,   850,
     853,   856,   866,   879,   891,   892,   895,   897,   899,   901,
     903,   905,   907,   911,   912,   914,   917,   919,   921,   924,
     927,   931,   933,   935,   938,   941,   943,   946,   950,   956,
     960,   963,   969,   975,   978,   982,   984,   986,   989,   992,
     993,   998,   999,  1003,  1008,  1013,  1014,  1018,  1021,  1022,
    1026,  1028,  1030,  1032,  1034,  1036,  1038,  1040,  1042,  1044,
    1046,  1050,  1054,  1056,  1059,  1062,  1065,  1068,  1071,  1074,
    1075,  1079,  1083,  1087,  1088,  1090,  1093,  1095,  1098,  1101,
    1104,  1107,  1112,  1114,  1118,  1120,  1124,  1126,  1128,  1130,
    1132,  1136,  1138,  1141,  1142,  1144,  1145,  1147,  1151,  1152,
    1155,  1156,  1160,  1164,  1166,  1172,  1176,  1178,  1182,  1184,
    1189,  1195,  1201,  1208,  1212,  1220,  1225,  1237,  1239,  1243,
    1246,  1249,  1252,  1253,  1257,  1259,  1261,  1264,  1267,  1270,
    1273,  1275,  1276,  1278,  1281,  1287,  1296,  1298,  1299,  1302,
    1305,  1308,  1311,  1315,  1320,  1323,  1325,  1327,  1329,  1333,
    1336,  1338,  1340,  1342,  1345,  1349,  1363,  1380,  1382,  1385,
    1386,  1388,  1389,  1391,  1392,  1395,  1396,  1398,  1399,  1407,
    1418,  1421,  1425,  1426,  1431,  1434,  1438,  1441,  1445,  1448,
    1451,  1454,  1457,  1460,  1463,  1465,  1467,  1468,  1478,  1490,
    1503,  1518,  1522,  1527,  1532,  1533,  1538,  1544,  1550,  1555,
    1562,  1564,  1566,  1568,  1570,  1572,  1574,  1575,  1577,  1581,
    1583,  1584,  1587,  1590,  1594,  1598,  1602,  1604,  1608,  1612,
    1615,  1619,  1623,  1627,  1631,  1633,  1635,  1637,  1639,  1643,
    1649,  1651,  1653,  1655,  1657,  1661,  1673,  1683,  1685,  1687,
    1691,  1692,  1694,  1698,  1700,  1701,  1703,  1704,  1706,  1707,
    1709,  1713,  1715,  1717,  1719,  1723,  1724,  1727,  1730,  1731,
    1734,  1735,  1737,  1738,  1740,  1742,  1744,  1748,  1752,  1754,
    1756,  1760,  1764,  1768,  1772,  1777,  1781,  1784,  1786,  1788,
    1790,  1792,  1794,  1798,  1805,  1807,  1809,  1812,  1816,  1819,
    1821,  1827,  1831,  1832,  1834,  1836,  1838,  1840,  1849,  1851,
    1853,  1857,  1861,  1863,  1866,  1871,  1876,  1879,  1883,  1889,
    1895,  1897,  1899,  1910,  1921,  1923,  1926,  1931,  1936,  1941,
    1944,  1947,  1951,  1953,  1957,  1964,  1967,  1968,  1972,  1976,
    1981,  1986,  1991,  1996,  2000,  2003,  2005,  2007,  2008,  2010,
    2012,  2013,  2015,  2021,  2023,  2024,  2027,  2030,  2031,  2033,
    2034,  2038,  2040,  2044,  2049,  2053,  2055,  2057,  2058,  2061,
    2064,  2065,  2068,  2071,  2073,  2075,  2077,  2078,  2081,  2086,
    2092,  2097,  2100,  2104,  2107,  2110,  2113,  2116,  2118,  2121,
    2125,  2126,  2128,  2129,  2135,  2137,  2142,  2149,  2152,  2154,
    2155,  2160,  2161,  2163,  2165,  2168,  2171,  2174,  2176,  2178,
    2181,  2184,  2186,  2188,  2190,  2192,  2194,  2196,  2200,  2201,
    2203,  2207,  2209,  2211,  2213,  2215,  2217,  2220,  2225,  2230,
    2236,  2238,  2240,  2243,  2244,  2246,  2250,  2252,  2253,  2255,
    2258,  2262,  2265,  2270,  2273,  2277,  2280,  2281,  2283,  2286,
    2287,  2292,  2298,  2301,  2302,  2304,  2308,  2312,  2316,  2320,
    2324,  2328,  2330,  2335,  2339,  2344,  2350,  2355,  2361,  2366,
    2372,  2375,  2380,  2382,  2384,  2385,  2387,  2392,  2398,  2403,
    2404,  2407,  2410,  2413,  2415,  2417,  2418,  2423,  2426,  2428,
    2431,  2434,  2439,  2442,  2449,  2452,  2454,  2458,  2463,  2464,
    2467,  2468,  2471,  2472,  2474,  2478,  2482,  2485,  2486,  2489,
    2494,  2496,  2498,  2501,  2505,  2511,  2518,  2521,  2525,  2531,
    2537,  2541,  2546,  2547,  2549,  2551,  2553,  2555,  2557,  2560,
    2565,  2567,  2569,  2571,  2573,  2576,  2580,  2581,  2583,  2585,
    2587,  2589,  2591,  2594,  2597,  2600,  2603,  2606,  2608,  2612,
    2613,  2615,  2617,  2619,  2621,  2627,  2630,  2632,  2634,  2636,
    2638,  2643,  2645,  2648,  2651,  2653,  2657,  2661,  2664,  2666,
    2667,  2673,  2676,  2682,  2685,  2687,  2691,  2695,  2696,  2698,
    2700,  2702,  2704,  2706,  2708,  2710,  2712,  2714,  2716,  2718,
    2720,  2722,  2724,  2726,  2728,  2730,  2732,  2734,  2736,  2738,
    2740,  2742,  2744,  2748,  2752,  2756,  2760,  2764,  2768,  2772,
    2773,  2775,  2779,  2783,  2789,  2792,  2795,  2799,  2803,  2807,
    2811,  2815,  2819,  2823,  2827,  2831,  2835,  2839,  2843,  2847,
    2850,  2853,  2857,  2861,  2864,  2867,  2871,  2875,  2881,  2886,
    2893,  2897,  2903,  2908,  2915,  2920,  2927,  2933,  2941,  2945,
    2948,  2953,  2957,  2960,  2962,  2966,  2970,  2974,  2978,  2982,
    2986,  2991,  2995,  3000,  3004,  3009,  3015,  3022,  3029,  3037,
    3044,  3052,  3059,  3067,  3071,  3076,  3081,  3088,  3090,  3095,
    3097,  3101,  3104,  3107,  3111,  3115,  3119,  3123,  3127,  3131,
    3135,  3139,  3143,  3147,  3151,  3155,  3159,  3162,  3165,  3171,
    3178,  3185,  3193,  3195,  3197,  3200,  3203,  3206,  3211,  3213,
    3216,  3218,  3221,  3224,  3229,  3233,  3240,  3248,  3258,  3266,
    3274,  3279,  3284,  3286,  3288,  3290,  3296,  3298,  3300,  3305,
    3307,  3312,  3314,  3319,  3321,  3326,  3328,  3330,  3332,  3334,
    3336,  3338,  3345,  3352,  3357,  3362,  3367,  3372,  3379,  3385,
    3391,  3397,  3402,  3409,  3414,  3420,  3421,  3427,  3428,  3431,
    3432,  3434,  3438,  3442,  3445,  3448,  3449,  3456,  3458,  3459,
    3463,  3464,  3467,  3470,  3471,  3473,  3478,  3481,  3484,  3487,
    3490,  3493,  3498,  3502,  3504,  3510,  3514,  3516,  3520,  3522,
    3524,  3526,  3528,  3530,  3532,  3534,  3536,  3538,  3540,  3542,
    3544,  3546,  3548,  3550,  3552,  3554,  3556,  3561,  3563,  3568,
    3570,  3575,  3577,  3580,  3582,  3585,  3587,  3590,  3592,  3596,
    3598,  3602,  3604,  3605,  3607,  3611,  3613,  3617,  3621,  3623,
    3627,  3631,  3632,  3634,  3636,  3638,  3640,  3642,  3644,  3646,
    3648,  3650,  3652,  3657,  3661,  3664,  3668,  3669,  3673,  3677,
    3680,  3683,  3685,  3686,  3689,  3692,  3696,  3699,  3701,  3703,
    3707,  3713,  3715,  3718,  3723,  3726,  3727,  3729,  3730,  3732,
    3735,  3738,  3742,  3748,  3750,  3751,  3753,  3756,  3757,  3760,
    3762,  3763,  3765,  3766,  3768,  3772,  3776,  3779,  3781,  3785,
    3791,  3796,  3799,  3801,  3802,  3806,  3808,  3812,  3817,  3820,
    3821,  3823,  3827,  3829,  3832,  3834,  3838,  3840,  3842,  3844,
    3847,  3849,  3851,  3854,  3856,  3858,  3861,  3869,  3872,  3878,
    3882,  3886,  3888,  3890,  3892,  3894,  3896,  3898,  3900,  3902,
    3904,  3906,  3908,  3910,  3912,  3914,  3916,  3918,  3920,  3922,
    3924,  3926,  3929,  3932,  3936,  3940,  3941,  3943,  3945,  3947,
    3949,  3951,  3953,  3955,  3963,  3965,  3968,  3972,  3975,  3976,
    3979,  3980,  3985,  3993,  3996,  3997,  3999,  4001,  4003,  4005,
    4012,  4017,  4024,  4029,  4036,  4045,  4050,  4057,  4059,  4061,
    4063,  4065,  4067,  4070,  4072,  4075,  4077,  4079,  4081,  4085,
    4089,  4093,  4097,  4100,  4103,  4105,  4109,  4111,  4113,  4115,
    4117,  4121,  4123,  4125,  4126,  4128,  4130,  4132,  4134,  4138,
    4147,  4149,  4150,  4152,  4156,  4160,  4170,  4183,  4187,  4188,
    4190,  4192,  4194,  4196,  4198,  4200,  4202,  4204,  4206,  4208,
    4210,  4212,  4214,  4216,  4218,  4220,  4222,  4224,  4226,  4228,
    4230,  4232,  4234,  4236,  4238,  4240,  4242,  4244,  4246,  4248,
    4250,  4252,  4254,  4256,  4258,  4260,  4262,  4264,  4266,  4268,
    4270,  4272,  4274,  4276,  4278,  4280,  4282,  4284,  4286,  4288,
    4290,  4292,  4294,  4296,  4298,  4300,  4302,  4304,  4306,  4308,
    4310,  4312,  4314,  4316,  4318,  4320,  4322,  4324,  4326,  4328,
    4330,  4332,  4334,  4336,  4338,  4340,  4342,  4344,  4346,  4348,
    4350,  4352,  4354,  4356,  4358,  4360,  4362,  4364,  4366,  4368,
    4370,  4372,  4374,  4376,  4378,  4380,  4382,  4384,  4386,  4388,
    4390,  4392,  4394,  4396,  4398,  4400,  4402,  4404,  4406,  4408,
    4410,  4412,  4414,  4416,  4418,  4420,  4422,  4424,  4426,  4428,
    4430,  4432,  4434,  4436,  4438,  4440,  4442,  4444,  4446,  4448,
    4450,  4452,  4454,  4456,  4458,  4460,  4462,  4464,  4466,  4468,
    4470,  4472,  4474,  4476,  4478,  4480,  4482,  4484,  4486,  4488,
    4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,  4506,  4508,
    4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,  4526,  4528,
    4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,  4546,  4548,
    4550,  4552,  4554,  4556,  4558,  4560,  4562,  4564,  4566,  4568,
    4570,  4572,  4574,  4576,  4578,  4580,  4582,  4584,  4586,  4588,
    4590,  4592,  4594,  4596,  4598,  4600,  4602,  4604,  4606,  4608,
    4610,  4612,  4614,  4616,  4618,  4620,  4622,  4624,  4626,  4628,
    4630,  4632,  4634,  4636,  4638,  4640,  4642,  4644,  4646,  4648,
    4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,  4666,  4668,
    4670,  4672,  4674,  4676,  4678,  4680,  4682,  4684,  4686,  4688,
    4690,  4692,  4694,  4696,  4698,  4700,  4702,  4704,  4706,  4708,
    4710,  4712,  4714,  4716,  4718,  4720,  4722,  4724,  4726,  4728,
    4730,  4732,  4734,  4736,  4738,  4740,  4742,  4744,  4746,  4748,
    4750,  4752,  4754,  4756,  4758,  4760,  4762,  4764,  4766,  4768,
    4770,  4772,  4774,  4776,  4778,  4780,  4782,  4784,  4786,  4788,
    4790,  4792,  4794,  4796,  4798,  4800,  4802,  4804,  4806,  4808,
    4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,  4826,  4828,
    4830,  4832,  4834,  4836,  4838,  4840,  4842,  4844,  4846,  4848,
    4850,  4852,  4854,  4856,  4858,  4860,  4862,  4864,  4866,  4868,
    4870,  4872,  4874,  4876,  4878,  4880,  4882,  4884,  4886,  4888,
    4890,  4892,  4894,  4896,  4898,  4900,  4902,  4904,  4906,  4908,
    4910,  4912,  4914,  4916,  4918,  4920,  4922,  4924,  4926,  4928,
    4930,  4932,  4934,  4936,  4938,  4940,  4942,  4944,  4946,  4948,
    4950,  4952,  4954,  4956,  4958,  4960,  4962,  4964,  4966,  4968,
    4970,  4972,  4974,  4976,  4978,  4980,  4982,  4984,  4986,  4988,
    4990,  4992,  4994,  4996,  4998,  5000,  5002,  5004,  5006,  5008,
    5010,  5012,  5014,  5016,  5018,  5020,  5022,  5024,  5026,  5028,
    5030,  5032,  5034,  5036,  5038,  5040,  5042,  5044,  5046,  5048,
    5050,  5052,  5054,  5056,  5058,  5060,  5062,  5064,  5066,  5068,
    5070,  5072,  5074,  5076,  5078,  5080,  5082,  5084,  5086,  5088,
    5090,  5092,  5094,  5096,  5098,  5100,  5102,  5104,  5106,  5108,
    5110,  5112,  5114,  5116,  5118,  5120,  5122,  5124,  5126,  5128,
    5130,  5132,  5134,  5136,  5138,  5140,  5142,  5144,  5146,  5148,
    5150,  5152,  5154,  5156,  5158,  5160,  5162,  5164,  5166,  5168,
    5170,  5172,  5174,  5176,  5178,  5180,  5182,  5184,  5186,  5188,
    5190,  5192,  5194,  5196,  5198,  5200,  5202,  5204,  5206,  5208,
    5210,  5212,  5214,  5216,  5218,  5220,  5222,  5224,  5226,  5228,
    5230,  5232,  5234,  5236,  5238,  5240,  5242,  5244,  5246,  5248,
    5250,  5252,  5254,  5256,  5258,  5260,  5262,  5264,  5266,  5268,
    5270,  5272,  5274,  5276,  5278,  5280,  5282,  5284,  5286,  5288,
    5290,  5292,  5294,  5296,  5298,  5300,  5302,  5304,  5306,  5308,
    5310,  5312
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     503,     0,    -1,   504,    -1,   504,   495,   505,    -1,   505,
      -1,   520,    -1,   555,    -1,   506,    -1,   534,    -1,   636,
      -1,   663,    -1,   643,    -1,   623,    -1,   873,    -1,   660,
      -1,   863,    -1,   608,    -1,   562,    -1,   626,    -1,   859,
      -1,   866,    -1,   876,    -1,   521,    -1,   517,    -1,   518,
      -1,   616,    -1,   535,    -1,   532,    -1,   519,    -1,   664,
      -1,   553,    -1,   668,    -1,   627,    -1,   667,    -1,   631,
      -1,   613,    -1,   637,    -1,   610,    -1,   629,    -1,    -1,
      29,   400,   733,   514,    -1,    29,   400,   187,   150,   733,
     514,    -1,    29,   197,   840,   514,    -1,    29,   197,   187,
     150,   840,   514,    -1,    29,   365,   840,   514,    -1,    29,
     365,   187,   150,   840,   514,    -1,    29,   447,   840,   514,
      -1,    29,   447,   187,   150,   840,   514,    -1,   509,    -1,
     507,   509,    -1,   371,   115,   775,    -1,   135,   115,    -1,
     343,    -1,   343,   557,   558,    -1,   371,   559,    -1,   371,
     172,   607,    -1,   513,    -1,   510,   496,   513,    -1,    23,
     587,    -1,    23,   187,   268,   150,   587,    -1,    23,    75,
     587,    -1,    23,    75,   187,   268,   150,   587,    -1,    29,
     554,   848,   508,    -1,    29,   554,   848,   135,   268,   273,
      -1,    29,   554,   848,   371,   268,   273,    -1,    29,   554,
     848,   371,   387,   561,    -1,    29,   554,   848,   371,   575,
      -1,    29,   554,   848,   341,   575,    -1,    29,   554,   848,
     371,   390,   848,    -1,    29,   554,   848,    23,   172,   607,
      36,   186,   565,    -1,    29,   554,   848,   507,    -1,    29,
     554,   848,   135,   186,    -1,    29,   554,   848,   135,   186,
     187,   150,    -1,   135,   554,   187,   150,   848,   870,    -1,
     135,   554,   848,   870,    -1,    29,   554,   848,   516,   422,
     745,   742,   512,    -1,    29,   554,   848,   515,    -1,    23,
     577,    -1,    29,    86,   842,   563,    -1,   438,    86,   842,
      -1,   135,    86,   187,   150,   842,   870,    -1,   135,    86,
     842,   870,    -1,   371,   240,    -1,   371,   431,    -1,   371,
     575,    -1,   341,   575,    -1,   515,    -1,   435,   775,    -1,
      -1,   570,    -1,   371,   570,    -1,    23,   570,    -1,   135,
     585,    -1,   511,    -1,   514,   496,   511,    -1,   287,   492,
     510,   493,    -1,   371,   107,    -1,   371,    -1,    -1,   152,
     108,   847,   650,    -1,   193,   108,   847,    -1,   310,   848,
      -1,   310,   848,   481,   642,    -1,   310,   848,   492,   807,
     493,    -1,    29,   400,   733,   371,   357,   842,    -1,    29,
     400,   187,   150,   733,   371,   357,   842,    -1,    29,   365,
     840,   371,   357,   842,    -1,    29,   365,   187,   150,   840,
     371,   357,   842,    -1,    29,   447,   840,   371,   357,   842,
      -1,    29,   447,   187,   150,   840,   371,   357,   842,    -1,
     151,   524,    -1,   151,   528,   522,   524,    -1,   151,   445,
     524,    -1,   151,   492,   527,   493,   524,    -1,   445,    -1,
      -1,   529,    -1,   558,    -1,    -1,   668,    -1,   535,    -1,
     667,    -1,   859,    -1,   623,    -1,     3,    -1,   878,    -1,
     882,    -1,   525,    -1,   847,    -1,   530,    -1,   527,   496,
     530,    -1,    32,    -1,    31,    -1,   418,    -1,   156,    -1,
     283,    -1,   526,    -1,   531,   523,    -1,   525,    -1,   528,
      -1,   233,   533,    -1,   208,   533,    -1,   164,   208,   533,
      -1,   847,    -1,   848,    -1,   528,   522,    -1,   528,   522,
     840,   855,    -1,   539,   207,   214,   537,   536,   542,   544,
      -1,   668,    -1,   296,   545,   440,   668,    -1,   492,   549,
     493,   668,    -1,   492,   549,   493,   296,   545,   440,   668,
      -1,   115,   441,    -1,   840,    -1,   840,    36,   848,    -1,
     492,   551,   493,   739,    -1,   283,    86,   842,    -1,    -1,
     673,    -1,    -1,   848,   829,    -1,   552,   481,   775,    -1,
     492,   546,   493,   481,   775,    -1,   283,    84,   538,   131,
     433,   371,   550,   739,    -1,   283,    84,   538,   131,   269,
      -1,    -1,   848,   547,   548,   687,   688,    -1,   780,   547,
     548,   687,   688,    -1,   492,   775,   493,   547,   548,   687,
     688,    -1,   345,   832,    -1,    -1,   434,    -1,   399,    -1,
     552,    -1,   546,   496,   552,    -1,    73,   853,    -1,    -1,
     853,    -1,    -1,   540,    -1,   549,   496,   540,    -1,   541,
      -1,   550,   496,   541,    -1,   543,    -1,   551,   496,   543,
      -1,   848,   829,    -1,    29,   357,   842,   337,   411,   842,
      -1,    29,   400,   733,   337,   411,   842,    -1,    29,   400,
     187,   150,   733,   337,   411,   842,    -1,    29,   365,   840,
     337,   411,   842,    -1,    29,   365,   187,   150,   840,   337,
     411,   842,    -1,    29,   447,   840,   337,   411,   842,    -1,
      29,   447,   187,   150,   840,   337,   411,   842,    -1,    29,
     197,   840,   337,   411,   842,    -1,    29,   197,   187,   150,
     840,   337,   411,   842,    -1,    29,   400,   733,   337,   554,
     842,   411,   842,    -1,    29,   400,   187,   150,   733,   337,
     554,   842,   411,   842,    -1,    29,   400,   733,   337,    86,
     842,   411,   842,    -1,    29,   400,   187,   150,   733,   337,
      86,   842,   411,   842,    -1,    75,    -1,    -1,    29,   365,
     840,   556,    -1,    29,   365,   187,   150,   840,   556,    -1,
     559,    -1,   556,   559,    -1,   454,    -1,   478,    -1,    -1,
       4,    -1,   483,     4,    -1,   484,     4,    -1,   561,    -1,
      36,   747,    -1,    55,   558,    -1,   106,    -1,   266,   106,
      -1,   196,   560,   558,    -1,   246,   558,    -1,   254,   558,
      -1,   266,   246,    -1,   266,   254,    -1,   297,    54,   853,
      -1,   365,   259,   853,    -1,   385,   557,   558,    -1,   343,
      -1,   343,   557,   558,    -1,    54,    -1,    -1,   846,    -1,
     483,   846,    -1,   484,   846,    -1,    93,   606,   400,   840,
     492,   594,   493,   582,   574,    -1,    93,   606,   400,   187,
     268,   150,   840,   492,   594,   493,   582,   574,    -1,    93,
     288,   339,   606,   400,   840,   492,   594,   493,   582,   574,
      -1,    -1,   563,   586,    -1,   601,    -1,   884,    -1,   802,
      -1,   558,    -1,   847,    -1,   267,    -1,   492,   556,   493,
      -1,    -1,   847,    -1,   266,    22,    -1,   344,    -1,    58,
      -1,   371,   273,    -1,   371,   115,    -1,    86,   842,   569,
      -1,   569,    -1,   581,    -1,    73,   853,    -1,   268,   273,
      -1,   273,    -1,   428,   593,    -1,   316,   220,   593,    -1,
      67,   492,   775,   493,   576,    -1,   435,    81,   842,    -1,
     115,   776,    -1,   172,   607,    36,   186,   565,    -1,   331,
     840,   596,   604,   572,    -1,   585,   566,    -1,   283,   433,
     567,    -1,   571,    -1,   598,    -1,   571,   598,    -1,   598,
     571,    -1,    -1,   287,   492,   588,   493,    -1,    -1,   283,
      79,   135,    -1,   283,    79,   120,   353,    -1,   283,    79,
     315,   353,    -1,    -1,   492,   579,   493,    -1,   266,   199,
      -1,    -1,    86,   842,   602,    -1,   602,    -1,    78,    -1,
      87,    -1,   116,    -1,   186,    -1,   198,    -1,   387,    -1,
     390,    -1,    27,    -1,   599,    -1,   579,   496,   599,    -1,
     435,   197,   590,    -1,   117,    -1,   268,   117,    -1,   201,
     118,    -1,   201,   190,    -1,   454,   575,    -1,   454,   281,
      -1,   456,   281,    -1,    -1,   492,   589,   493,    -1,   584,
     195,   578,    -1,   584,   147,   578,    -1,    -1,   857,    -1,
     268,   117,    -1,   117,    -1,   201,   190,    -1,   201,   118,
      -1,   268,   437,    -1,   266,   199,    -1,   848,   745,   573,
     597,    -1,   570,    -1,   588,   496,   570,    -1,   592,    -1,
     589,   496,   592,    -1,   848,    -1,   587,    -1,   605,    -1,
     577,    -1,   857,   481,   564,    -1,   857,    -1,   454,   583,
      -1,    -1,   603,    -1,    -1,   848,    -1,   492,   600,   493,
      -1,    -1,   597,   568,    -1,    -1,   283,   120,   567,    -1,
     857,   481,   564,    -1,   857,    -1,   857,   494,   857,   481,
     564,    -1,   857,   494,   857,    -1,   595,    -1,   600,   496,
     595,    -1,   745,    -1,   850,   854,   487,   422,    -1,   372,
     850,   854,   487,   422,    -1,    67,   492,   775,   493,   563,
      -1,   428,   492,   600,   493,   593,   563,    -1,   428,   580,
     563,    -1,   316,   220,   492,   600,   493,   593,   563,    -1,
     316,   220,   580,   563,    -1,   165,   220,   492,   600,   493,
     331,   840,   596,   604,   572,   563,    -1,   591,    -1,   603,
     496,   591,    -1,   244,   169,    -1,   244,   301,    -1,   244,
     377,    -1,    -1,   230,   840,   584,    -1,   406,    -1,   404,
      -1,   234,   406,    -1,   234,   404,    -1,   174,   406,    -1,
     174,   404,    -1,   431,    -1,    -1,    30,    -1,    54,   115,
      -1,    93,   606,   365,   840,   609,    -1,    93,   606,   365,
     187,   268,   150,   840,   609,    -1,   556,    -1,    -1,   611,
     668,    -1,   396,   668,    -1,   396,   612,    -1,   611,   612,
      -1,   611,   409,   475,    -1,   611,   413,   218,   229,    -1,
     611,    27,    -1,   375,    -1,   125,    -1,   848,    -1,   612,
     494,   848,    -1,   341,   615,    -1,   612,    -1,    27,    -1,
     614,    -1,   409,   475,    -1,   413,   218,   229,    -1,    93,
     622,   197,   619,   620,   283,   840,   618,   492,   551,   493,
     621,   739,    -1,    93,   622,   197,   619,   187,   268,   150,
     590,   283,   840,   618,   492,   551,   493,   621,   739,    -1,
     848,    -1,   435,   617,    -1,    -1,    82,    -1,    -1,   590,
      -1,    -1,   454,   575,    -1,    -1,   428,    -1,    -1,    93,
     606,   400,   625,    36,   668,   624,    -1,    93,   606,   400,
     187,   268,   150,   625,    36,   668,   624,    -1,   454,   107,
      -1,   454,   266,   107,    -1,    -1,   840,   596,   582,   574,
      -1,   111,   842,    -1,   111,   313,   842,    -1,   111,    27,
      -1,   111,   313,    27,    -1,    19,   628,    -1,    47,   628,
      -1,   385,   628,    -1,    79,   628,    -1,   141,   628,    -1,
     350,   628,    -1,   457,    -1,   413,    -1,    -1,    93,   606,
     447,   840,   596,   621,    36,   668,   630,    -1,    93,   288,
     339,   606,   447,   840,   596,   621,    36,   668,   630,    -1,
      93,   606,   329,   447,   840,   492,   600,   493,   621,    36,
     668,   630,    -1,    93,   288,   339,   606,   329,   447,   840,
     492,   600,   493,   621,    36,   668,   630,    -1,   454,    67,
     286,    -1,   454,    59,    67,   286,    -1,   454,   234,    67,
     286,    -1,    -1,   436,   633,   635,   522,    -1,   436,   633,
     635,   522,   840,    -1,   436,   633,   635,   522,   534,    -1,
     436,   492,   634,   493,    -1,   436,   492,   634,   493,   840,
     855,    -1,   528,    -1,   445,    -1,   167,    -1,   169,    -1,
       3,    -1,   169,    -1,    -1,   632,    -1,   634,   496,   632,
      -1,   167,    -1,    -1,    56,   778,    -1,   371,   638,    -1,
     371,   234,   638,    -1,   371,   369,   638,    -1,   371,   174,
     638,    -1,   639,    -1,   612,   168,    97,    -1,   409,   475,
     641,    -1,   357,   847,    -1,   612,   411,   642,    -1,   612,
     481,   642,    -1,   612,   411,   115,    -1,   612,   481,   115,
      -1,   529,    -1,   558,    -1,   847,    -1,     3,    -1,   764,
     847,   774,    -1,   764,   492,   846,   493,   847,    -1,   558,
      -1,   115,    -1,   234,    -1,   640,    -1,   642,   496,   640,
      -1,    91,   655,   840,   596,   653,   644,   649,   658,   645,
     557,   650,    -1,    91,   492,   666,   493,   411,   649,   658,
     557,   650,    -1,   168,    -1,   411,    -1,   647,   122,   847,
      -1,    -1,   657,    -1,   646,   496,   657,    -1,   435,    -1,
      -1,    36,    -1,    -1,   321,    -1,    -1,   654,    -1,   492,
     659,   493,    -1,   529,    -1,   558,    -1,   485,    -1,   492,
     646,   493,    -1,    -1,   857,   651,    -1,   454,   281,    -1,
      -1,   654,   656,    -1,    -1,    50,    -1,    -1,    50,    -1,
     281,    -1,   167,    -1,   121,   648,   847,    -1,   273,   648,
     847,    -1,    95,    -1,   182,    -1,   323,   648,   847,    -1,
     143,   648,   847,    -1,   164,   323,   600,    -1,   164,   323,
     485,    -1,   164,   268,   273,   600,    -1,   164,   273,   600,
      -1,   139,   847,    -1,   529,    -1,   847,    -1,   388,    -1,
     389,    -1,   652,    -1,   659,   496,   652,    -1,    93,   661,
     840,   662,    36,   775,    -1,   170,    -1,   241,    -1,   492,
     493,    -1,   492,   807,   493,    -1,   164,    68,    -1,    68,
      -1,   313,   842,   665,    36,   666,    -1,   492,   809,   493,
      -1,    -1,   668,    -1,   535,    -1,   667,    -1,   859,    -1,
     539,   433,   860,   371,   550,   723,   861,   544,    -1,   670,
      -1,   669,    -1,   492,   670,   493,    -1,   492,   669,   493,
      -1,   672,    -1,   671,   684,    -1,   671,   683,   715,   690,
      -1,   671,   683,   689,   716,    -1,   673,   671,    -1,   673,
     671,   684,    -1,   673,   671,   683,   715,   690,    -1,   673,
     671,   683,   689,   716,    -1,   672,    -1,   669,    -1,   364,
     681,   831,   676,   723,   739,   706,   714,   784,   694,    -1,
     364,   680,   832,   676,   723,   739,   706,   714,   784,   694,
      -1,   722,    -1,   400,   733,    -1,   671,   427,   679,   671,
      -1,   671,   212,   679,   671,    -1,   671,   145,   679,   671,
      -1,   454,   674,    -1,   478,   674,    -1,   454,   329,   674,
      -1,   675,    -1,   674,   496,   675,    -1,   842,   855,    36,
     492,   666,   493,    -1,   214,   677,    -1,    -1,   406,   678,
     840,    -1,   404,   678,   840,    -1,   234,   406,   678,   840,
      -1,   234,   404,   678,   840,    -1,   174,   406,   678,   840,
      -1,   174,   404,   678,   840,    -1,   431,   678,   840,    -1,
     400,   840,    -1,   840,    -1,   400,    -1,    -1,    27,    -1,
     130,    -1,    -1,   130,    -1,   130,   283,   492,   805,   493,
      -1,    27,    -1,    -1,   188,   275,    -1,   342,   275,    -1,
      -1,   684,    -1,    -1,   289,    54,   685,    -1,   686,    -1,
     685,   496,   686,    -1,   775,   435,   802,   688,    -1,   775,
     687,   688,    -1,    37,    -1,   124,    -1,    -1,   477,   160,
      -1,   477,   224,    -1,    -1,   691,   692,    -1,   692,   691,
      -1,   691,    -1,   692,    -1,   689,    -1,    -1,   231,   700,
      -1,   231,   700,   496,   701,    -1,   158,   705,   702,   704,
     284,    -1,   158,   705,   704,   284,    -1,   280,   701,    -1,
     280,   702,   704,    -1,     4,   487,    -1,     9,   487,    -1,
       4,   305,    -1,     9,   305,    -1,     9,    -1,     9,   353,
      -1,   435,   355,   696,    -1,    -1,   848,    -1,    -1,   695,
     492,   693,   493,   699,    -1,   693,    -1,   693,   492,   848,
     493,    -1,   693,   492,   848,   496,     9,   493,    -1,   402,
     696,    -1,   697,    -1,    -1,   338,   492,     9,   493,    -1,
      -1,   775,    -1,    27,    -1,   775,   487,    -1,     4,   305,
      -1,     9,   305,    -1,   775,    -1,   777,    -1,   483,   703,
      -1,   484,   703,    -1,   846,    -1,     4,    -1,   352,    -1,
     353,    -1,   160,    -1,   265,    -1,   177,    54,   707,    -1,
      -1,   708,    -1,   707,   496,   708,    -1,   775,    -1,   709,
      -1,   711,    -1,   710,    -1,   712,    -1,   492,   493,    -1,
     351,   492,   805,   493,    -1,    96,   492,   805,   493,    -1,
     178,   373,   492,   707,   493,    -1,   178,    -1,   179,    -1,
     181,   775,    -1,    -1,   717,    -1,   163,   325,   284,    -1,
     715,    -1,    -1,   718,    -1,   717,   718,    -1,   719,   720,
     721,    -1,   163,   433,    -1,   163,   266,   220,   433,    -1,
     163,   374,    -1,   163,   220,   374,    -1,   278,   839,    -1,
      -1,   272,    -1,   378,   239,    -1,    -1,   441,   492,   805,
     493,    -1,   722,   496,   492,   805,   493,    -1,   168,   724,
      -1,    -1,   725,    -1,   724,   496,   725,    -1,   733,   728,
     698,    -1,   734,   729,   698,    -1,   225,   734,   729,    -1,
     669,   728,   698,    -1,   225,   669,   728,    -1,   726,    -1,
     492,   726,   493,   727,    -1,   492,   726,   493,    -1,   725,
      94,   219,   725,    -1,   725,   730,   219,   725,   732,    -1,
     725,   219,   725,   732,    -1,   725,   262,   730,   219,   725,
      -1,   725,   262,   219,   725,    -1,    36,   848,   492,   841,
     493,    -1,    36,   849,    -1,   848,   492,   841,   493,    -1,
     848,    -1,   727,    -1,    -1,   727,    -1,    36,   492,   740,
     493,    -1,    36,   848,   492,   740,   493,    -1,   848,   492,
     740,   493,    -1,    -1,   169,   731,    -1,   228,   731,    -1,
     348,   731,    -1,   203,    -1,   292,    -1,    -1,   435,   492,
     841,   493,    -1,   283,   775,    -1,   840,    -1,   840,   485,
      -1,   284,   840,    -1,   284,   492,   840,   493,    -1,   780,
     738,    -1,   353,   168,   492,   736,   493,   738,    -1,   780,
     737,    -1,   735,    -1,   736,   496,   735,    -1,    36,   492,
     740,   493,    -1,    -1,   478,   290,    -1,    -1,   451,   775,
      -1,    -1,   741,    -1,   740,   496,   741,    -1,   848,   745,
     742,    -1,    73,   853,    -1,    -1,   848,   745,    -1,   743,
     496,   848,   745,    -1,   352,    -1,   393,    -1,   747,   746,
      -1,   372,   747,   746,    -1,   747,    35,   490,   846,   491,
      -1,   372,   747,    35,   490,   846,   491,    -1,   747,    35,
      -1,   372,   747,    35,    -1,   744,   492,   743,   493,   746,
      -1,   242,   492,   809,   493,   746,    -1,   746,   490,   491,
      -1,   746,   490,   846,   491,    -1,    -1,   749,    -1,   751,
      -1,   753,    -1,   757,    -1,   763,    -1,   764,   774,    -1,
     764,   492,   846,   493,    -1,   751,    -1,   754,    -1,   758,
      -1,   763,    -1,   852,   750,    -1,   492,   805,   493,    -1,
      -1,   210,    -1,   211,    -1,   379,    -1,    49,    -1,   326,
      -1,   161,   752,    -1,   134,   312,    -1,   113,   750,    -1,
     112,   750,    -1,   276,   750,    -1,    52,    -1,   492,   846,
     493,    -1,    -1,   755,    -1,   756,    -1,   755,    -1,   756,
      -1,    51,   762,   492,   805,   493,    -1,    51,   762,    -1,
     759,    -1,   760,    -1,   759,    -1,   760,    -1,   761,   492,
     846,   493,    -1,   761,    -1,    65,   762,    -1,    64,   762,
      -1,   442,    -1,   261,    65,   762,    -1,   261,    64,   762,
      -1,   263,   762,    -1,   444,    -1,    -1,   410,   492,   846,
     493,   765,    -1,   410,   765,    -1,   409,   492,   846,   493,
     765,    -1,   409,   765,    -1,   213,    -1,   478,   409,   475,
      -1,   456,   409,   475,    -1,    -1,   472,    -1,   473,    -1,
     256,    -1,   257,    -1,   109,    -1,   110,    -1,   184,    -1,
     185,    -1,   252,    -1,   253,    -1,   361,    -1,   362,    -1,
     250,    -1,   251,    -1,   248,    -1,   249,    -1,   766,    -1,
     767,    -1,   768,    -1,   769,    -1,   770,    -1,   771,    -1,
     772,    -1,   773,    -1,   766,   411,   767,    -1,   768,   411,
     769,    -1,   768,   411,   770,    -1,   768,   411,   771,    -1,
     769,   411,   770,    -1,   769,   411,   771,    -1,   770,   411,
     771,    -1,    -1,   777,    -1,   775,    11,   745,    -1,   775,
      73,   853,    -1,   775,    41,   409,   475,   775,    -1,   483,
     775,    -1,   484,   775,    -1,   775,   483,   775,    -1,   775,
     484,   775,    -1,   775,   485,   775,    -1,   775,   486,   775,
      -1,   775,   487,   775,    -1,   775,   488,   775,    -1,   775,
     479,   775,    -1,   775,   480,   775,    -1,   775,   481,   775,
      -1,   775,    16,   775,    -1,   775,    17,   775,    -1,   775,
      18,   775,    -1,   775,   801,   775,    -1,   801,   775,    -1,
     775,   801,    -1,   775,    33,   775,    -1,   775,   288,   775,
      -1,   268,   775,    -1,   476,   775,    -1,   775,   173,   775,
      -1,   775,   230,   775,    -1,   775,   230,   775,   143,   775,
      -1,   775,   476,   230,   775,    -1,   775,   476,   230,   775,
     143,   775,    -1,   775,   189,   775,    -1,   775,   189,   775,
     143,   775,    -1,   775,   476,   189,   775,    -1,   775,   476,
     189,   775,   143,   775,    -1,   775,   376,   411,   775,    -1,
     775,   376,   411,   775,   143,   775,    -1,   775,   476,   376,
     411,   775,    -1,   775,   476,   376,   411,   775,   143,   775,
      -1,   775,   216,   273,    -1,   775,   217,    -1,   775,   216,
     268,   273,    -1,   775,   268,   273,    -1,   775,   271,    -1,
     795,    -1,   497,   797,   498,    -1,   490,   806,   491,    -1,
     795,    15,   775,    -1,   825,    15,   775,    -1,   795,   294,
     795,    -1,   775,   216,   418,    -1,   775,   216,   268,   418,
      -1,   775,   216,   156,    -1,   775,   216,   268,   156,    -1,
     775,   216,   429,    -1,   775,   216,   268,   429,    -1,   775,
     216,   130,   168,   775,    -1,   775,   216,   268,   130,   168,
     775,    -1,   775,   216,   278,   492,   809,   493,    -1,   775,
     216,   268,   278,   492,   809,   493,    -1,   775,    48,   830,
     776,    33,   775,    -1,   775,   476,    48,   830,   776,    33,
     775,    -1,   775,    48,   397,   776,    33,   775,    -1,   775,
     476,    48,   397,   776,    33,   775,    -1,   775,   194,   819,
      -1,   775,   476,   194,   819,    -1,   775,   803,   798,   669,
      -1,   775,   803,   798,   492,   775,   493,    -1,   115,    -1,
      35,   490,   806,   491,    -1,   777,    -1,   776,    11,   745,
      -1,   483,   776,    -1,   484,   776,    -1,   776,   483,   776,
      -1,   776,   484,   776,    -1,   776,   485,   776,    -1,   776,
     486,   776,    -1,   776,   487,   776,    -1,   776,   488,   776,
      -1,   776,   479,   776,    -1,   776,   480,   776,    -1,   776,
     481,   776,    -1,   776,    16,   776,    -1,   776,    17,   776,
      -1,   776,    18,   776,    -1,   776,   801,   776,    -1,   801,
     776,    -1,   776,   801,    -1,   776,   216,   130,   168,   776,
      -1,   776,   216,   268,   130,   168,   776,    -1,   776,   216,
     278,   492,   809,   493,    -1,   776,   216,   268,   278,   492,
     809,   493,    -1,   825,    -1,   845,    -1,   499,     9,    -1,
     500,   829,    -1,    10,   829,    -1,   492,   775,   493,   829,
      -1,   820,    -1,   779,   829,    -1,   669,    -1,   669,   828,
      -1,   150,   669,    -1,   713,   492,   805,   493,    -1,   844,
     492,   493,    -1,   844,   492,   807,   683,   682,   493,    -1,
     844,   492,   443,   808,   683,   682,   493,    -1,   844,   492,
     807,   496,   443,   808,   683,   682,   493,    -1,   844,   492,
      27,   807,   683,   682,   493,    -1,   844,   492,   130,   807,
     683,   682,   493,    -1,   844,   492,   485,   493,    -1,   778,
     782,   783,   787,    -1,   781,    -1,   778,    -1,   781,    -1,
      74,   163,   492,   775,   493,    -1,    99,    -1,   102,    -1,
     102,   492,   846,   493,    -1,   103,    -1,   103,   492,   846,
     493,    -1,   235,    -1,   235,   492,   846,   493,    -1,   236,
      -1,   236,   492,   846,   493,    -1,   100,    -1,   104,    -1,
     370,    -1,   434,    -1,    98,    -1,   101,    -1,    61,   492,
     775,    36,   745,   493,    -1,   421,   492,   775,    36,   745,
     493,    -1,   155,   492,   810,   493,    -1,   295,   492,   812,
     493,    -1,   309,   492,   814,   493,    -1,   395,   492,   815,
     493,    -1,   415,   492,   775,    36,   745,   493,    -1,   417,
     492,    53,   818,   493,    -1,   417,   492,   226,   818,   493,
      -1,   417,   492,   412,   818,   493,    -1,   417,   492,   818,
     493,    -1,   274,   492,   775,   496,   775,   493,    -1,    72,
     492,   805,   493,    -1,   455,   177,   492,   684,   493,    -1,
      -1,   159,   492,   451,   775,   493,    -1,    -1,   453,   785,
      -1,    -1,   786,    -1,   785,   496,   786,    -1,   848,    36,
     788,    -1,   293,   788,    -1,   293,   848,    -1,    -1,   492,
     789,   790,   683,   791,   493,    -1,   848,    -1,    -1,   302,
      54,   805,    -1,    -1,   324,   792,    -1,   353,   792,    -1,
      -1,   793,    -1,    48,   793,    33,   793,    -1,   424,   311,
      -1,   424,   162,    -1,    97,   352,    -1,   775,   311,    -1,
     775,   162,    -1,   352,   492,   805,   493,    -1,   352,   492,
     493,    -1,   794,    -1,   492,   805,   496,   775,   493,    -1,
     849,   501,   775,    -1,   796,    -1,   797,   496,   796,    -1,
      34,    -1,   381,    -1,    27,    -1,     8,    -1,   800,    -1,
     483,    -1,   484,    -1,   485,    -1,   486,    -1,   487,    -1,
     488,    -1,   479,    -1,   480,    -1,   481,    -1,    16,    -1,
      17,    -1,    18,    -1,     8,    -1,   285,   492,   804,   493,
      -1,   799,    -1,   285,   492,   804,   493,    -1,   799,    -1,
     285,   492,   804,   493,    -1,   230,    -1,   476,   230,    -1,
     173,    -1,   476,   173,    -1,   189,    -1,   476,   189,    -1,
     799,    -1,   848,   494,   804,    -1,   775,    -1,   805,   496,
     775,    -1,   805,    -1,    -1,   808,    -1,   807,   496,   808,
      -1,   775,    -1,   856,    13,   775,    -1,   856,    14,   775,
      -1,   745,    -1,   809,   496,   745,    -1,   811,   168,   775,
      -1,    -1,     3,    -1,   766,    -1,   767,    -1,   768,    -1,
     769,    -1,   770,    -1,   771,    -1,   772,    -1,   773,    -1,
     847,    -1,   775,   813,   816,   817,    -1,   775,   813,   816,
      -1,   306,   775,    -1,   776,   194,   776,    -1,    -1,   775,
     816,   817,    -1,   775,   817,   816,    -1,   775,   816,    -1,
     775,   817,    -1,   805,    -1,    -1,   168,   775,    -1,   163,
     775,    -1,   775,   168,   805,    -1,   168,   805,    -1,   805,
      -1,   669,    -1,   492,   805,   493,    -1,    60,   824,   821,
     823,   141,    -1,   822,    -1,   821,   822,    -1,   450,   775,
     408,   775,    -1,   137,   775,    -1,    -1,   775,    -1,    -1,
     848,    -1,   848,   828,    -1,   494,   843,    -1,   490,   775,
     491,    -1,   490,   827,   501,   827,   491,    -1,   775,    -1,
      -1,   826,    -1,   828,   826,    -1,    -1,   829,   826,    -1,
      40,    -1,    -1,   832,    -1,    -1,   833,    -1,   832,   496,
     833,    -1,   775,    36,   858,    -1,   775,     3,    -1,   775,
      -1,   485,   835,   838,    -1,   848,   494,   485,   835,   838,
      -1,   146,   492,   841,   493,    -1,   146,   848,    -1,   834,
      -1,    -1,   775,    36,   848,    -1,   836,    -1,   837,   496,
     836,    -1,   339,   492,   837,   493,    -1,   339,   836,    -1,
      -1,   840,    -1,   839,   496,   840,    -1,   849,    -1,   848,
     828,    -1,   842,    -1,   841,   496,   842,    -1,   848,    -1,
     857,    -1,   851,    -1,   848,   828,    -1,   846,    -1,     4,
      -1,   847,   829,    -1,     6,    -1,     7,    -1,   844,   847,
      -1,   844,   492,   807,   683,   682,   493,   847,    -1,   748,
     847,    -1,   764,   492,   775,   493,   774,    -1,   764,   846,
     774,    -1,   764,   847,   774,    -1,   418,    -1,   156,    -1,
     273,    -1,     9,    -1,     5,    -1,     3,    -1,   878,    -1,
     879,    -1,   848,    -1,     5,    -1,     3,    -1,   878,    -1,
     883,    -1,     3,    -1,   878,    -1,   880,    -1,     3,    -1,
     878,    -1,   881,    -1,   848,    -1,   848,   854,    -1,   494,
     843,    -1,   854,   494,   843,    -1,   492,   841,   493,    -1,
      -1,   850,    -1,     3,    -1,   882,    -1,   878,    -1,   884,
      -1,   857,    -1,     5,    -1,   539,   120,   168,   860,   862,
     861,   544,    -1,   733,    -1,   733,   848,    -1,   733,    36,
     848,    -1,   451,   775,    -1,    -1,   435,   724,    -1,    -1,
      93,   357,   848,   864,    -1,    93,   357,   187,   268,   150,
     848,   864,    -1,   864,   865,    -1,    -1,   562,    -1,   616,
      -1,   608,    -1,   629,    -1,   135,   867,   187,   150,   869,
     870,    -1,   135,   867,   869,   870,    -1,   135,   868,   187,
     150,   841,   870,    -1,   135,   868,   841,   870,    -1,   135,
     871,   842,   283,   853,   870,    -1,   135,   871,   187,   150,
     842,   283,   853,   870,    -1,   135,   422,   872,   870,    -1,
     135,   422,   187,   150,   872,   870,    -1,   400,    -1,   365,
      -1,   170,    -1,   241,    -1,   447,    -1,   245,   447,    -1,
     197,    -1,   165,   400,    -1,    74,    -1,    90,    -1,   387,
      -1,   407,   360,   300,    -1,   407,   360,   127,    -1,   407,
     360,   405,    -1,   407,   360,    83,    -1,    21,   247,    -1,
     144,   416,    -1,   153,    -1,   165,   107,   458,    -1,   322,
      -1,   357,    -1,   368,    -1,   853,    -1,   869,   496,   853,
      -1,    58,    -1,   344,    -1,    -1,   308,    -1,   354,    -1,
     416,    -1,   745,    -1,   872,   496,   745,    -1,    93,   422,
     853,    36,   142,   492,   874,   493,    -1,   875,    -1,    -1,
     847,    -1,   875,   496,   847,    -1,   149,   842,   877,    -1,
      93,   606,   400,   625,    36,   149,   842,   877,   624,    -1,
      93,   606,   400,   187,   268,   150,   625,    36,   149,   842,
     877,   624,    -1,   492,   805,   493,    -1,    -1,    19,    -1,
      20,    -1,    21,    -1,    22,    -1,    23,    -1,    24,    -1,
      25,    -1,    26,    -1,    28,    -1,    29,    -1,    30,    -1,
      38,    -1,    39,    -1,    41,    -1,    42,    -1,    43,    -1,
      45,    -1,    46,    -1,    47,    -1,    54,    -1,    55,    -1,
      56,    -1,    57,    -1,    58,    -1,    59,    -1,    62,    -1,
      63,    -1,    66,    -1,    68,    -1,    69,    -1,    70,    -1,
      71,    -1,    76,    -1,    77,    -1,    78,    -1,    79,    -1,
      80,    -1,    81,    -1,    83,    -1,    84,    -1,    85,    -1,
      87,    -1,    88,    -1,    89,    -1,    90,    -1,    91,    -1,
      92,    -1,    95,    -1,    96,    -1,    97,    -1,   105,    -1,
     106,    -1,   107,    -1,   108,    -1,   109,    -1,   110,    -1,
     111,    -1,   114,    -1,   116,    -1,   118,    -1,   119,    -1,
     120,    -1,   121,    -1,   122,    -1,   123,    -1,   125,    -1,
     126,    -1,   127,    -1,   128,    -1,   129,    -1,   132,    -1,
     133,    -1,   134,    -1,   135,    -1,   136,    -1,   138,    -1,
     139,    -1,   140,    -1,   142,    -1,   143,    -1,   144,    -1,
     146,    -1,   147,    -1,   148,    -1,   149,    -1,   151,    -1,
     152,    -1,   153,    -1,   154,    -1,   157,    -1,   159,    -1,
     160,    -1,   162,    -1,   164,    -1,   166,    -1,   170,    -1,
     171,    -1,   172,    -1,   174,    -1,   176,    -1,   180,    -1,
     182,    -1,   183,    -1,   184,    -1,   185,    -1,   186,    -1,
     187,    -1,   188,    -1,   190,    -1,   191,    -1,   192,    -1,
     193,    -1,   195,    -1,   196,    -1,   197,    -1,   198,    -1,
     199,    -1,   200,    -1,   202,    -1,   205,    -1,   206,    -1,
     207,    -1,   208,    -1,   209,    -1,   215,    -1,   218,    -1,
     220,    -1,   221,    -1,   222,    -1,   223,    -1,   224,    -1,
     227,    -1,   229,    -1,   232,    -1,   233,    -1,   234,    -1,
     237,    -1,   238,    -1,   239,    -1,   240,    -1,   241,    -1,
     243,    -1,   244,    -1,   245,    -1,   246,    -1,   247,    -1,
     248,    -1,   249,    -1,   250,    -1,   251,    -1,   252,    -1,
     253,    -1,   254,    -1,   255,    -1,   256,    -1,   257,    -1,
     258,    -1,   259,    -1,   260,    -1,   264,    -1,   265,    -1,
     266,    -1,   269,    -1,   270,    -1,   272,    -1,   275,    -1,
     277,    -1,   278,    -1,   279,    -1,   281,    -1,   282,    -1,
     285,    -1,   286,    -1,   287,    -1,   290,    -1,   293,    -1,
     296,    -1,   297,    -1,   298,    -1,   299,    -1,   300,    -1,
     301,    -1,   302,    -1,   303,    -1,   304,    -1,   305,    -1,
     307,    -1,   308,    -1,   310,    -1,   311,    -1,   313,    -1,
     314,    -1,   315,    -1,   317,    -1,   318,    -1,   319,    -1,
     320,    -1,   321,    -1,   322,    -1,   323,    -1,   324,    -1,
     325,    -1,   327,    -1,   328,    -1,   329,    -1,   330,    -1,
     332,    -1,   333,    -1,   334,    -1,   335,    -1,   336,    -1,
     337,    -1,   338,    -1,   339,    -1,   340,    -1,   341,    -1,
     342,    -1,   343,    -1,   344,    -1,   346,    -1,   347,    -1,
     349,    -1,   350,    -1,   351,    -1,   353,    -1,   354,    -1,
     355,    -1,   356,    -1,   357,    -1,   358,    -1,   359,    -1,
     360,    -1,   361,    -1,   362,    -1,   363,    -1,   365,    -1,
     366,    -1,   367,    -1,   368,    -1,   369,    -1,   371,    -1,
     373,    -1,   374,    -1,   375,    -1,   377,    -1,   378,    -1,
     380,    -1,   382,    -1,   383,    -1,   384,    -1,   385,    -1,
     386,    -1,   387,    -1,   388,    -1,   389,    -1,   390,    -1,
     391,    -1,   392,    -1,   394,    -1,   396,    -1,   398,    -1,
     399,    -1,   401,    -1,   403,    -1,   404,    -1,   405,    -1,
     406,    -1,   407,    -1,   413,    -1,   414,    -1,   416,    -1,
     419,    -1,   420,    -1,   422,    -1,   423,    -1,   424,    -1,
     425,    -1,   426,    -1,   429,    -1,   430,    -1,   431,    -1,
     432,    -1,   433,    -1,   436,    -1,   437,    -1,   438,    -1,
     439,    -1,   440,    -1,   444,    -1,   446,    -1,   447,    -1,
     448,    -1,   449,    -1,   452,    -1,   455,    -1,   456,    -1,
     457,    -1,   458,    -1,   459,    -1,   460,    -1,   472,    -1,
     473,    -1,   474,    -1,   475,    -1,    48,    -1,    49,    -1,
      51,    -1,    52,    -1,    64,    -1,    65,    -1,    72,    -1,
     112,    -1,   113,    -1,   150,    -1,   155,    -1,   161,    -1,
     178,    -1,   179,    -1,   204,    -1,   210,    -1,   211,    -1,
     213,    -1,   242,    -1,   261,    -1,   263,    -1,   267,    -1,
     274,    -1,   276,    -1,   291,    -1,   295,    -1,   309,    -1,
     312,    -1,   326,    -1,   352,    -1,   372,    -1,   379,    -1,
     393,    -1,   395,    -1,   409,    -1,   410,    -1,   415,    -1,
     417,    -1,   421,    -1,   441,    -1,   442,    -1,   461,    -1,
     462,    -1,   463,    -1,   464,    -1,   465,    -1,   466,    -1,
     467,    -1,   468,    -1,   469,    -1,   470,    -1,   471,    -1,
      44,    -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,
     101,    -1,   167,    -1,   169,    -1,   173,    -1,   189,    -1,
     203,    -1,   216,    -1,   217,    -1,   219,    -1,   228,    -1,
     230,    -1,   242,    -1,   262,    -1,   271,    -1,   292,    -1,
     294,    -1,   348,    -1,   376,    -1,   393,    -1,   402,    -1,
     445,    -1,    44,    -1,    50,    -1,    74,    -1,    82,    -1,
      94,    -1,   101,    -1,   167,    -1,   169,    -1,   173,    -1,
     189,    -1,   203,    -1,   216,    -1,   217,    -1,   219,    -1,
     228,    -1,   230,    -1,   262,    -1,   271,    -1,   292,    -1,
     294,    -1,   348,    -1,   376,    -1,   402,    -1,   421,    -1,
     445,    -1,    48,    -1,    49,    -1,    51,    -1,    52,    -1,
      65,    -1,    64,    -1,    72,    -1,   112,    -1,   113,    -1,
     150,    -1,   155,    -1,   161,    -1,   178,    -1,   179,    -1,
     204,    -1,   211,    -1,   213,    -1,   210,    -1,   242,    -1,
     261,    -1,   263,    -1,   267,    -1,   274,    -1,   276,    -1,
     291,    -1,   295,    -1,   309,    -1,   312,    -1,   326,    -1,
     352,    -1,   372,    -1,   379,    -1,   393,    -1,   395,    -1,
     409,    -1,   410,    -1,   415,    -1,   417,    -1,   421,    -1,
     441,    -1,   442,    -1,   461,    -1,   462,    -1,   463,    -1,
     464,    -1,   465,    -1,   466,    -1,   467,    -1,   468,    -1,
     469,    -1,   470,    -1,   471,    -1,    44,    -1,    50,    -1,
      74,    -1,    82,    -1,    94,    -1,   101,    -1,   167,    -1,
     169,    -1,   173,    -1,   189,    -1,   203,    -1,   216,    -1,
     217,    -1,   219,    -1,   228,    -1,   230,    -1,   242,    -1,
     262,    -1,   271,    -1,   292,    -1,   294,    -1,   348,    -1,
     376,    -1,   393,    -1,   402,    -1,   421,    -1,   445,    -1,
      27,    -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,
      35,    -1,    36,    -1,    37,    -1,    40,    -1,    53,    -1,
      60,    -1,    61,    -1,    67,    -1,    73,    -1,    75,    -1,
      86,    -1,    93,    -1,    98,    -1,    99,    -1,   100,    -1,
     102,    -1,   103,    -1,   104,    -1,   115,    -1,   117,    -1,
     124,    -1,   130,    -1,   131,    -1,   137,    -1,   141,    -1,
     145,    -1,   156,    -1,   158,    -1,   163,    -1,   165,    -1,
     168,    -1,   175,    -1,   177,    -1,   181,    -1,   194,    -1,
     201,    -1,   212,    -1,   214,    -1,   225,    -1,   226,    -1,
     231,    -1,   235,    -1,   236,    -1,   268,    -1,   273,    -1,
     280,    -1,   283,    -1,   284,    -1,   288,    -1,   289,    -1,
     306,    -1,   316,    -1,   331,    -1,   345,    -1,   364,    -1,
     370,    -1,   381,    -1,   397,    -1,   400,    -1,   408,    -1,
     411,    -1,   412,    -1,   418,    -1,   427,    -1,   428,    -1,
     434,    -1,   435,    -1,   443,    -1,   450,    -1,   451,    -1,
     453,    -1,   454,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   465,   465,   481,   493,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   537,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      20,     7,    14,    22,     7,    16,    25,    34,    43,    52,
       9,    16,    26,    33,    44,    45,    50,    51,    52,    57,
      58,    59,    60,    61,    65,    66,    67,    72,    73,    78,
      82,    90,    91,    96,    97,    98,   104,   109,   117,   118,
       7,    14,    20,    28,    29,     9,    19,     8,    21,    27,
      34,    40,    47,    57,    61,    70,    79,    88,    95,    96,
     101,   113,   118,   143,   153,   163,   169,   180,   191,   206,
     207,   213,   214,   219,   220,   226,   227,   231,   232,   237,
     239,   245,   246,   250,   251,   256,     6,    15,    25,    35,
      45,    55,    65,    75,    85,    95,   106,   117,   127,   140,
     141,     9,    17,    29,    30,    34,    35,    36,    41,    42,
      43,    48,    52,    56,    60,    64,    68,    72,    76,    80,
      84,    88,    92,    97,   101,   105,   112,   113,   117,   118,
     119,     7,    21,    36,    56,    57,    84,    85,    86,    87,
      88,    89,    93,    94,    99,   104,   105,   106,   107,   108,
     113,   120,   121,   122,   139,   146,   153,   163,   173,   185,
     193,   202,   211,   230,   237,   242,   244,   246,   248,   251,
     256,   257,   261,   262,   263,   264,   269,   273,   274,   279,
     286,   291,   292,   293,   294,   295,   296,   297,   298,   304,
     305,   309,   314,   321,   328,   335,   347,   348,   349,   350,
     354,   359,   360,   361,   366,   371,   372,   373,   374,   375,
     376,   381,   404,   408,   415,   416,   420,   424,   425,   426,
     430,   434,   442,   443,   448,   449,   453,   461,   462,   467,
     468,   472,   477,   481,   485,   490,   498,   499,   503,   504,
     510,   521,   534,   548,   562,   576,   590,   613,   617,   624,
     628,   636,   641,   648,   658,   659,   660,   661,   662,   669,
     676,   677,   682,   683,     9,    19,    32,    33,     3,    10,
      17,    24,    31,    38,    45,    55,    55,    57,    58,     2,
       7,    14,    24,    25,    32,     8,    33,    62,    66,    67,
      72,    73,    78,    79,    83,    84,    89,    90,    11,    24,
      41,    42,    43,    48,     7,    13,    19,    25,     2,     9,
      15,    21,    28,    35,    45,    46,    47,     8,    21,    34,
      52,    74,    75,    76,    77,     8,    22,    36,    48,    56,
      70,    71,    72,    73,    74,    87,    88,    93,    94,    98,
      99,     6,    10,    16,    22,    28,    38,    39,    47,    58,
      70,    78,    86,    93,   103,   105,   111,   115,   119,   134,
     141,   142,   143,   147,   148,     1,    30,    53,    54,    59,
      63,    68,    72,    80,    81,    85,    86,    91,    92,    96,
      97,   102,   103,   104,   105,   106,   111,   119,   123,   128,
     129,   134,   138,   143,   147,   151,   155,   159,   163,   167,
     171,   175,   179,   183,   187,   191,   195,   203,   209,   210,
     211,   216,   220,     7,    18,    19,    23,    27,     5,    11,
       7,    18,    19,    23,    24,    25,    26,     7,    47,    48,
      52,    53,    68,    69,    76,    84,    92,   100,   108,   116,
     127,   128,   155,   170,   186,   187,   206,   210,   214,   231,
     238,   245,   255,   256,   259,   271,   282,   290,   295,   300,
     305,   310,   318,   326,   331,   336,   343,   344,   348,   349,
     350,   357,   358,   362,   363,   367,   368,   369,   373,   374,
     378,   382,   383,   386,   395,   406,   407,   408,   411,   412,
     413,   417,   418,   419,   420,   424,   425,   429,   431,   447,
     449,   454,   457,   465,   469,   473,   477,   481,   485,   492,
     497,   504,   505,   509,   513,   517,   521,   528,   535,   536,
     541,   542,   546,   547,   552,   554,   556,   561,   581,   582,
     584,   589,   590,   594,   595,   598,   599,   624,   625,   629,
     630,   634,   635,   636,   637,   638,   642,   655,   662,   669,
     676,   677,   681,   682,   686,   687,   691,   692,   696,   697,
     701,   712,   713,   714,   715,   719,   720,   725,   726,   727,
     736,   742,   760,   761,   765,   766,   772,   778,   786,   794,
     803,   812,   816,   842,   846,   859,   873,   888,   900,   916,
     922,   927,   933,   940,   941,   949,   953,   957,   963,   970,
     975,   976,   977,   978,   982,   983,   995,   996,  1001,  1008,
    1015,  1022,  1054,  1065,  1078,  1083,  1084,  1087,  1088,  1091,
    1092,  1097,  1098,  1103,  1107,  1113,  1134,  1142,  1155,  1158,
    1162,  1162,  1164,  1169,  1176,  1181,  1187,  1192,  1198,  1204,
    1213,  1215,  1218,  1222,  1223,  1224,  1225,  1226,  1227,  1232,
    1252,  1253,  1254,  1255,  1266,  1280,  1281,  1287,  1292,  1297,
    1302,  1307,  1312,  1317,  1322,  1328,  1334,  1340,  1347,  1369,
    1378,  1382,  1390,  1394,  1402,  1414,  1435,  1439,  1445,  1449,
    1462,  1470,  1480,  1482,  1484,  1486,  1488,  1490,  1495,  1496,
    1503,  1512,  1520,  1529,  1540,  1548,  1549,  1550,  1554,  1554,
    1557,  1557,  1560,  1560,  1563,  1563,  1566,  1566,  1569,  1569,
    1572,  1572,  1575,  1575,  1578,  1580,  1582,  1584,  1586,  1588,
    1590,  1592,  1594,  1599,  1604,  1610,  1617,  1622,  1628,  1634,
    1665,  1667,  1669,  1677,  1692,  1694,  1696,  1698,  1700,  1702,
    1704,  1706,  1708,  1710,  1712,  1714,  1716,  1718,  1721,  1723,
    1725,  1728,  1730,  1732,  1734,  1737,  1742,  1747,  1754,  1759,
    1766,  1771,  1779,  1784,  1793,  1801,  1809,  1817,  1835,  1843,
    1851,  1859,  1867,  1875,  1879,  1883,  1887,  1895,  1903,  1919,
    1927,  1935,  1943,  1951,  1959,  1967,  1971,  1975,  1979,  1983,
    1991,  1999,  2007,  2015,  2035,  2057,  2068,  2075,  2089,  2105,
    2107,  2109,  2111,  2113,  2115,  2117,  2119,  2121,  2123,  2125,
    2127,  2129,  2131,  2133,  2135,  2137,  2139,  2141,  2143,  2147,
    2151,  2155,  2169,  2170,  2171,  2178,  2190,  2205,  2217,  2219,
    2231,  2242,  2266,  2277,  2286,  2290,  2297,  2305,  2313,  2324,
    2332,  2360,  2395,  2406,  2407,  2414,  2420,  2424,  2428,  2432,
    2436,  2440,  2444,  2448,  2452,  2456,  2460,  2464,  2468,  2472,
    2476,  2480,  2482,  2484,  2488,  2497,  2502,  2509,  2524,  2531,
    2535,  2539,  2543,  2547,  2561,  2562,  2566,  2567,  2575,  2576,
    2580,  2581,  2586,  2594,  2596,  2610,  2613,  2640,  2641,  2644,
    2645,  2656,  2662,  2669,  2678,  2695,  2740,  2748,  2756,  2764,
    2772,  2793,  2794,  2797,  2798,  2802,  2812,  2813,  2815,  2816,
    2817,  2820,  2821,  2824,  2825,  2826,  2827,  2828,  2829,  2830,
    2831,  2832,  2833,  2834,  2835,  2838,  2840,  2845,  2847,  2852,
    2854,  2856,  2858,  2860,  2862,  2864,  2866,  2880,  2882,  2886,
    2890,  2897,  2902,  2909,  2913,  2919,  2923,  2932,  2943,  2944,
    2948,  2952,  2959,  2960,  2961,  2962,  2963,  2964,  2965,  2966,
    2967,  2968,  2978,  2982,  2989,  2996,  2997,  3013,  3017,  3022,
    3026,  3041,  3046,  3050,  3053,  3056,  3057,  3058,  3061,  3068,
    3078,  3092,  3093,  3097,  3108,  3109,  3112,  3113,  3116,  3120,
    3127,  3131,  3139,  3150,  3151,  3155,  3156,  3160,  3161,  3164,
    3165,  3175,  3176,  3180,  3181,  3184,  3200,  3208,  3216,  3231,
    3249,  3250,  3253,  3254,  3257,  3261,  3262,  3265,  3266,  3267,
    3277,  3278,  3289,  3293,  3320,  3322,  3327,  3329,  3339,  3342,
    3353,  3357,  3361,  3373,  3377,  3386,  3393,  3431,  3435,  3439,
    3443,  3447,  3451,  3455,  3461,  3462,  3478,  3479,  3480,  3483,
    3484,  3490,  3491,  3492,  3495,  3496,  3497,  3500,  3501,  3502,
    3505,  3506,  3509,  3511,  3516,  3517,  3520,  3528,  3529,  3530,
    3531,  3534,  3535,     7,    21,    25,    32,    43,    44,    50,
      51,     7,    16,    34,    41,    46,    47,    48,    49,     9,
      19,    29,    39,    49,    59,    69,    79,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   112,   113,   114,   115,   116,   117,   118,   123,
     124,   129,   130,   131,   136,   137,   138,   141,   142,     7,
      17,    18,    21,    23,     7,    14,    31,    51,    52,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    58,    58,    58,    58,    58,
      58,    58,    58,    58,    58,    58,    58,    58,    58,    58,
      58,    58,    58,    58,    58,    58,    58,    58,    58,    58,
      58,    59,    59,    59,    59,    59,    59,    59,    59,    59,
      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
      59,    59,    59,    59,    59,    59,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL",
  "GRANT", "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER",
  "HAVING", "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN",
  "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION", "LOCK_P",
  "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING", "MATCH", "MATERIALIZED",
  "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P",
  "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P",
  "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR",
  "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL",
  "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF",
  "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION",
  "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER",
  "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER", "PARALLEL",
  "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD", "PERCENT",
  "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P", "PRECEDING",
  "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY", "PRIOR",
  "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM", "PUBLICATION",
  "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE",
  "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING", "SUMMARIZE",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'{'", "'}'", "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti",
  "stmt", "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "ExportStmt", "ImportStmt", "PragmaStmt",
  "AlterObjectSchemaStmt", "ExplainStmt", "opt_verbose",
  "explain_option_arg", "ExplainableStmt", "NonReservedWord",
  "NonReservedWord_or_Sconst", "explain_option_list", "analyze_keyword",
  "opt_boolean_or_string", "explain_option_elem", "explain_option_name",
  "LoadStmt", "file_name", "AnalyzeStmt", "InsertStmt", "insert_rest",
  "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "RenameStmt", "opt_column", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "CreateSeqStmt", "OptSeqOptList",
  "VariableShowStmt", "show_or_describe", "var_name", "VariableResetStmt",
  "generic_reset", "reset_rest", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "CreateAsStmt", "opt_with_data",
  "create_as_target", "DeallocateStmt", "TransactionStmt",
  "opt_transaction", "ViewStmt", "opt_check_option", "VacuumStmt",
  "vacuum_option_elem", "opt_full", "vacuum_option_list", "opt_freeze",
  "CallStmt", "VariableSetStmt", "set_rest", "generic_set", "var_value",
  "zone_value", "var_list", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "CreateFunctionStmt", "macro_alias",
  "param_list", "CheckPointStmt", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "UpdateStmt", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_item", "empty_grouping_set", "rollup_clause",
  "cube_clause", "grouping_sets_clause", "grouping_or_grouping_id",
  "having_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause", "from_clause",
  "from_list", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name", "attr_name", "func_name",
  "AexprConst", "Iconst", "Sconst", "ColId", "ColIdOrString",
  "type_function_name", "function_name_token", "type_name_token",
  "any_name", "attrs", "opt_name_list", "param_name", "ColLabel",
  "ColLabelOrString", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateEnumStmt",
  "opt_enum_val_list", "enum_val_list", "ExecuteStmt",
  "execute_param_clause", "unreserved_keyword", "col_name_keyword",
  "func_name_keyword", "type_name_keyword", "other_keyword",
  "type_func_name_keyword", "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,    60,
      62,    61,   734,    43,    45,    42,    47,    37,    94,   735,
      91,    93,    40,    41,    46,    59,    44,   123,   125,    35,
      63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   502,   503,   504,   504,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     506,   506,   506,   506,   506,   506,   506,   506,   507,   507,
     508,   508,   509,   509,   509,   509,   510,   510,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   511,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   511,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   512,   512,   513,
     513,   513,   513,   514,   514,   515,   516,   516,   516,   517,
     518,   519,   519,   519,   520,   520,   520,   520,   520,   520,
     521,   521,   521,   521,   522,   522,   523,   523,   523,   524,
     524,   524,   524,   524,   525,   525,   525,   526,   526,   527,
     527,   528,   528,   529,   529,   529,   529,   530,   531,   531,
     532,   532,   532,   533,   533,   534,   534,   535,   536,   536,
     536,   536,   536,   537,   537,   538,   538,   538,   539,   539,
     540,   541,   541,   542,   542,   542,   543,   543,   543,   544,
     544,   545,   545,   546,   546,   547,   547,   548,   548,   549,
     549,   550,   550,   551,   551,   552,   553,   553,   553,   553,
     553,   553,   553,   553,   553,   553,   553,   553,   553,   554,
     554,   555,   555,   556,   556,   557,   557,   557,   558,   558,
     558,   558,   559,   559,   559,   559,   559,   559,   559,   559,
     559,   559,   559,   559,   559,   559,   560,   560,   561,   561,
     561,   562,   562,   562,   563,   563,   564,   564,   564,   564,
     564,   564,   565,   565,   566,   567,   567,   567,   567,   567,
     568,   568,   568,   568,   569,   569,   569,   569,   569,   569,
     569,   569,   569,   570,   571,   572,   572,   572,   572,   572,
     573,   573,   574,   574,   574,   574,   575,   576,   576,   577,
     577,   578,   578,   578,   578,   578,   578,   578,   578,   579,
     579,   580,   581,   581,   581,   581,   582,   582,   582,   582,
     583,   584,   584,   584,   585,   586,   586,   586,   586,   586,
     586,   587,   588,   588,   589,   589,   590,   591,   591,   591,
     592,   592,   593,   593,   594,   594,   595,   596,   596,   597,
     597,   598,   599,   599,   599,   599,   600,   600,   601,   601,
     601,   602,   602,   602,   602,   602,   602,   603,   603,   604,
     604,   604,   604,   605,   606,   606,   606,   606,   606,   606,
     606,   606,   607,   607,   608,   608,   609,   609,   610,   610,
     610,   610,   610,   610,   610,   611,   611,   612,   612,   613,
     614,   614,   615,   615,   615,   616,   616,   617,   618,   618,
     619,   619,   620,   620,   621,   621,   622,   622,   623,   623,
     624,   624,   624,   625,   626,   626,   626,   626,   627,   627,
     627,   627,   627,   627,   628,   628,   628,   629,   629,   629,
     629,   630,   630,   630,   630,   631,   631,   631,   631,   631,
     632,   632,   632,   632,   632,   633,   633,   634,   634,   635,
     635,   636,   637,   637,   637,   637,   638,   638,   638,   638,
     639,   639,   639,   639,   640,   640,   641,   641,   641,   641,
     641,   641,   641,   642,   642,   643,   643,   644,   644,   645,
     645,   646,   646,   647,   647,   648,   648,   649,   649,   650,
     650,   651,   651,   651,   651,   651,   652,   653,   653,   654,
     654,   655,   655,   656,   656,   656,   656,   656,   656,   656,
     656,   656,   656,   656,   656,   656,   656,   657,   658,   658,
     658,   659,   659,   660,   661,   661,   662,   662,   663,   663,
     664,   665,   665,   666,   666,   666,   666,   667,   668,   668,
     669,   669,   670,   670,   670,   670,   670,   670,   670,   670,
     671,   671,   672,   672,   672,   672,   672,   672,   672,   673,
     673,   673,   674,   674,   675,   676,   676,   677,   677,   677,
     677,   677,   677,   677,   677,   677,   678,   678,   679,   679,
     679,   680,   680,   681,   681,   682,   682,   682,   683,   683,
     684,   685,   685,   686,   686,   687,   687,   687,   688,   688,
     688,   689,   689,   689,   689,   690,   690,   691,   691,   691,
     691,   692,   692,   693,   693,   693,   693,   693,   693,   694,
     694,   695,   695,   696,   696,   696,   696,   697,   698,   698,
     699,   699,   700,   700,   700,   700,   700,   701,   702,   702,
     702,   703,   703,   704,   704,   705,   705,   706,   706,   707,
     707,   708,   708,   708,   708,   708,   709,   710,   711,   712,
     713,   713,   714,   714,   715,   715,   716,   716,   717,   717,
     718,   719,   719,   719,   719,   720,   720,   721,   721,   721,
     722,   722,   723,   723,   724,   724,   725,   725,   725,   725,
     725,   725,   725,   726,   726,   726,   726,   726,   726,   727,
     727,   727,   727,   728,   728,   729,   729,   729,   729,   729,
     730,   730,   730,   730,   731,   731,   732,   732,   733,   733,
     733,   733,   734,   734,   735,   736,   736,   737,   737,   738,
     738,   739,   739,   740,   740,   741,   742,   742,   743,   743,
     744,   744,   745,   745,   745,   745,   745,   745,   745,   745,
     746,   746,   746,   747,   747,   747,   747,   747,   747,   747,
     748,   748,   748,   748,   749,   750,   750,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   752,   752,
     753,   753,   754,   754,   755,   756,   757,   757,   758,   758,
     759,   760,   761,   761,   761,   761,   761,   761,   762,   762,
     763,   763,   763,   763,   764,   765,   765,   765,   766,   766,
     767,   767,   768,   768,   769,   769,   770,   770,   771,   771,
     772,   772,   773,   773,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   778,   778,   778,   778,   778,   778,
     778,   779,   779,   780,   780,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   782,   782,   783,   783,   784,   784,
     785,   785,   786,   787,   787,   787,   788,   789,   789,   790,
     790,   791,   791,   791,   792,   792,   793,   793,   793,   793,
     793,   794,   794,   795,   795,   796,   797,   797,   798,   798,
     798,   799,   799,   800,   800,   800,   800,   800,   800,   800,
     800,   800,   800,   800,   800,   801,   801,   802,   802,   803,
     803,   803,   803,   803,   803,   803,   803,   804,   804,   805,
     805,   806,   806,   807,   807,   808,   808,   808,   809,   809,
     810,   810,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   812,   812,   813,   814,   814,   815,   815,   815,
     815,   815,   815,   816,   817,   818,   818,   818,   819,   819,
     820,   821,   821,   822,   823,   823,   824,   824,   825,   825,
     826,   826,   826,   827,   827,   828,   828,   829,   829,   830,
     830,   831,   831,   832,   832,   833,   833,   833,   833,   833,
     834,   834,   835,   835,   836,   837,   837,   838,   838,   838,
     839,   839,   840,   840,   841,   841,   842,   843,   844,   844,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   846,   847,   848,   848,   848,   849,
     849,   850,   850,   850,   851,   851,   851,   852,   852,   852,
     853,   853,   854,   854,   855,   855,   856,   857,   857,   857,
     857,   858,   858,   859,   860,   860,   860,   861,   861,   862,
     862,   863,   863,   864,   864,   865,   865,   865,   865,   866,
     866,   866,   866,   866,   866,   866,   866,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   868,   868,   868,   868,   868,   868,   868,   869,
     869,   870,   870,   870,   871,   871,   871,   872,   872,   873,
     874,   874,   875,   875,   876,   876,   876,   877,   877,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     4,
       3,     2,     4,     5,     6,     8,     6,     8,     6,     8,
       2,     4,     3,     5,     1,     0,     1,     1,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     4,     7,     1,     4,
       4,     7,     2,     1,     3,     4,     3,     0,     1,     0,
       2,     3,     5,     8,     5,     0,     5,     5,     7,     2,
       0,     1,     1,     1,     3,     2,     0,     1,     0,     1,
       3,     1,     3,     1,     3,     2,     6,     6,     8,     6,
       8,     6,     8,     6,     8,     8,    10,     8,    10,     1,
       0,     4,     6,     1,     2,     1,     1,     0,     1,     2,
       2,     1,     2,     2,     1,     2,     3,     2,     2,     2,
       2,     3,     3,     3,     1,     3,     1,     0,     1,     2,
       2,     9,    12,    11,     0,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     2,     1,     1,     2,     2,
       3,     1,     1,     2,     2,     1,     2,     3,     5,     3,
       2,     5,     5,     2,     3,     1,     1,     2,     2,     0,
       4,     0,     3,     4,     4,     0,     3,     2,     0,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     3,     1,     2,     2,     2,     2,     2,     2,     0,
       3,     3,     3,     0,     1,     2,     1,     2,     2,     2,
       2,     4,     1,     3,     1,     3,     1,     1,     1,     1,
       3,     1,     2,     0,     1,     0,     1,     3,     0,     2,
       0,     3,     3,     1,     5,     3,     1,     3,     1,     4,
       5,     5,     6,     3,     7,     4,    11,     1,     3,     2,
       2,     2,     0,     3,     1,     1,     2,     2,     2,     2,
       1,     0,     1,     2,     5,     8,     1,     0,     2,     2,
       2,     2,     3,     4,     2,     1,     1,     1,     3,     2,
       1,     1,     1,     2,     3,    13,    16,     1,     2,     0,
       1,     0,     1,     0,     2,     0,     1,     0,     7,    10,
       2,     3,     0,     4,     2,     3,     2,     3,     2,     2,
       2,     2,     2,     2,     1,     1,     0,     9,    11,    12,
      14,     3,     4,     4,     0,     4,     5,     5,     4,     6,
       1,     1,     1,     1,     1,     1,     0,     1,     3,     1,
       0,     2,     2,     3,     3,     3,     1,     3,     3,     2,
       3,     3,     3,     3,     1,     1,     1,     1,     3,     5,
       1,     1,     1,     1,     3,    11,     9,     1,     1,     3,
       0,     1,     3,     1,     0,     1,     0,     1,     0,     1,
       3,     1,     1,     1,     3,     0,     2,     2,     0,     2,
       0,     1,     0,     1,     1,     1,     3,     3,     1,     1,
       3,     3,     3,     3,     4,     3,     2,     1,     1,     1,
       1,     1,     3,     6,     1,     1,     2,     3,     2,     1,
       5,     3,     0,     1,     1,     1,     1,     8,     1,     1,
       3,     3,     1,     2,     4,     4,     2,     3,     5,     5,
       1,     1,    10,    10,     1,     2,     4,     4,     4,     2,
       2,     3,     1,     3,     6,     2,     0,     3,     3,     4,
       4,     4,     4,     3,     2,     1,     1,     0,     1,     1,
       0,     1,     5,     1,     0,     2,     2,     0,     1,     0,
       3,     1,     3,     4,     3,     1,     1,     0,     2,     2,
       0,     2,     2,     1,     1,     1,     0,     2,     4,     5,
       4,     2,     3,     2,     2,     2,     2,     1,     2,     3,
       0,     1,     0,     5,     1,     4,     6,     2,     1,     0,
       4,     0,     1,     1,     2,     2,     2,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     3,     0,     1,
       3,     1,     1,     1,     1,     1,     2,     4,     4,     5,
       1,     1,     2,     0,     1,     3,     1,     0,     1,     2,
       3,     2,     4,     2,     3,     2,     0,     1,     2,     0,
       4,     5,     2,     0,     1,     3,     3,     3,     3,     3,
       3,     1,     4,     3,     4,     5,     4,     5,     4,     5,
       2,     4,     1,     1,     0,     1,     4,     5,     4,     0,
       2,     2,     2,     1,     1,     0,     4,     2,     1,     2,
       2,     4,     2,     6,     2,     1,     3,     4,     0,     2,
       0,     2,     0,     1,     3,     3,     2,     0,     2,     4,
       1,     1,     2,     3,     5,     6,     2,     3,     5,     5,
       3,     4,     0,     1,     1,     1,     1,     1,     2,     4,
       1,     1,     1,     1,     2,     3,     0,     1,     1,     1,
       1,     1,     2,     2,     2,     2,     2,     1,     3,     0,
       1,     1,     1,     1,     5,     2,     1,     1,     1,     1,
       4,     1,     2,     2,     1,     3,     3,     2,     1,     0,
       5,     2,     5,     2,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     0,
       1,     3,     3,     5,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     3,     3,     2,     2,     3,     3,     5,     4,     6,
       3,     5,     4,     6,     4,     6,     5,     7,     3,     2,
       4,     3,     2,     1,     3,     3,     3,     3,     3,     3,
       4,     3,     4,     3,     4,     5,     6,     6,     7,     6,
       7,     6,     7,     3,     4,     4,     6,     1,     4,     1,
       3,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     5,     6,
       6,     7,     1,     1,     2,     2,     2,     4,     1,     2,
       1,     2,     2,     4,     3,     6,     7,     9,     7,     7,
       4,     4,     1,     1,     1,     5,     1,     1,     4,     1,
       4,     1,     4,     1,     4,     1,     1,     1,     1,     1,
       1,     6,     6,     4,     4,     4,     4,     6,     5,     5,
       5,     4,     6,     4,     5,     0,     5,     0,     2,     0,
       1,     3,     3,     2,     2,     0,     6,     1,     0,     3,
       0,     2,     2,     0,     1,     4,     2,     2,     2,     2,
       2,     4,     3,     1,     5,     3,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     1,     4,     1,
       4,     1,     2,     1,     2,     1,     2,     1,     3,     1,
       3,     1,     0,     1,     3,     1,     3,     3,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     3,     2,     1,     3,     5,
       4,     2,     1,     0,     3,     1,     3,     4,     2,     0,
       1,     3,     1,     2,     1,     3,     1,     1,     1,     2,
       1,     1,     2,     1,     1,     2,     7,     2,     5,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     7,     1,     2,     3,     2,     0,     2,
       0,     4,     7,     2,     0,     1,     1,     1,     1,     6,
       4,     6,     4,     6,     8,     4,     6,     1,     1,     1,
       1,     1,     2,     1,     2,     1,     1,     1,     3,     3,
       3,     3,     2,     2,     1,     3,     1,     1,     1,     1,
       3,     1,     1,     0,     1,     1,     1,     1,     3,     8,
       1,     0,     1,     3,     3,     9,    12,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     159,   416,     0,   132,   131,   416,     0,   519,   416,   492,
     361,     0,   376,     0,   416,     0,   159,     0,     0,     0,
       0,     0,     0,     0,     0,   416,   574,     0,   375,   416,
       0,     0,   436,     0,     0,     0,     0,     0,     2,     4,
       7,    23,    24,    28,     5,    22,   115,    27,     8,    26,
       0,    30,     6,    17,    16,    37,     0,    35,    25,    12,
      18,    32,    38,    34,     9,    36,    11,    14,    10,    29,
      33,    31,   541,   528,   579,   540,   158,   544,    19,    15,
      20,    13,    21,   415,   414,   408,     0,     0,     0,     0,
       0,   409,  1146,  1239,  1240,  1241,  1242,  1243,  1244,  1245,
    1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1254,  1595,
    1255,  1256,  1257,  1543,  1544,  1596,  1545,  1546,  1258,  1259,
    1260,  1261,  1262,  1263,  1264,  1265,  1547,  1548,  1266,  1267,
    1268,  1269,  1270,  1549,  1597,  1271,  1272,  1273,  1274,  1275,
    1276,  1598,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1284,
    1285,  1599,  1286,  1287,  1288,  1600,  1289,  1290,  1291,  1292,
    1293,  1294,  1295,  1550,  1551,  1296,  1297,  1298,  1299,  1300,
    1301,  1302,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,
    1311,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,
    1321,  1322,  1323,  1552,  1324,  1325,  1326,  1327,  1553,  1328,
    1329,  1330,  1554,  1331,  1332,  1333,  1601,  1602,  1334,  1335,
    1336,  1603,  1337,  1338,  1555,  1556,  1339,  1340,  1341,  1342,
    1343,  1344,  1345,  1346,  1604,  1347,  1348,  1349,  1350,  1351,
    1352,  1353,  1354,  1355,  1356,  1357,  1605,  1557,  1358,  1359,
    1360,  1361,  1362,  1558,  1559,  1560,  1363,  1606,  1607,  1364,
    1608,  1365,  1366,  1367,  1368,  1369,  1370,  1609,  1371,  1610,
    1372,  1373,  1374,  1375,  1376,  1377,  1378,  1379,  1561,  1380,
    1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,
    1391,  1392,  1393,  1394,  1395,  1396,  1397,  1562,  1612,  1563,
    1398,  1399,  1400,  1564,  1401,  1402,  1613,  1403,  1565,  1404,
    1566,  1405,  1406,  1407,  1408,  1409,  1410,  1411,  1412,  1413,
    1567,  1614,  1414,  1615,  1568,  1415,  1416,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  1424,  1425,  1426,  1569,  1427,  1428,
    1570,  1429,  1430,  1431,  1432,  1433,  1434,  1435,  1436,  1437,
    1438,  1439,  1440,  1571,  1441,  1442,  1443,  1444,  1445,  1446,
    1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,
    1457,  1458,  1459,  1616,  1460,  1461,  1462,  1572,  1463,  1464,
    1465,  1466,  1467,  1468,  1469,  1470,  1471,  1472,  1473,  1474,
    1475,  1476,  1477,  1478,  1479,  1573,  1480,  1481,  1482,  1617,
    1483,  1484,  1574,  1485,  1486,  1487,  1488,  1489,  1490,  1491,
    1492,  1493,  1494,  1495,  1496,  1575,  1497,  1576,  1498,  1499,
    1500,  1501,  1619,  1502,  1503,  1504,  1505,  1506,  1577,  1578,
    1507,  1508,  1579,  1509,  1580,  1510,  1511,  1581,  1512,  1513,
    1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,  1523,
    1524,  1525,  1526,  1582,  1583,  1527,  1620,  1528,  1529,  1530,
    1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1584,  1585,
    1586,  1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,  1539,
    1540,  1541,  1542,   441,     0,     0,  1128,  1147,  1148,  1156,
     411,   491,   159,     0,   514,     0,     0,   515,     0,     0,
     355,   354,     0,   396,   360,     0,     0,     0,  1146,   406,
    1561,  1429,  1575,   404,  1126,  1147,     0,  1205,  1206,     0,
    1214,     0,  1199,  1203,  1200,     0,  1224,  1216,  1225,  1217,
    1198,  1218,  1207,  1197,     0,  1226,     0,  1201,     0,     0,
       0,   412,  1238,   361,   159,     0,   110,   115,   120,   123,
     121,   119,   122,     0,   518,     0,     0,  1145,   141,   143,
     144,   140,   101,   522,   381,  1577,  1507,   380,   382,   379,
     377,   413,   573,   571,     0,  1102,  1337,  1374,  1467,  1478,
    1577,     0,   442,   446,   410,  1582,   370,   369,     0,  1150,
       0,   545,   708,  1149,  1122,   435,     0,   440,     0,  1443,
     549,   552,  1165,   550,   541,     0,     1,   159,   114,   145,
       0,     0,     0,   374,  1577,  1507,   371,   368,   570,   570,
       0,   570,     0,   533,   541,   536,   540,     0,  1345,     0,
       0,  1345,     0,  1345,     0,  1345,     0,     0,  1094,     0,
    1095,  1129,   524,     0,   525,   523,   526,   328,   359,   358,
     357,   356,   361,  1345,  1184,  1160,     0,     0,     0,     0,
       0,   391,     0,   407,   405,  1212,  1213,     0,  1204,  1202,
       0,  1157,  1621,   760,  1622,   789,   767,   789,   789,  1623,
    1624,  1625,  1626,   756,   756,  1311,   769,  1627,  1628,  1629,
    1345,  1630,  1631,   757,   758,   794,  1632,  1633,  1634,  1635,
    1636,     0,     0,  1637,   789,  1638,   756,  1639,  1640,   761,
    1641,   730,     0,  1642,   759,   731,  1643,   797,   797,  1644,
     784,  1645,     0,  1227,   742,   743,   744,   745,   770,   771,
     746,   776,   777,   781,   747,   829,   756,  1223,  1158,  1159,
    1345,  1219,  1223,  1345,  1223,  1124,  1345,     0,     0,  1234,
       0,   112,   124,  1646,  1647,  1648,  1649,  1651,  1650,  1652,
    1653,  1654,  1655,  1656,  1657,  1658,  1659,  1660,  1663,  1661,
    1662,  1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,
    1673,  1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,
    1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,
    1693,  1694,  1695,  1696,  1697,   138,     0,   139,   129,   118,
     125,   126,   159,   490,   142,   100,     0,     0,     0,     0,
     383,     0,     0,     0,  1131,  1133,  1134,  1025,  1144,  1097,
       0,  1544,  1545,  1546,  1087,     0,  1547,  1548,  1549,  1597,
     959,   946,   955,   960,   947,   949,   956,  1550,  1551,   897,
    1552,  1553,  1142,  1554,  1555,  1556,  1558,  1559,  1560,   951,
     953,  1562,  1563,     0,  1143,  1565,  1566,  1410,  1568,  1569,
    1571,  1572,   957,  1574,  1576,  1577,  1578,  1579,  1580,  1141,
    1581,   958,  1583,     0,     0,     0,  1113,  1042,     0,     0,
       0,  1097,   930,     0,     0,   750,   751,   772,   773,   752,
     778,   779,   753,     0,  1107,   830,   975,  1097,   942,  1003,
     873,     0,   928,   922,   556,  1103,     0,   923,  1130,  1097,
    1088,   556,  1101,   445,   443,   449,   444,     0,     0,     0,
       0,     0,   710,   709,  1123,   434,   432,   433,   431,   430,
     437,     0,   439,   115,  1039,     0,  1088,   551,     0,     0,
       0,   531,   530,     3,  1165,     0,     0,  1174,     0,   372,
       0,   568,   569,     0,     0,     0,     0,     0,     0,     0,
       0,   657,   593,   594,   596,   654,   658,   666,     0,   537,
       0,     0,     0,   200,   200,     0,     0,     0,     0,     0,
      93,    42,    86,     0,     0,     0,     0,   214,   227,     0,
       0,     0,     0,     0,   224,     0,     0,   207,    44,   201,
     203,     0,   200,     0,    40,     0,     0,     0,    46,  1146,
       0,  1595,  1596,  1597,  1598,  1599,   960,     0,  1601,  1602,
    1603,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1561,  1612,
    1613,  1614,  1615,  1616,  1617,  1575,  1619,  1581,     0,  1620,
       0,   934,  1045,   579,  1043,  1166,     0,  1147,  1153,  1093,
       0,  1167,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,
    1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,
    1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,
    1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,
    1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,
    1783,  1784,  1785,  1786,  1787,  1788,  1789,  1790,  1791,  1792,
    1793,  1794,  1795,  1796,  1685,  1797,  1798,  1799,  1800,  1801,
    1090,  1127,  1169,  1168,  1170,  1096,     0,     0,   488,     0,
       0,  1181,     0,  1161,     0,     0,  1345,   367,  1345,     0,
     328,   328,   390,   393,     0,     0,  1215,  1211,  1209,  1208,
    1210,   788,   775,   783,   782,     0,   765,   764,   763,     0,
     762,     0,     0,   789,   789,   787,   766,   742,     0,     0,
       0,   793,     0,   791,     0,   736,   732,     0,   802,   803,
     804,   805,   812,   813,   810,   811,   806,   807,   800,   801,
     808,   809,   798,   799,     0,   814,   815,   816,   817,   818,
     819,   820,   821,   748,   754,  1221,  1222,     0,  1195,     0,
       0,  1190,     0,     0,  1192,     0,     0,     0,     0,   159,
       0,   208,   134,   135,   133,     0,     0,   137,   127,   136,
     116,   117,   211,   228,   128,   111,     0,    99,   479,   454,
     455,   463,   102,     0,  1048,     0,   159,   384,   378,     0,
     926,  1042,  1086,     0,     0,     0,     0,     0,     0,   932,
    1051,     0,     0,   853,     0,     0,     0,  1066,     0,  1072,
       0,     0,     0,   854,   834,   835,     0,  1112,  1119,  1041,
       0,   930,  1039,     0,  1006,     0,  1149,     0,   924,   925,
     931,     0,  1137,     0,   829,   829,  1106,  1025,     0,  1022,
    1023,  1024,     0,     0,     0,  1100,     0,  1033,  1035,     0,
       0,   869,  1031,     0,   872,     0,     0,     0,     0,  1019,
    1020,  1021,  1013,  1014,  1015,  1016,  1017,  1018,  1029,  1012,
     850,     0,     0,   977,   929,     0,     0,   849,     0,     0,
       0,   673,     0,  1135,  1132,     0,  1089,   673,   457,   461,
     462,   460,   448,     0,   456,   447,   452,   450,   453,   451,
       0,   428,     0,   425,   670,     0,   553,     0,     0,   146,
    1180,     0,   153,     0,  1175,     0,   373,   548,   547,   580,
     581,   587,   546,   635,   636,     0,     0,     0,     0,   663,
     661,  1131,  1144,   623,   597,   622,     0,     0,   601,     0,
     627,   830,   656,   535,   591,   592,   595,   534,     0,   659,
       0,   669,   657,   596,     0,     0,     0,     0,     0,     0,
    1345,     0,     0,    77,    58,   280,     0,   199,     0,     0,
       0,     0,     0,     0,     0,    85,    82,    83,    84,     0,
       0,     0,     0,   212,   213,   226,     0,   217,   218,   215,
     219,   220,     0,     0,   205,   206,     0,     0,     0,     0,
     204,     0,     0,     0,     0,     0,     0,     0,     0,   579,
     579,   579,   940,     0,   577,   578,     0,     0,  1091,  1094,
     478,   336,     0,   326,     0,     0,     0,     0,     0,     0,
     361,  1185,  1187,  1186,  1188,  1183,  1162,     0,     0,     0,
       0,   366,   364,     0,     0,   325,   299,   395,  1345,   392,
       0,   316,   516,     0,     0,     0,     0,     0,  1223,     0,
     786,   785,   737,   733,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1228,  1223,
    1220,  1223,  1125,     0,  1223,  1237,  1345,     0,   328,   113,
     130,   209,   229,   210,   230,   511,     0,   485,   493,   498,
     476,     0,   476,     0,   495,   499,   476,   494,   476,   489,
       0,   103,     0,   521,     0,   520,     0,  1098,     0,     0,
    1085,  1081,     0,     0,     0,     0,     0,  1052,  1053,  1054,
    1055,  1056,  1057,  1058,  1059,  1060,     0,     0,  1061,     0,
       0,     0,  1011,  1022,  1023,  1024,  1019,  1020,  1021,  1013,
    1014,  1015,  1016,  1017,  1018,  1037,     0,     0,     0,     0,
       0,     0,     0,     0,   899,     0,     0,   922,  1002,     0,
    1039,  1071,     0,     0,     0,     0,     0,     0,  1039,  1077,
       0,     0,     0,  1111,     0,  1108,   875,  1097,     0,     0,
     874,     0,     0,     0,  1139,  1140,   831,   845,   846,   847,
     851,  1172,  1171,  1105,     0,  1099,     0,     0,   832,   855,
     860,     0,  1078,   893,     0,   881,     0,   868,     0,   879,
     883,   856,   871,     0,   852,     0,  1100,  1034,  1036,     0,
    1032,     0,   842,   843,   844,   836,   837,   838,   839,   840,
     841,   848,  1010,  1008,  1009,     0,     0,     0,   985,   876,
       0,     0,   878,   877,  1337,  1374,     0,   567,   567,   567,
     555,   565,  1104,     0,   722,   579,  1113,   722,     0,   829,
     711,  1165,   438,   427,   426,  1040,  1164,   159,     0,  1178,
       0,     0,     0,   165,   148,     0,  1176,     0,   181,   673,
       0,  1097,     0,   585,   586,     0,   590,  1572,  1463,     0,
       0,     0,     0,   628,   664,     0,   655,   625,   626,     0,
     624,  1131,   629,  1130,   630,   633,   634,   602,   665,  1120,
     667,     0,   660,   539,   538,   671,     0,    43,     0,  1345,
      60,     0,     0,     0,     0,     0,     0,   234,   271,   234,
      98,  1345,  1223,  1345,  1223,  1243,  1312,  1479,     0,    56,
      89,     0,   304,   193,     0,   289,   333,    79,    94,   186,
       0,     0,    45,   202,   216,   221,   189,   225,   222,   106,
     223,   200,     0,    41,     0,   187,     0,   104,     0,     0,
      47,   191,   108,   577,   577,   577,     0,  1044,     0,     0,
       0,  1046,  1047,  1093,     0,   477,     0,   327,     0,   487,
     467,   468,   478,     0,     0,   328,  1184,     0,  1163,  1231,
       0,     0,     0,     0,   402,     0,   319,   317,   347,     0,
     324,   318,   326,     0,     0,   275,     0,     0,     0,     0,
     517,   513,     0,   755,   768,  1196,   742,     0,   796,   795,
     797,   797,   742,     0,   728,     0,   740,     0,   780,   749,
     822,   823,   824,   825,   826,   827,   828,  1189,  1191,     0,
    1193,     0,     0,   480,     0,   483,     0,   481,   482,   486,
     475,     0,   506,     0,     0,     0,     0,     0,     0,   464,
    1049,   572,   898,     0,     0,  1082,     0,     0,   973,     0,
     948,   950,   963,     0,   952,   954,     0,  1026,     0,     0,
       0,   964,   901,   902,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   917,   916,   965,  1001,     0,     0,  1069,  1070,   966,
       0,     0,  1076,     0,     0,     0,   971,     0,     0,     0,
       0,  1118,   927,  1040,  1007,  1005,   933,   829,     0,     0,
       0,     0,     0,     0,     0,   882,   870,     0,   880,   884,
       0,     0,     0,   864,     0,     0,   862,   894,   858,     0,
       0,   895,     0,     0,     0,   941,   567,   567,   567,   567,
     564,   566,     0,     0,     0,     0,  1463,     0,   694,   672,
     674,   681,   694,   699,   943,   720,   944,  1149,     0,   638,
     577,  1119,   638,     0,   458,   429,     0,  1179,     0,   170,
     152,   172,   171,     0,   179,     0,  1097,     0,   170,   154,
       0,   173,     0,  1178,     0,   185,   582,     0,  1027,   590,
       0,   584,   632,   631,     0,   600,   662,   598,     0,   668,
       0,     0,     0,   279,     0,     0,     0,   234,     0,     0,
     343,     0,   330,    78,     0,     0,     0,    52,    97,    70,
      62,    48,    76,     0,     0,    81,     0,    74,    91,    92,
      90,    95,     0,   263,   244,   276,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   579,   575,   576,   935,  1092,   509,   510,   207,
     508,   337,     0,     0,   325,   395,  1182,     0,  1232,     0,
    1230,     0,   367,     0,   328,  1238,     0,   398,   303,   299,
       0,   297,   296,   298,     0,   403,   394,     0,     0,   389,
     774,   739,     0,   792,   790,   738,     0,   734,   741,  1223,
       0,   512,   507,     0,   471,   496,   501,     0,   505,   503,
     502,   497,   500,     0,  1084,  1080,     0,   945,  1050,     0,
    1038,  1064,  1063,   900,   912,   913,   914,  1065,     0,     0,
       0,   909,   910,   911,   903,   904,   905,   906,   907,   908,
     915,  1074,  1073,  1067,  1068,     0,   968,   969,   970,  1075,
       0,  1110,  1039,  1115,     0,     0,  1004,  1138,   833,     0,
       0,   861,  1079,   885,     0,     0,     0,   857,  1026,     0,
       0,     0,     0,     0,   866,     0,     0,     0,   988,   983,
     984,     0,     0,     0,     0,   558,   557,   563,   694,   699,
       0,   541,     0,   681,     0,   693,   619,   692,     0,     0,
     705,   703,     0,   705,     0,   705,     0,   619,     0,   695,
     619,   692,     0,   712,  1123,   721,     0,   653,     0,  1109,
     653,     0,   554,  1177,     0,  1173,     0,     0,     0,   160,
     157,   147,     0,     0,   182,   170,   161,     0,   583,   588,
     589,   599,  1121,   194,   234,     0,     0,    59,     0,   345,
     291,   323,   306,     0,     0,     0,   235,     0,   311,     0,
      51,    71,     0,    67,     0,    96,     0,     0,     0,     0,
       0,    54,    66,     0,    49,     0,  1223,  1223,    57,   290,
    1157,  1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,
    1630,  1631,  1632,  1633,  1634,  1635,  1636,  1714,  1637,   241,
    1638,  1410,  1639,  1640,  1641,     0,  1642,   731,  1643,  1644,
    1645,  1013,  1014,   239,   332,   236,   338,   238,   240,     0,
    1158,   237,   335,   190,   107,     0,   188,     0,   105,   197,
     195,   192,   109,   938,   939,   936,   577,   490,   470,     0,
       0,     0,  1345,     0,  1229,     0,   395,   365,     0,   325,
     402,   400,     0,   353,   275,   348,     0,   424,     0,     0,
       0,   735,   729,  1194,     0,   484,     0,   504,  1083,   961,
     972,  1062,     0,     0,     0,     0,   967,   962,  1117,     0,
    1114,   891,   889,   886,     0,   887,   865,     0,     0,   863,
     859,     0,   896,   974,     0,   990,   987,   562,   561,   560,
     559,   680,   678,     0,   683,  1149,   690,   612,   618,   679,
       0,   675,     0,   704,   700,     0,   701,     0,     0,   702,
       0,   676,     0,  1149,   677,     0,   719,     0,     0,   979,
     935,   979,   459,   169,   149,     0,   150,   180,     0,     0,
       0,     0,   174,   527,     0,   341,    61,     0,   323,     0,
     234,   308,   307,   310,   305,   309,   312,     0,     0,     0,
       0,     0,   292,     0,     0,     0,   255,     0,     0,   323,
       0,   329,   251,   252,   362,     0,     0,     0,    63,    53,
      50,    55,    64,     0,     0,    65,    68,   727,    80,    73,
    1714,  1721,     0,     0,     0,     0,     0,     0,   466,   473,
     207,     0,     0,   299,     0,     0,   325,  1233,     0,     0,
     402,     0,  1235,   401,     0,     0,   231,     0,   272,     0,
       0,   417,     0,   388,   387,     0,     0,   472,   918,     0,
       0,     0,  1116,   888,   892,   890,   867,   976,     0,   579,
     715,     0,   718,   682,     0,     0,   607,   614,     0,   617,
     611,     0,   684,     0,     0,   686,   688,     0,     0,     0,
     723,     0,     0,     0,  1126,  1287,  1555,  1462,     0,   637,
     639,   642,   644,   643,   645,   641,   652,     0,   610,  1136,
     610,     0,     0,     0,   183,     0,   176,   176,     0,   162,
    1028,     0,   234,     0,   322,   342,   270,     0,     0,   253,
       0,   260,     0,   294,   295,   293,   254,   323,   328,   256,
       0,   363,     0,    72,     0,    88,     0,     0,   334,   198,
     196,   937,   490,     0,   395,   275,   424,     0,     0,  1238,
     399,   299,   288,   281,   282,   283,   284,   285,   286,   287,
     302,   301,   273,   274,     0,     0,     0,   389,     0,   919,
       0,   920,     0,   993,   720,     0,     0,   714,     0,   605,
     603,   606,   608,   604,     0,     0,   691,   707,     0,   687,
     685,   696,     0,   727,     0,   698,     0,     0,     0,   646,
       0,   978,   980,     0,     0,   543,   542,     0,   156,     0,
     722,     0,     0,   178,   178,   164,     0,   328,   344,     0,
     314,   321,   313,     0,     0,   250,     0,   257,   352,   259,
     243,   726,     0,    75,     0,   339,   465,   469,     0,   233,
     418,     0,   424,   402,   275,     0,   421,     0,     0,   395,
     921,   989,     0,     0,     0,   713,   716,     0,   689,     0,
       0,     0,   724,   725,   697,     0,     0,     0,   640,     0,
       0,   612,   151,   176,   155,   184,   175,   587,   177,   587,
       0,   352,   300,     0,     0,   278,   243,     0,   269,     0,
      69,    87,   340,     0,   325,   419,  1236,   232,   422,   423,
       0,   722,  1543,  1288,  1514,     0,   991,   994,   992,   986,
       0,   615,     0,   621,   706,   648,     0,   647,   981,   982,
     609,   178,   590,   590,   722,   269,   315,   320,     0,   258,
     261,   349,   350,   351,     0,   265,   262,   266,     0,   424,
       0,   385,     0,   998,   997,   996,  1000,   999,   717,     0,
       0,   613,   649,   587,   167,   166,   163,   234,   277,     0,
       0,     0,   267,     0,   268,   242,   420,   395,     0,   616,
       0,   590,   346,   247,     0,   246,     0,   331,   264,   722,
     995,     0,   168,   245,   249,   248,   386,   620
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2129,  2130,  2131,  1818,   980,
    2823,  1819,   981,   982,  2133,    41,    42,    43,    44,    45,
     599,  1237,   536,  1238,  1239,   796,    46,  1249,   798,   799,
      47,   548,    48,   538,  1753,  1381,  2550,    50,  2084,  1758,
    2088,  2694,  2335,  2083,  2090,  2803,  2867,  2085,  1759,  2695,
    1760,    51,  1439,    52,  1511,  1466,  1250,  1000,  1456,  1242,
      53,  2120,  2424,  2880,  2143,  2967,  2581,  2582,  1820,  2925,
    2926,  2122,  2195,  1448,  2919,  1886,  2750,  1824,  1807,  2583,
    1895,  2704,  2463,  1821,  2366,  1887,  2567,  2809,  1519,  1888,
    2810,  2560,  1889,  1491,  1516,  2368,  2927,  1825,  1492,  2425,
    1435,  1890,  2878,  1891,   495,  2586,    54,  1512,    55,    56,
     571,    57,   558,   559,    58,  2633,  2470,  1153,  1520,  1897,
     496,   539,  2187,  1149,    60,    61,    85,    62,  2631,    63,
     930,   587,   931,   933,    64,    65,   572,   573,  1251,  1362,
    1252,    66,  1872,  2610,  2213,  2611,  1941,  1866,  1247,  1939,
    1565,  1495,  1248,   483,  1579,  2214,  2169,  1566,    67,   497,
    1155,    68,    69,   809,   633,   540,   541,   882,    73,    74,
      75,   578,   590,   591,  1351,  1730,  2052,   953,   564,   565,
    1860,   612,  1485,  1389,  1390,  1766,  2101,  1416,  1417,   962,
     963,  2657,  2795,  2658,  2659,  2518,  2519,  2941,  1404,  1408,
    1409,  1782,  1772,  1395,  2327,  2679,  2680,  2681,  2682,  2683,
    2684,   883,  2539,  1412,  1413,   965,   966,   967,  1421,  1792,
      77,  1734,  2059,  2060,  2061,  2305,  2306,  2320,  2316,  2524,
    2665,  2062,  2063,  2650,  2651,  2767,  2323,  2069,  2669,  2670,
    2725,  1538,   712,  1254,  1186,   714,   884,   715,  1166,   885,
    1170,   717,   886,   887,   888,   720,   889,   890,   891,   723,
    1162,   892,   893,  1181,  1205,  1206,  1207,  1208,  1209,  1210,
    1211,  1212,  1213,   934,  1633,   895,   896,   897,  2065,   898,
    1343,  1718,  2688,  2791,  2792,  2045,  2289,  2505,  2649,  2844,
    2896,  2897,   899,   900,  1294,  1295,  1715,  1338,  1339,   901,
    2427,  1341,  1626,  1293,  1290,  1043,  1044,  1255,  1606,  1607,
    1629,  1970,  1636,  1642,  1997,  1998,  1650,  1683,   902,  1590,
    1591,  1956,  1263,   903,   630,  1050,   631,  1260,  1677,   911,
     904,   905,  1287,  1288,  2011,  2264,  1655,  1788,   582,  2661,
     735,  1130,   906,   907,   908,   909,   936,   584,  1045,   476,
     726,  2868,  1143,   940,  1046,  1822,  1673,   542,   948,  2079,
    1749,    79,  1141,  1505,    80,   528,   529,   732,  1218,   530,
     727,    81,  2179,  2180,    82,   739,   505,   478,   479,   729,
    1133,  1048,  1134
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2605
static const int yypact[] =
{
    5038,   -82,   442, -2605, -2605,   -82, 32819, -2605,   -82,    59,
    2316, 37549, -2605,  5805,   -82, 44171,   643,   205,   185,   232,
   38022, 38022, 44171, 44171, 38495,   -82,   239, 44644, -2605,   -82,
   22585, 35184,    -2,   -97, 45117, 44171,  1350,   437,   -23, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605,   175, -2605, -2605, -2605,
     143, -2605, -2605, -2605, -2605, -2605, 22111, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605,   101, -2605,    33,   116,   465,    67, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, 38968, 44171, 39441, 35657,
   39914, -2605,    85, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,    97, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605,   121, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605,    91,  -171, -2605,   138, -2605, -2605,
   -2605, -2605,  1350, 40387, -2605,   371,   404, -2605,   230, 45590,
   -2605, -2605, 44171, -2605, -2605,   438,   444, 40387, -2605, -2605,
   -2605, 40860, -2605, -2605, -2605, -2605,   411, -2605, -2605,   288,
   -2605,   157, -2605, -2605, -2605,   292, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605,   398, -2605, 50793, -2605, 46063, 46536,
   47009, -2605,   324,    52,    47, 21637, -2605,   175, -2605, -2605,
   -2605, -2605, -2605,   823, -2605, 38022,   823, -2605, -2605, -2605,
   -2605, -2605,   360,   370, -2605,   395,   660,   396, -2605, -2605,
   -2605, -2605, -2605,   615,  9360,  9360, 47482, 47482,   823, 47482,
     477,    34, -2605, -2605, -2605,   -97,   396, -2605,   465, -2605,
   23059, -2605,   475,  -171, -2605, -2605,   158,   810, 12348, 44171,
     489, -2605,   503,   489,   510,   516, -2605,  5038, -2605, 40387,
     856,   816, 35184, -2605,   574,   817,   396, -2605,   251,   251,
    1031,   251,   532,   602, -2605,   798, -2605,   563,   920,  1022,
     739,   950,  6364,   959,  1023,   968,  1070,  6870, 12348, 31400,
   -2605,  -171, -2605,   603, -2605, -2605, -2605,   652, -2605, -2605,
   -2605, -2605,    52,   879, -2605,   666,  1172,   737, 41333, 41806,
   40387,  1160,   764, -2605, -2605, -2605, -2605,   802, -2605, -2605,
      80, -2605, -2605, -2605, -2605,   822, -2605,   822,   822, -2605,
   -2605, -2605, -2605,   788,   788,   996,   848, -2605, -2605, -2605,
    1195, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605,   862,   871, -2605,   822, -2605,   788, -2605, -2605, -2605,
   -2605, -2605, 52167, -2605, -2605, -2605, -2605,   262,   272, -2605,
   -2605, -2605,   864, -2605,  1313, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605,   874, -2605,   749,   788,    66, -2605, -2605,
    1220, -2605,    77,  1226,   166, -2605,  1230,  1107, 12348, -2605,
    1003, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605,   -97, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605,   435, -2605, -2605, 28938,
   -2605, -2605,    47,   918, -2605, -2605, 28938, 12846, 51251,  1387,
   -2605,  1198, 44171,   947, -2605, -2605, -2605, -2605, -2605, -2605,
     952,  1451,    88,  1461, 12348,   982,    88,    88,   986,  1323,
   -2605, -2605, -2605,   139,   998,  1012, -2605,   141,   141, -2605,
    1024,  1029, -2605,   144,  1043,  1061,  1534,  1553,   122,  1085,
    1111,   871,    88, 12348, -2605,  1125,   141,  1143,  1157,  1162,
    1566,  1176, -2605,  1606,  1182,    93,   110,  1193,  1196, -2605,
    1201, -2605,   146, 12348, 12348, 12348,  1544, 12348,  7866, 40387,
    1699, -2605,  -171,  1221,   823, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605,   132,  5092, -2605,  1261, -2605, -2605, -2605,
     188, 12348, -2605,  1709,   -17, -2605,   151, -2605, -2605, -2605,
     211,  1511,  1233, -2605, -2605, -2605, -2605,   170,  1634, 27992,
   28465, 40387, -2605, -2605,  -171, -2605, -2605, -2605, -2605, -2605,
   -2605,   491, -2605,   175, 30326,   538,  -171,   489, 44171, 44171,
    1703, -2605, -2605, -2605,   503, 35184, 40387, 47955,  1364, -2605,
    1512, -2605, -2605,   465,   465, 12348,   465,   455,    18,  9858,
   13344,  1577,  1464,   148,   531,  1582, -2605,  1469,   532,   602,
   12348, 40387, 33292,   778,   791,  1260,  1344,  1268,   470,  1675,
   -2605,  1271, -2605,  1359, 40387, 52167,   172, -2605,  1717,   172,
     172,   560,  1723,  1367,   195,  1528,   352,  -122,  1271,  2119,
   -2605, 35184,   112,   463,  1271, 40387,  1378,   473,  1271,    92,
   12846,  1050,  1112,   663,  1156,  1187,   108, 12846,  1203,  1215,
    1234,  1272,  1301,  1361,  1384,  1421,  1485,  1497,   115,  1517,
    1583,  1609,  1617,  1619,  1629,   120,  1632,   134, 12846,  1648,
    1297, -2605, 30326,   -54, -2605, -2605,  1659,   125, -2605, 26572,
    1292, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605,  1390, 44171,  1348,   335,
    1655,  1705, 31400,  1312,  1666, 40387,  1547,  2119,  1550,  1783,
    1332,   652, -2605, 48428, 10356,  1789, -2605, -2605, -2605, -2605,
   -2605, -2605,  1334, -2605, -2605, 12348, -2605, -2605, -2605,  1818,
   -2605, 51251, 51251,   822,   822, -2605, -2605,  1795,  1423,  1424,
    1818, -2605,  1818, -2605, 44171,  1341,  1347,  1818, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605,  1818,  1428, -2605,  1430,  1434,  1436,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, 51251, -2605, 44171,
   44171, -2605, 44171, 44171, -2605, 44171, 44171,   546, 42279,    47,
   36130, -2605, -2605, -2605, -2605,   734,   787, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, 31400, -2605,  2255, -2605,
   -2605, -2605,  1338,   554, -2605,   566,  1350, -2605, -2605, 12348,
    -171, 12348, 30326,  1398, 12348, 12348,  1357,  1818,  1818, -2605,
    2207,  1818,  1818, 30457, 12348, 25906, 12348, 16830, 10854, 12348,
   12348,  8364, 12348, 30457,  1842,  1842, 24007, -2605,  1515,  1360,
    1366,  1052,  5413,  1362, -2605,   413, -2605,  1358, -2605,  -171,
    -171, 12348, -2605, 12348,  3382,  3382, -2605,   131, 51251, 12348,
   12348, 12348, 12348, 30927,  1452,   129, 44171, 12348, 12348,  1371,
    1385, -2605, 12348,  1591, -2605,  1374, 12348,  1456,   135, 12348,
   12348, 12348, 12348, 12348, 12348, 12348, 12348, 12348, -2605, -2605,
   18310,   159,  1691,  1713,  -171, 12348,   -98,   505, 12348, 36603,
    9360,  1707,  6870, -2605,  -171, 27046,   103,  1707, -2605, -2605,
   -2605, -2605, -2605,   152, -2605, -2605, -2605,  1338, -2605,  1338,
    1380, 40387,   158, 34711, -2605, 12348, -2605,   581,  1388, -2605,
    1441,   731,  1841, 44171, -2605, 24481, -2605,  1667, -2605,  1386,
   -2605, 29407,  1667, -2605, -2605, 17314,  1507,  1665,  1603, -2605,
   -2605,  1584,  1585, -2605,  1396, 30374, 13842, 13842, -2605,  1304,
   30326,  1324, -2605, -2605, -2605, -2605, -2605, -2605,     8, -2605,
   40387,   -11,  1577,   531,   590,  1122,  1402, 48901, 44171,  1677,
    1627,  1679,  -140, -2605, -2605, -2605, 51251, -2605, 44171, 44171,
   49374, 49847, 31873, 44171, 31400, -2605, -2605, -2605, -2605, 44171,
     792, 44171,  6423, -2605, -2605, -2605,   172, -2605, -2605, -2605,
   -2605, -2605, 44171, 44171, -2605, -2605,   172, 44171, 44171,   172,
   -2605,  1183, 44171, 44171, 44171, 44171,  1499, 44171, 44171,   -41,
     -41,  1607, -2605, 11352,    74, -2605, 12348, 12348, -2605, 12348,
    1580, -2605,   598, -2605,  1623,    73,  1459, 40387, 40387, 44171,
    1610, -2605, -2605, -2605, -2605, -2605, -2605, 31400,  1415,  1416,
    1759,  2119, -2605,  1760,   979, 33765,   540,  1457,  1644, -2605,
    1630, -2605, -2605,   623, 12348, 12348,   653,  1425,    66,   659,
   -2605, -2605,  1429,  1347,  1439,  1440,  1427,  1432,   678, 51251,
    1818,    90,  1438,  1443,  1422,   852,   692,  1322, -2605,    77,
   -2605,   166, -2605,  1638,   150, -2605,  1654,  1887,   652, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605,   682, 21163, -2605, -2605,
    1893,   823,  1893,   456, -2605, -2605,  1893, -2605,  1893, -2605,
   28938, -2605, 12846, -2605, 51251, -2605,   683, -2605,  1447, 12348,
      58, -2605, 29473,   706, 12348,  1446,  1450, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605,  1462,  1776, -2605,  1468,
    1475,  4658, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605,  1495,  1458, 29556,  1500,
   16830, 16830,  7866,  1106, -2605, 16830,  1502, -2605, -2605,   741,
   29425,  1360,  1503, 29777, 11850, 12348, 11850, 11850, 29956,  1360,
    1504, 30053, 44171, -2605, 14340, -2605, -2605, -2605, 12348, 40387,
   -2605, 12348,   769,  5869, -2605, -2605, -2605,  3218,  3218,  3218,
   30457, -2605, -2605, -2605,  1470, -2605, 16830, 16830, -2605,  5255,
    2605,  7866, -2605, -2605,  1790, -2605,  1105, -2605,  1506, -2605,
   -2605,  3279, -2605, 25906, 30141, 12348,   130, -2605, 12348,  1371,
   12348,  1551,  3218,  3218,  3218,   160,   160,   169,   169,   169,
     266,   505, -2605, -2605, -2605,  1508,  1510,  1513,  1711, 30326,
    1176, 12348, -2605, 30326,   736,   890, 40387,  2819,  3036,  4552,
   -2605, -2605, -2605, 19741,  1541,   -54,  1544,  1541,  1818,  3382,
   -2605,   503, -2605, -2605, -2605, 30326, -2605,  1350, 19741,  1555,
    1567,   -85, 22585,  1724, -2605, 44171, -2605, 44171, -2605,   -18,
    1529, -2605, 12348, -2605, -2605,  2230,  1532,  1727,  1729,   898,
     898,  1304,  1735, -2605, -2605,  1587, -2605, -2605, -2605, 12348,
    8862,  1349, -2605,  1368, -2605, -2605, -2605, -2605,  1526, -2605,
   -2605,  1784, -2605, -2605, -2605, -2605,  1615,  1271, 12348,  1762,
   -2605,   124,  1535,  1881,  -134,  1835, 44171, -2605,  1749, -2605,
     946,  1889,   150,  1890,   150, 31400, 31400, 31400,   797, -2605,
   -2605,   823, -2605, -2605,   805, -2605,   227, -2605, -2605, -2605,
    1626,   479,  1271,  2119, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605,   164,   651,  1271,  1631, -2605,  1635, -2605,  1636,   861,
    1271, -2605, -2605,    74,    74,    74, 12846, -2605,  1768,  1770,
    1560, 30326, 30326, 30326,  1557, -2605,   107, -2605, 44171, -2605,
   -2605, -2605,  1580, 40387,  1562,   652, -2605,   586, -2605,   823,
   44171, 40387, 40387, 44171,  1601, 40387, -2605, -2605, -2605,  1563,
    1561, -2605, 51251,   -58,  1777,  1778,  1268,  2023,  1910, 40387,
   -2605, 30326,   840, -2605, -2605, -2605, -2605,  1818, -2605, -2605,
     303,   303, -2605, 44171, -2605,  1572, -2605,  1573, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605, 44171,
   -2605,  1915,  1350, -2605, 31400, -2605, 34238, -2605, -2605, -2605,
   -2605,   823, -2605,   823,  1793, 44171, 27519,   823,   823, -2605,
   -2605, -2605, -2605, 30005, 12348, -2605,  1926, 51251, -2605,  5930,
   -2605, -2605, -2605, 12348, -2605, -2605, 12348, -2605, 25906, 12348,
    1901, -2605,  2059,  2059,  5413, 51251, 16830, 16830, 16830, 16830,
     595,  1143, 16830, 16830, 16830, 16830, 16830, 16830, 16830, 16830,
   16830, 17812,   286, -2605, -2605, 12348, 12348,  1908,  1901, -2605,
   51251,  1590,  1360,  1594,  1596, 12348, -2605, 51251,   842,  7866,
   30095, -2605,  -171,  6169, -2605, 30326, -2605,  3382, 12348,  1121,
    1701, 12348,   859, 12348,  1905, -2605, -2605,  1592, -2605, -2605,
   51251, 12348,  1598,  3397, 16830, 16830,  4029, -2605,  4151, 12348,
    7866, -2605,  1607,  1625, 24955, -2605,  1692,  1692,  1692,  1692,
   -2605, -2605, 40387, 40387, 40387, 20215,  1909, 19267, 42752,  1602,
     755, -2605, 42752, 43225, -2605,  1633, -2605,  -171, 12348,  1935,
      74,  1515,  1935,  1621, -2605, -2605,  1624,  1602, 12348,  1771,
   -2605, -2605, -2605,  1681, -2605,   865, -2605,  2038,  1771, -2605,
     875, -2605, 24481,  1555, 12348,  -171, -2605,  1639, -2605,  1532,
     149, -2605, -2605, -2605,  1839, -2605, -2605, -2605, 40387, -2605,
   44171,  6291,  1974, -2605, 44171, 44171, 44171, -2605, 44171,   889,
     119,  1641, -2605,   119,  1953,   483,  1268,   195,  2670,   -27,
   -2605, -2605, -2605,  1704, 44171, -2605, 44171, -2605, -2605, -2605,
   -2605, -2605, 31873, -2605, -2605, -2605, 31400, 25432, 31400, 44171,
   44171, 44171, 44171, 44171, 44171, 44171, 44171, 44171, 44171,  1637,
    1642,  1645,  1607, -2605, -2605, -2605, -2605, -2605, -2605,  -122,
   -2605, -2605,   107,  1647, 33765,  1457,  1705, 43698, -2605,  1650,
    1652,   891,  2119,  2091,  1657,   324,   183, -2605, -2605,   540,
   33765, -2605, -2605, -2605,  2049, -2605, -2605,  1350, 44171,  1702,
   -2605,  1347,  1653, -2605, -2605,  1347, 51251, -2605, -2605,   150,
   40387, -2605, -2605,   906, -2605, -2605, -2605, 44171,  1658, -2605,
    1658, -2605, -2605, 12348, 30326, -2605,  1663, -2605, 30326, 26387,
   -2605, 30326,  1908, -2605,   964,   964,   964,  1948,  1966,   196,
    1669,   964,   964,   964,   259,   259,   171,   171,   171,  2059,
     286, 30326, 30326, -2605, -2605,  1664, -2605, -2605, -2605,  1360,
    1673, -2605,  5321, -2605,   919, 44171, -2605, -2605,   282, 12348,
   12348,  5255, -2605,  4309, 12348, 51251,   925,  5255,   179, 12348,
    1805,  1916, 12348, 12348,  4771, 26405,  1674, 12348, 50320, -2605,
   -2605, 40387, 40387, 40387, 40387, -2605, -2605, -2605, 42752, 43225,
    1670, 18792,   755,  1685, 40387, -2605,  1748,  1678, 19741,  1932,
    1866, -2605, 19741,  1866,   102,  1866,  1950,  1748, 23533, -2605,
    1748,  1680,  1900, -2605,   526, 30326,  2125,  2011,  1706, -2605,
    2011,   823, -2605, 30326,  9360, -2605,  1350,  1173, 44171,  -171,
     -53, -2605,  1714, 44171, -2605,  1771, 30326, 25906, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, 44171,   926, -2605,   935,   119,
   -2605,  1740, -2605,   173,  1997,    68, -2605, 31400,  1465,   312,
   -2605,  2010,  1929, -2605,   172, -2605, 12348,   312,  1930,   168,
   44171, -2605, -2605,  2709, -2605, 51251,   150,   150, -2605, -2605,
    1719,  1720,  1721,  1722,  1725,  1726,  1728,  1730,  1732,  1733,
    1734,  1736,  1737,  1742,  1743,  1745,  1750,   862,  1755, -2605,
    1756,  1639,  1757,  1761,  1763, 51709,  1764,  1766,  1767,  1773,
    1780,   734,   787, -2605, -2605, -2605, -2605, -2605, -2605,   666,
    1785, -2605,  1753, -2605, -2605,  1797, -2605,  1800, -2605, -2605,
   -2605, -2605, -2605, -2605, -2605, -2605,    74,   918,    95, 44171,
    1769,  2182,  1955,  1779, -2605,   823,  1457, -2605,  1305, 33765,
    1601, -2605,  2122,   156,  1778, -2605,   137,  1816,  1971, 44171,
    1788, -2605, -2605, -2605,  2236, -2605, 34238,  1658, 30326, -2605,
   -2605, -2605, 16830,  2114,  1791, 51251, -2605, -2605, -2605, 12348,
   -2605,  5255,  5255,  4309,   936, -2605,  5255, 12348, 12348,  5255,
    5255, 12348, -2605, -2605, 26434,  1985, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, 32346, 42752,  1802, -2605, 37076, -2605, -2605,
   44171,   755, 19741, -2605, -2605,  1643, -2605, 19741,  2077, -2605,
   19741, -2605, 44171,  1806, -2605, 44171, -2605, 14838, 12348,  1844,
     823,  1844, -2605,  1233, -2605,   -85, -2605, -2605,  2214, 20689,
    2168, 12348, -2605, -2605,  1808,   119, -2605,  1973,  1740,  1817,
   -2605, -2605, -2605, -2605, -2605, -2605, -2605,   969,  1819, 44171,
   44171, 16830, -2605,   312,   182,   142, -2605,  2088, 40387,  1740,
    2229, -2605, -2605, -2605, -2605,  2197,  2278,  2170, -2605, -2605,
   30326, -2605, -2605,  1818,  1818, -2605, -2605,  2248, -2605, -2605,
   -2605, -2605,   666,   337, 25432, 44171, 44171,  1829, -2605, -2605,
    -122,  2201,   980,   540,  1350,  2177, 33765, -2605,  2293, 44171,
    1601,  1838, -2605, -2605,   178,   178, -2605,  1981, -2605,  1982,
     201, -2605, 40387, -2605, -2605, 20689,  1350, -2605,  2102, 16830,
   51251,   989, -2605, -2605,  5255,  5255,  5255, -2605,  2283,  1607,
   -2605,   991,  2302, -2605, 44171,   -84,   -78,  1847,  1848, -2605,
   -2605,   995, -2605, 12348,  1850, -2605, -2605, 19741,  1643,   999,
   -2605, 51251, 44171,  1001, 51251,  1852,  -115,  1853,  7368,  1851,
   -2605, -2605, -2605, -2605, -2605, 30326, 30326, 44171,  1911, -2605,
    1911,  1912, 44171, 12348, -2605,  1016,  2275,    41,   -20, 30326,
   -2605, 40387, -2605, 31400, -2605,   119, -2605, 31400, 12348, -2605,
    1232,  1948,  2313, -2605, -2605, -2605, -2605,  1740,   652, -2605,
   44171, -2605,  2165, -2605, 44171,  1918,   367,  1934, -2605, -2605,
   -2605, -2605,   918,   823,  1457,  1778,  1816, 40387,  1350,   324,
   -2605,   540, -2605, -2605, -2605, -2605, -2605, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605,  2290,  2072,  2292,  1702,  1033,  2102,
    1047, -2605, 12348,    17,  1633, 32346,  1868, -2605,  1051, -2605,
   -2605, -2605, -2605, -2605, 44171,   908, -2605, 30326, 44171, -2605,
   -2605, -2605, 44171,  2248,  1059, -2605, 12348,  1870, 12348, -2605,
   14838,  1871, -2605,  2328,  2013, -2605, -2605,  1350, -2605, 26453,
    1541, 20689, 44171, 44171, 44171, -2605,  1995,   652,   119,  1066,
   -2605,  1888, -2605, 26523,  2101, -2605,  2189, -2605,  2133, -2605,
    1886, -2605, 12348, -2605,  1958, -2605, -2605, -2605,  2345, -2605,
   -2605,  1891,  1816,  1601,  1778,  2096, -2605,  2098,  1894,  1457,
   -2605,  1360, 15336, 15336,  1896, -2605, -2605, 44171, -2605,  1071,
    1913,  1072, -2605, -2605, -2605,  1079, 14838,  1088, -2605, 44171,
    1919, 37076, -2605,  2275, -2605, -2605, -2605,   265, -2605,   265,
   24481,  2133, -2605, 31400, 25432,  2127,  1886,    56,  2124,  2119,
   -2605, 30326, -2605,  1350, 33765, -2605, -2605, -2605, -2605, -2605,
   20689,  1541, 16332,  2053,   111, 29454, -2605, -2605, -2605, -2605,
    1102, -2605,  2399,  2074, -2605, -2605,  1119, -2605, -2605, -2605,
   -2605, 44171,  1532,  1532,  -136,  2124, -2605, -2605,  2211, -2605,
   -2605, -2605, -2605, -2605,   117,  2130, -2605,  2131,  1171,  1816,
    1120, -2605,  2382, -2605, -2605, -2605, -2605, -2605, -2605,  1924,
    1928, -2605, -2605,   265, -2605, -2605, -2605, -2605, -2605,   344,
     344,  2298, -2605,  1988, -2605, -2605, -2605,  1457, 15834, -2605,
    2414,  1532,   119, -2605,  2402, -2605,   189, -2605, -2605,  1541,
   -2605,  1933, -2605, -2605, -2605, -2605, -2605, -2605
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2605, -2605, -2605,  1828, -2605, -2605, -2605,   309, -2605,   990,
   -2605,   297,  -568,   631, -2605, -2605, -2605, -2605, -2605, -2605,
    -433, -2605,  -474,  -469, -2605, -2605,     1,  -772,  1212, -2605,
   -2605,    61,  1073,    11, -2605, -2605, -2605, -2605,   105,   353,
   -2605,  -354, -1872,   -96, -2605, -2457, -2549, -2605,  -420, -2403,
   -1678, -2605,  -915, -2605,  -620,  -966,  -775,  -978, -2605,    72,
   -1107, -1780, -2352,  -424, -2605,  -497, -2605,  -249, -1766,  -462,
    -449, -2605, -2357,  -930, -2605,  1505,  -156, -2605,   667, -2605,
   -2114, -2605, -2605,   658, -2605,  -947, -2605, -2605, -1837,   290,
    -395, -2312, -2106,   613,  -632, -2605,  -443,   339, -1726, -2605,
     686, -2605,  -382, -2605,  -487, -2130, -1105,   314, -2605, -2605,
     795, -2605, -2605, -2605, -1104, -2605,  -263, -2605, -2605, -2097,
   -2605,    70, -2341, -1184, -2605, -2605,  1148, -1101, -2485, -2605,
    1126, -2605, -2605, -2605, -2605, -2605,   401, -2605,   917, -2605,
     803, -2605, -2605, -2605, -2605, -2605,  -553,   627, -2279, -2605,
     567, -2605, -2605, -2605, -2605,    26,   328, -2605, -2605, -2605,
   -2605, -2605, -2605, -2605, -1168,    22,    35,   136,   -22,   -24,
     -14,     7,    39,  1565,  1595, -2605, -1260,   670, -2605, -2605,
   -1759,  -605,   -68, -2605,   743, -2557, -2013,  -459,  1086,  1548,
    1552,  -265,  -178, -2605,  -343, -2605, -1480, -2605, -2605,   740,
    1128, -1284, -1264, -2605,   448,  -330,  -261, -2605, -2605, -2605,
   -2605, -2605,   197,  -450,  1108, -2605,  1568, -2605, -2605, -2605,
   -2605, -1257,   786, -1974,   478, -1953, -1844,   241,   224,  -994,
    -127,    14,   487,  -218, -2605, -2605,  -216, -1687, -2304,  -233,
    -231, -2605, -2605,  -511, -1122,  -689, -2605, -2605,   558,  1904,
   -2605, -2605, -2605,  2079,  2084, -2605, -2605,  2213,  2696, -2605,
    -583,  2950,  1862,  -666,  1283, -1041,  1286, -1086,  -862, -1082,
    1288,  1289, -1241,  3274, -1559,  -796,    -5, -2605, -2353, -1415,
   -2605, -2605,    19, -2605,  -298, -2605,  -297, -2605, -2605, -2605,
    -281, -2604, -2605,  1224,   907, -2605, -2605, -1227, -2605,  4042,
     806, -2605, -1620,  -579,  1306,  -718,  -977, -1134, -2605, -2605,
   -2605, -2605, -2605, -2605, -1213, -1775,  -606,   873, -2605, -2605,
     984, -2605, -2605,   118,  -588,  1087,  -565,  -840,   881, -2605,
    -549,  1225, -2605,   843, -1917, -2605,   509, -2605,   970,  -525,
    1765, -1010,    24, -2605,  -519,    -1,  1676,  -846, -2080, -2605,
   -2605,  -489, -2195,  -891, -2605,  -621, -2605,    32,  1646,   499,
   -2605, -2605,   708, -2605, -2605, -2605, -2605,  1376,  -706, -2605,
    1431, -2605, -2605, -2605, -2605, -2104,    -6, -2605, -2605, -2605,
    -523, -2605, -2070
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1725
static const yytype_int16 yytable[] =
{
     477,   473,   999,   646,   734,  1138,   613,    76,  1131,   935,
     968,    49,   801,  1177,   595,   713,   912,   537,   924,   549,
     549,  1470,    70,    76,  1241,  1434,  1221,  1240,  1224,  2123,
     474,  1469,    78,  1297,  1501,    71,  1502,  1503,  1529,   731,
    1504,  1299,  1183,  1135,  1557,   581,   740,  1445,  1625,  2138,
    2072,  2140,   615,  1379,   998,  1533,  1004,  1344,  1008,  1441,
     741,  1481,   616,  1664,  1665,   577,   795,  2429,  2450,  1354,
      59,  1972,  1973,  2032,   593,  2464,  1992,  2431,  2451,  2091,
    2119,  2460,   551,  2302,  1163,  1164,  2348,  1474,  1585,  1253,
   -1154,   607,  2263,  -789,  2159,  2160,  2161, -1154,  -797,   818,
    1737,  -529, -1611,   624,   802, -1151, -1151,  2626, -1129,   481,
    2319,  1175,   547, -1600,  2802,  -797,  -532,  2019,  2020,  2622,
   -1611, -1703, -1703,  1784,  1215, -1618, -1618,  -794, -1714, -1714,
   -1155,  -794,  1506, -1721, -1721,  1215,    72,   547, -1152, -1152,
     533,   818,  1361, -1155, -1600,  1787,  -756, -1723, -1723,  -769,
    1733,  -784,    72,   961,  2181,  1139,   547,   547, -1011,  1227,
    2652,   925,   964,  1157,  1411, -1011,    72,   585,  2608,  1675,
    1675,  1308,   594,  1358,  1231,   547,  1231,   818,   608,   818,
    1308,   818,  1975,  1696,  1601,  2564,  1712,  1437,  1603,     3,
       4,  1426,    72,  1713,  -529,  1954,  2696,  1349,  1472,  -207,
    1183,  1314,   918,  1345,  -207,  2742, -1030,  1158,  1215,  -532,
    1314,  1454,   614, -1030,  1457,  1458,  2341,  -474,  2317,  2218,
    2220,  2769,  2253,  2191,  1215,  2921,   485,  2771,  1396,  1599,
    2548,  2673,  2758,  1316,  2603,   610,  2362,  2949,  1396,  1437,
    2804,  1870,  1316,  1163,  1164,   609,  2702,  2591,   610,  2805,
    2151,  2830,  2728,   544,  1720,  2869,  2743,  2627,  2787,  2715,
    2754,  1790,  1858,   600,   657,  2744,   562,  2719,  2755,  1175,
    1975,  2310,  2628,  2934,  1397,  2772,   801,  1308,   951,  2740,
    1243,  2360,  2696,   801,  1397,  1359,   486,  1243,  2932,  1429,
    2461,  2561,  1479,  1308,  2745,  1805,  1453,  1975,  1289,  1480,
    2713,  1805,  1763,  2624,  2974,  2311,   957,  1314,  1697,  2349,
    2912,  2328,  2913,   543,  2081,  2068,  2127,  1300,  2066,   628,
    2363,  2527,   610,   629,  1698,   926,  2483,   927,  1245,  1699,
    2313,    83,  1464,  2066,  2521,  2602,  1135,  2359,  2525,  1316,
     546,  2842,  2584,  1398,  2383,  1356,  2319,  2885,  2230,  2082,
     601,  2625,  1806,  2621,  2970,  1316,  1465,  2922,  2116,  2618,
    2092,  2468,  2943,  2562,  2746,  1700,  2585,  1791,  2784,   563,
    2843,  1356,  2714,  2350,  1304,    84,  2747,  -650,  2829,   959,
    1159,   952,  1399,   685,  -529,  2364,  2961,  2365,  2356,  1764,
    2358,  1424,  1399,   545,  1721,   588,   801,   801,  1243,  -532,
    1243,  1243,  2963,  2770,  1360,  2817,  2911,  2726,  1602,  2773,
    1216,    26,  2652,  2806,  1377,  2716,  1859,  2234,  2235,  2236,
    2237,  1216,  2935,  2241,  2242,  2243,  2244,  2245,  2246,  2247,
    2248,  2249,  2250,  2923,  1444,  2756,  1523,   596,  1484,  2549,
    1431,  1400,  1483,  2712,  2956,   919,  -529,    31,  2696,  2462,
    2315,  1400,  2629,  2826,  2511,  1582,   490,  2481,   491,  1921,
     611,  -532,  2975,  1923,  1925,  1926,  1625,  1243,  2053,  2054,
    1243,  1243,   597,  2553,  2484,  2280,  2281,  2887,  2092,  1350,
    1800,  1634,  1346,   494,  1871,  1160,  1784,  2930,    33,    76,
     586,  2477,  2886,   632,  1216,  2167,  2168,  1878,  2074,  2735,
    1373,    34,  2093,  1920,   634,  2565,  1857,  2104,  1589,  1422,
    1216,  1701, -1011,   595,   636,   920,  1308,   635,  1423,  1517,
     728,  1131,  2917,  1473,  2429,    35,  1676,  2034,   812,   800,
    2609,   628,  1161,  1470,  2431,   629,   797,  2696,  2098,    36,
    1714,    76,   803,  2900,   549,   805,  1314,   969,  2662,  1178,
    2950,   482,  1432,  2666,   615,  -529,  2668,   658,   477,   477,
   -1030,  2653,  1217,   617,   616,  2748,  1178,   915,  2749,   642,
    -532,  1179,  2642,  1220,  2555,  2152,   602, -1154,  1316,  2076,
    -789,  1916,   477,   627, -1154,  1180,  1526,   929,  1179, -1611,
    1530,  1531,  1446,   628,  -529, -1129,  -529,   629,  2370,  1773,
   -1600,  2566,  1182,   928,    76,  1857,   804, -1611,    49,  -532,
    2964,  -532, -1618, -1618,  -794,  1393,   947, -1155,    72,    70,
     598,  1047,   477,  1132,  1303,  1567,  1282,  2834,   937,    78,
   -1155, -1600,    71,  1165,  1735,  2833,  1169,  2828,  -784,    86,
    2066,   651,  2066,  1352,  1738,  1334,  1335,  1336,  1337,  1464,
    1527,  2593,  2594,  1235,  1236,  1235,  1236,  1337,   655,  1990,
     713,  1536,  1223,  1537,  1496,  2552,  1459,    59,  1542,  2371,
      72,   594,  1587,  1465,     3,     4, -1700, -1700,  -207,  -207,
    1586,  1834,  1289,  1922,  1924,  1543,  1593,  2607,  2965,   957,
     957,  1837,  1672,  2779,  1840,   958,   728,  1551,  2183,  1639,
    1641,   628,  1649,  1446,   656,  1355,  1548,   801,  2147,  1468,
    1446,  1587,  1135,  1446,   614,  2966,  1562,  1564,  1178,  1446,
    1394,  2148,  1662,  2612,  1944,  2238,  1300,  2554,  1178,  1945,
     731,  1550,   477,    72,  1131,  1497,   533,  1554,  1561,   659,
    1179,  1625,  2891,   818,  1987,  1988,  1989,  1990,  1595,  1596,
    1179,  2372,  1609,  1610,  1180,  1559,  1587,  2232,   660,  1178,
    -578,   795,   959,   959,  1182,  -578,  1587,   647,  1135,  1985,
    1986,  1987,  1988,  1989,  1990,   638,  2267,   639,  2621,  1946,
    2705,  1179,  1498,  1447,  2201,  2254,  2291,  2292,  2293,  2294,
    2205,  1563,  1938,   800,  2429,  1937,   818,  1666,  1244,    87,
     800,  1047,   728,   648,  2431,  1244,  1460,    88,   640,    76,
     641,   960,   960,  1297,  1461,   972,   738,  2012,   477,   557,
    1475,   973,  1905,  1826,  2727,   576,  1266,  1678,   547,    26,
    1478,  1507,  1833,  -578,  1634,  1634,  2150,  2531,   649,  1634,
    2534,   806,    89,  1927,  1444,  1928,  1750,   477,  1930,  2309,
    2075,   606,   807,  1437,  2824,  1470,   595,  1797,  1188,  1189,
    2969,  1507,   808,  2239,  1438,    31,  1437,   477,   477,   477,
     810,   477,   477,  2240,  1853,  1854,  1855,  1440,   811,  2162,
    1634,  1634,  -578,  1302,  1832,   650,  1131,  1783,  1783,    90,
     812,  1446,  1305,  2066,  1447,   477,  2276,  2066,   813,  2944,
    2945,  1447,  2102,  1843,  1447,  1353,    33,   818,  1850,  1659,
    1447,  1660,  2655,   800,   800,   647,  1364,  2656,  1244,  1244,
    2098,  2095,  2808,  2638,  2310,  1808,  2153,   974,  1229,  1387,
    1388,  1230,  1392,  1190,  1191,  1173,  1174,  1243,    72,   616,
     616,  2812,   616,   608,  1196,  1197,  1902,  1243,  2972,   477,
    1243,   648,   917,   477,   477,  1444,  -579,    36,  2311,   947,
     923,  -579,  1444,  2192,   477,  1444,  2196,   913,   914,  2124,
     916,  1444,   817,  1835,  2312,  1975,  1269,   932,  1838,   728,
   -1725, -1725, -1725,  2313,  1371,   938,  2177,  1372,  1332,  1333,
    1334,  1335,  1336,  1337,  1893,   939,  1894,  1192,  1193,  1194,
    1195,  1196,  1197,   941,  1047,  1198,  1199,    26,  2154,   942,
     609,  1047,  2711,  1877,  1291,  1471,   628,  2314, -1129,  1943,
     629,  1915,  1917,  1947,   945,  1948,  2474,  1751,  1914,  -579,
     946,  1374,  1047,   650,  1375,   950,  1190,  1191,  2001,  1555,
    2003,  2004,  1375,    31,   801,   972,   972,  1581,  1243,   949,
    1582,   973,   973,  1200,  1201,   970,   619,   801,   622,  1583,
     626,  1243,  1584, -1698, -1698,  1649,  2002,  1649,  1649,  1501,
     971,  1502,  1503,  1950,  1746,  1504,   983,  1223,  -579,   975,
    2759,  2125,  1447,  1795,    33,   955,  1375,   610,   534,   614,
     614,  1867,   614,   972,  1868,    26,  1136,    34,  2066,   973,
     984,  1446,  2022,  2315,  1196,  1197,  2135,  2066,  2137,  1001,
    1200,  1201,  2066,  2864,   817,  2066,  1900,  1975,  1005,  1582,
    1625,    35,  1976,  1977,  1978, -1699, -1699,  2008,  1883,   817,
    2070,    31,  1975,   977,  2066,   535,  1132,  1976,  1977,  1978,
    2046,  2494,  2047,  1444,  1137,   972,  1903,  1140,  1047,  1375,
    2381,   973,  1906,    91,  2269,  1584,   480,   974,   974,   477,
    1142,  2374,   531,   978,  2212,   728,   728,  2962,  2357, -1701,
   -1701,  1912,    33,   561,  1913,  1933,  1951,   574,  1934,  1375,
    1634,  1634,  1634,  1634,  1145,    34,  1634,  1634,  1634,  1634,
    1634,  1634,  1634,  1634,  1634,  1634,  2373,  -541,  2382,  1958,
   -1702, -1702,  1375,  2447,  2931,   974,   972,   985,  1144,    35,
    -541,   728,   973,  1200,  1201,  -541, -1704, -1704,  2158,  2073,
    2066,  1202,  1203,  1752,   800,   611,   986,  2946, -1705, -1705,
     979,   797,  1167,   975,  1994,  2024,    76,  1375,  1634,  1634,
    1132,  1204,  1152,  2175,  2203,  2204,  2339, -1706, -1706,  1981,
    2103,  2103,  2066,   477,  1176,   477,  1154,   974,   477,   477,
    1156,  2025,  2016,    76,  -541,  1375,  1161,   632,   477,  1608,
     477,   477,   477,   477,   477,   477,   477,   987,   634,   954,
    1165,   956,  2976,  -541,  1214, -1707, -1707,  2126,   636,  2127,
    2141,   635,  1447,  2142,  2048,   477,  2049,   477,  2145,  2568,
    1979,  2146,   728,   477,   477,   477,   477,  1132,  1168,   975,
     975,   477,   477,  1567, -1708, -1708,   477,  2128,   974,  2526,
     477,  2529,  1980,   477,   477,   477,   477,   477,   477,   477,
     477,   477,  -541,  2200,   477,  2261,  1375,  1980,  1223,   477,
    1169,  -541,   477,    26,   477,  1171,  1047,  2571,  1185,  1132,
    2066,  2641,  2272,  1444,  1172,  1375,  1184,   975,  2337,   976,
    1002,  2338,  1739,   977,   977,    72,  1187,   988,  2342,   477,
    1219,  2343,  2423,   929, -1709, -1709,  1222,  2098,  2026,    31,
    1225,  1808,  2361,  2027,  2456,  1868,  2066,  1868,  2202,   477,
    1226,  1981,    72,   978,  1003,  1637,  1167, -1710, -1710,  2475,
     477,   477,  2476,  1228,  2573,  2381,  1981,  1006,  2556,   975,
    1246,   977,  2488,   801,  1176,  2489,  1754,   989,  2495,  2557,
      33,  1584,  1868,  1256,  1587,   990,  2259,  1257,  2558,  2643,
     728,  1868,  1584,    34, -1711, -1711,  1132,   991,  1132,  1259,
    2209,  1007,  1261, -1725, -1725, -1725,  2226,  1985,  1986,  1987,
    1988,  1989,  1990,   637,  2619,  1682,  -760,    35,  2516,  1796,
     979,   979,  2706,   977,  2233,  2707,  -767,   652,   992,  2545,
     975,    36,  2516,  2734,  1264,  2066,  1868,  1047,  1265,  -541,
     477,   477,  2761,   477,  2764,  1584,  1266,  2765,  2776,  2255,
    1267,  1223,  2781,   978,  2785,  2782,  2260,  2782, -1712, -1712,
    2814,  1132,  2324,  2473,  1268,  2576,  2760,  1587,   979,  2800,
   -1713, -1713,  2801,  1637,   994,  1684,    36,    72,   477,   477,
    1841,  1270,   972,  2028,   977,  1826,  2839,  2432,   973,  2801,
   -1715, -1715,  2568,   728,  2029,  -650,   995,    26,  2569,  -757,
    2840,  1685,   628,  1584,  2848,   941,   629,  1223,  2577,  1884,
     922,  2570,  2854,  -651,  1842,  2782,   997,  2446,  -758,  2872,
     979,   800,  2873,  2578,  2901,  2904,  1244,  2902,  1223,   944,
    1942,  -761,  2905,    31,   800,  1375,  1047,  1271,   728,  1244,
    2571,  2907,  2572,   477,  1375,  1982,  1983,  1984,   477,  1985,
    1986,  1987,  1988,  1989,  1990,  2938, -1716, -1716,  2782,  2589,
    1982,  1983,  1984,  1272,  1985,  1986,  1987,  1988,  1989,  1990,
     595,  -759,  2942,  2957,    33,  2790,  2801,  1274,  1147,  1150,
    1151,   979, -1717, -1717,   477,   477,   477,    34,  1243,   477,
   -1718, -1718, -1719, -1719,   974,  1275,  2426,  2573,   477,   477,
     477,   477, -1720, -1720,  2732, -1722, -1722,  2098,   477,  1276,
      72,    35,   477,  1686,  1277,   477,  1785,  1786,  1687,   595,
    2579, -1724, -1724,  1688,  2955,    36,  2574,  2580,  1278,    26,
     477,   477,  1486,  1487,  1279,   477,  -628,  -628,  1198,  1199,
    2598,  2599,   475,  1200,  1201,  1280,  1634,   504,  1281,   477,
    1286,   504,   477,  1282,   477,  2472,   550,   550,   552,   504,
     560,  -632,  -632,   560,  2212,    31,   560,   583,  1298,   817,
     504,   504,  1975,  1301,    26,   477,  1342,  1976,  1977,  1978,
    -631,  -631,  1367,  1369,  1348,  1349,  1177,   477,  2064,  1350,
     595,  1365,   560,  2575,  2270,  1385,  1135,  2309,  2576,  1378,
     958,  1386,   477,  2064,   960,  1418,    33,  1420,  1637,  1637,
      31,  1587,  1442,  1637,    76,  1443,   477,   474,   632,    34,
    1444,  1449,   583,   504,   583,   583,   583,  1450,  1291,   634,
    1451,  1455,   474,   477,   477,  1634,   503,  1462,  1463,   636,
     532,  2577,   635,    35,   485,  2543,   975,  1467,   553,  1477,
    1482,    33,   477,  1489,  1637,  1637,  2578,    36,  1500,   592,
     592,  1490,  1494,  1689,    34,  1499,  1507,  -397,  1508,  1132,
    1132,  1132,  2310,   817,  1690,  1510,  1975,  1291,  1513,  1514,
    2144,  1976,  1977,  1978,  1515,  1524,  1525,   818,    35,  2423,
    1532,  1540,  1534,  1535,  1580,  1682,  1848,  1541,  2497,  1544,
     977,  1545,    36,  1634,   486,  1546,  2311,  1547,  1589,  1594,
    1047,  2041,   620,  1308,  1654,  1243,  1375,  1656,  1658,  1661,
    1243,  1674,  2312,  1681,  1692,  2170,  1693,  1695,  1716,  2058,
    1849,  2313,  1717,  1740,  2597,  1733,  1748,  1755,  2178,   609,
    1747,  1774,  1762,    72,  2058,  1775,   728,  1776,   594,  1777,
    1778,  1370,  1779,  2579,  1798,  1803,   610,  1802,   488,  1804,
    2580,  1865,  1562,  1564,  1869,  2314,  1873,  1879,  1880,  1881,
    1882,  1896,  1898,  1899,  1908,  1909,  1382,  1980,  1904,  1907,
    1910,  1929,  1931,  1932,   817,  1911,  2663,  1975,  1132,  1940,
     800,  1918,  1976,  1977,  1978,  1244,  1919,   979,  1952,  1960,
    2215,  1425,  2216,  1961,  1963,  2018,  2221,  2222,   477,  2498,
    1470,   728,  1968,   801,  1452,  1962,   817,   477,  2023,  1975,
     477,  1964,  2039,   477,  1976,  1977,  1978,  1884,  1965,   728,
     477,   477,   477,   477,  2286,  1476,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,  1981,   595,  1967,   477,
     477,  2315,  2068,  1971,   728,  1993,  1999,  2006,  2030,   477,
    2040,   728,  2042,   477,  2044,  2043,  2078,  2087,  2080,  2100,
    2094,  -633,   477,  -634,   490,   477,   491,   477,   595,  2105,
    2106,  1980,  2108,  2109,   728,   477,  2110,  2114,   477,   477,
    2112,  2115,  2118,   477,   477,   595,  2121,  2149,   493,  2134,
    2136,   494,  2155,  2163,  2763,  2164,  2156,  2157,  2166,   477,
    2064,   477,  2064,  2165,  2174,  2186,  2189,  2190,  2193,  2197,
    2198,  2194,   477,  2207,  2208,  2210,  2217,  2225,    72,  1996,
    1975,  1995,   477,  2274,  1562,  1564,  2287,  2300,  2664,   474,
    2709,   474,  2811,  2256,  2275,  1243,  2818,  2257,   477,  2258,
    1981,  2278,  2051,  2426,  1637,  1637,  1637,  1637,  2308,  2423,
    1637,  1637,  1637,  1637,  1637,  1637,  1637,  1637,  1637,  1637,
     817,  2322,  2326,  1975,  2331,  1509,  2334,  2332,  1976,  1977,
    1978,  2336,  2340,  2351,  2355,  2369,  2385,  2458,  2466,  2768,
    2443,  2347,  1980,  2367,  2482,  2444,  1132,  2469,  2445,  2449,
    1132,  2430,  1132,  2454,  2471,  1291,  2428,  2768,  2455,  2459,
    2517,  2522,  1637,  1637,  1868,   985,  2479,  2486,  2523,   583,
    2783,  2485,  2513,  2783,  1980,   644,  2487,  2503,   645,  2530,
    2520,  2170,  2535,   583,   986,  2871,  1291,   504,  2514,  2537,
    1982,  1983,  1984,  2841,  1985,  1986,  1987,  1988,  1989,  1990,
    2536,  2298,  2538,  2301,  2559,  2551,  2563,  2587,  1558,  2540,
     728,  1981,  2588,  2592,   645,   504,   504,  2855,  2605,  2857,
    1597,  2606,   547, -1151, -1698, -1699, -1700,   477,  2614, -1701,
   -1702,   550, -1703,  2615, -1704,   987, -1705, -1706, -1707,  2623,
   -1708, -1709,  2467,  1981,  2604,  2821, -1710, -1711,  1612, -1712,
     910,   910,   560,   560, -1713,   560,  1613,  1614,  1615, -1715,
   -1716, -1717,  2811,  2851,  2632, -1718,   583, -1719, -1720,  2928,
   -1721, -1722,  2613,   477,   477,   504,   654, -1723,   477,   728,
    2630,  2616,  2636,   477, -1724,   583,   477,   477,   583, -1152,
    2635,   477,  2639,  2640,  1982,  1983,  1984,  2648,  1985,  1986,
    1987,  1988,  1989,  1990,  2654,   737,  2667,  2687,  2672,  2698,
    2692,  2700,   477,  2064,  2701,  1568,   477,  2064,  2717,  2703,
    2720,  2708,  2721,  2866,  2722,   988,  1188,  1189, -1725,  1731,
    2723,  2724,  2731,  2733,   583,   583,   583,  2737,   477,  2738,
    2542,  2741,   474,    72,  2752,  2753,   474,  2762,  2766,  2774,
    2775,  1741,  2778,  1744,  2786,  2788,  2794,  2790,  2802,  2816,
    1569,  2820,  2797,  2822,   592,  1243,  2825,  2835,  2836,  2837,
    2847,  1132,  2856,  2426,  2860,   989,  2870,  2859,  2861,  2874,
     477,  2544,  2546,   990,  2716,  2876,  1570,  2877,  2879,   728,
    2882,  2883,  2888,  2884,  2889,   991,  2890,  1981,   725,  2899,
    1789,  1190,  1191,  2918,  1571,  1982,  1983,  1984,  1572,  1985,
    1986,  1987,  1988,  1989,  1990,  2933,  2903,  2924,  2939,  2430,
    2948,  2288,  2940,  2951,  2953,  2958,   992,  2959,  2949,  1573,
    2960,  2950,  1574,  2971,  2973,   943,  2977,  1982,  1983,  1984,
     716,  1985,  1986,  1987,  1988,  1989,  1990,  1575,  2384,  2388,
    1828,  2132,  1560,  2547,  2058,  2344,  1743,  2865,  2058,  2691,
    2914,  2595,  2920,  2968,  2617,  1192,  1193,  1194,  1195,  1196,
    1197,  2815,   994,  1198,  1199,  2954,  2947,  1874,  1875,  2751,
     800,  2117,    72,    72,  2139,  1244,   477,  1433,  2916,   728,
    2465,  2171,  2952,   477,   995,  2389,   484,  2113,  1258,  2915,
     485,   477,   477,  2620,  2838,   477,  2457,  1949,  1742,  2172,
    2448,  2211,  2637,  1376,   997,  2096,  1357,   477,  2064,  1794,
    2850,  1415,  2796,  -397,  1414,  2097,   477,  2064,  2910,  2107,
    2330,   477,  2064,  1771,   477,  2064,  2906,  2541,  1576,  2858,
    1793,   477,   477,  1419,  2077,  2303,  1577,   474,  2528,  2689,
    2512,  2780,  2299,   477,  2064,   477,   474,  2846,  2845,  2852,
     486,   474,  2853,  1598,   474,  1296,  1600,   487,  1604,  1605,
    2690,  2908,  2898,  2909,   725,   477,  2014,  1588,  1200,  1201,
    1722,  2099,  2037,   474,  1955,  1732,  1864,  2035,  1578,  2071,
    2329,  1982,  1983,  1984,  2176,  1985,  1986,  1987,  1988,  1989,
    1990,  1380,  2345,     0,    72,  1549,     0,   583,  2430,     0,
    1637,     0,  1528,  2428,   488,   718,   716,     0,     0,     0,
     719,     0,     0,  1307,   504,   504,  1308,     0,     0,     0,
       0,   583,   583,  1384,     0,     0,     0,     0,     0,   477,
    2064,     0,     0,   477,   728,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1314,   583,  1436,  2736,
       0,     0,     0, -1725,     0,     0,   595,   477,  2058,   474,
     583,   477,  2064,  2058,     0,   728,  2058,     0,   728,     0,
     725,  2620,   477,   489,     0,     0,     0,   583,  1316,  1202,
    1203,   583,     0,     0,     0,     0,     0,   477,     0,  1637,
       0,   474,     0,     0,     0,     0,  2050,  1132,     0,     0,
       0,  1132,   477,   592,     0,     0,   985,     0,     0,  1616,
    1617,  1618,   716,  1619,  1620,  1621,  1622,  1623,  1624,     0,
     490,     0,   491,     0,     0,   986,     0,     0,     0,     0,
       0,     0,  2827,     0,     0,     0,     0,     0,   492,   721,
       0,     0,     0,     0,   493,   985,     0,   494,  2021,     0,
      72,     0,     0,     0,     0,     0,   477,  1637,     0,   477,
    2064,     0,     0,     0,   986,     0,     0,     0,     0,     0,
       0,     0,    72,  2832,     0,     0,   987,  2375, -1725,  1363,
     477,   718,   477,     0,   477,  2376,   719,     0,     0,   474,
       0,     0,     0,     0, -1725,   477,  2064,     0,     0, -1725,
       0,     0,     0,  2058,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1493,  1291,   987,   477,     0,     0, -1503,
       0,   583,     0,     0,     0,   474,     0,     0,     0,  1521,
       0,     0,  2862,     0,     0, -1725,   477,   477,     0,     0,
       0,     0,  2377,  2173,     0,     0,     0,   725,     0,     0,
     477,  2182,  2184,     0,     0,  2188,     0,     0,     0,     0,
    1539,     0,     0,     0,     0,     0,   988,  1132,  2430,  2199,
       0,     0,     0,  2428,    72,     0,     0,     0,     0,     0,
       0,  2377,     0,     0,   477,  2064,   477,   718,     0,   716,
    1325,     0,   719,     0,     0,   645,   645,     0,   504,   504,
       0,   504,   645,     0,   583,   988,     0,     0,     0,     0,
       0,     0, -1503,     0,   474,   721,   989,     0,  2929,     0,
       0,     0,     0,     0,   990,     0,     0,     0,     0,     0,
       0,     0,     0,    72,     0,     0,   991,     0,  2378,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1627,   477,     0,     0,   989,     0,     0,     0,     0,
       0,     0,  1653,   990, -1503,     0,     0,   992,     0,     0,
       0,     0,     0,     0,     0,   991,     0, -1503,     0,     0,
       0, -1725, -1503,     0,     0,     0,     0, -1503,  1552,     0,
    1553,     0,   645,     0,     0,     0, -1503,     0,     0,     0,
   -1503,     0,     0,     0,     0,     0,   992,     0,     0,     0,
       0,     0,     0,   994,     0,     0,     0,     0,     0,    72,
       0,   721,  2295,  2296,  2297,   583,   910,     0,     0,     0,
       0, -1503,     0,   725,   725,   995, -1505,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   583,     0,   583,
   -1503,     0,   994,     0,     0,   997,     0,  2379,     0,  1756,
    2380,  1761,     0,     0,   718,     0,     0,     0,     0,   719,
       0,     0,     0,     0,   995,   716,   716,     0,  2352,   725,
       0, -1725,     0,     0,     0,     0,     0,     0,  1332,  1333,
    1334,  1335,  1336,  1337,   997,     0,   583,     0,     0, -1503,
       0,     0, -1503,  1436,   504,     0,     0,     0, -1503,     0,
       0,     0,     0,     0,   504,  1810,   504,  1814,     0,   504,
       0,   716,     0,     0,     0,   504,     0,   504,     0, -1505,
       0,     0,     0,     0,     0,     0,     0,     0,   645,   504,
       0,     0,     0,   645,   504,     0,     0,  2453,   504,   504,
     504,   504,     0,   504,   504,     0,     0,     0,     0,     0,
       0,     0,  1444,     0, -1503,     0,     0,     0,     0,     0,
     725,     0,     0,   583,   583,  1876,     0,     0,     0,     0,
    1558, -1505,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1892,     0,  1801, -1505,     0,     0,     0,   721, -1505,
       0,     0,     0,  1809, -1505,  1812,     0,     0,  1823,     0,
       0,     0,   716, -1505,  1827,     0,  1829, -1505,     0,  2051,
       0,     0,   722,     0,     0,     0,  1307,     0,  1836,  1308,
       0,     0,     0,  1839, -1725, -1725, -1725,  1844,  1845,  1846,
    1847,     0,  1851,  1852,     0,     0, -1503,     0, -1505,     0,
     718,   718,     0,     0, -1503,   719,   719,     0,     0,  1314,
       0,  2507,  2508,  2509,  2510,     0,  1315, -1505,     0,     0,
   -1503,     0, -1503, -1503,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1307,     0,     0,
    1308,  1316,     0,     0,     0,     0,   718,     0,   725,     0,
       0,   719,     0,     0,     0,     0,     0,     0,     0, -1503,
       0,     0, -1503, -1503, -1503,     0, -1505,     0,     0, -1505,
    1314,     0,     0,     0,     0, -1505,     0, -1725,   504,     0,
       0,     0,     0,     0,     0,  1296,     0,     0,     0,     0,
     716,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1316,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1627,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1505,     0,     0,   721,   721,     0,   718,     0,     0,
       0,  1317,   719,     0,     0,     0,     0,     0,   722,     0,
       0,   725,   583,     0,     0,  1307,     0,  1318,  1308,  2067,
       0,     0,  1319,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2031,     0,  2067,     0,     0,     0,  2086,     0,
     721,  2089,     0,  1761,     0,     0,  2051,     0,  1314,     0,
       0,     0,     0,   716,     0, -1725,   725,     0,  1322,     0,
       0,     0, -1725,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1505,     0,     0,     0,     0, -1725,     0,
    1316, -1505,     0, -1725,     0,     0,   724,     0,     0,     0,
       0,     0,  1493,     0,     0,     0,     0, -1505,   716, -1505,
   -1505,  1188,  1189,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1325,   722,     0,     0,     0,     0, -1725,
       0,     0,     0,     0,     0,   718,     0,     0,     0,     0,
     719,   721,     0,     0,     0,     0, -1505,     0,     0, -1505,
   -1505, -1505,     0,     0,     0,     0,     0,     0,     0,     0,
    2279,     0,     0,     0,  1493,     0,     0,     0,  2718,   583,
       0,     0,     0,     0,     0,     0,  1493,   583,   583,   504,
       0,   583,     0,     0,  1325,     0,  1190,  1191,     0,     0,
   -1725,     0,     0,     0,     0,   583,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1725,     0,     0,  2206,
       0, -1725,     0,     0,  1327,     0,     0,     0,     0,     0,
       0,     0,  2757,     0,     0,   645,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   718,     0,
       0,  1493,  1493,   719,     0,     0,     0, -1725,     0,     0,
    1192,  1193,  1194,  1195,  1196,  1197,     0,     0,  1198,  1199,
       0,     0,     0,     0,  1627,     0,     0,     0,  2185,   721,
       0,     0,   724,     0,     0, -1725,     0,     0,     0,     0,
       0,     0,     0,   718,     0,     0,     0,     0,   719,     0,
       0,  2807,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   722,  1325,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,     0, -1725, -1725, -1725,
       0,  1332,  1333,  1334,  1335,  1336,  1337,  2831,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2290,     0,     0,     0,     0,     0,     0,     0,   583,   583,
     583,   475,     0,  2067,  2307,     0,     0,     0,  2307,  2321,
       0,     0,     0,  1200,  1201,     0,     0,     0,     0,     0,
       0,     0,   721,     0,   725, -1725,     0,     0,   724,     0,
       0,     0,  1332,  1333,  1334,  1335,  1336,  1337,  1761,     0,
       0,     0,     0, -1725,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   583,     0,   504,     0,     0,     0,
    1493,  1436,  1493,     0,  1521,     0,   716,   721,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     504,     0,  2387,     0,     0,     0,     0,     0,     0,   725,
       0,     0,     0,     0,     0,   504,   504,   504,   504,   504,
     504,   504,   504,   504,   504,     0,     0,   725,   894,   894,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1436,     0,     0,   583,  1202,  1203,     0,     0,     0,     0,
       0,   716,   725,     0,     0,     0,  1436,   722,   722,   725,
       0,     0,     0, -1725,  1521,  2353,     0,     0,     0,   716,
    1332,  1333,  1334,  1335,  1336,  1337,   583,     0,     0,     0,
       0,     0,   725,  1493,     0,     0,     0,     0,     0,  2386,
       0,  1042,  1049,     0,   716,     0,     0,     0,     0,     0,
       0,   716,     0,   722,  2433,  2434,  2435,  2436,  2437,  2438,
    2439,  2440,  2441,  2442,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   716,   724,     0,     0,     0,     0,
       0,  2490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2506,     0,     0,   583,   583,   583,
     583,   718,     0,     0,  2307,  2321,   719,  2307,     0,     0,
    2515,     0,     0,     0,  2067,     0,     0,     0,  2067,     0,
       0,     0,     0,     0,  2533,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   722,     0,     0,     0,     0,   725,
     910,     0,     0,     0,  2086,     0,     0,     0,     0,  1761,
       0,     0,     0,  1627,     0,     0,     0,     0,     0,     0,
       0,  1436,     0,     0,     0,     0,   718,  1307,     0,     0,
    1308,   719,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   716,     0,     0,   718,     0,  2596,     0,     0,   719,
       0,     0,     0,     0,     0,     0,     0,     0,   725,     0,
    1314,     0,     0,     0,     0,     0,     0, -1725,     0,   718,
       0,  1042,     0,     0,   719,     0,   718,     0,     0,     0,
       0,   719,     0,     0,     0,     0,     0,     0,  1262,     0,
       0,     0,  1316,     0,     0,   721,     0,     0,     0,   718,
     716,     0,     0,     0,   719,     0,     0,     0,     0,     0,
       0,   724,   724,     0,     0,  1493,     0,  1273,     0,     0,
       0,     0,   722,     0,     0,  1892,     0,   725,     0,     0,
       0,     0,     0,     0,     0,  2634,     0,  1283,  1284,  1285,
       0,     0,  1292,     0,     0,     0,     0,     0,     0,  1307,
       0,     0,  1308,     0,     0,     0,     0,   724,     0,     0,
     721,     0,  2282,     0,     0,  1347,     0,     0,     0,   716,
       0,     0,     0,     0,     0,     0,     0,     0,   721,   475,
    2307,     0,  1314,  2660,     0,     0,   504,     0,  2067, -1725,
       0,     0, -1725,  2067,     0,     0,  2067,     0,  2671,     0,
       0,  2674,     0,   721,     0,     0,     0,     0, -1725,     0,
     721,     0,     0, -1725,  1316,  2697,   718,     0,     0,  1391,
       0,   719,     0,  1405,  1410,   722,     0,     0,     0,     0,
       0,     0,     0,   721,     0,   645,   504,   725,     0,     0,
       0,     0,     0,     0,   583,     0,     0,     0,   724, -1725,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   725,     0,     0,
     722,   504,   504,     0,  1042,   718,     0,     0,     0,   716,
     719,  1042,  1436,     0,  2283,   504,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   583,     0,
       0,  2697,  1042,     0,  1325,     0,     0,  1307,     0,   716,
    1308,     0,     0,     0, -1725,  1309,  1310,  1311,     0,     0,
     504,     0,     0,     0,     0,  2710,     0,     0,     0,     0,
   -1725,     0,     0,  2067,     0, -1725,     0,   725,  2674,     0,
    1314,     0,     0,     0,   718,     0,     0,  1315,     0,   719,
     721,     0,     0,  2793,     0,     0,     0,     0,   504,     0,
    2729,  2730,     0,     0,     0,     0,     0,   583,     0,     0,
       0, -1725,  1316,     0,  2739,     0,   724,     0,     0,   716,
       0,     0,     0,     0,     0,     0,   504,     0,     0,     0,
     645,     0,     0,     0,     0, -1725,     0,     0,     0,     0,
       0,     0,     0,   583,     0,     0,     0,     0,     0,   721,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,     0,
       0,     0,     0,     0,     0,     0,  1325,     0,     0,     0,
       0,   475,     0,     0,     0,     0,     0,     0,     0,     0,
    2849,     0,     0,     0,   504,     0,     0,  2798,  2671,     0,
       0,     0,     0,     0,   718,     0,   725,     0,     0,   719,
       0,     0,     0,     0,     0,     0,     0,  2697,   645,   645,
     645,     0,  1317,     0,     0,  2819,     0,     0,   721,   724,
       0,     0,     0,     0,   718,     0,     0,     0,  1318,   719,
       0,     0,   725,  1319,     0, -1725,     0,     0,   716,     0,
       0,     0,  1332,  1333,  1334,  1335,  1336,  1337,     0,     0,
       0,     0,     0,  2671,     0, -1725, -1725, -1725,     0,     0,
       0,     0,     0,   725,   724,  2793,   725,  2660,  1592,  1322,
       0,     0,     0,     0,   716,     0,  1761,     0,  1611,     0,
    1628,     0, -1519,  1640,  1643,  1648,  1651,     0,     0,     0,
    1436,     0,     0,     0,   718,     0,  2697,     0,     0,   719,
       0,     0,     0,     0,     0,   716,     0,  1663,   716,     0,
   -1725,     0,     0,  1667,  1668,  1669,  1670,   645,   722,     0,
       0,  1679,  1680,     0,  1325,     0,  1691,     0,   721,     0,
    1694,     0,     0,  1702,  1703,  1704,  1705,  1706,  1707,  1708,
    1709,  1710,     0,     0,  1711,     0,     0,     0,     0,  1719,
       0,     0,  1723,     0,   894,     0,  1042, -1725,   721,     0,
       0,     0,     0,     0,  1332,  1333,  1334,  1335,  1336,  1337,
       0,     0,     0,     0,     0, -1519,     0,     0,     0,  1745,
       0,     0,     0,   722,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1307,     0,     0,  1308,
       0,   722,     0,     0,  1309,  1310,  1311,     0,     0,     0,
    1284,  1285,     0,   718,     0,  1327,     0,     0,   719,     0,
       0,  1312,     0,     0,     0,     0,   722, -1519,   721,  1314,
       0,     0,     0,   722,     0,     0,  1315,     0,     0,     0,
   -1519,     0,     0,     0,     0, -1519,     0,     0,     0,   718,
   -1519,     0,     0,     0,   719,     0,   722,     0,     0, -1519,
       0,  1316,     0, -1519,     0,     0,   725,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     718,     0,     0,   718,     0,   719,     0,  1042,   719,     0,
    1861,  1862,     0,  1863, -1519,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   716,  1307,
       0,     0,  1308, -1519,     0,  1328,     0,     0,  1329,  1330,
    1331,     0,  1332,  1333,  1334,  1335,  1336,  1337,  1901,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1314,     0,     0,     0,     0,   721,     0, -1725,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1317, -1519,     0,     0, -1519,     0,     0,     0,     0,
       0, -1519,   724,   722,  1316,     0,     0,  1318,     0,     0,
       0,     0,  1319,   721,     0,     0,  1042,     0,     0,     0,
       0,     0,     0,  1953,     0,     0,     0,     0,  1959,     0,
       0,     0,     0,     0,  1320,  1321,     0,     0,     0,     0,
       0,     0,     0,     0,   721,     0,     0,   721,  1322,     0,
       0,     0,     0,     0,     0,     0,     0, -1519,     0,     0,
       0,     0,   722,     0,     0,     0,  1974,   724,     0,     0,
       0,     0,     0,     0,  2501,     0,     0,     0,  1648,     0,
    1648,  1648,     0,     0,     0,   724,  1323,     0,  2010,  1324,
       0,     0,  2013,     0,     0,  2015,  1340,     0,     0,     0,
       0,     0,     0,  1325, -1725,     0,  1326,     0,     0,     0,
     724,     0,  2051,   718,     0,     0,     0,   724,   719,     0,
   -1725,     0,     0,     0,     0, -1725,     0,     0,     0,  2033,
       0,   722,  2036,     0,  2038,     0,  1340,     0,     0, -1519,
     724,     0,     0,     0,     0,     0,     0, -1519,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1725,     0, -1519,     0, -1519, -1519,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1327,     0,  1391,     0,   -39,     0,
       0,     0, -1519,     0,     0, -1519, -1519, -1519,     0,     0,
       0,     0,     0,  1410,  1709,     0,  1325,     1,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     2,     0,     3,
       4,     0,  2111,     0,     0,     0,     0,     0,     0,     0,
       0,   722,     0,     0,  1340,     5,     0,   721,     0,     0,
       0,  1340,     0,     0,     6,  1306,     0,   724,     0,     0,
    1307,     0,     0,  1308,     0,     0,     7,     0,  1309,  1310,
    1311,   722,     0,     0,     0,     0,     0,     8,     0,     0,
       0,     0,     0,     0,     0,  1312,     0,     0,  1313,     9,
    1042,    10,     0,  1314,  1328,     0,     0,  1329,  1330,  1331,
    1315,  1332,  1333,  1334,  1335,  1336,  1337, -1725,     0,    11,
       0,     0,     0,     0,  1966,     0,   724,     0,     0,     0,
       0,     0,     0,    12,     0,  1316,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,    14,
       0,   722,     0,     0,     0,     0,     0,    15,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   724,     0,     0,  2224,     0,
       0,    19,     0,     0,     0,     0,     0,  2228,     0,     0,
    2229,     0,     0,  2231,     0,     0,    20, -1725,     0,     0,
       0,     0,     0,     0,  1332,  1333,  1334,  1335,  1336,  1337,
       0,     0,     0,  1307,     0,  1317,  1308,     0,     0,  2251,
    2252,    21,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1318,     0,  2262,     0,     0,  1319,     0,     0,     0,
       0,     0,  2268,     0,     0,  2271,  1314,  2273,     0,     0,
     722,     0,     0, -1725,  1340,  2277,     0,     0,  1320,  1321,
       0,     0,     0,  2284,  2285,  1340,     0,     0,     0,  1635,
       0,     0,  1322,     0,     0,  1340,  1340,  1340,  1316,  1307,
       0,     0,  1308,     0,  1340,   724,   722,  1309,  1310,  1311,
       0,     0,  2325,     0,     0,     0,     0,     0,    22,     0,
       0,    23,  2333,     0,  1312,     0,     0,  2265,     0,     0,
    1323,     0,  1314,  1324,     0,   724,     0,   722,  2346,  1315,
     722,     0,     0,     0,     0,     0,     0,  1325,     0,    24,
    1326,     0,     0,     0,     0,     0,     0,     0,    25,  1340,
       0,     0,     0,     0,  1316,     0,     0,     0,     0,     0,
       0,     0,    26,     0,     0,     0,     0,     0,     0,    27,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,  1307,     0,    29,  1308,     0,     0,     0, -1725,  1309,
    1310,  1311,     0,  1340,    30,   724,     0,     0,    31,     0,
       0,     0,     0,     0, -1725,     0,  1312,  1340,     0, -1725,
       0,     0,  1340,     0,  1314,     0,     0,     0,     0,     0,
       0,  1315,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,    32,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0, -1725,  1316,     0,     0,     0,
       0,     0,    34,     0,  1317,     0,     0,  2478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1318,     0,     0,     0,     0,  1319,    35,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      36,     0,     0,   -39,     0,     0,     0,  1320,  1321,     0,
    1325,     0,     0,  2491,  2492,     0,     0,     0,  2493,     0,
       0,  1322,     0,  2496,   724,     0,  2499,  2500,     0,     0,
       0,  2504,     0,     0,     0,     0,     0,     0,  1328,     0,
     722,  1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,  1336,
    1337,     0,     0,     0,     0,     0,  1317,     0,     0,  1323,
     724,     0,  1324,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1318,     0,     0,     0,  1325,  1319,   894,  1326,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   724,     0,     0,   724,     0,     0,     0,     0,  1320,
    1321, -1725,     0,     0,  1340,     0,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
    2590,     0,     0,  1340,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1340,     0,  1635,  1635,     0,  1991,     0,  1635,     0,     0,
       0,  1323,  1340,     0,  1324,  1340,     0,     0,     0,     0,
    1340,     0,     0,  1340,     0,     0,     0,  1327,  1325,     0,
       0,  1326,     0,     0,     0,  1340,     0,     0,     0,  1340,
    1340,  1340,  1340,     0,     0,     0,     0,     0,  1635,  1635,
       0,  1340,  1340,     0,     0,     0,     0,     0,     0,     0,
       0, -1725,     0,  1340,     0,     0,  1340,     0,  1332,  1333,
    1334,  1335,  1336,  1337,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,     0,     0,     0,     0,     0,     0,
       0,  1340,     0,  2010,     0,  1340,     0,     0,     0,     0,
       0,  2644,  2645,     0,     0,  2646,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1340,     0,  1327,
       0,     0,     0,     0,     0,     0,     0,  1328,     0,     0,
    1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,  1336,  1337,
       0,  2685,  2686,     0,  1657,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   724,  2699,   506,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1307,     0,   507,
    1308,     0,     0,     0,     0,  1309,  1310,  1311,     0,  1328,
       0,     0,  1329,  1330,  1331,   508,  1332,  1333,  1334,  1335,
    1336,  1337,  1312,  1340,  1340,  1340,  1657,     0,     0,     0,
    1314,     0,     0,     0,     0,     0,     0,  1315,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2777,  1307,     0,
       0,  1308,  1316,  1340,     0,     0,  1309,  1310,  1311,   509,
       0,     0,  1292,     0,     0,     0,     0,     0,   510,     0,
       0,     0,     0,  1312,     0,     0,     0,  2799,     0,     0,
     511,  1314,     0,     0,     0,   512,     0,     0,  1315,     0,
       0,     0,  2813,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1340,     0,     0,     0,     0,
       0,  1340,   513,  1316,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1991,  1991,  1340,     0,  1635,  1635,
    1635,  1635,     0,     0,  1635,  1635,  1635,  1635,  1635,  1635,
    1635,  1635,  1635,  1635,  1991,     0,     0,     0,     0,     0,
       0,     0,  1317,     0,     0,     0,   514,     0,     0,     0,
     515,     0,  1340,     0,     0,  1340,     0,  1340,  1318,     0,
       0,  1991,  1991,  1319,  2685,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1340,  1635,  1635,  1340,     0,
    1340,     0,     0,     0,     0,  1320,  1321,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2881,     0,     0,  1322,
       0,     0,     0,  1317,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   516,     0,     0,  2895,  2895,     0,  1318,
       0,     0,     0,     0,  1319,     0,     0,   517,     0,     0,
    2685,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
    1324,     0,     0,     0,     0,     0,  1320,  1321,     0,     0,
       0,     0,     0,  1340,  1325,     0,     0,  1326,     0,   518,
    1322,     0,   519,     0,     0,     0,  2895,     0,     0,     0,
     520,     0,     0,   521,     0,     0,     0,  1307,     0,     0,
    1308,     0,     0,     0,     0,  1309,  1310,  1311,     0,     0,
       0,     0,   522,     0,     0,     0,     0,     0,  1323,     0,
       0,  1324,  1312,     0,     0,   523,     0,     0,     0,     0,
    1314,     0,   524,     0,     0,  1325,     0,  1315,  1326,     0,
       0,   525,     0,     0,     0,     0,     0,   526,     0,     0,
       0,     0,  2895,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1316,     0,     0,  1327,     0,     0,     0,     0,
       0,     0,   527,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1340,     0,     0,     0,
    1340,  1340,     0,  1340,     0,     0,  1991,  1991,  1991,  1991,
       0,     0,     0,  1991,  1991,  1991,  1991,  1991,  1991,  1991,
    1991,  1991,  1991,  1340,  1340,     0,     0,     0,     0,  1307,
       0,     0,  1308,     0,  1340,     0,  1327,  1309,  1310,  1311,
    1340,     0,     0,  1340,     0,  1340,     0,     0,     0,  1340,
       0,     0,  1991,  1991,  1312,     0,  1340,  1340,     0,     0,
       0,     0,  1314,     0,     0,     0,     0,     0,     0,  1315,
       0,     0,  1317,     0,     0,  1328,     0,     0,  1329,  1330,
    1331,     0,  1332,  1333,  1334,  1335,  1336,  1337,  1318,     0,
       0,     0,  2017,  1319,  1316,     0,     0,  1340,     0,     0,
       0,     0,     0,     0,     0,  1340,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1320,  1321,   972,  1340,     0,
       0,     0,     0,   973,     0,     0,     0,     0,     0,  1322,
     985,     0,     0,     0,     0,     0,  1328,     0,     0,  1329,
    1330,  1331,     0,  1332,  1333,  1334,  1335,  1336,  1337,   986,
       0,     0,     0,  2227,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
    1324,     0,     0,     0,     0,     0,   972,     0,     0,     0,
       0,     0,   973,     0,  1325,     0,     0,  1326,     0,   985,
       0,     0,     0,     0,  1317,     0,     0,     0,     0,     0,
     987,     0,     0,     0,     0,     0,     0,     0,   986,     0,
    1318,     0,     0,     0,     0,  1319,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   974,
       0,     0,     0,     0,     0,     0,     0,  1320,  1321,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1340,  1322,     0,     0,  1635,     0,     0,     0,     0,   987,
       0,     0,     0,  1340,  1340,  1340,     0,     0,  1340,     0,
       0,  1340,  1340,     0,     0,  1327,  1340,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   974,  1323,
     988,     0,  1324,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1325,     0,     0,  1326,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     989,     0,     0,  1635,     0,     0,     0,     0,   990,   988,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     991,     0,  1340,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1328,     0,     0,  1329,  1330,
    1331,   975,  1332,  1333,  1334,  1335,  1336,  1337,     0,     0,
       0,   992,  2266,     0,     0,     0,     0,  1327,     0,   989,
       0,     0,     0,     0,     0,     0,     0,   990,     0,     0,
    1991,  1635,     0,     0,     0,     0,  1340,  1340,  1340,   991,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   993,     0,     0,     0,   977,     0,   994,     0,     0,
     975,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     992,     0,     0,     0,     0,     0,     0,  1340,  1340,   995,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,  1340,     0,     0,     0,     0,     0,     0,     0,   997,
       0,     0,     0,  1991,     0,     0,     0,     0,     0,     0,
    1830,     0,     0,     0,   977,     0,   994,  1328,     0,     0,
    1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,  1336,  1337,
       0,     0,     0,     0,  2354,     0,     0,     0,   995,     0,
       0,     0,     0,     0,  1831,     0,     0,     0,     0,     0,
       0,  1991,   979,     0,     0,     0,     0,     0,   997,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1340,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1340,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1340,     0,     0,     0,     0,
       0,   979,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1009,   814,   547,   815,   816,   817,   818,
     819,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,  1010,   101,   102,
     103,     0,     0,     0,     0,   820,     0,     0,   104,   105,
       0,   106,   107,   108,  1011,   110,   111,   112,   113,   821,
    1012,   822,   823,  1340,   118,   119,   120,   121,   122,   123,
     824,   825,   124,   125,   826,   827,   128,  1340,   129,   130,
     131,   132,   828,     0,  1013,     0,   135,   136,   137,   138,
     139,   140,  1014,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,  1015,   152,   153,   154,   830,   831,
     832,  1016,   834,   835,   836,   156,   157,   158,   159,   160,
     161,   162,   837,   838,   165,   839,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
    1017,     0,   178,   179,   675,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     840,   194,   195,   196,   197,   841,   842,   199,     0,   200,
     201,   843,   203,     0,   204,     0,   205,  1018,     0,  1019,
     208,   209,   210,  1020,   212,     0,   213,     0,   844,   845,
     216,     0,   217,   218,   219,   220,   221,   222,   223,  1021,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,  1022,   237,   238,   239,   240,   241,   242,
     846,   847,     0,   848,     0,   246,  1023,  1024,   249,  1025,
     251,   252,   253,   254,   255,     0,     0,   256,  1026,   258,
    1027,     0,   260,   261,   262,   849,   850,   263,   264,   265,
     266,   267,  1028,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   851,  1029,   852,   290,   291,   292,   293,   853,   294,
     295,  1030,   297,   854,   855,   299,   856,   301,   302,   303,
       0,   304,   305,     0,     0,   857,   307,   308,     0,     0,
     309,   310,  1031,   312,  1032,   858,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   859,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   860,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,  1033,   364,
     365,   366,   861,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
     862,   384,   385,   386,   387,   388,  1034,   390,   391,   863,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,  1035,   406,   864,   408,     0,   409,   410,
       0,   411,  1036,   413,   414,   415,   416,   417,     0,   865,
     866,     0,     0,   420,   421,   867,   423,   868,   869,   425,
     426,  1037,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,   871,     0,   438,   439,   440,   441,
     442,   443,   872,  1038,   445,  1039,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   873,     0,     0,     0,
       0,     0,     0,   874,   875,  1040,     0,     0,     0,     0,
     877,     0,   878,  1041,     0,     0,     0,   879,     0,   880,
     881,    92,   814,   547,   815,   816,   817,   818,   819,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,   820,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   821,   115,   822,
     823,     0,   118,   119,   120,   121,   122,   123,   824,   825,
     124,   125,   826,   827,   128,     0,   129,   130,   131,   132,
     828,     0,   829,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   830,   831,   832,   833,
     834,   835,   836,   156,   157,   158,   159,   160,   161,   162,
     837,   838,   165,   839,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   675,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   840,   194,
     195,   196,   197,   841,   842,   199,     0,   200,   201,   843,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,   844,   845,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   241,   242,   846,   847,
       0,   848,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,     0,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   849,   850,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   851,
     288,   852,   290,   291,   292,   293,   853,   294,   295,   296,
     297,   854,   855,   299,   856,   301,   302,   303,     0,   304,
     305,     0,     0,   857,   307,   308,     0,     0,   309,   310,
     311,   312,   313,   858,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   859,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   860,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,   364,   365,   366,
     861,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    26,   379,   380,   381,   382,   383,   862,   384,
     385,   386,   387,   388,   389,   390,   391,   863,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   864,   408,     0,   409,   410,    31,   411,
     412,   413,   414,   415,   416,   417,     0,   865,   866,     0,
       0,   420,   421,   867,   423,   868,   869,   425,   426,   870,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,   871,     0,   438,   439,   440,   441,   442,   575,
     872,     0,   445,   446,   447,   448,   449,   450,     0,     0,
     451,     0,    34,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   873,     0,    35,     0,     0,     0,
       0,   874,   875,     0,     0,     0,     0,     0,   877,     0,
     878,  2789,     0,     0,     0,   879,     0,   880,   881,    92,
     814,   547,   815,   816,   817,   818,   819,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,   820,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,   113,   821,   115,   822,   823,     0,
     118,   119,   120,   121,   122,   123,   824,   825,   124,   125,
     826,   827,   128,     0,   129,   130,   131,   132,   828,     0,
     829,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   830,   831,   832,   833,   834,   835,
     836,   156,   157,   158,   159,   160,   161,   162,   837,   838,
     165,   839,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     675,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   840,   194,   195,   196,
     197,   841,   842,   199,     0,   200,   201,   843,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,   844,   845,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
     237,   238,   239,   240,   241,   242,   846,   847,     0,   848,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,     0,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   849,   850,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   851,   288,   852,
     290,   291,   292,   293,   853,   294,   295,   296,   297,   854,
     855,   299,   856,   301,   302,   303,     0,   304,   305,     0,
       0,   857,   307,   308,     0,     0,   309,   310,   311,   312,
     313,   858,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   859,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   860,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,   364,   365,   366,   861,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      26,   379,   380,   381,   382,   383,   862,   384,   385,   386,
     387,   388,   389,   390,   391,   863,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   864,   408,     0,   409,   410,    31,   411,   412,   413,
     414,   415,   416,   417,     0,   865,   866,     0,     0,   420,
     421,   867,   423,   868,   869,   425,   426,   870,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
     871,     0,   438,   439,   440,   441,   442,   575,   872,     0,
     445,   446,   447,   448,   449,   450,     0,     0,   451,     0,
      34,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   873,     0,    35,     0,     0,     0,     0,   874,
     875,     0,     0,     0,     0,     0,   877,     0,   878,     0,
       0,     0,     0,   879,     0,   880,   881,    92,   814,   547,
     815,   816,   817,   818,   819,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,   820,
       0,     0,   104,   105,     0,   106,   107,   108,   109,   110,
     111,   112,   113,   821,   115,   822,   823,  1644,   118,   119,
     120,   121,   122,   123,   824,   825,   124,   125,   826,   827,
     128,     0,   129,   130,   131,   132,   828,     0,   829,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   830,   831,   832,   833,   834,   835,   836,   156,
     157,   158,   159,   160,   161,   162,   837,   838,   165,   839,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   675,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   840,   194,   195,   196,   197,   841,
     842,   199,     0,   200,   201,   843,   203,     0,   204,     0,
     205,   206,  1645,   207,   208,   209,   210,   211,   212,     0,
     213,     0,   844,   845,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   241,   242,   846,   847,     0,   848,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,     0,
    1646,   256,   257,   258,   259,     0,   260,   261,   262,   849,
     850,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   851,   288,   852,   290,   291,
     292,   293,   853,   294,   295,   296,   297,   854,   855,   299,
     856,   301,   302,   303,     0,   304,   305,     0,     0,   857,
     307,   308,     0,     0,   309,   310,   311,   312,   313,   858,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   859,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     860,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   364,   365,   366,   861,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,   862,   384,   385,   386,   387,   388,
     389,   390,   391,   863,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   864,
     408,     0,   409,   410,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   865,   866,     0,  1647,   420,   421,   867,
     423,   868,   869,   425,   426,   870,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,   871,     0,
     438,   439,   440,   441,   442,   443,   872,     0,   445,   446,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     873,     0,     0,     0,     0,     0,     0,   874,   875,     0,
       0,     0,     0,     0,   877,     0,   878,     0,     0,     0,
       0,   879,     0,   880,   881,    92,   814,   547,   815,   816,
     817,   818,   819,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100, -1017,
     101,   102,   103,     0,     0,     0, -1017,   820,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   821,   115,   822,   823,     0,   118,   119,   120,   121,
     122,   123,   824,   825,   124,   125,   826,   827,   128,     0,
     129,   130,   131,   132,   828,     0,   829,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     830,   831,   832,   833,   834,   835,   836,   156,   157,   158,
     159,   160,   161,   162,   837,   838,   165,   839,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   675,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   840,   194,   195,   196,   197,   841,   842,   199,
       0,   200,   201,   843,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
     844,   845,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,   237,   238,   239,   240,
     241,   242,   846,   847,     0,   848,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,     0,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   849,   850,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   851,   288,   852,   290,   291,   292,   293,
     853,   294,   295,   296,   297,   854,   855,   299,   856,   301,
     302,   303,     0,   304,   305,     0,     0,   857,   307,   308,
       0,     0,   309,   310,   311,   312,   313,   858,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   859,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   860,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   861,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,   862,   384,   385,   386,   387,   388,   389,   390,
     391,   863,   393, -1017,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   864,   408,     0,
     409,   410,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   865,   866,     0,     0,   420,   421,   867,   423,   868,
     869,   425,   426,   870,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,   871,     0,   438,   439,
     440,   441,   442,   443,   872,     0,   445,   446,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   873,     0,
       0,     0,     0,     0,     0,   874,   875,     0,     0,     0,
       0,     0,   877,     0,   878,     0,     0,     0,     0,   879,
       0,   880,   881,    92,   814,   547,   815,   816,   817,   818,
     819,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,   820,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   821,
     115,   822,   823,     0,   118,   119,   120,   121,   122,   123,
     824,   825,   124,   125,   826,   827,   128,     0,   129,   130,
     131,   132,   828,     0,   829,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   830,   831,
     832,   833,   834,   835,   836,   156,   157,   158,   159,   160,
     161,   162,   837,   838,   165,   839,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   675,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     840,   194,   195,   196,   197,   841,   842,   199,     0,   200,
     201,   843,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,   844,   845,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   241,   242,
     846,   847,     0,   848,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,     0,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   849,   850,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   851,   288,   852,   290,   291,   292,   293,   853,   294,
     295,   296,   297,   854,   855,   299,   856,   301,   302,   303,
       0,   304,   305,     0,     0,   857,   307,   308,     0,     0,
     309,   310,   311,   312,   313,   858,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   859,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   860,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   861,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
     862,   384,   385,   386,   387,   388,   389,   390,   391,   863,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   864,   408,     0,   409,   410,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   865,
     866,     0,     0,   420,   421,   867,   423,   868,   869,   425,
     426,   870,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,   871,     0,   438,   439,   440,   441,
     442,   443,   872,     0,   445,   446,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   873,     0,     0,     0,
       0,     0,     0,   874,   875,   876,     0,     0,     0,     0,
     877,     0,   878,     0,     0,     0,     0,   879,     0,   880,
     881,    92,  1401,   547,   815,   816,   817,  1402,   819,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,  1403,   101,   102,   103,     0,
       0,     0,     0,   820,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   821,   115,   822,
     823,     0,   118,   119,   120,   121,   122,   123,   824,   825,
     124,   125,   826,   827,   128,     0,   129,   130,   131,   132,
     828,     0,   829,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   830,   831,   832,   833,
     834,   835,   836,   156,   157,   158,   159,   160,   161,   162,
     837,   838,   165,   839,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   675,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   840,   194,
     195,   196,   197,   841,   842,   199,     0,   200,   201,   843,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,   844,   845,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   241,   242,   846,   847,
       0,   848,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,     0,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   849,   850,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   851,
     288,   852,   290,   291,   292,   293,   853,   294,   295,   296,
     297,   854,   855,   299,   856,   301,   302,   303,     0,   304,
     305,     0,     0,   857,   307,   308,     0,     0,   309,   310,
     311,   312,   313,   858,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   859,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   860,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,   364,   365,   366,
     861,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,   862,   384,
     385,   386,   387,   388,   389,   390,   391,   863,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   864,   408,     0,   409,   410,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   865,   866,     0,
       0,   420,   421,   867,   423,   868,   869,   425,   426,   870,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,   871,     0,   438,   439,   440,   441,   442,   443,
     872,     0,   445,   446,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   873,     0,     0,     0,     0,     0,
       0,   874,   875,     0,     0,     0,     0,     0,   877,     0,
     878,     0,     0,     0,     0,   879,     0,   880,   881,  1009,
     814,   547,   815,   816,   817,   818,   819,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,   820,     0,     0,   104,   105,     0,   106,   107,   108,
    1011,   110,   111,   112,   113,   821,  1012,   822,   823,     0,
     118,   119,   120,   121,   122,   123,   824,   825,   124,   125,
     826,   827,   128,     0,   129,   130,   131,   132,   828,     0,
    1013,     0,   135,   136,   137,   138,   139,   140,  1014,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
    1015,   152,   153,   154,   830,   831,   832,  1016,   834,   835,
     836,   156,   157,   158,   159,   160,   161,   162,   837,   838,
     165,   839,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     675,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   840,   194,   195,   196,
     197,   841,   842,   199,     0,   200,   201,   843,   203,     0,
     204,     0,   205,  1018,     0,  1019,   208,   209,   210,  1020,
     212,     0,   213,     0,   844,   845,   216,     0,   217,   218,
     219,   220,   221,   222,   223,  1021,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,  1022,
     237,   238,   239,   240,   241,   242,   846,   847,     0,   848,
       0,   246,  1023,  1024,   249,  1025,   251,   252,   253,   254,
     255,     0,     0,   256,  1026,   258,  1027,     0,   260,   261,
     262,   849,   850,   263,   264,   265,   266,   267,  1028,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   851,  1029,   852,
     290,   291,   292,   293,   853,   294,   295,  1030,   297,   854,
     855,   299,   856,   301,   302,   303,     0,   304,   305,     0,
       0,   857,   307,   308,     0,     0,   309,   310,  1031,   312,
    1032,   858,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   859,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   860,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,  1033,   364,   365,   366,   861,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,   862,   384,   385,   386,
     387,   388,  1034,   390,   391,   863,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,  1035,
     406,   864,   408,     0,   409,   410,     0,   411,  1036,   413,
     414,   415,   416,   417,     0,   865,   866,     0,     0,   420,
     421,   867,   423,   868,   869,   425,   426,  1037,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
     871,     0,   438,   439,   440,   441,   442,   443,   872,     0,
     445,  1039,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   873,     0,     0,     0,     0,     0,     0,   874,
     875,     0,     0,     0,     0,     0,   877,     0,   878,  1522,
       0,     0,     0,   879,     0,   880,   881,    92,   814,   547,
     815,   816,   817,   818,   819,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,   820,
       0,     0,   104,   105,     0,   106,   107,   108,   109,   110,
     111,   112,   113,   821,   115,   822,   823,     0,   118,   119,
     120,   121,   122,   123,   824,   825,   124,   125,   826,   827,
     128,     0,   129,   130,   131,   132,   828,     0,   829,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   830,   831,   832,   833,   834,   835,   836,   156,
     157,   158,   159,   160,   161,   162,   837,   838,   165,   839,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   675,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   840,   194,   195,   196,   197,   841,
     842,   199,     0,   200,   201,   843,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,   844,   845,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   241,   242,   846,   847,     0,   848,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,     0,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   849,
     850,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   851,   288,   852,   290,   291,
     292,   293,   853,   294,   295,   296,   297,   854,   855,   299,
     856,   301,   302,   303,     0,   304,   305,     0,     0,   857,
     307,   308,     0,     0,   309,   310,   311,   312,   313,   858,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   859,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     860,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   364,   365,   366,   861,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,   862,   384,   385,   386,   387,   388,
     389,   390,   391,   863,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   864,
     408,     0,   409,   410,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   865,   866,     0,     0,   420,   421,   867,
     423,   868,   869,   425,   426,   870,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,   871,     0,
     438,   439,   440,   441,   442,   443,   872,     0,   445,   446,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     873,     0,     0,     0,     0,     0,     0,   874,   875,     0,
       0,     0,     0,     0,   877,     0,   878,  1638,     0,     0,
       0,   879,     0,   880,   881,  1009,   814,   547,   815,   816,
     817,   818,   819,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,   820,     0,     0,
     104,   105,     0,   106,   107,   108,  1011,   110,   111,   112,
     113,   821,  1012,   822,   823,     0,   118,   119,   120,   121,
     122,   123,   824,   825,   124,   125,   826,   827,   128,     0,
     129,   130,   131,   132,   828,     0,  1013,     0,   135,   136,
     137,   138,   139,   140,  1014,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,  1015,   152,   153,   154,
     830,   831,   832,  1016,   834,   835,   836,   156,   157,   158,
     159,   160,   161,   162,   837,   838,   165,   839,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   675,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   840,   194,   195,   196,   197,   841,   842,   199,
       0,   200,   201,   843,   203,     0,   204,     0,   205,  1018,
       0,  1019,   208,   209,   210,  1020,   212,     0,   213,     0,
     844,   845,   216,     0,   217,   218,   219,   220,   221,   222,
     223,  1021,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,  1022,   237,   238,   239,   240,
     241,   242,   846,   847,     0,   848,     0,   246,  1023,  1024,
     249,  1025,   251,   252,   253,   254,   255,     0,     0,   256,
    1026,   258,  1027,     0,   260,   261,   262,   849,   850,   263,
     264,   265,   266,   267,  1028,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   851,  1029,   852,   290,   291,   292,   293,
     853,   294,   295,  1030,   297,   854,   855,   299,   856,   301,
     302,   303,     0,   304,   305,     0,     0,   857,   307,   308,
       0,     0,   309,   310,  1031,   312,  1032,   858,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   859,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   860,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
    1033,   364,   365,   366,   861,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,   862,   384,   385,   386,   387,   388,  1034,   390,
     391,   863,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,  1035,   406,   864,   408,     0,
     409,   410,     0,   411,  1036,   413,   414,   415,   416,   417,
       0,   865,   866,     0,     0,   420,   421,   867,   423,   868,
     869,   425,   426,  1037,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,   871,     0,   438,   439,
     440,   441,   442,   443,   872,  1856,   445,  1039,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   873,     0,
       0,     0,     0,     0,     0,   874,   875,     0,     0,     0,
       0,     0,   877,     0,   878,     0,     0,     0,     0,   879,
       0,   880,   881,    92,   814,   547,   815,   816,   817,   818,
     819,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,   820,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   821,
     115,   822,   823,     0,   118,   119,   120,   121,   122,   123,
     824,   825,   124,   125,   826,   827,   128,     0,   129,   130,
     131,   132,   828,     0,   829,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   830,   831,
     832,   833,   834,   835,   836,   156,   157,   158,   159,   160,
     161,   162,   837,   838,   165,   839,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   675,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     840,   194,   195,   196,   197,   841,   842,   199,     0,   200,
     201,   843,   203,     0,   204,     0,   205,   206,  1645,   207,
     208,   209,   210,   211,   212,     0,   213,     0,   844,   845,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   241,   242,
     846,   847,     0,   848,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,     0,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   849,   850,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   851,   288,   852,   290,   291,   292,   293,   853,   294,
     295,   296,   297,   854,   855,   299,   856,   301,   302,   303,
       0,   304,   305,     0,     0,   857,   307,   308,     0,     0,
     309,   310,   311,   312,   313,   858,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   859,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   860,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   861,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
     862,   384,   385,   386,   387,   388,   389,   390,   391,   863,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   864,   408,     0,   409,   410,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   865,
     866,     0,     0,   420,   421,   867,   423,   868,   869,   425,
     426,   870,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,   871,     0,   438,   439,   440,   441,
     442,   443,   872,     0,   445,   446,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   873,     0,     0,     0,
       0,     0,     0,   874,   875,     0,     0,     0,     0,     0,
     877,     0,   878,     0,     0,     0,     0,   879,     0,   880,
     881,    92,   814,   547,   815,   816,   817,   818,   819,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,   820,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   821,   115,   822,
     823,     0,   118,   119,   120,   121,   122,   123,   824,   825,
     124,   125,   826,   827,   128,     0,   129,   130,   131,   132,
     828,     0,   829,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   830,   831,   832,   833,
     834,   835,   836,   156,   157,   158,   159,   160,   161,   162,
     837,   838,   165,   839,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   675,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   840,   194,
     195,   196,   197,   841,   842,   199,     0,   200,   201,   843,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,   844,   845,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   241,   242,   846,   847,
       0,   848,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,     0,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   849,   850,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   851,
     288,   852,   290,   291,   292,   293,   853,   294,   295,   296,
     297,   854,   855,   299,   856,   301,   302,   303,     0,   304,
     305,     0,     0,   857,   307,   308,     0,     0,   309,   310,
     311,   312,   313,   858,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   859,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   860,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,   364,   365,   366,
     861,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,   862,   384,
     385,   386,   387,   388,   389,   390,   391,   863,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   864,   408,     0,   409,   410,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   865,   866,     0,
       0,   420,   421,   867,   423,   868,   869,   425,   426,   870,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,   871,     0,   438,   439,   440,   441,   442,   443,
     872,     0,   445,   446,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   873,     0,     0,     0,     0,     0,
       0,   874,   875,     0,     0,     0,     0,     0,   877,     0,
     878,     0,     0,     0,     0,   879,     0,   880,   881,  1009,
     814,   547,   815,   816,   817,   818,   819,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,   820,     0,     0,   104,   105,     0,   106,   107,   108,
    1011,   110,   111,   112,   113,   821,  1012,   822,   823,     0,
     118,   119,   120,   121,   122,   123,   824,   825,   124,   125,
     826,   827,   128,     0,   129,   130,   131,   132,   828,     0,
    1013,     0,   135,   136,   137,   138,   139,   140,  1014,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
    1015,   152,   153,   154,   830,   831,   832,  1016,   834,   835,
     836,   156,   157,   158,   159,   160,   161,   162,   837,   838,
     165,   839,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     675,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   840,   194,   195,   196,
     197,   841,   842,   199,     0,   200,   201,   843,   203,     0,
     204,     0,   205,  1018,     0,  1019,   208,   209,   210,  1020,
     212,     0,   213,     0,   844,   845,   216,     0,   217,   218,
     219,   220,   221,   222,   223,  1021,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,  1022,
     237,   238,   239,   240,   241,   242,   846,   847,     0,   848,
       0,   246,  1023,  1024,   249,  1025,   251,   252,   253,   254,
     255,     0,     0,   256,  1026,   258,  1027,     0,   260,   261,
     262,   849,   850,   263,   264,   265,   266,   267,  1028,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   851,  1029,   852,
     290,   291,   292,   293,   853,   294,   295,  1030,   297,   854,
     855,   299,   856,   301,   302,   303,     0,   304,   305,     0,
       0,   857,   307,   308,     0,     0,   309,   310,  1031,   312,
    1032,   858,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   859,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   860,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,  1033,   364,   365,   366,   861,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,   862,   384,   385,   386,
     387,   388,  1034,   390,   391,   863,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,  1035,
     406,   864,   408,     0,   409,   410,     0,   411,  1036,   413,
     414,   415,   416,   417,     0,   865,   866,     0,     0,   420,
     421,   867,   423,   868,   869,   425,   426,  1037,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
     871,     0,   438,   439,   440,   441,   442,   443,   872,     0,
     445,  1039,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   873,     0,     0,     0,     0,     0,     0,   874,
     875,     0,     0,     0,     0,     0,   877,     0,   878,     0,
       0,     0,     0,   879,     0,   880,   881,    92,   814,   547,
     815,   816,   817,   818,   819,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,   820,
       0,     0,   104,   105,     0,   106,   107,   108,   109,   110,
     111,   112,   113,   821,   115,   822,   823,     0,   118,   119,
     120,   121,   122,   123,   824,   825,   124,   125,   826,   827,
     128,     0,   129,   130,   131,   132,   828,     0,   829,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   830,   831,   832,   833,   834,   835,   836,   156,
     157,   158,   159,   160,   161,   162,   837,   838,   165,   839,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   675,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   840,   194,   195,   196,   197,   841,
     842,   199,     0,   200,   201,   843,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,   844,   845,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   241,   242,   846,   847,     0,   848,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,     0,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   849,
     850,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   851,   288,   852,   290,   291,
     292,   293,   853,   294,   295,   296,   297,   854,   855,   299,
     856,   301,   302,   303,     0,   304,   305,     0,     0,   857,
     307,   308,     0,     0,   309,   310,   311,   312,   313,   858,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   859,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     860,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   364,   365,   366,   861,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,   862,   384,   385,   386,   387,   388,
     389,   390,   391,   863,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   864,
     408,     0,   409,   410,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   865,   866,     0,     0,   420,   421,   867,
     423,   868,   869,   425,   426,   870,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,   871,     0,
     438,   439,   440,   441,   442,   443,   872,     0,   445,   446,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     873,     0,     0,     0,     0,     0,     0,  1406,  1407,     0,
       0,     0,     0,     0,   877,     0,   878,     0,     0,     0,
       0,   879,     0,   880,   881,    92,  1781,   547,   815,   816,
     817,   818,   819,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,   820,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   821,   115,   822,   823,     0,   118,   119,   120,   121,
     122,   123,   824,   825,   124,   125,   826,   827,   128,     0,
     129,   130,   131,   132,   828,     0,   829,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     830,   831,   832,   833,   834,   835,   836,   156,   157,   158,
     159,   160,   161,   162,   837,   838,   165,   839,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   675,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   840,   194,   195,   196,   197,   841,   842,   199,
       0,   200,   201,   843,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
     844,   845,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,   237,   238,   239,   240,
     241,   242,   846,   847,     0,   848,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,     0,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   849,   850,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   851,   288,   852,   290,   291,   292,   293,
     853,   294,   295,   296,   297,   854,   855,   299,   856,   301,
     302,   303,     0,   304,   305,     0,     0,   857,   307,   308,
       0,     0,   309,   310,   311,   312,   313,   858,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   859,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   860,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   861,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,   862,   384,   385,   386,   387,   388,   389,   390,
     391,   863,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   864,   408,     0,
     409,   410,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   865,   866,     0,     0,   420,   421,   867,   423,   868,
     869,   425,   426,   870,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,   871,     0,   438,   439,
     440,   441,   442,   443,   872,     0,   445,   446,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   873,     0,
       0,     0,     0,     0,     0,   874,   875,     0,     0,     0,
       0,     0,   877,     0,   878,     0,     0,     0,     0,   879,
       0,   880,   881,    92,   814,   547,   815,   816,   817,   818,
     819,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,   820,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   821,
     115,   822,   823,     0,   118,   119,   120,   121,   122,   123,
     824,   825,   124,   125,   826,   827,   128,     0,   129,   130,
     131,   132,   828,     0,   829,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   830,   831,
     832,   833,   834,   835,   836,   156,   157,   158,   159,   160,
     161,   162,   837,   838,   165,   839,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   675,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     840,   194,   195,   196,   197,   841,   842,   199,     0,   200,
     201,   843,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,   844,   845,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   241,   242,
     846,   847,     0,   848,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,     0,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   849,   850,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   851,   288,   852,   290,   291,   292,   293,   853,   294,
     295,   296,   297,   854,   855,   299,   856,   301,   302,   303,
       0,   304,   305,     0,     0,   857,   307,   308,     0,     0,
     309,   310,   311,   312,   313,   858,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   859,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   860,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   861,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
     862,   384,   385,   386,   387,   388,   389,   390,   391,   863,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   864,   408,     0,   409,   410,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   865,
     866,     0,     0,   420,   421,   867,   423,   868,   869,   425,
     426,   870,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,   871,     0,   438,   439,   440,   441,
     442,   443,   872,     0,   445,   446,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   873,     0,     0,     0,
       0,     0,     0,   874,   875,     0,     0,     0,     0,     0,
     877,     0,  2009,     0,     0,     0,     0,   879,     0,   880,
     881,    92,   814,   547,   815,   816,   817,   818,   819,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,   820,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   821,   115,   822,
     823,     0,   118,   119,   120,   121,   122,   123,   824,   825,
     124,   125,   826,   827,   128,     0,   129,   130,   131,   132,
     828,     0,   829,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,  2675,   154,   830,   831,   832,   833,
     834,   835,   836,   156,   157,   158,   159,   160,   161,   162,
     837,   838,   165,   839,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   675,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   840,   194,
     195,   196,   197,   841,   842,   199,     0,   200,   201,   843,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,  2676,   845,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,   237,   238,   239,   240,   241,   242,   846,   847,
       0,   848,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,     0,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   849,   850,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   851,
     288,   852,   290,   291,   292,   293,   853,   294,   295,   296,
     297,   854,   855,   299,   856,   301,   302,   303,     0,   304,
     305,     0,     0,   857,   307,   308,     0,     0,   309,   310,
     311,   312,   313,   858,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   859,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   860,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,   364,   365,  2677,
     861,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,   862,   384,
     385,   386,   387,   388,   389,   390,   391,   863,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   864,   408,     0,   409,   410,     0,   411,
     412,   413,   414,   415,   416,   417,     0,   865,   866,     0,
       0,   420,   421,   867,   423,   868,   869,   425,   426,   870,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,   871,     0,   438,   439,   440,   441,   442,   443,
     872,     0,   445,   446,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   873,     0,     0,     0,     0,     0,
       0,   874,   875,     0,     0,     0,     0,     0,   877,     0,
    2678,     0,     0,     0,     0,   879,     0,   880,   881,    92,
     814,   547,   815,   816,   817,   818,   819,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,   820,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,  2892,   821,   115,   822,   823,     0,
     118,   119,   120,   121,   122,   123,   824,   825,   124,   125,
     826,   827,   128,     0,   129,   130,   131,   132,   828,     0,
     829,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,  2893,   830,   831,   832,   833,   834,   835,
     836,   156,   157,   158,   159,   160,   161,   162,   837,   838,
     165,   839,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     675,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   840,   194,   195,   196,
     197,   841,   842,   199,     0,   200,   201,   843,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,   844,   845,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
     237,   238,   239,   240,   241,   242,   846,   847,     0,   848,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,     0,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   849,   850,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   851,   288,   852,
     290,   291,   292,   293,   853,   294,   295,   296,   297,   854,
     855,   299,   856,   301,   302,   303,     0,   304,   305,     0,
       0,   857,   307,   308,     0,     0,   309,   310,   311,   312,
     313,   858,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   859,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   860,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,   364,   365,   366,   861,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,   862,   384,   385,   386,
     387,   388,   389,   390,   391,   863,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   864,   408,     0,   409,   410,     0,   411,   412,   413,
     414,   415,   416,   417,     0,   865,   866,     0,     0,   420,
     421,   867,   423,   868,   869,   425,   426,   870,   428,   429,
    2894,   431,   432,     0,     0,   433,   434,   435,   436,   437,
     871,     0,   438,   439,   440,   441,   442,   443,   872,     0,
     445,   446,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   873,     0,     0,     0,     0,     0,     0,   874,
     875,     0,     0,     0,     0,     0,   877,     0,   878,     0,
       0,     0,     0,   879,     0,   880,   881,    92,   814,   547,
     815,   816,   817,   818,   819,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,   820,
       0,     0,   104,   105,     0,   106,   107,   108,   109,   110,
     111,   112,   113,   821,   115,   822,   823,     0,   118,   119,
     120,   121,   122,   123,   824,   825,   124,   125,   826,   827,
     128,     0,   129,   130,   131,   132,   828,     0,   829,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,  2893,   830,   831,   832,   833,   834,   835,   836,   156,
     157,   158,   159,   160,   161,   162,   837,   838,   165,   839,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   675,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   840,   194,   195,   196,   197,   841,
     842,   199,     0,   200,   201,   843,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,   844,   845,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   241,   242,   846,   847,     0,   848,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,     0,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   849,
     850,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   851,   288,   852,   290,   291,
     292,   293,   853,   294,   295,   296,   297,   854,   855,   299,
     856,   301,   302,   303,     0,   304,   305,     0,     0,   857,
     307,   308,     0,     0,   309,   310,   311,   312,   313,   858,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   859,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     860,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   364,   365,   366,   861,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,   862,   384,   385,   386,   387,   388,
     389,   390,   391,   863,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   864,
     408,     0,   409,   410,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   865,   866,     0,     0,   420,   421,   867,
     423,   868,   869,   425,   426,   870,   428,   429,  2894,   431,
     432,     0,     0,   433,   434,   435,   436,   437,   871,     0,
     438,   439,   440,   441,   442,   443,   872,     0,   445,   446,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     873,     0,     0,     0,     0,     0,     0,   874,   875,     0,
       0,     0,     0,     0,   877,     0,   878,     0,     0,     0,
       0,   879,     0,   880,   881,    92,   814,   547,   815,   816,
     817,   818,   819,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,   820,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
   -1725,   821,   115,   822,   823,     0,   118,   119,   120,   121,
     122,   123,   824,   825,   124,   125,   826,   827,   128,     0,
     129,   130,   131,   132,   828,     0,   829,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,  2893,
     830,   831,   832,   833,   834,   835,   836,   156,   157,   158,
     159,   160,   161,   162,   837,   838,   165,   839,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   675,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   840,   194,   195,   196,   197,   841,   842,   199,
       0,   200,   201,   843,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210, -1725,   212,     0,   213,     0,
     844,   845,   216,     0,   217,   218,   219,   220,   221,   222,
     223, -1725,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,   237,   238,   239,   240,
     241,   242,   846,   847,     0,   848,     0,   246,     0,     0,
     249,   250,   251,   252,   253,   254,   255,     0,     0,   256,
     257,   258, -1725,     0,   260,   261,   262,   849,   850,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   851,   288,   852,   290,   291,   292,   293,
       0,   294,   295,     0,   297,   854,   855,   299,   856,   301,
     302,   303,     0,   304,   305,     0,     0,   857,   307,   308,
       0,     0,   309,   310,   311,   312,   313,   858,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   859,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   860,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   861,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,   862,   384,   385,   386,   387,   388, -1725,   390,
     391,   863,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   864,   408,     0,
     409,   410,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   865,   866,     0,     0,   420,   421,   867,   423,   868,
     869,   425,   426,   870,   428,   429,  2894,   431,   432,     0,
       0,   433,   434,   435,   436,   437,   871,     0,   438,   439,
     440,   441,   442,   443,   872,     0,   445,   446,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472, -1725,     0,
       0,     0,     0,     0,     0,   874,   875,     0,     0,     0,
       0,     0,   877,     0,   878,     0,     0,     0,     0,   879,
       0,   880,   881,    92,   814,   547,   815,   816,   817,   818,
     819,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   821,
     115,   822,   823,     0,   118,   119,   120,   121,   122,   123,
     824,   825,   124,   125,   826,   827,   128,     0,   129,   130,
     131,   132,   828,     0,   829,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   830,   831,
     832,   833,   834,   835,   836,   156,   157,   158,   159,   160,
     161,   162,   837,   838,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   675,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     840,   194,   195,   196,   197,   841,   842,   199,     0,   200,
     201,   843,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,   844,   845,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   241,   242,
     846,   847,     0,   848,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,     0,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   849,   850,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   851,   288,   852,   290,   291,   292,   293,     0,   294,
     295,   296,   297,   854,   855,   299,   856,   301,   302,   303,
       0,   304,   305,     0,     0,   857,   307,   308,     0,     0,
     309,   310,   311,   312,   313,   858,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   859,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   860,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
     862,   384,   385,   386,   387,   388,   389,   390,   391,   863,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   864,   408,     0,   409,   410,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   865,
     866,     0,     0,   420,   421,   867,   423,   868,   869,   425,
     426,   870,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,   871,     0,   438,   439,   440,   441,
     442,   443,   872,     0,   445,   446,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,     0,     0,     0,     0,
       0,     0,     0,  1630,  1631,     0,     0,    92,   814,   547,
     815,   816,  1632,   818,   819,     0,     0,     0,     0,   880,
     881,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,   109,   110,
     111,   112,   113,   821,   115,   822,   823,     0,   118,   119,
     120,   121,   122,   123,   824,   825,   124,   125,   826,   827,
     128,     0,   129,   130,   131,   132,   828,     0,   829,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   830,   831,   832,   833,   834,   835,   836,   156,
     157,   158,   159,   160,   161,   162,   837,   838,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   675,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   840,   194,   195,   196,   197,   841,
     842,   199,     0,   200,   201,   843,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,   844,   845,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,   237,   238,
     239,   240,   241,   242,   846,   847,     0,   848,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,     0,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   849,
     850,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   851,   288,   852,   290,   291,
     292,   293,     0,   294,   295,   296,   297,   854,   855,   299,
     856,   301,   302,   303,     0,   304,   305,     0,     0,   306,
     307,   308,     0,     0,   309,   310,   311,   312,   313,   858,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   859,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     860,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   364,   365,   366,  1767,  1768,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,   862,   384,   385,   386,   387,   388,
     389,   390,   391,   863,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   864,
     408,     0,   409,   410,     0,   411,   412,   413,   414,   415,
     416,   417,     0,   865,   866,     0,     0,   420,   421,   867,
     423,   868,   869,   425,   426,   870,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,   871,     0,
     438,   439,   440,   441,   442,   443,   872,     0,   445,   446,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
       0,     0,     0,     0,     0,     0,     0,  1769,  1770,     0,
       0,     0,     0,     0,     0,     0,  1632,     0,     0,     0,
       0,     0,     0,   880,   881,    92,   814,   547,   815,   816,
     817,   818,   819,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   821,   115,   822,   823,     0,   118,   119,   120,   121,
     122,   123,   824,   825,   124,   125,   826,   827,   128,     0,
     129,   130,   131,   132,   828,     0,   829,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     830,   831,   832,   833,   834,   835,   836,   156,   157,   158,
     159,   160,   161,   162,   837,   838,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   675,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   840,   194,   195,   196,   197,   841,   842,   199,
       0,   200,   201,   843,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
     844,   845,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,   237,   238,   239,   240,
     241,   242,   846,   847,     0,   848,     0,   246,     0,   248,
     249,   250,   251,   252,   253,   254,   255,     0,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   849,   850,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   851,   288,   852,   290,   291,   292,   293,
       0,   294,   295,   296,   297,   854,   855,   299,   856,   301,
     302,   303,     0,   304,   305,     0,     0,   857,   307,   308,
       0,     0,   309,   310,   311,   312,   313,   858,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   859,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   860,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,   862,   384,   385,   386,   387,   388,   389,   390,
     391,   863,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   864,   408,     0,
     409,   410,     0,   411,   412,   413,   414,   415,   416,   417,
       0,   865,   866,     0,     0,   420,   421,   867,   423,   868,
     869,   425,   426,   870,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,   871,     0,   438,   439,
     440,   441,   442,   443,   872,     0,   445,   446,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,     0,     0,
       0,     0,     0,     0,     0,  1630,  1631,     0,     0,     0,
       0,     0,     0,     0,  1632,     0,     0,     0,     0,     0,
       0,   880,   881,    92,   814,   547,   815,   816,   817,   818,
     819,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,   820,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,     0,   821,
     115,   822,   823,     0,   118,   119,   120,   121,   122,   123,
     824,   825,   124,   125,   826,   827,   128,     0,   129,   130,
     131,   132,   828,     0,   829,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   830,   831,
     832,   833,   834,   835,   836,   156,   157,   158,   159,   160,
     161,   162,   837,   838,   165,   839,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   675,   181,   182,     0,   183,   184,
     185,     0,   186,     0,   188,     0,   189,   190,   191,   192,
     840,   194,   195,   196,   197,   841,   842,   199,     0,   200,
     201,   843,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,     0,   212,     0,   213,     0,   844,   845,
     216,     0,   217,   218,   219,   220,   221,   222,   223,     0,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,   237,   238,   239,   240,   241,   242,
     846,   847,     0,   848,     0,   246,     0,     0,   249,   250,
     251,   252,   253,   254,   255,     0,     0,   256,   257,   258,
       0,     0,   260,   261,   262,   849,   850,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   851,   288,   852,   290,   291,   292,   293,     0,   294,
     295,     0,   297,   854,   855,   299,   856,   301,   302,   303,
       0,   304,   305,     0,     0,   857,   307,   308,     0,     0,
     309,   310,   311,   312,   313,   858,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   859,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   860,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   861,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
     862,   384,   385,   386,   387,   388,     0,   390,   391,   863,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   864,   408,     0,   409,   410,
       0,   411,   412,   413,   414,   415,   416,   417,     0,   865,
     866,     0,     0,   420,   421,   867,   423,   868,   869,   425,
     426,   870,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,   871,     0,   438,   439,   440,   441,
     442,   443,   872,     0,   445,   446,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,     0,     0,     0,     0,
       0,     0,     0,   874,   875,   498,     0,     0,     0,     0,
     877,     0,   878,     0,     0,     0,     0,   879,     0,   880,
     881,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,  2304,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,  -694,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,  -694,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,     0,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,  -694,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,     0,   246,     0,     0,
     249,  -694,   251,   252,   253,   254,   255,     0,     0,   256,
    -694,   258,     0,     0,   260,   261,   262,     0,     0,   263,
     264,   265,   266,   267,   500,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,  -694,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   297,     0,   298,   299,   300,   301,
     302,   303,     0,   304,   305,     0,     0,   306,   307,   308,
       0,     0,   309,   310,     0,   312,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
    -694,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,     0,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   502,   406,   407,   408,     0,
     409,   410,     0,   411,  -694,   413,   414,   415,   416,   417,
       0,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,   425,   426,   427,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,     0,     0,   438,   439,
     440,   441,   442,   443,   444,     0,   445,     0,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,     0,     0,
      92,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   941,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,   825,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   828,
       0,   829,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   830,   831,   832,   833,   834,
     835,   836,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   841,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,  2055,     0,   256,   257,   258,   259,     0,   260,
     261,   262,   849,   850,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,   297,
       0,   855,   299,   300,   301,   302,   303,     0,   304,   305,
       0,   580,   306,   307,   308,     0,     0,   309,   310,   311,
     312,   313,   858,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   859,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
    2056,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    26,   379,   380,   381,   382,   383,   862,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   864,   408,     0,   409,   410,    31,   411,   412,
     413,   414,   415,   416,   417,     0,   418,   419,     0,     0,
     420,   421,   867,   423,   868,     0,   425,   426,   870,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,   871,     0,   438,   439,   440,   441,   442,   575,   444,
       0,   445,   446,   447,   448,   449,   450,     0,     0,   451,
       0,    34,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,     0,    92,    35,   579,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2057,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,   825,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   828,     0,   829,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,   154,   830,
     831,   832,   833,   834,   835,   836,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   841,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,  2055,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   849,   850,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,   297,     0,   855,   299,   300,   301,   302,
     303,     0,   304,   305,     0,   580,   306,   307,   308,     0,
       0,   309,   310,   311,   312,   313,   858,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     859,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,  2056,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,   380,   381,   382,
     383,   862,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   864,   408,     0,   409,
     410,     0,   411,   412,   413,   414,   415,   416,   417,     0,
     418,   419,     0,     0,   420,   421,   867,   423,   868,     0,
     425,   426,   870,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,   871,     0,   438,   439,   440,
     441,   442,   443,   444,     0,   445,   446,   447,   448,   449,
     450,     0,     0,   451,     0,     0,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,     0,    92,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2057,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,   825,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   828,     0,   829,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   830,   831,   832,   833,   834,   835,   836,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     841,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
       0,     0,   256,   257,   258,   259,     0,   260,   261,   262,
     849,   850,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,   297,     0,   855,
     299,   300,   301,   302,   303,     0,   304,   305,     0,     0,
     306,   307,   308,     0,     0,   309,   310,   311,   312,   313,
     858,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   859,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,  2056,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,   380,   381,   382,   383,   862,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     864,   408,     0,   409,   410,     0,   411,   412,   413,   414,
     415,   416,   417,     0,   418,   419,     0,     0,   420,   421,
     867,   423,   868,     0,   425,   426,   870,   428,   429,   430,
     431,   432,     0,     0,   433,   434,   435,   436,   437,   871,
       0,   438,   439,   440,   441,   442,   443,   444,     0,   445,
     446,   447,   448,   449,   450,     0,     0,   451,     0,     0,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,     0,    92,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
     825,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   828,     0,   829,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   830,   831,   832,
     833,   834,   835,   836,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   841,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,     0,     0,   256,   257,   258,   259,
       0,   260,   261,   262,   849,   850,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,   297,     0,   855,   299,   300,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
     310,   311,   312,   313,   858,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   859,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,   862,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   864,   408,     0,   409,   410,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,   419,
       0,     0,   420,   421,   867,   423,   868,     0,   425,   426,
     870,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,   871,     0,   438,   439,   440,   441,   442,
     443,   444,     0,   445,   446,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,     0,   742,  1231,   547,     0,
       0,     0,   818,     0,     0,     0,     0,     0,     0,     0,
       0,  2693,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   743,   744,     0,   745,   746,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   747,   748,   128,
       0,   129,   130,   131,   132,   749,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   750,   751,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   752,   194,   195,   196,   197,   753,  1232,
     199,     0,   200,   201,   754,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   755,   756,   216,     0,   217,   218,   219,   220,   221,
     222,   223,     0,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,     0,   757,   238,   239,
     240,   241,   242,   758,   759,     0,   760,     0,   246,     0,
       0,   249,     0,   251,   252,   253,   254,   255,     0,     0,
     256,     0,   258,     0,     0,   260,   261,   262,     0,     0,
     263,   264,   265,   266,   267,   761,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   762,     0,   763,   290,   291,   292,
     764,     0,   294,   295,     0,   297,     0,   765,   299,   766,
     301,   302,   303,     0,   304,   305,  1233,     0,   306,   307,
     308,     0,     0,   309,   767,     0,   312,     0,   768,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   769,   328,   329,   770,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   771,
     344,   345,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,     0,   364,   365,   366,   772,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   773,   386,   387,   388,     0,
     390,   391,   774,   393,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   775,   406,   776,   408,
       0,   409,   410,     0,   411,     0,   413,   414,   415,   416,
     417,     0,   777,   778,     0,     0,   420,   421,   779,   423,
     780,  1234,   425,   426,   781,   428,   429,   430,   431,   432,
       0,     0,   433,   434,   435,   436,   437,     0,     0,   438,
     439,   440,   441,   442,  1124,   783,     0,   445,     0,   447,
     448,   449,   450,     0,     0,   451,     0,     0,   452,   453,
     454,   455,   456,   457,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   469,   470,   471,   472,     0,
     742,     0,     0,     0,     0,     0,  1235,  1236,  1935,     0,
       0,     0,     0,     0,     0,  1936,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     3,     4,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   743,   744,     0,   745,   746,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   747,   748,   128,     0,   129,   130,   131,   132,   749,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   750,
     751,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   752,   194,   195,
     196,   197,   753,     0,   199,     0,   200,   201,   754,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   755,   756,   216,     0,   217,
     218,   219,   220,   221,   222,   223,     0,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   757,   238,   239,   240,   241,   242,   758,   759,     0,
     760,     0,   246,     0,     0,   249,     0,   251,   252,   253,
     254,   255,     0,     0,   256,     0,   258,     0,     0,   260,
     261,   262,     0,     0,   263,   264,   265,   266,   267,   761,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   762,     0,
     763,   290,   291,   292,   764,     0,   294,   295,     0,   297,
       0,   765,   299,   766,   301,   302,   303,     0,   304,   305,
       0,     0,   306,   307,   308,     0,     0,   309,   767,     0,
     312,     0,   768,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   769,   328,   329,   770,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   771,   344,   345,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,     0,   364,   365,   366,   772,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    26,   379,   380,   381,   382,   383,     0,   384,   773,
     386,   387,   388,     0,   390,   391,   774,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     775,   406,   776,   408,     0,   409,   410,    31,   411,     0,
     413,   414,   415,   416,   417,     0,   777,   778,     0,     0,
     420,   421,   779,   423,   780,     0,   425,   426,   781,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,     0,     0,   438,   439,   440,   441,   442,   782,   783,
       0,   445,     0,   447,   448,   449,   450,     0,     0,   451,
       0,    34,   452,   453,   454,   455,   456,   457,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   469,
     470,   471,   472,     0,   498,    35,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    36,
      93,    94,    95,    96,    97,    98,    99,   100,   603,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
       0,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,     0,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,     0,   246,     0,     0,   249,
       0,   251,   252,   253,   254,   255,     0,     0,   256,     0,
     258,     0,     0,   260,   261,   262,     0,     0,   263,   264,
     265,   266,   267,   500,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,     0,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   297,     0,   298,   299,   300,   301,   302,
     303,     0,   304,   305,     0,     0,   306,   307,   308,     0,
       0,   309,   310,     0,   312,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    26,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,     0,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   502,   406,   407,   408,     0,   409,
     410,    31,   411,     0,   413,   414,   415,   416,   417,     0,
     604,   419,     0,     0,   605,   421,   422,   423,   424,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,     0,     0,   438,   439,   440,
     441,   442,   575,   444,     0,   445,     0,   447,   448,   449,
     450,     0,     0,   451,     0,    34,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,     0,   498,    35,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    36,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,     0,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,     0,
     246,     0,     0,   249,     0,   251,   252,   253,   254,   255,
       0,     0,   256,     0,   258,     0,     0,   260,   261,   262,
       0,     0,   263,   264,   265,   266,   267,   500,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   297,     0,   298,
     299,   300,   301,   302,   303,     0,   304,   305,     0,     0,
     306,   307,   308,     0,     0,   309,   310,     0,   312,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    26,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,     0,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   502,   406,
     407,   408,     0,   409,   410,    31,   411,     0,   413,   414,
     415,   416,   417,     0,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,   425,   426,   427,   428,   429,   430,
     431,   432,     0,     0,   433,   434,   435,   436,   437,     0,
       0,   438,   439,   440,   441,   442,   575,   444,     0,   445,
       0,   447,   448,   449,   450,     0,     0,   451,     0,    34,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,     0,   498,    35,   579,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,     0,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,     0,   246,     0,     0,   249,     0,   251,
     252,   253,   254,   255,     0,     0,   256,     0,   258,     0,
       0,   260,   261,   262,     0,     0,   263,   264,   265,   266,
     267,   500,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,     0,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   297,     0,   298,   299,   300,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
     310,     0,   312,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,     0,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   502,   406,   407,   408,     0,   409,   410,     0,
     411,     0,   413,   414,   415,   416,   417,     0,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,   425,   426,
     427,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,     0,     0,   438,   439,   440,   441,   442,
     443,   444,     0,   445,     0,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,     0,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   921,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,     0,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,     0,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,     0,   246,     0,
       0,   249,     0,   251,   252,   253,   254,   255,     0,     0,
     256,     0,   258,     0,     0,   260,   261,   262,     0,     0,
     263,   264,   265,   266,   267,   500,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,     0,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   297,     0,   298,   299,   300,
     301,   302,   303,     0,   304,   305,     0,     0,   306,   307,
     308,     0,     0,   309,   310,     0,   312,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,     0,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   502,   406,   407,   408,
       0,   409,   410,     0,   411,     0,   413,   414,   415,   416,
     417,     0,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,   425,   426,   427,   428,   429,   430,   431,   432,
       0,     0,   433,   434,   435,   436,   437,     0,     0,   438,
     439,   440,   441,   442,   443,   444,     0,   445,     0,   447,
     448,   449,   450,     0,     0,   451,     0,     0,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,     0,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2532,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,     0,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,     0,   246,     0,     0,   249,     0,   251,   252,   253,
     254,   255,     0,     0,   256,     0,   258,     0,     0,   260,
     261,   262,     0,     0,   263,   264,   265,   266,   267,   500,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,     0,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   297,
       0,   298,   299,   300,   301,   302,   303,     0,   304,   305,
       0,     0,   306,   307,   308,     0,     0,   309,   310,     0,
     312,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,     0,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     502,   406,   407,   408,     0,   409,   410,     0,   411,     0,
     413,   414,   415,   416,   417,     0,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,   425,   426,   427,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,     0,     0,   438,   439,   440,   441,   442,   443,   444,
       0,   445,     0,   447,   448,   449,   450,     0,     0,   451,
       0,     0,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,     0,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1652,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
       0,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,     0,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,     0,   246,     0,     0,   249,
       0,   251,   252,   253,   254,   255,     0,     0,   256,     0,
     258,     0,     0,   260,   261,   262,     0,     0,   263,   264,
     265,   266,   267,   500,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,     0,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   297,     0,   298,   299,   300,   301,   302,
     303,     0,   304,   305,     0,     0,   306,   307,   308,     0,
       0,   309,   310,     0,   312,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,     0,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   502,   406,   407,   408,     0,   409,
     410,     0,   411,     0,   413,   414,   415,   416,   417,     0,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,     0,     0,   438,   439,   440,
     441,   442,   443,   444,     0,   445,     0,   447,   448,   449,
     450,     0,     0,   451,     0,     0,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,     0,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1757,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,     0,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,     0,
     246,     0,     0,   249,     0,   251,   252,   253,   254,   255,
       0,     0,   256,     0,   258,     0,     0,   260,   261,   262,
       0,     0,   263,   264,   265,   266,   267,   500,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   297,     0,   298,
     299,   300,   301,   302,   303,     0,   304,   305,     0,     0,
     306,   307,   308,     0,     0,   309,   310,     0,   312,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,     0,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   502,   406,
     407,   408,     0,   409,   410,     0,   411,     0,   413,   414,
     415,   416,   417,     0,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,   425,   426,   427,   428,   429,   430,
     431,   432,     0,     0,   433,   434,   435,   436,   437,     0,
       0,   438,   439,   440,   441,   442,   443,   444,     0,   445,
       0,   447,   448,   449,   450,     0,     0,   451,     0,     0,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,     0,     0,     0,     0,  2390,  1231,   547,     0,     0,
    1612,   818,     0,     0,     0,     0,     0,  2288,  1613,  1614,
    1615,    93,    94,    95,    96,    97,    98,    99,   100,  1052,
     101,   102,   103,  1053,  1054,  1055,  1056,  1057,  1058,  1059,
     104,   105,  1060,   106,   107,   108,  2391,   110,   111,   112,
       0,   663,  2392,   665,   666,  1061,   118,   119,   120,   121,
     122,   123,  1062,  1063,   124,   125,   667,   668,   128,  1064,
     129,   130,   131,   132,     0,  1065,  2393,  1066,   135,   136,
     137,   138,   139,   140,  2394,   142,   143,   144,  1067,   145,
     146,   147,   148,   149,   150,  1068,  2395,   152,   153,   154,
    1069,  1070,  1071,  2396,  1072,  1073,  1074,   156,   157,   158,
     159,   160,   161,   162,   673,   674,   165,  1075,   166,  1076,
     167,   168,   169,   170,   171,   172,  1077,   173,   174,   175,
     176,   177,  1078,  1079,   178,   179,   675,   181,   182,  1080,
     183,   184,   185,  1081,   186,   187,   188,  1082,   189,   190,
     191,   192,     0,   194,   195,   196,   197,     0,  1083,   199,
    1084,   200,   201,   676,   203,  1085,   204,  1086,   205,  2397,
    1087,  2398,   208,   209,   210,  2399,   212,  1088,   213,  1089,
       0,     0,   216,  1090,   217,   218,   219,   220,   221,   222,
     223,  2400,   225,   226,   227,   228,  1091,   229,   230,   231,
     232,   233,   234,  1092,   235,  2401,     0,   238,   239,   240,
     241,   242,   683,   684,  1093,   685,  1094,   246,  2402,  2403,
     249,  2404,   251,   252,   253,   254,   255,  1095,  1096,   256,
    2405,   258,  2406,  1097,   260,   261,   262,  1098,  1099,   263,
     264,   265,   266,   267,  2407,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   692,  2408,   694,   290,   291,   292,  2409,
    1100,   294,   295,  2410,   297,  1101,     0,   299,   696,   301,
     302,   303,  1102,   304,   305,  1103,  1104,  2411,   307,   308,
    1105,  1106,   309,     0,  2412,   312,  2413,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,  1107,   325,
     326,     0,   328,   329,     0,   331,   332,   333,  1108,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   699,   344,
     345,   346,   347,  1109,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,  1110,   361,   362,
    2414,   364,   365,   366,   701,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,  1111,   379,   380,   381,
     382,   383,  1112,   384,  2415,   386,   387,   388,  2416,   390,
     391,   704,   393,  1113,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,  2417,   406,     0,   408,  1114,
     409,   410,  1115,   411,  2418,   413,   414,   415,   416,   417,
    1116,   707,   708,  1117,  1118,   420,   421,     0,   423,     0,
    1119,   425,   426,  2419,   428,   429,   430,   431,   432,  1120,
    1121,   433,   434,   435,   436,   437,  1122,  1123,   438,   439,
     440,   441,   442,     0,   710,  1125,   445,  2420,   447,   448,
     449,   450,  1126,  1127,   451,  1128,  1129,   452,   453,   454,
     455,   456,   457,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   469,   470,   471,   472,     0,   498,
       0,  1616,  1617,  1618,  1612,  2421,  2422,  1621,  1622,  1623,
    1624,     0,  1613,  1614,  1615,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,     0,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
       0,   246,     0,     0,   249,     0,   251,   252,   253,   254,
     255,     0,     0,   256,     0,   258,     0,     0,   260,   261,
     262,     0,     0,   263,   264,   265,   266,   267,   500,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,     0,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   297,     0,
     298,   299,   300,   301,   302,   303,     0,   304,   305,     0,
       0,   306,   307,   308,     0,     0,   309,   310,     0,   312,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,     0,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   502,
     406,   407,   408,     0,   409,   410,     0,   411,     0,   413,
     414,   415,   416,   417,     0,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,   425,   426,   427,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
       0,     0,   438,   439,   440,   441,   442,   443,   444,     0,
     445,     0,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,     0,     0,     0,  1616,  1617,  1618,     0,  1619,
    1620,  1621,  1622,  1623,  1624,  1307,     0,     0,  1308,     0,
       0,     0,     0,  1309,  1310,  1311,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,  1308,     0,     0,     0,
    1312,  1309,  1310,  1311,     0,     0,     0,     0,  1314,     0,
       0,     0,     0,     0,     0,  1315,     0,     0,  1312,     0,
       0,     0,  1307,     0,     0,  1308,  1314,     0,     0,     0,
    1309,  1310,  1311,  1315,     0,     0,     0,     0,     0,     0,
    1316,  1307,     0,     0,  1308,     0,     0,  1312,     0,  1309,
    1310,  1311,     0,     0,     0,  1314,     0,     0,  1316,     0,
       0,     0,  1315,     0,     0,     0,  1312,     0,     0,     0,
       0,     0,     0,     0,  1314,     0,     0,     0,     0,     0,
       0,  1315,     0,     0,     0,     0,     0,  1316,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1316,     0,     0,     0,
       0,  1307,     0,     0,  1308,     0,     0,     0,     0,  1309,
    1310,  1311,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,     0,
    1317,     0,     0,     0,  1314,     0,     0,     0,     0,     0,
       0,  1315,     0,     0,     0,     0,  1318,     0,  1317,     0,
    1307,  1319,     0,  1308,     0,     0,     0,     0,  1309,  1310,
    1311,     0,     0,     0,  1318,     0,  1316,     0,     0,  1319,
       0,     0,     0,  1320,  1321,  1312,     0,  1317,     0,     0,
       0,     0,     0,  1314,     0,     0,     0,  1322,     0,     0,
    1315,  1320,  1321,  1318,     0,     0,  1317,     0,  1319,     0,
       0,     0,     0,     0,     0,  1322,     0,     0,     0,     0,
       0,     0,  1318,     0,     0,  1316,     0,  1319,     0,     0,
    1320,  1321,     0,     0,     0,  1323,     0,     0,  1324,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,  1320,
    1321,     0,  1325,  1323,     0,  1326,  1324,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
    1325,     0,     0,  1326,     0,     0,  1317,     0,     0,     0,
       0,     0,  1323,     0,     0,  1324,     0,     0,     0,     0,
       0,     0,  1318,     0,     0,     0,     0,  1319,     0,  1325,
       0,  1323,  1326,     0,  1324,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1325,  1320,
    1321,  1326,     0,     0,     0,  1317,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
       0,  1318,     0,  1327,     0,     0,  1319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,     0,  1320,  1321,
       0,  1323,     0,     0,  1324,     0,     0,     0,     0,     0,
       0,     0,  1322,     0,     0,     0,     0,     0,  1325,     0,
    1327,  1326,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1323,     0,     0,  1324,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1325,     0,     0,
    1326,     0,     0,  1328,     0,     0,  1329,  1330,  1331,     0,
    1332,  1333,  1334,  1335,  1336,  1337,     0,     0,     0,     0,
    2480,  1328,     0,     0,  1329,  1330,  1331,     0,  1332,  1333,
    1334,  1335,  1336,  1337,     0,     0,     0,     0,  2502,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,     0,     0,  1329,  1330,  1331,     0,  1332,  1333,  1334,
    1335,  1336,  1337,     0,     0,     0,     0,  2647,     0,  1328,
       0,     0,  1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,
    1336,  1337,     0,     0,     0,     0,  2863,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1328,
       0,     0,  1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,
    1336,  1337,     0,     0,     0,     0,  2875,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1328,  1051,
       0,  1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,  1336,
    1337,     0,     0,  1488,     0,    93,    94,    95,    96,    97,
      98,    99,   100,  1052,   101,   102,   103,  1053,  1054,  1055,
    1056,  1057,  1058,  1059,   104,   105,  1060,   106,   107,   108,
       0,   110,   111,   112,   743,   744,     0,   745,   746,  1061,
     118,   119,   120,   121,   122,   123,  1062,  1063,   124,   125,
     747,   748,   128,  1064,   129,   130,   131,   132,   749,  1065,
       0,  1066,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,  1067,   145,   146,   147,   148,   149,   150,  1068,
       0,   152,   153,   154,  1069,  1070,  1071,     0,  1072,  1073,
    1074,   156,   157,   158,   159,   160,   161,   162,   750,   751,
     165,  1075,   166,  1076,   167,   168,   169,   170,   171,   172,
    1077,   173,   174,   175,   176,   177,  1078,  1079,   178,   179,
     180,   181,   182,  1080,   183,   184,   185,  1081,   186,   187,
     188,  1082,   189,   190,   191,   192,   752,   194,   195,   196,
     197,   753,  1083,   199,  1084,   200,   201,   754,   203,  1085,
     204,  1086,   205,     0,  1087,     0,   208,   209,   210,     0,
     212,  1088,   213,  1089,   755,   756,   216,  1090,   217,   218,
     219,   220,   221,   222,   223,     0,   225,   226,   227,   228,
    1091,   229,   230,   231,   232,   233,   234,  1092,   235,     0,
     757,   238,   239,   240,   241,   242,   758,   759,  1093,   760,
    1094,   246,     0,     0,   249,     0,   251,   252,   253,   254,
     255,  1095,  1096,   256,     0,   258,     0,  1097,   260,   261,
     262,  1098,  1099,   263,   264,   265,   266,   267,   761,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   762,     0,   763,
     290,   291,   292,   764,  1100,   294,   295,     0,   297,  1101,
     765,   299,   766,   301,   302,   303,  1102,   304,   305,  1103,
    1104,   306,   307,   308,  1105,  1106,   309,   767,     0,   312,
       0,   768,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,  1107,   325,   326,   769,   328,   329,   770,   331,
     332,   333,  1108,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   771,   344,   345,   346,   347,  1109,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,  1110,   361,   362,     0,   364,   365,   366,   772,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
    1111,   379,   380,   381,   382,   383,  1112,   384,   773,   386,
     387,   388,     0,   390,   391,   774,   393,  1113,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   775,
     406,   776,   408,  1114,   409,   410,  1115,   411,     0,   413,
     414,   415,   416,   417,  1116,   777,   778,  1117,  1118,   420,
     421,   779,   423,   780,  1119,   425,   426,   781,   428,   429,
     430,   431,   432,  1120,  1121,   433,   434,   435,   436,   437,
    1122,  1123,   438,   439,   440,   441,   442,  1124,   783,  1125,
     445,     0,   447,   448,   449,   450,  1126,  1127,   451,  1128,
    1129,   452,   453,   454,   455,   456,   457,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   469,   470,
     471,   472,   498,     0,     0,     0,     0,     0,     0,     0,
       0,  1736,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,     0,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,     0,   246,     0,     0,   249,     0,   251,
     252,   253,   254,   255,     0,     0,   256,     0,   258,     0,
       0,   260,   261,   262,     0,     0,   263,   264,   265,   266,
     267,   500,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,     0,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   297,     0,   298,   299,   300,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
     310,     0,   312,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,     0,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   502,   406,   407,   408,     0,   409,   410,     0,
     411,     0,   413,   414,   415,   416,   417,     0,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,   425,   426,
     427,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,     0,     0,   438,   439,   440,   441,   442,
     443,   444,     0,   445,     0,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   742,  1231,   547,     0,     0,
       0,   818,     0,     0,  2219,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     743,   744,     0,   745,   746,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   747,   748,   128,     0,
     129,   130,   131,   132,   749,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   750,   751,   165,  1366,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   752,   194,   195,   196,   197,   753,  1232,   199,
       0,   200,   201,   754,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     755,   756,   216,     0,   217,   218,   219,   220,   221,   222,
     223,     0,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   757,   238,   239,   240,
     241,   242,   758,   759,     0,   760,     0,   246,     0,     0,
     249,     0,   251,   252,   253,   254,   255,     0,     0,   256,
       0,   258,     0,     0,   260,   261,   262,     0,     0,   263,
     264,   265,   266,   267,   761,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   762,     0,   763,   290,   291,   292,   764,
       0,   294,   295,     0,   297,     0,   765,   299,   766,   301,
     302,   303,     0,   304,   305,  1233,     0,   306,   307,   308,
       0,     0,   309,   767,     0,   312,     0,   768,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   769,   328,   329,   770,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   771,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
       0,   364,   365,   366,   772,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   773,   386,   387,   388,     0,   390,
     391,   774,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   775,   406,   776,   408,     0,
     409,   410,     0,   411,     0,   413,   414,   415,   416,   417,
       0,   777,   778,     0,     0,   420,   421,   779,   423,   780,
    1234,   425,   426,   781,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,     0,     0,   438,   439,
     440,   441,   442,  1124,   783,     0,   445,     0,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   469,   470,   471,   472,   742,  1231,
     547,     0,     0,     0,   818,  1235,  1236,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   743,   744,     0,   745,   746,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   747,
     748,   128,     0,   129,   130,   131,   132,   749,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   750,   751,   165,
    1368,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   752,   194,   195,   196,   197,
     753,  1232,   199,     0,   200,   201,   754,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   755,   756,   216,     0,   217,   218,   219,
     220,   221,   222,   223,     0,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   757,
     238,   239,   240,   241,   242,   758,   759,     0,   760,     0,
     246,     0,     0,   249,     0,   251,   252,   253,   254,   255,
       0,     0,   256,     0,   258,     0,     0,   260,   261,   262,
       0,     0,   263,   264,   265,   266,   267,   761,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   762,     0,   763,   290,
     291,   292,   764,     0,   294,   295,     0,   297,     0,   765,
     299,   766,   301,   302,   303,     0,   304,   305,  1233,     0,
     306,   307,   308,     0,     0,   309,   767,     0,   312,     0,
     768,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   769,   328,   329,   770,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   771,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,     0,   364,   365,   366,   772,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   773,   386,   387,
     388,     0,   390,   391,   774,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   775,   406,
     776,   408,     0,   409,   410,     0,   411,     0,   413,   414,
     415,   416,   417,     0,   777,   778,     0,     0,   420,   421,
     779,   423,   780,  1234,   425,   426,   781,   428,   429,   430,
     431,   432,     0,     0,   433,   434,   435,   436,   437,     0,
       0,   438,   439,   440,   441,   442,  1124,   783,     0,   445,
       0,   447,   448,   449,   450,     0,     0,   451,     0,     0,
     452,   453,   454,   455,   456,   457,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   469,   470,   471,
     472,   742,  1231,   547,     0,     0,     0,   818,  1235,  1236,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   743,   744,     0,   745,
     746,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   747,   748,   128,     0,   129,   130,   131,   132,
     749,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     750,   751,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   752,   194,
     195,   196,   197,   753,  1232,   199,     0,   200,   201,   754,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   755,   756,   216,     0,
     217,   218,   219,   220,   221,   222,   223,     0,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   757,   238,   239,   240,   241,   242,   758,   759,
       0,   760,     0,   246,     0,     0,   249,     0,   251,   252,
     253,   254,   255,     0,     0,   256,     0,   258,     0,     0,
     260,   261,   262,     0,     0,   263,   264,   265,   266,   267,
     761,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   762,
       0,   763,   290,   291,   292,   764,     0,   294,   295,     0,
     297,     0,   765,   299,   766,   301,   302,   303,     0,   304,
     305,  1233,     0,   306,   307,   308,     0,     0,   309,   767,
       0,   312,     0,   768,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   769,   328,   329,
     770,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   771,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,     0,   364,   365,   366,
     772,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     773,   386,   387,   388,     0,   390,   391,   774,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   775,   406,   776,   408,     0,   409,   410,     0,   411,
       0,   413,   414,   415,   416,   417,     0,   777,   778,     0,
       0,   420,   421,   779,   423,   780,  1234,   425,   426,   781,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,     0,     0,   438,   439,   440,   441,   442,  1124,
     783,     0,   445,     0,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     469,   470,   471,   472,     0,  1307,     0,     0,  1308,     0,
       0,  1235,  1236,  1309,  1310,  1311,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,  1308,     0,     0,     0,
    1312,  1309,  1310,  1311,  1763,     0,     0,     0,  1314,     0,
       0,     0,     0,     0,     0,  1315,     0,     0,  1312,     0,
       0,     0,  1307,     0,     0,  1308,  1314,     0,     0,     0,
    1309,  1310,  1311,  1315,     0,     0,     0,     0,     0,     0,
    1316,  1307,     0,     0,  1308,     0,     0,  1312,     0,  1309,
    1310,  1311,     0,     0,     0,  1314,     0,     0,  1316,     0,
       0,     0,  1315,     0,     0,     0,  1312,     0,     0,  1957,
       0,     0,     0,     0,  1314,     0,     0,     0,     0,     0,
       0,  1315,     0,     0,     0,     0,     0,  1316,     0,     0,
       0,  1764,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1316,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1307,     0,     0,  1308,     0,     0,
       0,     0,  1309,  1310,  1311,     0,     0,     0,     0,     0,
    1317,     0,     0,     0,     0,     0,     0,     0,  1995,  1312,
       0,     0,     0,  1996,     0,     0,  1318,  1314,  1317,     0,
       0,  1319,     0,     0,  1315,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1318,     0,  2936,     0,     0,  1319,
       0,     0,     0,  1320,  1321,     0,     0,  1317,     0,  1316,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,     0,
       0,  1320,  1321,  1318,     0,     0,  1317,     0,  1319,     0,
       0,     0,     0,     0,     0,  1322,     0,     0,     0,     0,
       0,     0,  1318,     0,     0,     0,     0,  1319,     0,     0,
    1320,  1321,     0,     0,     0,  1323,     0,     0,  1324,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,  1320,
    1321,     0,  1325,  1323,     0,  1326,  1324,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
    1325,     0,     0,  1326,     0,     0,     0,     0,     0,     0,
       0,     0,  1323,     0,     0,  1324,     0,     0,     0,  1317,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1325,
       0,  1323,  1326,     0,  1324,  1318,     0,     0,     0,     0,
    1319,     0,     0,     0,     0,     0,     0,     0,  1325,     0,
       0,  1326,     0,     0,     0,  2937,     0,     0,     0,     0,
       0,     0,  1320,  1321,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1327,     0,  1307,  1322,     0,  1308,     0,
       0,     0,     0,  1309,  1310,  1311,     0,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,     0,     0,     0,
    1312,     0,     0,  2000,     0,     0,     0,     0,  1314,     0,
       0,     0,     0,     0,  1323,  1315,     0,  1324,     0,     0,
    1327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1325,  1765,     0,  1326,     0,     0,     0,     0,  1327,
    1316,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1969,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1328,     0,     0,  1329,  1330,  1331,     0,
    1332,  1333,  1334,  1335,  1336,  1337,     0,     0,     0,     0,
       0,  1328,     0,     0,  1329,  1330,  1331,     0,  1332,  1333,
    1334,  1335,  1336,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,     0,  1327,  1329,  1330,  1331,     0,  1332,  1333,  1334,
    1335,  1336,  1337,     0,     0,     0,     0,     0,     0,  1328,
    1317,     0,  1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,
    1336,  1337,     0,     0,  1307,     0,  1318,  1308,     0,     0,
       0,  1319,  1309,  1310,  1311,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1312,
       0,     0,     0,  1320,  1321,     0,     0,  1314,     0,     0,
       0,     0,     0,     0,  1315,     0,     0,  1322,     0,     0,
       0,     0,     0,  1307,     0,     0,  1308,     0,     0,     0,
       0,  1309,  1310,  1311,     0,     0,     0,     0,     0,  1316,
       0,     0,  1328,     0,     0,  1329,  1330,  1331,  1312,  1332,
    1333,  1334,  1335,  1336,  1337,  1323,  1314,     0,  1324,     0,
       0,     0,     0,  1315,     0,     0,     0,     0,     0,     0,
       0,  1307,  1325,     0,  1308,  1326,     0,     0,     0,  1309,
    1310,  1311,     0,     0,     0,     0,     0,     0,  1316,     0,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,  2007,
       0,     0,     0,     0,  1314,     0,     0,     0,     0,     0,
       0,  1315,     0,  1307,     0,     0,  1308,     0,     0,     0,
       0,  1309,  1310,  1311,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2005,     0,  1316,     0,  1312,  1317,
       0,  2265,     0,     0,     0,     0,  1314,     0,     0,     0,
       0,     0,     0,  1315,     0,  1318,     0,     0,     0,  1307,
    1319,     0,  1308,  1327,     0,     0,     0,  1309,  1310,  1311,
       0,     0,     0,     0,     0,     0,     0,     0,  1316,     0,
       0,     0,  1320,  1321,  1312,     0,     0,     0,  1317,     0,
       0,     0,  1314,     0,     0,     0,  1322,     0,     0,  1315,
       0,     0,     0,     0,  1318,     0,     0,     0,     0,  1319,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1316,     0,     0,     0,     0,     0,
       0,  1320,  1321,     0,  1323,     0,  1317,  1324,     0,     0,
       0,     0,     0,     0,     0,  1322,     0,     0,     0,     0,
       0,  1325,  1318,     0,  1326,     0,     0,  1319,     0,     0,
       0,     0,     0,  1328,     0,     0,  1329,  1330,  1331,     0,
    1332,  1333,  1334,  1335,  1336,  1337,     0,     0,  1317,  1320,
    1321,     0,     0,  1323,     0,     0,  1324,     0,     0,     0,
       0,     0,     0,  1322,  1318,     0,     0,     0,     0,  1319,
    1325,     0,     0,  1326,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1320,  1321,     0,  1317,     0,     0,     0,     0,     0,
       0,  1323,     0,     0,  1324,  1322,     0,     0,     0,     0,
    1318,     0,  1327,     0,  1307,  1319,     0,  1308,  1325,     0,
       0,  1326,  1309,  1310,  1311,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1320,  1321,  1312,
       0,     0,     0,  1323,     0,     0,  1324,  1314,     0,     0,
       0,  1322,     0,     0,  1315,     0,     0,     0,     0,     0,
    1325,  1327,  1307,  1326,     0,  1308,     0,     0,     0,     0,
    1309,  1310,  1311,     0,     0,     0,     0,     0,     0,  1316,
       0,     0,     0,     0,     0,     0,     0,  1312,     0,  1323,
       0,     0,  1324,  2223,     0,  1314,     0,     0,     0,     0,
       0,     0,  1315,     0,     0,     0,  1325,     0,     0,  1327,
       0,     0,  1328,     0,     0,  1329,  1330,  1331,     0,  1332,
    1333,  1334,  1335,  1336,  1337,     0,     0,  1316,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1307,     0,     0,  1308,     0,
       0,  1327,     0,  1309,  1310,  1311,     0,     0,     0,     0,
       0,  1328,     0,     0,  1329,  1330,  1331,     0,  1332,  1333,
    1334,  1335,  1336,  1337,     0,     0,     0,     0,  1314,  1317,
       0,     0,     0,     0,     0,  1315,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1318,     0,  1327,     0,     0,
    1319,     0,     0,     0,     0,     0,     0,     0,     0,  1328,
    1316,     0,  1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,
    1336,  1337,  1320,  1321,     0,     0,     0,  1317,     0,     0,
       0,     0,     0,     0,     0,     0,  1322,     0,     0,     0,
       0,     0,     0,  1318,     0,     0,     0,     0,  1319,     0,
       0,  1328,     0,     0,  1329,  1330,  1331,     0,  1332,  1333,
    1334,  1335,  1336,  1337,     0,     0,     0,     0,     0,     0,
    1320,  1321,     0,     0,  1323,     0,     0,  1324,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,     0,
       0,  1325,     0,     0,  1326,     0,     0,  1328,     0,     0,
    1329,  1330,  1331,     0,  1332,  1333,  1334,  1335,  1336,  1337,
    1317,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1323,     0,     0,  1324,  1318,     0,     0,     0,
       0,  1319,     0,     0,     0,     0,     0,     0,     0,  1325,
       0,     0,  1326,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1320,  1321,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1323,     0,     0,  1324,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1325,     0,     0,     0,     0,     0,     0,     0,
    1327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1328,     0,     0,  1329,  1330,  1331,     0,  1332,
    1333,  1334,  1335,  1336,  1337,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1327,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,     0,     0,  1329,  1330,  1331,     0,  1332,  1333,  1334,
    1335,  1780,  1337,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1051,     0,  1671,  1328,     0,     0,  1329,  1330,  1331,     0,
    1332,  1333,  1334,  1335,  1336,  1337,    93,    94,    95,    96,
      97,    98,    99,   100,  1052,   101,   102,   103,  1053,  1054,
    1055,  1056,  1057,  1058,  1059,   104,   105,  1060,   106,   107,
     108,     0,   110,   111,   112,   743,   744,     0,   745,   746,
    1061,   118,   119,   120,   121,   122,   123,  1062,  1063,   124,
     125,   747,   748,   128,  1064,   129,   130,   131,   132,   749,
    1065,     0,  1066,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,  1067,   145,   146,   147,   148,   149,   150,
    1068,     0,   152,   153,   154,  1069,  1070,  1071,     0,  1072,
    1073,  1074,   156,   157,   158,   159,   160,   161,   162,   750,
     751,   165,  1075,   166,  1076,   167,   168,   169,   170,   171,
     172,  1077,   173,   174,   175,   176,   177,  1078,  1079,   178,
     179,   180,   181,   182,  1080,   183,   184,   185,  1081,   186,
     187,   188,  1082,   189,   190,   191,   192,   752,   194,   195,
     196,   197,   753,  1083,   199,  1084,   200,   201,   754,   203,
    1085,   204,  1086,   205,     0,  1087,     0,   208,   209,   210,
       0,   212,  1088,   213,  1089,   755,   756,   216,  1090,   217,
     218,   219,   220,   221,   222,   223,     0,   225,   226,   227,
     228,  1091,   229,   230,   231,   232,   233,   234,  1092,   235,
       0,   757,   238,   239,   240,   241,   242,   758,   759,  1093,
     760,  1094,   246,     0,     0,   249,     0,   251,   252,   253,
     254,   255,  1095,  1096,   256,     0,   258,     0,  1097,   260,
     261,   262,  1098,  1099,   263,   264,   265,   266,   267,   761,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   762,     0,
     763,   290,   291,   292,   764,  1100,   294,   295,     0,   297,
    1101,   765,   299,   766,   301,   302,   303,  1102,   304,   305,
    1103,  1104,   306,   307,   308,  1105,  1106,   309,   767,     0,
     312,     0,   768,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,  1107,   325,   326,   769,   328,   329,   770,
     331,   332,   333,  1108,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   771,   344,   345,   346,   347,  1109,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,  1110,   361,   362,     0,   364,   365,   366,   772,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,  1111,   379,   380,   381,   382,   383,  1112,   384,   773,
     386,   387,   388,     0,   390,   391,   774,   393,  1113,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     775,   406,   776,   408,  1114,   409,   410,  1115,   411,     0,
     413,   414,   415,   416,   417,  1116,   777,   778,  1117,  1118,
     420,   421,   779,   423,   780,  1119,   425,   426,   781,   428,
     429,   430,   431,   432,  1120,  1121,   433,   434,   435,   436,
     437,  1122,  1123,   438,   439,   440,   441,   442,  1124,   783,
    1125,   445,     0,   447,   448,   449,   450,  1126,  1127,   451,
    1128,  1129,   452,   453,   454,   455,   456,   457,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   469,
     470,   471,   472,  1051,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,  1052,   101,   102,
     103,  1053,  1054,  1055,  1056,  1057,  1058,  1059,   104,   105,
    1060,   106,   107,   108,     0,   110,   111,   112,   743,   744,
       0,   745,   746,  1061,   118,   119,   120,   121,   122,   123,
    1062,  1063,   124,   125,   747,   748,   128,  1064,   129,   130,
     131,   132,   749,  1065,     0,  1066,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,  1067,   145,   146,   147,
     148,   149,   150,  1068,     0,   152,   153,   154,  1069,  1070,
    1071,     0,  1072,  1073,  1074,   156,   157,   158,   159,   160,
     161,   162,   750,   751,   165,  1075,   166,  1076,   167,   168,
     169,   170,   171,   172,  1077,   173,   174,   175,   176,   177,
    1078,  1079,   178,   179,   180,   181,   182,  1080,   183,   184,
     185,  1081,   186,   187,   188,  1082,   189,   190,   191,   192,
     752,   194,   195,   196,   197,   753,  1083,   199,  1084,   200,
     201,   754,   203,  1085,   204,  1086,   205,     0,  1087,     0,
     208,   209,   210,     0,   212,  1088,   213,  1089,   755,   756,
     216,  1090,   217,   218,   219,   220,   221,   222,   223,     0,
     225,   226,   227,   228,  1091,   229,   230,   231,   232,   233,
     234,  1092,   235,     0,   757,   238,   239,   240,   241,   242,
     758,   759,  1093,   760,  1094,   246,     0,     0,   249,     0,
     251,   252,   253,   254,   255,  1095,  1096,   256,     0,   258,
       0,  1097,   260,   261,   262,  1098,  1099,   263,   264,   265,
     266,   267,   761,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   762,     0,   763,   290,   291,   292,   764,  1100,   294,
     295,     0,   297,  1101,   765,   299,   766,   301,   302,   303,
    1102,   304,   305,  1103,  1104,   306,   307,   308,  1105,  1106,
     309,   767,     0,   312,     0,   768,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,  1107,   325,   326,   769,
     328,   329,   770,   331,   332,   333,  1108,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   771,   344,   345,   346,
     347,  1109,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,  1110,   361,   362,     0,   364,
     365,   366,   772,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,  1111,   379,   380,   381,   382,   383,
    1112,   384,   773,   386,   387,   388,     0,   390,   391,   774,
     393,  1113,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   775,   406,   776,   408,  1114,   409,   410,
    1115,   411,     0,   413,   414,   415,   416,   417,  1116,   777,
     778,  1117,  1118,   420,   421,   779,   423,   780,  1119,   425,
     426,   781,   428,   429,   430,   431,   432,  1120,  1121,   433,
     434,   435,   436,   437,  1122,  1123,   438,   439,   440,   441,
     442,  1124,   783,  1125,   445,     0,   447,   448,   449,   450,
    1126,  1127,   451,  1128,  1129,   452,   453,   454,   455,   456,
     457,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   469,   470,   471,   472,  1051,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,  1815,    98,    99,   100,
    1052,   101,   102,   103,  1053,  1054,  1055,  1056,  1057,  1058,
    1059,   104,   105,  1060,   106,   107,   108,     0,   110,   111,
     112,   743,   744,     0,   745,   746,  1061,   118,   119,   120,
     121,   122,   123,  1062,  1063,   124,   125,   747,   748,   128,
    1064,   129,   130,   131,   132,   749,  1065,     0,  1066,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,  1067,
     145,   146,   147,   148,   149,   150,  1068,     0,   152,   153,
     154,  1069,  1070,  1071,     0,  1072,  1073,  1074,   156,   157,
     158,   159,   160,   161,   162,   750,   751,   165,  1075,   166,
    1076,   167,   168,   169,   170,   171,   172,  1077,   173,   174,
     175,   176,   177,  1078,  1079,   178,   179,   180,  1816,   182,
    1080,   183,   184,   185,  1081,   186,   187,   188,  1082,   189,
     190,   191,   192,   752,   194,   195,   196,   197,   753,  1083,
     199,  1084,   200,   201,   754,   203,  1085,   204,  1086,   205,
       0,  1087,     0,   208,   209,   210,     0,   212,  1088,   213,
    1089,   755,   756,   216,  1090,   217,   218,   219,   220,   221,
     222,   223,     0,   225,   226,   227,   228,  1091,   229,   230,
     231,   232,   233,   234,  1092,   235,     0,   757,   238,   239,
     240,   241,   242,   758,   759,  1093,   760,  1094,   246,     0,
       0,   249,     0,   251,   252,   253,   254,   255,  1095,  1096,
     256,     0,   258,     0,  1097,   260,   261,   262,  1098,  1099,
     263,   264,   265,   266,   267,   761,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   762,     0,   763,   290,   291,   292,
     764,  1100,   294,   295,     0,   297,  1101,   765,   299,   766,
     301,   302,   303,  1102,   304,   305,  1103,  1104,   306,   307,
     308,  1105,  1106,   309,   767,     0,   312,     0,   768,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,  1107,
     325,   326,   769,   328,   329,   770,   331,   332,   333,  1108,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   771,
     344,   345,   346,   347,  1109,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,  1110,   361,
     362,     0,   364,   365,   366,   772,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,  1111,   379,   380,
     381,   382,   383,  1112,  1817,   773,   386,   387,   388,     0,
     390,   391,   774,   393,  1113,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   775,   406,   776,   408,
    1114,   409,   410,  1115,   411,     0,   413,   414,   415,   416,
     417,  1116,   777,   778,  1117,  1118,   420,   421,   779,   423,
     780,  1119,   425,   426,   781,   428,   429,   430,   431,   432,
    1120,  1121,   433,   434,   435,   436,   437,  1122,  1123,   438,
     439,   440,   441,   442,  1124,   783,  1125,   445,     0,   447,
     448,   449,   450,  1126,  1127,   451,  1128,  1129,   452,   453,
     454,   455,   456,   457,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   469,   470,   471,   472,    92,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,   825,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   828,     0,
     829,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   830,   831,   832,   833,   834,   835,
     836,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   841,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,     0,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   849,   850,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,   296,   297,     0,
     855,   299,   300,   301,   302,   303,     0,   304,   305,     0,
       0,   306,   307,   308,     0,     0,   309,   310,   311,   312,
     313,   858,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   859,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,   862,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   864,   408,     0,   409,   410,     0,   411,   412,   413,
     414,   415,   416,   417,     0,   418,   419,     0,     0,   420,
     421,   867,   423,   868,     0,   425,   426,   870,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
     871,     0,   438,   439,   440,   441,   442,   443,   444,     0,
     445,   446,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,    92,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,   134,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,     0,     0,     0,
     155,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,     0,     0,   256,   257,   258,   259,
       0,   260,   261,   262,     0,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,   297,     0,   298,   299,   300,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,   415,   416,   417,     0,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,   425,   426,
     427,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,     0,     0,   438,   439,   440,   441,   442,
     443,   444,     0,   445,   446,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,  1426,
     129,   130,   131,   132,   133,     0,     0,  1427,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,  1428,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,  1429,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,  1430,
     223,     0,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,     0,   246,     0,     0,
     249,     0,   251,   252,   253,   254,   255,     0,     0,   256,
       0,   258,     0,     0,   260,   261,   262,     0,     0,   263,
     264,   265,   266,   267,   500,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,     0,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   297,     0,   298,   299,   300,   301,
     302,   303,     0,   304,   305,     0,     0,   306,   307,   308,
       0,     0,   309,   310,     0,   312,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,  1431,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,     0,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   502,   406,   407,   408,     0,
     409,   410,     0,   411,     0,   413,   414,   415,   416,   417,
       0,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,   425,   426,   427,   428,   429,   430,   431,   432,     0,
    1432,   433,   434,   435,   436,   437,     0,     0,   438,   439,
     440,   441,   442,   443,   444,     0,   445,     0,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,  1426,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,  1428,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
    1429,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,     0,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,     0,
     246,     0,     0,   249,     0,   251,   252,   253,   254,   255,
       0,     0,   256,     0,   258,  1885,     0,   260,   261,   262,
       0,     0,   263,   264,   265,   266,   267,   500,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   297,     0,   298,
     299,   300,   301,   302,   303,     0,   304,   305,     0,     0,
     306,   307,   308,     0,     0,   309,   310,     0,   312,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,  1431,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,     0,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   502,   406,
     407,   408,     0,   409,   410,     0,   411,     0,   413,   414,
     415,   416,   417,     0,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,   425,   426,   427,   428,   429,   430,
     431,   432,     0,  1432,   433,   434,   435,   436,   437,     0,
       0,   438,   439,   440,   441,   442,   443,   444,     0,   445,
       0,   447,   448,   449,   450,     0,     0,   451,     0,     0,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   742,     0,   547,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   743,   744,     0,   745,
     746,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   747,   748,   128,     0,   129,   130,   131,   132,
     749,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     750,   751,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   752,   194,
     195,   196,   197,   753,  1232,   199,     0,   200,   201,   754,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   755,   756,   216,     0,
     217,   218,   219,   220,   221,   222,   223,     0,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   757,   238,   239,   240,   241,   242,   758,   759,
       0,   760,     0,   246,     0,     0,   249,     0,   251,   252,
     253,   254,   255,     0,     0,   256,     0,   258,     0,     0,
     260,   261,   262,     0,     0,   263,   264,   265,   266,   267,
     761,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   762,
       0,   763,   290,   291,   292,   764,     0,   294,   295,     0,
     297,     0,   765,   299,   766,   301,   302,   303,     0,   304,
     305,  1233,     0,   306,   307,   308,     0,     0,   309,   767,
       0,   312,     0,   768,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   769,   328,   329,
     770,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   771,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,     0,   364,   365,   366,
     772,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     773,   386,   387,   388,     0,   390,   391,   774,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   775,   406,   776,   408,     0,   409,   410,     0,   411,
       0,   413,   414,   415,   416,   417,     0,   777,   778,     0,
       0,   420,   421,   779,   423,   780,  1234,   425,   426,   781,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,     0,     0,   438,   439,   440,   441,   442,  1124,
     783,     0,   445,     0,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     469,   470,   471,   472,   498,     0,   579,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     3,     4,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
       0,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,     0,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,     0,   246,     0,     0,   249,
       0,   251,   252,   253,   254,   255,     0,     0,   256,     0,
     258,     0,     0,   260,   261,   262,     0,     0,   263,   264,
     265,   266,   267,   500,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,     0,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   297,     0,   298,   299,   300,   301,   302,
     303,     0,   304,   305,     0,     0,   306,   307,   308,     0,
       0,   309,   310,     0,   312,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,     0,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   502,   406,   407,   408,     0,   409,
     410,     0,   411,     0,   413,   414,   415,   416,   417,     0,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,     0,     0,   438,   439,   440,
     441,   442,   443,   444,     0,   445,     0,   447,   448,   449,
     450,     0,     0,   451,     0,     0,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,     0,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,     0,   246,
       0,     0,   249,     0,   251,   252,   253,   254,   255,     0,
       0,   256,     0,   258,     0,     0,   260,   261,   262,     0,
       0,   263,   264,   265,   266,   267,   500,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,     0,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   297,     0,   298,   299,
     300,   301,   302,   303,     0,   304,   305,     0,   580,   306,
     307,   308,     0,     0,   309,   310,     0,   312,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
       0,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   502,   406,   407,
     408,     0,   409,   410,     0,   411,     0,   413,   414,   415,
     416,   417,     0,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,   425,   426,   427,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,     0,     0,
     438,   439,   440,   441,   442,   443,   444,     0,   445,     0,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     498,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   623,   223,     0,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,     0,   246,     0,     0,   249,     0,   251,   252,   253,
     254,   255,     0,     0,   256,     0,   258,     0,     0,   260,
     261,   262,     0,     0,   263,   264,   265,   266,   267,   500,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,     0,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   297,
       0,   298,   299,   300,   301,   302,   303,     0,   304,   305,
       0,   580,   306,   307,   308,     0,     0,   309,   310,     0,
     312,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,     0,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     502,   406,   407,   408,     0,   409,   410,     0,   411,     0,
     413,   414,   415,   416,   417,     0,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,   425,   426,   427,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,     0,     0,   438,   439,   440,   441,   442,   443,   444,
       0,   445,     0,   447,   448,   449,   450,     0,     0,   451,
       0,     0,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   742,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     3,     4,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   743,   744,
       0,   745,   746,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   747,   748,   128,     0,   129,   130,
     131,   132,   749,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   750,   751,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     752,   194,   195,   196,   197,   753,     0,   199,     0,   200,
     201,   754,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   755,   756,
     216,     0,   217,   218,   219,   220,   221,   222,   223,     0,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   757,   238,   239,   240,   241,   242,
     758,   759,     0,   760,     0,   246,     0,     0,   249,     0,
     251,   252,   253,   254,   255,     0,     0,   256,     0,   258,
       0,     0,   260,   261,   262,     0,     0,   263,   264,   265,
     266,   267,   761,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   762,     0,   763,   290,   291,   292,   764,     0,   294,
     295,     0,   297,     0,   765,   299,   766,   301,   302,   303,
       0,   304,   305,     0,     0,   306,   307,   308,     0,     0,
     309,   767,     0,   312,     0,   768,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   769,
     328,   329,   770,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   771,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,     0,   364,
     365,   366,   772,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   773,   386,   387,   388,     0,   390,   391,   774,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   775,   406,   776,   408,     0,   409,   410,
       0,   411,     0,   413,   414,   415,   416,   417,     0,   777,
     778,     0,     0,   420,   421,   779,   423,   780,     0,   425,
     426,   781,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,     0,     0,   438,   439,   440,   441,
     442,  1124,   783,     0,   445,     0,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   469,   470,   471,   472,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,  1724,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,     0,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,     0,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,     0,   246,     0,
       0,   249,     0,   251,   252,   253,   254,   255,     0,     0,
     256,     0,   258,     0,     0,   260,   261,  1725,     0,     0,
     263,   264,   265,   266,   267,   500,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,     0,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   297,     0,   298,   299,   300,
     301,   302,   303,     0,   304,   305,     0,     0,   306,   307,
     308,     0,     0,   309,   310,     0,   312,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,     0,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   502,   406,   407,   408,
       0,   409,   410,  1726,   411,     0,   413,  1727,   415,  1728,
     417,     0,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,   425,   426,   427,   428,   429,   430,   431,   432,
       0,     0,   433,   434,  1729,   436,   437,     0,     0,   438,
     439,   440,   441,   442,   443,   444,     0,   445,     0,   447,
     448,   449,   450,     0,     0,   451,     0,     0,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   498,
    2655,     0,     0,     0,     0,  2656,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,     0,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
       0,   246,     0,     0,   249,     0,   251,   252,   253,   254,
     255,     0,     0,   256,     0,   258,     0,     0,   260,   261,
     262,     0,     0,   263,   264,   265,   266,   267,   500,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,     0,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   297,     0,
     298,   299,   300,   301,   302,   303,     0,   304,   305,     0,
       0,   306,   307,   308,     0,     0,   309,   310,     0,   312,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,     0,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   502,
     406,   407,   408,     0,   409,   410,     0,   411,     0,   413,
     414,   415,   416,   417,     0,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,   425,   426,   427,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
       0,     0,   438,   439,   440,   441,   442,   443,   444,     0,
     445,     0,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,   499,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,     0,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,     0,   246,     0,     0,   249,     0,   251,
     252,   253,   254,   255,     0,     0,   256,     0,   258,     0,
       0,   260,   261,   262,     0,     0,   263,   264,   265,   266,
     267,   500,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,     0,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   297,     0,   298,   299,   300,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
     310,     0,   312,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   501,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,     0,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   502,   406,   407,   408,     0,   409,   410,     0,
     411,     0,   413,   414,   415,   416,   417,     0,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,   425,   426,
     427,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,     0,     0,   438,   439,   440,   441,   442,
     443,   444,     0,   445,     0,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   498,     0,   547,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,     0,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,     0,   246,     0,     0,
     249,     0,   251,   252,   253,   254,   255,     0,     0,   256,
       0,   258,     0,     0,   260,   261,   262,     0,     0,   263,
     264,   265,   266,   267,   500,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,     0,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   297,     0,   298,   299,   300,   301,
     302,   303,     0,   304,   305,     0,     0,   306,   307,   308,
       0,     0,   309,   310,     0,   312,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,     0,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   502,   406,   407,   408,     0,
     409,   410,     0,   411,     0,   413,   414,   415,   416,   417,
       0,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,   425,   426,   427,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,     0,     0,   438,   439,
     440,   441,   442,   443,   444,     0,   445,     0,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,   554,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,     0,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,     0,
     246,     0,     0,   249,     0,   251,   252,   253,   254,   255,
       0,     0,   256,     0,   258,     0,     0,   260,   261,   262,
       0,     0,   263,   264,   265,   266,   267,   500,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   297,     0,   298,
     299,   300,   301,   302,   303,     0,   304,   305,     0,     0,
     306,   307,   308,     0,     0,   309,   310,     0,   312,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,     0,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   502,   406,
     407,   408,     0,   409,   410,     0,   411,     0,   413,   414,
     415,   416,   417,     0,   555,   419,     0,     0,   556,   421,
     422,   423,   424,     0,   425,   426,   427,   428,   429,   430,
     431,   432,     0,     0,   433,   434,   435,   436,   437,     0,
       0,   438,   439,   440,   441,   442,   443,   444,     0,   445,
       0,   447,   448,   449,   450,     0,     0,   451,     0,     0,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   498,     0,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   618,   223,     0,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,     0,   246,     0,     0,   249,     0,   251,   252,
     253,   254,   255,     0,     0,   256,     0,   258,     0,     0,
     260,   261,   262,     0,     0,   263,   264,   265,   266,   267,
     500,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
       0,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     297,     0,   298,   299,   300,   301,   302,   303,     0,   304,
     305,     0,     0,   306,   307,   308,     0,     0,   309,   310,
       0,   312,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,     0,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   502,   406,   407,   408,     0,   409,   410,     0,   411,
       0,   413,   414,   415,   416,   417,     0,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,   425,   426,   427,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,     0,     0,   438,   439,   440,   441,   442,   443,
     444,     0,   445,     0,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   498,     0,   579,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   621,   223,
       0,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,     0,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,     0,   246,     0,     0,   249,
       0,   251,   252,   253,   254,   255,     0,     0,   256,     0,
     258,     0,     0,   260,   261,   262,     0,     0,   263,   264,
     265,   266,   267,   500,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,     0,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   297,     0,   298,   299,   300,   301,   302,
     303,     0,   304,   305,     0,     0,   306,   307,   308,     0,
       0,   309,   310,     0,   312,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,     0,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   502,   406,   407,   408,     0,   409,
     410,     0,   411,     0,   413,   414,   415,   416,   417,     0,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,     0,     0,   438,   439,   440,
     441,   442,   443,   444,     0,   445,     0,   447,   448,   449,
     450,     0,     0,   451,     0,     0,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   625,   223,     0,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,     0,   246,
       0,     0,   249,     0,   251,   252,   253,   254,   255,     0,
       0,   256,     0,   258,     0,     0,   260,   261,   262,     0,
       0,   263,   264,   265,   266,   267,   500,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,     0,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   297,     0,   298,   299,
     300,   301,   302,   303,     0,   304,   305,     0,     0,   306,
     307,   308,     0,     0,   309,   310,     0,   312,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
       0,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   502,   406,   407,
     408,     0,   409,   410,     0,   411,     0,   413,   414,   415,
     416,   417,     0,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,   425,   426,   427,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,     0,     0,
     438,   439,   440,   441,   442,   443,   444,     0,   445,     0,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     498,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,     0,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,     0,   246,     0,     0,   249,     0,   251,   252,   253,
     254,   255,     0,     0,   256,     0,   258,     0,     0,   260,
     261,   262,     0,     0,   263,   264,   265,   266,   267,   500,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,     0,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   297,
       0,   298,   299,   300,   301,   302,   303,     0,   304,   305,
       0,     0,   306,   307,   308,     0,     0,   309,   310,     0,
     312,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,     0,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     502,   406,   407,   408,     0,   409,   410,     0,   411,     0,
     413,   414,   415,   416,   417,     0,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,   425,   426,   427,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,     0,     0,   438,   439,   440,   441,   442,   443,   444,
       0,   445,     0,   447,   448,   449,   450,     0,     0,   451,
       0,     0,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,   653,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,     0,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,     0,   246,     0,     0,   249,     0,
     251,   252,   253,   254,   255,     0,     0,   256,     0,   258,
       0,     0,   260,   261,   262,     0,     0,   263,   264,   265,
     266,   267,   500,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,     0,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   297,     0,   298,   299,   300,   301,   302,   303,
       0,   304,   305,     0,     0,   306,   307,   308,     0,     0,
     309,   310,     0,   312,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,     0,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   502,   406,   407,   408,     0,   409,   410,
       0,   411,     0,   413,   414,   415,   416,   417,     0,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,   425,
     426,   427,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,     0,     0,   438,   439,   440,   441,
     442,   443,   444,     0,   445,     0,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
    1146,   223,     0,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,     0,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,     0,   246,     0,
       0,   249,     0,   251,   252,   253,   254,   255,     0,     0,
     256,     0,   258,     0,     0,   260,   261,   262,     0,     0,
     263,   264,   265,   266,   267,   500,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,     0,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   297,     0,   298,   299,   300,
     301,   302,   303,     0,   304,   305,     0,     0,   306,   307,
     308,     0,     0,   309,   310,     0,   312,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,     0,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   502,   406,   407,   408,
       0,   409,   410,     0,   411,     0,   413,   414,   415,   416,
     417,     0,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,   425,   426,   427,   428,   429,   430,   431,   432,
       0,     0,   433,   434,   435,   436,   437,     0,     0,   438,
     439,   440,   441,   442,   443,   444,     0,   445,     0,   447,
     448,   449,   450,     0,     0,   451,     0,     0,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   498,
       0,   579,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,  1148,   223,     0,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
       0,   246,     0,     0,   249,     0,   251,   252,   253,   254,
     255,     0,     0,   256,     0,   258,     0,     0,   260,   261,
     262,     0,     0,   263,   264,   265,   266,   267,   500,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,     0,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   297,     0,
     298,   299,   300,   301,   302,   303,     0,   304,   305,     0,
       0,   306,   307,   308,     0,     0,   309,   310,     0,   312,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,     0,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   502,
     406,   407,   408,     0,   409,   410,     0,   411,     0,   413,
     414,   415,   416,   417,     0,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,   425,   426,   427,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
       0,     0,   438,   439,   440,   441,   442,   443,   444,     0,
     445,     0,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   498,     0,   579,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,  1556,   223,     0,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,     0,   246,     0,     0,   249,     0,   251,
     252,   253,   254,   255,     0,     0,   256,     0,   258,     0,
       0,   260,   261,   262,     0,     0,   263,   264,   265,   266,
     267,   500,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,     0,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   297,     0,   298,   299,   300,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
     310,     0,   312,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,     0,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   502,   406,   407,   408,     0,   409,   410,     0,
     411,     0,   413,   414,   415,   416,   417,     0,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,   425,   426,
     427,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,     0,     0,   438,   439,   440,   441,   442,
     443,   444,     0,   445,     0,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,  2304,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,     0,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,     0,   246,     0,     0,
     249,     0,   251,   252,   253,   254,   255,     0,     0,   256,
       0,   258,     0,     0,   260,   261,   262,     0,     0,   263,
     264,   265,   266,   267,   500,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,     0,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   297,     0,   298,   299,   300,   301,
     302,   303,     0,   304,   305,     0,     0,   306,   307,   308,
       0,     0,   309,   310,     0,   312,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,     0,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   502,   406,   407,   408,     0,
     409,   410,     0,   411,     0,   413,   414,   415,   416,   417,
       0,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,   425,   426,   427,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,     0,     0,   438,   439,
     440,   441,   442,   443,   444,     0,   445,     0,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,  2318,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,     0,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,     0,
     246,     0,     0,   249,     0,   251,   252,   253,   254,   255,
       0,     0,   256,     0,   258,     0,     0,   260,   261,   262,
       0,     0,   263,   264,   265,   266,   267,   500,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   297,     0,   298,
     299,   300,   301,   302,   303,     0,   304,   305,     0,     0,
     306,   307,   308,     0,     0,   309,   310,     0,   312,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,     0,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   502,   406,
     407,   408,     0,   409,   410,     0,   411,     0,   413,   414,
     415,   416,   417,     0,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,   425,   426,   427,   428,   429,   430,
     431,   432,     0,     0,   433,   434,   435,   436,   437,     0,
       0,   438,   439,   440,   441,   442,   443,   444,     0,   445,
       0,   447,   448,   449,   450,     0,     0,   451,     0,     0,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   498,     0,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,  2452,   223,     0,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,     0,   246,     0,     0,   249,     0,   251,   252,
     253,   254,   255,     0,     0,   256,     0,   258,     0,     0,
     260,   261,   262,     0,     0,   263,   264,   265,   266,   267,
     500,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
       0,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     297,     0,   298,   299,   300,   301,   302,   303,     0,   304,
     305,     0,     0,   306,   307,   308,     0,     0,   309,   310,
       0,   312,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,     0,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   502,   406,   407,   408,     0,   409,   410,     0,   411,
       0,   413,   414,   415,   416,   417,     0,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,   425,   426,   427,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,     0,     0,   438,   439,   440,   441,   442,   443,
     444,     0,   445,     0,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
       0,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,     0,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,     0,   246,     0,     0,   249,
       0,   251,   252,   253,   254,   255,     0,     0,   256,     0,
     258,     0,     0,   260,   261,   262,     0,     0,   263,   264,
     265,   266,   267,   500,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,     0,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   297,     0,   298,   299,   300,   301,   302,
     303,     0,   304,   305,     0,     0,   306,   307,   308,     0,
       0,   309,   310,     0,   312,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,     0,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   502,   406,   407,   408,     0,   409,
     410,     0,   411,     0,   413,   414,   415,   416,   417,     0,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,     0,     0,   438,   439,   440,
     441,   442,   443,   444,     0,   445,     0,   447,   448,   449,
     450,     0,     0,   451,     0,     0,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   566,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,     0,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,     0,   246,
       0,     0,   249,     0,   251,   252,   253,   254,   255,     0,
       0,   256,     0,   258,     0,     0,   260,   261,   567,     0,
       0,   263,   264,   265,   266,   267,   500,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,     0,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   297,     0,   298,   299,
     300,   301,   302,   303,     0,   304,   305,     0,     0,   306,
     307,   308,     0,     0,   309,   310,     0,   312,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   568,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   569,     0,   384,   385,   386,   387,   388,
       0,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   502,   406,   407,
     408,     0,   409,   410,     0,   411,     0,   413,   414,   415,
     416,   417,     0,   570,   419,     0,     0,   420,   421,   422,
     423,   424,     0,   425,   426,   427,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,     0,     0,
     438,   439,   440,   441,   442,   443,   444,     0,   445,     0,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,     0,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,     0,   246,     0,     0,   249,     0,   251,   252,   253,
     254,   255,     0,     0,   256,     0,   258,     0,     0,   260,
     261,   262,     0,     0,   263,   264,   265,   266,   267,   500,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,     0,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   297,
       0,   298,   299,   300,   301,   302,   303,     0,   304,   305,
       0,     0,   306,   307,   308,     0,     0,   309,   310,     0,
     312,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   589,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,     0,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     502,   406,   407,   408,     0,   409,   410,     0,   411,     0,
     413,   414,   415,   416,   417,     0,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,   425,   426,   427,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,     0,     0,   438,   439,   440,   441,   442,   443,   444,
       0,   445,     0,   447,   448,   449,   450,     0,     0,   451,
       0,     0,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   643,   223,     0,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,     0,   246,     0,     0,   249,     0,
     251,   252,   253,   254,   255,     0,     0,   256,     0,   258,
       0,     0,   260,   261,   262,     0,     0,   263,   264,   265,
     266,   267,   500,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,     0,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   297,     0,   298,   299,   300,   301,   302,   303,
       0,   304,   305,     0,     0,   306,   307,   308,     0,     0,
     309,   310,     0,   312,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,     0,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   502,   406,   407,   408,     0,   409,   410,
       0,   411,     0,   413,   414,   415,   416,   417,     0,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,   425,
     426,   427,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,     0,     0,   438,   439,   440,   441,
     442,   443,   444,     0,   445,     0,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,     0,
     199,     0,   200,   201,   202,   203,     0,   204,     0,   205,
       0,     0,     0,   208,   209,   210,     0,   212,     0,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     730,   223,     0,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,     0,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,     0,   246,     0,
       0,   249,     0,   251,   252,   253,   254,   255,     0,     0,
     256,     0,   258,     0,     0,   260,   261,   262,     0,     0,
     263,   264,   265,   266,   267,   500,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,     0,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   297,     0,   298,   299,   300,
     301,   302,   303,     0,   304,   305,     0,     0,   306,   307,
     308,     0,     0,   309,   310,     0,   312,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,     0,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   502,   406,   407,   408,
       0,   409,   410,     0,   411,     0,   413,   414,   415,   416,
     417,     0,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,   425,   426,   427,   428,   429,   430,   431,   432,
       0,     0,   433,   434,   435,   436,   437,     0,     0,   438,
     439,   440,   441,   442,   443,   444,     0,   445,     0,   447,
     448,   449,   450,     0,     0,   451,     0,     0,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,     0,   199,     0,   200,   201,   202,   203,     0,
     204,     0,   205,     0,     0,     0,   208,   209,   210,     0,
     212,     0,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   733,   223,     0,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
       0,   246,     0,     0,   249,     0,   251,   252,   253,   254,
     255,     0,     0,   256,     0,   258,     0,     0,   260,   261,
     262,     0,     0,   263,   264,   265,   266,   267,   500,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,     0,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   297,     0,
     298,   299,   300,   301,   302,   303,     0,   304,   305,     0,
       0,   306,   307,   308,     0,     0,   309,   310,     0,   312,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,     0,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   502,
     406,   407,   408,     0,   409,   410,     0,   411,     0,   413,
     414,   415,   416,   417,     0,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,   425,   426,   427,   428,   429,
     430,   431,   432,     0,     0,   433,   434,   435,   436,   437,
       0,     0,   438,   439,   440,   441,   442,   443,   444,     0,
     445,     0,   447,   448,   449,   450,     0,     0,   451,     0,
       0,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,     0,   199,     0,   200,   201,
     202,   203,     0,   204,     0,   205,     0,     0,     0,   208,
     209,   210,     0,   212,     0,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   736,   223,     0,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,     0,   246,     0,     0,   249,     0,   251,
     252,   253,   254,   255,     0,     0,   256,     0,   258,     0,
       0,   260,   261,   262,     0,     0,   263,   264,   265,   266,
     267,   500,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,     0,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   297,     0,   298,   299,   300,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
     310,     0,   312,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,     0,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   502,   406,   407,   408,     0,   409,   410,     0,
     411,     0,   413,   414,   415,   416,   417,     0,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,   425,   426,
     427,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,     0,     0,   438,   439,   440,   441,   442,
     443,   444,     0,   445,     0,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,     0,   199,
       0,   200,   201,   202,   203,     0,   204,     0,   205,     0,
       0,     0,   208,   209,   210,     0,   212,     0,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,     0,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,     0,   246,     0,     0,
     249,     0,   251,   252,   253,   254,   255,     0,     0,   256,
       0,   258,     0,     0,   260,   261,   262,     0,     0,   263,
     264,   265,   266,   267,   500,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,     0,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   297,     0,   298,   299,   300,   301,
     302,   303,     0,   304,   305,     0,     0,   306,   307,   308,
       0,     0,   309,   310,     0,   312,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   568,
     373,   374,   375,   376,   377,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,     0,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   502,   406,   407,   408,     0,
     409,   410,     0,   411,     0,   413,   414,   415,   416,   417,
       0,   570,   419,     0,     0,   420,   421,   422,   423,   424,
       0,   425,   426,   427,   428,   429,   430,   431,   432,     0,
       0,   433,   434,   435,   436,   437,     0,     0,   438,   439,
     440,   441,   442,   443,   444,     0,   445,     0,   447,   448,
     449,   450,     0,     0,   451,     0,     0,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,  1383,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,     0,   199,     0,   200,   201,   202,   203,     0,   204,
       0,   205,     0,     0,     0,   208,   209,   210,     0,   212,
       0,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,     0,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,     0,
     246,     0,     0,   249,     0,   251,   252,   253,   254,   255,
       0,     0,   256,     0,   258,     0,     0,   260,   261,   262,
       0,     0,   263,   264,   265,   266,   267,   500,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   297,     0,   298,
     299,   300,   301,   302,   303,     0,   304,   305,     0,     0,
     306,   307,   308,     0,     0,   309,   310,     0,   312,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,     0,
     379,   380,   381,   382,   383,     0,     0,   385,   386,   387,
     388,     0,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   502,   406,
     407,   408,     0,   409,   410,     0,   411,     0,   413,   414,
     415,   416,   417,     0,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,   425,   426,   427,   428,   429,   430,
     431,   432,     0,     0,   433,   434,   435,   436,   437,     0,
       0,   438,   439,   440,   441,   442,   443,   444,     0,   445,
       0,   447,   448,   449,   450,     0,     0,   451,     0,     0,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,     0,   199,     0,   200,   201,   202,
     203,     0,   204,     0,   205,     0,     0,     0,   208,   209,
     210,     0,   212,     0,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,  1518,   223,     0,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,     0,   246,     0,     0,   249,     0,   251,   252,
     253,   254,   255,     0,     0,   256,     0,   258,     0,     0,
     260,   261,   262,     0,     0,   263,   264,   265,   266,   267,
     500,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
       0,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     297,     0,   298,   299,   300,   301,   302,   303,     0,   304,
     305,     0,     0,   306,   307,   308,     0,     0,   309,   310,
       0,   312,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,     0,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   502,   406,   407,   408,     0,   409,   410,     0,   411,
       0,   413,   414,   415,   416,   417,     0,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,   425,   426,   427,
     428,   429,   430,   431,   432,     0,     0,   433,   434,   435,
     436,   437,     0,     0,   438,   439,   440,   441,   442,   443,
     444,     0,   445,     0,   447,   448,   449,   450,     0,     0,
     451,     0,     0,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,     0,   199,     0,
     200,   201,   202,   203,     0,   204,     0,   205,     0,     0,
       0,   208,   209,   210,     0,   212,     0,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,  1799,   223,
       0,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,     0,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,     0,   246,     0,     0,   249,
       0,   251,   252,   253,   254,   255,     0,     0,   256,     0,
     258,     0,     0,   260,   261,   262,     0,     0,   263,   264,
     265,   266,   267,   500,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,     0,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   297,     0,   298,   299,   300,   301,   302,
     303,     0,   304,   305,     0,     0,   306,   307,   308,     0,
       0,   309,   310,     0,   312,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,     0,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   502,   406,   407,   408,     0,   409,
     410,     0,   411,     0,   413,   414,   415,   416,   417,     0,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,     0,     0,   438,   439,   440,
     441,   442,   443,   444,     0,   445,     0,   447,   448,   449,
     450,     0,     0,   451,     0,     0,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
       0,   199,     0,   200,   201,   202,   203,     0,   204,     0,
     205,     0,     0,     0,   208,   209,   210,     0,   212,     0,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,  1811,   223,     0,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,     0,   246,
       0,     0,   249,     0,   251,   252,   253,   254,   255,     0,
       0,   256,     0,   258,     0,     0,   260,   261,   262,     0,
       0,   263,   264,   265,   266,   267,   500,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,     0,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   297,     0,   298,   299,
     300,   301,   302,   303,     0,   304,   305,     0,     0,   306,
     307,   308,     0,     0,   309,   310,     0,   312,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
       0,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   502,   406,   407,
     408,     0,   409,   410,     0,   411,     0,   413,   414,   415,
     416,   417,     0,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,   425,   426,   427,   428,   429,   430,   431,
     432,     0,     0,   433,   434,   435,   436,   437,     0,     0,
     438,   439,   440,   441,   442,   443,   444,     0,   445,     0,
     447,   448,   449,   450,     0,     0,   451,     0,     0,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   113,   114,     0,   116,   117,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,     0,   199,     0,   200,   201,   202,   203,
       0,   204,     0,   205,     0,     0,     0,   208,   209,   210,
       0,   212,     0,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,  1813,   223,     0,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,     0,   246,     0,     0,   249,     0,   251,   252,   253,
     254,   255,     0,     0,   256,     0,   258,     0,     0,   260,
     261,   262,     0,     0,   263,   264,   265,   266,   267,   500,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,     0,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   297,
       0,   298,   299,   300,   301,   302,   303,     0,   304,   305,
       0,     0,   306,   307,   308,     0,     0,   309,   310,     0,
     312,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,     0,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     502,   406,   407,   408,     0,   409,   410,     0,   411,     0,
     413,   414,   415,   416,   417,     0,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,   425,   426,   427,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,     0,     0,   438,   439,   440,   441,   442,   443,   444,
       0,   445,     0,   447,   448,   449,   450,     0,     0,   451,
       0,     0,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,     0,   199,     0,   200,
     201,   202,   203,     0,   204,     0,   205,     0,     0,     0,
     208,   209,   210,     0,   212,     0,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,     0,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,     0,   246,     0,     0,   249,     0,
     251,   252,   253,   254,   255,     0,     0,   256,     0,   258,
       0,     0,   260,   261,   262,     0,     0,   263,   264,   265,
     266,   267,   500,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,     0,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   297,     0,   298,   299,   300,   301,   302,   303,
       0,   304,   305,     0,     0,   306,   307,   308,     0,     0,
     309,   310,     0,   312,     0,   314,   315,   316,   317,   318,
     319,   320,     0,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,     0,   342,   343,   344,   345,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,     0,   364,
     365,   366,   367,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,     0,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   502,   406,   407,   408,     0,   409,   410,
       0,   411,     0,   413,   414,   415,   416,   417,     0,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,   425,
     426,   427,   428,   429,   430,   431,   432,     0,     0,   433,
     434,   435,   436,   437,     0,     0,   438,   439,   440,   441,
     442,   443,   444,     0,   445,     0,   447,   448,   449,   450,
       0,     0,   451,     0,     0,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   661,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,   662,   110,   111,
     112,     0,   663,   664,   665,   666,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   667,   668,   128,
       0,   129,   130,   131,   132,     0,     0,   669,     0,   135,
     136,   137,   138,   139,   140,   670,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   671,   152,   153,
     154,     0,     0,     0,   672,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   673,   674,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   675,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,     0,   194,   195,   196,   197,     0,     0,
     199,     0,   200,   201,   676,   203,     0,   204,     0,   205,
     677,     0,   678,   208,   209,   210,   679,   212,     0,   213,
       0,     0,     0,   216,     0,   217,   218,   219,   220,   221,
     680,   223,   681,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   682,     0,   238,   239,
     240,   241,   242,   683,   684,     0,   685,     0,   246,   686,
     687,   249,   688,   251,   252,   253,   254,   255,     0,     0,
     256,   689,   258,   690,     0,   260,   261,   262,     0,     0,
     263,   264,   265,   266,   267,   691,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   692,   693,   694,   290,   291,   292,
       0,     0,   294,   295,   695,   297,     0,     0,   299,   696,
     301,   302,   303,     0,   304,   305,     0,     0,   306,   307,
     308,     0,     0,   309,     0,   697,   312,   698,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,     0,   328,   329,     0,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   699,
     344,   345,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   700,   364,   365,   366,   701,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   702,   386,   387,   388,   703,
     390,   391,   704,   393,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   705,   406,     0,   408,
       0,   409,   410,     0,   411,   706,   413,   414,   415,   416,
     417,     0,   707,   708,     0,     0,   420,   421,     0,   423,
       0,     0,   425,   426,   709,   428,   429,   430,   431,   432,
       0,     0,   433,   434,   435,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   710,     0,   445,   711,   447,
     448,   449,   450,     0,     0,   451,     0,     0,   452,   453,
     454,   455,   456,   457,   661,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   469,   470,   471,   472,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   662,   110,   111,   112,     0,
     663,   664,   665,   666,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   667,   668,   128,     0,   129,
     130,   131,   132,     0,     0,   669,     0,   135,   136,   137,
     138,   139,   140,   670,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   671,   152,   153,   154,     0,
       0,     0,   672,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   673,   674,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   675,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,     0,   194,   195,   196,   197,     0,     0,   199,     0,
     200,   201,   676,   203,     0,   204,     0,   205,   677,     0,
     678,   208,   209,   210,   679,   212,     0,   213,     0,     0,
       0,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     681,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   682,     0,   238,   239,   240,   241,
     242,   683,   684,     0,   685,     0,   246,   686,   687,   249,
     688,   251,   252,   253,   254,   255,     0,     0,   256,   689,
     258,   690,     0,   260,   261,   262,     0,     0,   263,   264,
     265,   266,   267,   691,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   692,   693,   694,   290,   291,   292,     0,     0,
     294,   295,   695,   297,     0,     0,   299,   696,   301,   302,
     303,     0,   304,   305,     0,     0,   306,   307,   308,     0,
       0,   309,     0,   697,   312,   698,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
       0,   328,   329,     0,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   699,   344,   345,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   700,
     364,   365,   366,   701,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   702,   386,   387,   388,   703,   390,   391,
     704,   393,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   705,   406,     0,   408,     0,   409,
     410,     0,   411,   706,   413,   414,   415,   416,   417,     0,
     707,   708,     0,     0,   420,   421,     0,   423,     0,     0,
     425,   426,   709,   428,   429,   430,   431,   432,     0,     0,
     433,   434,   435,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   710,     0,   445,   711,   447,   448,   449,
     450,     0,     0,   451,     0,     0,   452,   453,   454,   455,
     456,   457,  2390,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   469,   470,   471,   472,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,  2391,   110,   111,   112,     0,   663,  2392,
     665,   666,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   667,   668,   128,     0,   129,   130,   131,
     132,     0,     0,  2393,     0,   135,   136,   137,   138,   139,
     140,  2394,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,  2395,   152,   153,   154,     0,     0,     0,
    2396,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   673,   674,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   675,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,     0,
     194,   195,   196,   197,     0,     0,   199,     0,   200,   201,
     676,   203,     0,   204,     0,   205,  2397,     0,  2398,   208,
     209,   210,  2399,   212,     0,   213,     0,     0,     0,   216,
       0,   217,   218,   219,   220,   221,   222,   223,  2400,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,  2401,     0,   238,   239,   240,   241,   242,   683,
     684,     0,   685,     0,   246,  2402,  2403,   249,  2404,   251,
     252,   253,   254,   255,     0,     0,   256,  2405,   258,  2406,
       0,   260,   261,   262,     0,     0,   263,   264,   265,   266,
     267,  2600,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     692,  2408,   694,   290,   291,   292,     0,     0,   294,   295,
    2410,   297,     0,     0,   299,   696,   301,   302,   303,     0,
     304,   305,     0,     0,   306,   307,   308,     0,     0,   309,
       0,  2412,   312,  2413,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,     0,   328,
     329,     0,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   699,   344,   345,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,  2414,   364,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,     0,   379,   380,   381,   382,   383,     0,
     384,     0,   386,   387,   388,  2416,   390,   391,   704,   393,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,  2601,   406,     0,   408,     0,   409,   410,     0,
     411,  2418,   413,   414,   415,   416,   417,     0,   707,   708,
       0,     0,   420,   421,     0,   423,     0,     0,   425,   426,
    2419,   428,   429,   430,   431,   432,     0,     0,   433,   434,
     435,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   710,     0,   445,  2420,   447,   448,   449,   450,     0,
       0,   451,     0,     0,   452,   453,   454,   455,   456,   457,
     661,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   469,   470,   471,   472,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   662,   110,   111,   112,     0,   663,   664,   665,   666,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   667,   668,   128,     0,   129,   130,   131,   132,     0,
       0,   669,     0,   135,   136,   137,   138,   139,   140,   670,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   671,   152,   153,   154,     0,     0,     0,   672,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   673,
     674,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   675,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,     0,   194,   195,
     196,   197,     0,     0,   199,     0,   200,   201,   676,   203,
       0,   204,     0,   205,   677,     0,   678,   208,   209,   210,
     679,   212,     0,   213,     0,     0,     0,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   681,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     682,     0,   238,   239,   240,   241,   242,   683,   684,     0,
     685,     0,   246,   686,   687,   249,   688,   251,   252,   253,
     254,   255,     0,     0,   256,   689,   258,   690,     0,   260,
     261,   262,     0,     0,   263,   264,   265,   266,   267,     0,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   692,   693,
     694,   290,   291,   292,     0,     0,   294,   295,   695,   297,
       0,     0,   299,   696,   301,   302,   303,     0,   304,   305,
       0,     0,   306,   307,   308,     0,     0,   309,     0,   697,
     312,   698,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,     0,   328,   329,     0,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   699,   344,   345,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   700,   364,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   379,   380,   381,   382,   383,     0,   384,     0,
     386,   387,   388,   703,   390,   391,   704,   393,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
       0,   406,     0,   408,     0,   409,   410,     0,   411,   706,
     413,   414,   415,   416,   417,     0,   707,   708,     0,     0,
     420,   421,     0,   423,     0,     0,   425,   426,   709,   428,
     429,   430,   431,   432,     0,     0,   433,   434,   435,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   710,
       0,   445,   711,   447,   448,   449,   450,     0,     0,   451,
       0,     0,   452,   453,   454,   455,   456,   457,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   469,
     470,   471,   472
};

static const yytype_int16 yycheck[] =
{
       6,     6,   622,   492,   529,   637,    74,     0,   629,   588,
     615,     0,   535,   702,    36,   526,   565,    16,   583,    20,
      21,   999,     0,    16,   799,   972,   732,   799,   734,  1809,
       6,   997,     0,   879,  1141,     0,  1141,  1141,  1172,   528,
    1141,   881,   708,   631,  1228,    31,   533,   977,  1275,  1815,
    1737,  1817,    76,   944,   622,  1177,   624,   897,   626,   974,
     534,  1038,    76,  1304,  1305,    30,   535,  2147,  2174,   909,
       0,  1630,  1631,  1693,    35,  2189,  1635,  2147,  2175,  1757,
    1806,  2185,    21,  2057,   667,   668,  2099,  1002,  1256,   807,
       5,    56,  2009,     5,  1853,  1854,  1855,     5,     5,     9,
    1357,     0,     5,    89,   537,    13,    14,  2464,     5,    50,
    2063,   694,     5,     5,    73,     5,     0,  1676,  1677,  2460,
       5,    13,    14,  1407,    58,     5,     5,     5,    13,    14,
       5,     9,  1142,    13,    14,    58,     0,     5,    13,    14,
      93,     9,   917,     5,     5,  1409,     5,    13,    14,     5,
     168,     5,    16,   612,  1880,   642,     5,     5,    27,   738,
    2513,     3,   612,    83,   960,    34,    30,   169,  2447,    40,
      40,    11,    36,     3,     4,     5,     4,     9,   145,     9,
      11,     9,    11,    48,  1270,   117,    27,    75,  1270,    31,
      32,    67,    56,    34,    93,   137,  2549,   214,    86,     4,
     866,    41,   168,    15,     9,    27,    27,   127,    58,    93,
      41,   986,    76,    34,   989,   990,  2088,   122,  2062,  1945,
    1946,   305,  1997,   281,    58,   169,   174,   305,   220,  1270,
     283,  2535,  2635,    73,  2429,   289,   117,   120,   220,    75,
    2697,   168,    73,   826,   827,   212,  2558,  2377,   289,   269,
      86,  2736,  2604,    68,   352,  2804,    78,   120,   373,   117,
      59,   272,   188,   120,   107,    87,    27,  2579,    67,   852,
      11,   169,   135,   162,   266,   353,   799,    11,    27,  2620,
     799,  2118,  2635,   806,   266,   115,   234,   806,  2892,   165,
     107,   118,  1010,    11,   116,   435,   985,    11,   877,  1017,
     118,   435,    37,   147,   115,   203,   158,    41,   173,   160,
    2867,  2070,  2869,   108,   399,   451,   343,   882,  1733,   490,
     201,   219,   289,   494,   189,   167,   130,   169,   802,   194,
     228,   413,   454,  1748,  2308,  2415,   924,  2117,  2312,    73,
     108,   324,    30,   325,   371,   910,  2299,  2832,  1968,   434,
     207,   195,   492,  2459,  2958,    73,   478,   301,   492,  2456,
     496,  2198,  2911,   190,   186,   230,    54,   378,  2672,   130,
     353,   936,   190,   224,   893,   457,   198,   492,  2735,   231,
     300,   130,   374,   213,   283,   266,  2943,   268,  2114,   124,
    2116,   970,   374,   208,   492,   492,   919,   920,   917,   283,
     919,   920,    58,   487,   234,  2717,  2863,  2602,  1270,   487,
     344,   364,  2765,   433,   939,   273,   342,  1976,  1977,  1978,
    1979,   344,   311,  1982,  1983,  1984,  1985,  1986,  1987,  1988,
    1989,  1990,  1991,   377,   492,   234,  1154,     0,  1043,   492,
     316,   433,   496,  2573,  2929,   411,   345,   400,  2801,   266,
     348,   433,   315,  2732,  2298,   496,   404,  2232,   406,  1545,
     427,   345,   273,  1545,  1546,  1547,  1693,   986,  1728,  1729,
     989,   990,   495,  2345,   278,  2034,  2035,  2834,   496,   496,
    1427,  1277,   294,   431,   411,   405,  1770,  2890,   441,   482,
     492,  2217,  2833,   482,   344,   388,   389,  1507,  1739,  2613,
     933,   454,  1759,  1544,   482,   437,  1483,  1771,   450,   968,
     344,   376,   381,   535,   482,   481,    11,   482,   968,  1151,
     526,  1142,  2874,   411,  2604,   478,   397,   397,   494,   535,
     435,   490,   444,  1511,  2604,   494,   535,  2890,  1765,   492,
     381,   534,   543,  2847,   545,   546,    41,   615,  2522,   456,
     433,   492,   428,  2527,   578,   454,  2530,   400,   564,   565,
     381,  2514,   496,   496,   578,   387,   456,   568,   390,   339,
     454,   478,  2489,   496,  2354,   411,   433,   492,    73,  1747,
     492,   491,   588,   492,   492,   492,  1165,   586,   478,   492,
    1173,  1174,   240,   490,   493,   492,   495,   494,   115,  1395,
     492,  2367,   492,   445,   597,  1582,   545,   492,   597,   493,
     266,   495,   492,   492,   492,   160,   602,   492,   482,   597,
     445,   627,   628,   629,   492,  1246,   492,  2741,   589,   597,
     492,   492,   597,   492,  1352,  2739,   492,  2734,   492,   197,
    2055,   197,  2057,   492,   492,   485,   486,   487,   488,   454,
    1169,   483,   484,   483,   484,   483,   484,   488,   247,   488,
    1171,  1180,   496,  1182,   329,  2343,   106,   597,  1187,   186,
     534,   535,  1260,   478,    31,    32,    13,    14,   483,   484,
    1259,  1456,  1261,  1545,  1546,  1204,  1265,  2446,   344,   158,
     158,  1466,  1313,  2667,  1469,   163,   702,  1222,  1882,  1278,
    1279,   490,  1281,   240,   416,   494,  1217,  1230,   481,   357,
     240,  1299,  1300,   240,   578,   371,  1235,  1236,   456,   240,
     265,   494,  1301,  2449,   268,   130,  1291,  2347,   456,   273,
    1219,  1220,   738,   597,  1355,   400,    93,  1226,     4,   447,
     478,  1968,  2839,     9,   485,   486,   487,   488,  1267,  1268,
     478,   268,  1271,  1272,   492,  1229,  1344,  1970,   360,   456,
     158,  1230,   231,   231,   492,   163,  1354,   329,  1356,   483,
     484,   485,   486,   487,   488,   404,  2017,   406,  2884,   323,
    2560,   478,   447,   431,  1906,  1998,  2046,  2047,  2048,  2049,
    1912,     4,  1567,   799,  2874,  1567,     9,  1308,   799,   357,
     806,   807,   808,   365,  2874,   806,   246,   365,   404,   802,
     406,   280,   280,  1659,   254,    23,   492,  1657,   824,    24,
     357,    29,  1528,  1444,   487,    30,   163,  1316,     5,   364,
     357,   494,  1452,   231,  1630,  1631,   357,  2317,   400,  1635,
    2320,   481,   400,  1549,   492,  1551,   115,   853,  1554,    94,
    1741,    56,   492,    75,   487,  1833,   878,  1425,   109,   110,
    2957,   494,   492,   268,    86,   400,    75,   873,   874,   875,
     475,   877,   878,   278,  1479,  1480,  1481,    86,   218,  1856,
    1676,  1677,   280,   884,  1452,   447,  1507,  1406,  1407,   447,
     494,   240,   893,  2308,   431,   901,  2030,  2312,   283,  2912,
    2913,   431,     4,  1471,   431,   906,   441,     9,  1476,   496,
     431,   498,     4,   919,   920,   329,   917,     9,   919,   920,
    2147,  1761,  2702,  2482,   169,  1436,  1841,   135,   493,   953,
     954,   496,   956,   184,   185,    64,    65,  1456,   802,   953,
     954,  2707,   956,   145,   252,   253,  1525,  1466,  2961,   955,
    1469,   365,   475,   959,   960,   492,   158,   492,   203,   945,
     485,   163,   492,  1893,   970,   492,  1896,   566,   567,    23,
     569,   492,     8,  1462,   219,    11,   840,   167,  1467,   985,
      16,    17,    18,   228,   493,   496,   400,   496,   483,   484,
     485,   486,   487,   488,   454,   492,   456,   248,   249,   250,
     251,   252,   253,   493,  1010,   256,   257,   364,   357,   493,
     212,  1017,  2571,  1500,   878,  1001,   490,   262,   492,  1572,
     494,  1540,  1541,  1576,   168,  1578,  2210,   296,  1539,   231,
     214,   493,  1038,   447,   496,   218,   184,   185,  1644,   493,
    1646,  1647,   496,   400,  1567,    23,    23,   493,  1567,   475,
     496,    29,    29,   361,   362,   492,    86,  1580,    88,   493,
      90,  1580,   496,    13,    14,  1644,  1645,  1646,  1647,  2176,
     150,  2176,  2176,  1584,   493,  2176,   337,   496,   280,   287,
    2639,   135,   431,   493,   441,    54,   496,   289,   445,   953,
     954,   493,   956,    23,   496,   364,   493,   454,  2513,    29,
     150,   240,  1681,   348,   252,   253,  1812,  2522,  1814,   150,
     361,   362,  2527,  2800,     8,  2530,   493,    11,   150,   496,
    2347,   478,    16,    17,    18,    13,    14,  1652,   149,     8,
    1735,   400,    11,   341,  2549,   492,  1142,    16,    17,    18,
     404,  2275,   406,   492,   492,    23,   493,   268,  1154,   496,
    2128,    29,   493,     5,    33,   496,     8,   135,   135,  1165,
     494,  2127,    14,   371,  1936,  1171,  1172,  2947,  2115,    13,
      14,   493,   441,    25,   496,   493,   493,    29,   496,   496,
    1976,  1977,  1978,  1979,   447,   454,  1982,  1983,  1984,  1985,
    1986,  1987,  1988,  1989,  1990,  1991,  2126,   145,  2128,   493,
      13,    14,   496,  2169,  2891,   135,    23,    36,    36,   478,
     158,  1217,    29,   361,   362,   163,    13,    14,   357,  1738,
    2635,   472,   473,   492,  1230,   427,    55,  2914,    13,    14,
     438,  1230,   674,   287,   493,   130,  1229,   496,  2034,  2035,
    1246,   492,    82,  1875,  1910,  1911,  2086,    13,    14,   285,
    1769,  1770,  2667,  1259,   696,  1261,   492,   135,  1264,  1265,
     458,   156,   493,  1256,   212,   496,   444,  1256,  1274,  1270,
    1276,  1277,  1278,  1279,  1280,  1281,  1282,   106,  1256,   609,
     492,   611,  2969,   231,   726,    13,    14,   341,  1256,   343,
     493,  1256,   431,   496,   404,  1301,   406,  1303,   493,    67,
     194,   496,  1308,  1309,  1310,  1311,  1312,  1313,   312,   287,
     287,  1317,  1318,  1934,    13,    14,  1322,   371,   135,  2313,
    1326,  2315,   216,  1329,  1330,  1331,  1332,  1333,  1334,  1335,
    1336,  1337,   280,   493,  1340,   493,   496,   216,   496,  1345,
     492,   289,  1348,   364,  1350,   150,  1352,   115,    35,  1355,
    2765,  2485,   493,   492,   492,   496,   492,   287,   493,   337,
     337,   496,  1363,   341,   341,  1229,   492,   196,   493,  1375,
     150,   496,  2147,  1372,    13,    14,   150,  2604,   273,   400,
     150,  1892,   493,   278,   493,   496,  2801,   496,  1907,  1395,
     283,   285,  1256,   371,   371,  1277,   838,    13,    14,   493,
    1406,  1407,   496,   400,   172,  2383,   285,   337,  2355,   287,
     492,   341,   493,  1936,   856,   496,  1381,   246,   493,   493,
     441,   496,   496,    36,  2012,   254,  2005,   229,   493,   493,
    1436,   496,   496,   454,    13,    14,  1442,   266,  1444,   492,
    1929,   371,   490,   479,   480,   481,  1957,   483,   484,   485,
     486,   487,   488,   483,   149,  1319,     5,   478,  2304,   337,
     438,   438,   493,   341,  1975,   496,     5,   497,   297,   296,
     287,   492,  2318,   493,   492,  2890,   496,  1483,   492,   427,
    1486,  1487,   493,  1489,   493,   496,   163,   496,   493,  2000,
     492,   496,   493,   371,   493,   496,  2007,   496,    13,    14,
     268,  1507,  2067,  2209,   492,   273,  2640,  2095,   438,   493,
      13,    14,   496,  1395,   343,   130,   492,  1381,  1524,  1525,
     337,   492,    23,   418,   341,  2146,   493,  2148,    29,   496,
      13,    14,    67,  1539,   429,   492,   365,   364,    73,     5,
     493,   156,   490,   496,   493,   493,   494,   496,   316,  1514,
     580,    86,   493,   492,   371,   496,   385,  2162,     5,   493,
     438,  1567,   496,   331,   493,   493,  1567,   496,   496,   599,
    1571,     5,   493,   400,  1580,   496,  1582,   492,  1584,  1580,
     115,   493,   117,  1589,   496,   479,   480,   481,  1594,   483,
     484,   485,   486,   487,   488,   493,    13,    14,   496,  2374,
     479,   480,   481,   492,   483,   484,   485,   486,   487,   488,
    1632,     5,   493,   493,   441,   496,   496,   492,   648,   649,
     650,   438,    13,    14,  1630,  1631,  1632,   454,  2147,  1635,
      13,    14,    13,    14,   135,   492,  2147,   172,  1644,  1645,
    1646,  1647,    13,    14,  2610,    13,    14,  2874,  1654,   492,
    1514,   478,  1658,   268,   492,  1661,   352,   353,   273,  1681,
     428,    13,    14,   278,   493,   492,   201,   435,   492,   364,
    1676,  1677,    13,    14,   492,  1681,   352,   353,   256,   257,
    2386,  2387,     6,   361,   362,   492,  2482,    11,   492,  1695,
     146,    15,  1698,   492,  1700,  2206,    20,    21,    22,    23,
      24,   352,   353,    27,  2476,   400,    30,    31,     9,     8,
      34,    35,    11,   492,   364,  1721,   455,    16,    17,    18,
     352,   353,   919,   920,    15,   214,  2415,  1733,  1733,   496,
    1752,    97,    56,   268,    33,   371,  2324,    94,   273,    36,
     163,   229,  1748,  1748,   280,   163,   441,   278,  1630,  1631,
     400,  2339,   492,  1635,  1747,   411,  1762,  1733,  1747,   454,
     492,    86,    86,    87,    88,    89,    90,   496,  1632,  1747,
     411,    54,  1748,  1779,  1780,  2571,    11,    54,   411,  1747,
      15,   316,  1747,   478,   174,  2334,   287,   259,    23,   411,
     493,   441,  1798,   501,  1676,  1677,   331,   492,    93,    34,
      35,   411,   454,   418,   454,   150,   494,   197,   142,  1815,
    1816,  1817,   169,     8,   429,   268,    11,  1681,   268,    36,
    1821,    16,    17,    18,   492,    36,   492,     9,   478,  2604,
      35,   490,   409,   409,   496,  1699,   337,   490,    33,   411,
     341,   411,   492,  2639,   234,   411,   203,   411,   450,   492,
    1856,  1715,    87,    11,   339,  2374,   496,   491,   496,   501,
    2379,   409,   219,   492,   273,  1866,   492,   411,   177,  1733,
     371,   228,   159,   493,  2385,   168,   435,    36,  1879,   212,
     492,   374,   496,  1747,  1748,   220,  1892,   284,  1752,   305,
     305,   921,   496,   428,   492,   268,   289,   220,   288,   220,
     435,   321,  2421,  2422,   281,   262,   447,   492,   492,   150,
     150,   454,   268,   283,   475,   475,   946,   216,   493,   490,
     493,   283,   268,    36,     8,   493,   283,    11,  1934,    36,
    1936,   493,    16,    17,    18,  1936,   493,   438,   491,   493,
    1941,   971,  1943,   493,   168,   475,  1947,  1948,  1954,    33,
    2928,  1957,   494,  2476,   984,   493,     8,  1963,   168,    11,
    1966,   493,   411,  1969,    16,    17,    18,  1932,   493,  1975,
    1976,  1977,  1978,  1979,  2042,  1005,  1982,  1983,  1984,  1985,
    1986,  1987,  1988,  1989,  1990,  1991,   285,  2009,   493,  1995,
    1996,   348,   451,   493,  2000,   493,   493,   493,   492,  2005,
     492,  2007,   492,  2009,   293,   492,   451,   283,   441,   477,
     481,   284,  2018,   284,   404,  2021,   406,  2023,  2040,   284,
     433,   216,   496,   239,  2030,  2031,   411,   492,  2034,  2035,
     268,   150,   197,  2039,  2040,  2057,   287,   411,   428,   150,
     150,   431,   411,   275,  2649,   275,   411,   411,   491,  2055,
    2055,  2057,  2057,   493,   492,   454,   493,   496,   281,    36,
     150,   283,  2068,   491,   491,   150,   273,   141,  1932,   168,
      11,   163,  2078,   168,  2593,  2594,   451,   168,   435,  2055,
    2569,  2057,  2703,   493,   492,  2604,  2718,   493,  2094,   493,
     285,   493,   400,  2604,  1976,  1977,  1978,  1979,   496,  2874,
    1982,  1983,  1984,  1985,  1986,  1987,  1988,  1989,  1990,  1991,
       8,   478,   177,    11,   493,  1145,   345,   493,    16,    17,
      18,   440,    84,   284,   150,   172,   422,    36,    79,  2654,
     493,   492,   216,   492,   168,   493,  2142,   435,   493,   492,
    2146,  2147,  2148,   493,   491,  2009,  2147,  2672,   496,   492,
     402,   219,  2034,  2035,   496,    36,   493,   493,   292,   483,
    2671,   492,   492,  2674,   216,   489,   493,   493,   492,   219,
     492,  2172,   492,   497,    55,  2807,  2040,   501,   493,    54,
     479,   480,   481,  2762,   483,   484,   485,   486,   487,   488,
     290,  2055,   181,  2057,   454,   481,   199,   187,  1228,   493,
    2206,   285,   273,   273,   528,   529,   530,  2786,   411,  2788,
       3,   411,     5,   494,   494,   494,   494,  2223,    36,   494,
     494,   545,   494,   268,   494,   106,   494,   494,   494,   107,
     494,   494,  2197,   285,   481,  2724,   494,   494,     8,   494,
     564,   565,   566,   567,   494,   569,    16,    17,    18,   494,
     494,   494,  2873,  2778,   283,   494,   580,   494,   494,  2879,
     494,   494,   493,  2269,  2270,   589,   501,   494,  2274,  2275,
     454,   492,    36,  2279,   494,   599,  2282,  2283,   602,   494,
     492,  2287,   168,   492,   479,   480,   481,   302,   483,   484,
     485,   486,   487,   488,   492,   530,   219,   453,   492,   131,
      86,   493,  2308,  2308,   331,    50,  2312,  2312,   220,   492,
      81,   492,   115,  2802,    36,   196,   109,   110,   216,  1349,
     150,    73,   493,   122,   648,   649,   650,   150,  2334,    36,
    2331,   493,  2308,  2197,   353,   353,  2312,    54,    36,   492,
     492,  1371,   492,  1373,   492,   492,   435,   496,    73,    36,
      95,   186,   440,   435,   589,  2874,   422,    67,   286,    67,
     492,  2367,   492,  2874,    36,   246,   371,   496,   355,   481,
    2376,  2336,  2337,   254,   273,   186,   121,   244,   492,  2385,
     422,    36,   286,   492,   286,   266,   492,   285,   526,   493,
    1420,   184,   185,   266,   139,   479,   480,   481,   143,   483,
     484,   485,   486,   487,   488,   352,   493,   283,     9,  2415,
     199,   492,   338,   283,   283,    33,   297,   493,   120,   164,
     492,   433,   167,     9,    22,   597,   493,   479,   480,   481,
     526,   483,   484,   485,   486,   487,   488,   182,  2129,  2142,
    1450,  1810,  1230,  2338,  2308,  2092,  1373,  2801,  2312,  2545,
    2870,  2379,  2876,  2950,  2455,   248,   249,   250,   251,   252,
     253,  2710,   343,   256,   257,  2927,  2915,  1497,  1498,  2625,
    2476,  1804,  2336,  2337,  1816,  2476,  2482,   972,  2873,  2485,
    2190,  1868,  2925,  2489,   365,  2146,   170,  1801,   812,  2871,
     174,  2497,  2498,  2458,  2757,  2501,  2182,  1580,  1372,  1872,
    2172,  1934,  2476,   938,   385,  1762,   911,  2513,  2513,  1423,
    2775,   963,  2690,   197,   962,   285,  2522,  2522,  2861,  1779,
    2072,  2527,  2527,  1395,  2530,  2530,  2856,  2330,   273,  2790,
    1422,  2537,  2538,   965,  1748,  2057,   281,  2513,  2314,  2540,
    2299,  2668,  2055,  2549,  2549,  2551,  2522,  2765,  2764,  2782,
     234,  2527,  2783,  1270,  2530,   879,  1270,   241,  1270,  1270,
    2541,  2859,  2843,  2860,   702,  2571,  1659,  1261,   361,   362,
    1346,  1765,  1699,  2549,  1590,  1350,  1489,  1696,   323,  1736,
    2071,   479,   480,   481,  1876,   483,   484,   485,   486,   487,
     488,   945,  2093,    -1,  2458,  1219,    -1,   921,  2604,    -1,
    2482,    -1,  1171,  2604,   288,   526,   702,    -1,    -1,    -1,
     526,    -1,    -1,     8,   938,   939,    11,    -1,    -1,    -1,
      -1,   945,   946,   947,    -1,    -1,    -1,    -1,    -1,  2635,
    2635,    -1,    -1,  2639,  2640,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,   971,   972,  2614,
      -1,    -1,    -1,    48,    -1,    -1,  2678,  2663,  2522,  2635,
     984,  2667,  2667,  2527,    -1,  2671,  2530,    -1,  2674,    -1,
     808,  2636,  2678,   357,    -1,    -1,    -1,  1001,    73,   472,
     473,  1005,    -1,    -1,    -1,    -1,    -1,  2693,    -1,  2571,
      -1,  2667,    -1,    -1,    -1,    -1,  1726,  2703,    -1,    -1,
      -1,  2707,  2708,   938,    -1,    -1,    36,    -1,    -1,   479,
     480,   481,   808,   483,   484,   485,   486,   487,   488,    -1,
     404,    -1,   406,    -1,    -1,    55,    -1,    -1,    -1,    -1,
      -1,    -1,  2733,    -1,    -1,    -1,    -1,    -1,   422,   526,
      -1,    -1,    -1,    -1,   428,    36,    -1,   431,   143,    -1,
    2614,    -1,    -1,    -1,    -1,    -1,  2762,  2639,    -1,  2765,
    2765,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2636,  2738,    -1,    -1,   106,   107,   173,   917,
    2786,   702,  2788,    -1,  2790,   115,   702,    -1,    -1,  2765,
      -1,    -1,    -1,    -1,   189,  2801,  2801,    -1,    -1,   194,
      -1,    -1,    -1,  2667,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1137,  2678,   106,  2822,    -1,    -1,     0,
      -1,  1145,    -1,    -1,    -1,  2801,    -1,    -1,    -1,  1153,
      -1,    -1,  2797,    -1,    -1,   230,  2842,  2843,    -1,    -1,
      -1,    -1,   172,  1873,    -1,    -1,    -1,   985,    -1,    -1,
    2856,  1881,  1882,    -1,    -1,  1885,    -1,    -1,    -1,    -1,
    1184,    -1,    -1,    -1,    -1,    -1,   196,  2873,  2874,  1899,
      -1,    -1,    -1,  2874,  2738,    -1,    -1,    -1,    -1,    -1,
      -1,   172,    -1,    -1,  2890,  2890,  2892,   808,    -1,   985,
     285,    -1,   808,    -1,    -1,  1219,  1220,    -1,  1222,  1223,
      -1,  1225,  1226,    -1,  1228,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    -1,  2890,   702,   246,    -1,  2883,    -1,
      -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2797,    -1,    -1,   266,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1275,  2958,    -1,    -1,   246,    -1,    -1,    -1,    -1,
      -1,    -1,  1286,   254,   145,    -1,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,   158,    -1,    -1,
      -1,   376,   163,    -1,    -1,    -1,    -1,   168,  1223,    -1,
    1225,    -1,  1316,    -1,    -1,    -1,   177,    -1,    -1,    -1,
     181,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,  2883,
      -1,   808,  2052,  2053,  2054,  1349,  1350,    -1,    -1,    -1,
      -1,   212,    -1,  1171,  1172,   365,     0,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1371,    -1,  1373,
     231,    -1,   343,    -1,    -1,   385,    -1,   387,    -1,  1383,
     390,  1385,    -1,    -1,   985,    -1,    -1,    -1,    -1,   985,
      -1,    -1,    -1,    -1,   365,  1171,  1172,    -1,  2108,  1217,
      -1,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,
     485,   486,   487,   488,   385,    -1,  1420,    -1,    -1,   280,
      -1,    -1,   283,  1427,  1428,    -1,    -1,    -1,   289,    -1,
      -1,    -1,    -1,    -1,  1438,  1439,  1440,  1441,    -1,  1443,
      -1,  1217,    -1,    -1,    -1,  1449,    -1,  1451,    -1,    93,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1462,  1463,
      -1,    -1,    -1,  1467,  1468,    -1,    -1,  2177,  1472,  1473,
    1474,  1475,    -1,  1477,  1478,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   492,    -1,   345,    -1,    -1,    -1,    -1,    -1,
    1308,    -1,    -1,  1497,  1498,  1499,    -1,    -1,    -1,    -1,
    2210,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1515,    -1,  1428,   158,    -1,    -1,    -1,   985,   163,
      -1,    -1,    -1,  1438,   168,  1440,    -1,    -1,  1443,    -1,
      -1,    -1,  1308,   177,  1449,    -1,  1451,   181,    -1,   400,
      -1,    -1,   526,    -1,    -1,    -1,     8,    -1,  1463,    11,
      -1,    -1,    -1,  1468,    16,    17,    18,  1472,  1473,  1474,
    1475,    -1,  1477,  1478,    -1,    -1,   427,    -1,   212,    -1,
    1171,  1172,    -1,    -1,   435,  1171,  1172,    -1,    -1,    41,
      -1,  2291,  2292,  2293,  2294,    -1,    48,   231,    -1,    -1,
     451,    -1,   453,   454,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    73,    -1,    -1,    -1,    -1,  1217,    -1,  1436,    -1,
      -1,  1217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,
      -1,    -1,   493,   494,   495,    -1,   280,    -1,    -1,   283,
      41,    -1,    -1,    -1,    -1,   289,    -1,    48,  1652,    -1,
      -1,    -1,    -1,    -1,    -1,  1659,    -1,    -1,    -1,    -1,
    1436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1693,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   345,    -1,    -1,  1171,  1172,    -1,  1308,    -1,    -1,
      -1,   173,  1308,    -1,    -1,    -1,    -1,    -1,   702,    -1,
      -1,  1539,  1726,    -1,    -1,     8,    -1,   189,    11,  1733,
      -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   143,    -1,  1748,    -1,    -1,    -1,  1752,    -1,
    1217,  1755,    -1,  1757,    -1,    -1,   400,    -1,    41,    -1,
      -1,    -1,    -1,  1539,    -1,    48,  1584,    -1,   230,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   189,    -1,
      73,   435,    -1,   194,    -1,    -1,   526,    -1,    -1,    -1,
      -1,    -1,  1806,    -1,    -1,    -1,    -1,   451,  1584,   453,
     454,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   285,   808,    -1,    -1,    -1,    -1,   230,
      -1,    -1,    -1,    -1,    -1,  1436,    -1,    -1,    -1,    -1,
    1436,  1308,    -1,    -1,    -1,    -1,   490,    -1,    -1,   493,
     494,   495,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     143,    -1,    -1,    -1,  1868,    -1,    -1,    -1,  2578,  1873,
      -1,    -1,    -1,    -1,    -1,    -1,  1880,  1881,  1882,  1883,
      -1,  1885,    -1,    -1,   285,    -1,   184,   185,    -1,    -1,
     173,    -1,    -1,    -1,    -1,  1899,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,  1913,
      -1,   194,    -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2632,    -1,    -1,  1929,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1539,    -1,
      -1,  1945,  1946,  1539,    -1,    -1,    -1,   230,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
      -1,    -1,    -1,    -1,  1968,    -1,    -1,    -1,  1883,  1436,
      -1,    -1,   702,    -1,    -1,   376,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1584,    -1,    -1,    -1,    -1,  1584,    -1,
      -1,  2701,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   985,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   476,    -1,    -1,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,  2737,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2044,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2052,  2053,
    2054,  2055,    -1,  2057,  2058,    -1,    -1,    -1,  2062,  2063,
      -1,    -1,    -1,   361,   362,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1539,    -1,  1892,   476,    -1,    -1,   808,    -1,
      -1,    -1,   483,   484,   485,   486,   487,   488,  2092,    -1,
      -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2108,    -1,  2110,    -1,    -1,    -1,
    2114,  2115,  2116,    -1,  2118,    -1,  1892,  1584,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2134,    -1,  2136,    -1,    -1,    -1,    -1,    -1,    -1,  1957,
      -1,    -1,    -1,    -1,    -1,  2149,  2150,  2151,  2152,  2153,
    2154,  2155,  2156,  2157,  2158,    -1,    -1,  1975,   564,   565,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2174,    -1,    -1,  2177,   472,   473,    -1,    -1,    -1,    -1,
      -1,  1957,  2000,    -1,    -1,    -1,  2190,  1171,  1172,  2007,
      -1,    -1,    -1,   476,  2198,  2110,    -1,    -1,    -1,  1975,
     483,   484,   485,   486,   487,   488,  2210,    -1,    -1,    -1,
      -1,    -1,  2030,  2217,    -1,    -1,    -1,    -1,    -1,  2134,
      -1,   627,   628,    -1,  2000,    -1,    -1,    -1,    -1,    -1,
      -1,  2007,    -1,  1217,  2149,  2150,  2151,  2152,  2153,  2154,
    2155,  2156,  2157,  2158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2030,   985,    -1,    -1,    -1,    -1,
      -1,  2265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2288,    -1,    -1,  2291,  2292,  2293,
    2294,  1892,    -1,    -1,  2298,  2299,  1892,  2301,    -1,    -1,
    2304,    -1,    -1,    -1,  2308,    -1,    -1,    -1,  2312,    -1,
      -1,    -1,    -1,    -1,  2318,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1308,    -1,    -1,    -1,    -1,  2147,
    2334,    -1,    -1,    -1,  2338,    -1,    -1,    -1,    -1,  2343,
      -1,    -1,    -1,  2347,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2355,    -1,    -1,    -1,    -1,  1957,     8,    -1,    -1,
      11,  1957,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2147,    -1,    -1,  1975,    -1,  2380,    -1,    -1,  1975,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2206,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,  2000,
      -1,   807,    -1,    -1,  2000,    -1,  2007,    -1,    -1,    -1,
      -1,  2007,    -1,    -1,    -1,    -1,    -1,    -1,   824,    -1,
      -1,    -1,    73,    -1,    -1,  1892,    -1,    -1,    -1,  2030,
    2206,    -1,    -1,    -1,  2030,    -1,    -1,    -1,    -1,    -1,
      -1,  1171,  1172,    -1,    -1,  2449,    -1,   853,    -1,    -1,
      -1,    -1,  1436,    -1,    -1,  2459,    -1,  2275,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2469,    -1,   873,   874,   875,
      -1,    -1,   878,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,  1217,    -1,    -1,
    1957,    -1,   143,    -1,    -1,   901,    -1,    -1,    -1,  2275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1975,  2513,
    2514,    -1,    41,  2517,    -1,    -1,  2520,    -1,  2522,    48,
      -1,    -1,   173,  2527,    -1,    -1,  2530,    -1,  2532,    -1,
      -1,  2535,    -1,  2000,    -1,    -1,    -1,    -1,   189,    -1,
    2007,    -1,    -1,   194,    73,  2549,  2147,    -1,    -1,   955,
      -1,  2147,    -1,   959,   960,  1539,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2030,    -1,  2569,  2570,  2385,    -1,    -1,
      -1,    -1,    -1,    -1,  2578,    -1,    -1,    -1,  1308,   230,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2415,    -1,    -1,
    1584,  2605,  2606,    -1,  1010,  2206,    -1,    -1,    -1,  2385,
    2206,  1017,  2616,    -1,   143,  2619,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2632,    -1,
      -1,  2635,  1038,    -1,   285,    -1,    -1,     8,    -1,  2415,
      11,    -1,    -1,    -1,   173,    16,    17,    18,    -1,    -1,
    2654,    -1,    -1,    -1,    -1,  2570,    -1,    -1,    -1,    -1,
     189,    -1,    -1,  2667,    -1,   194,    -1,  2485,  2672,    -1,
      41,    -1,    -1,    -1,  2275,    -1,    -1,    48,    -1,  2275,
    2147,    -1,    -1,  2687,    -1,    -1,    -1,    -1,  2692,    -1,
    2605,  2606,    -1,    -1,    -1,    -1,    -1,  2701,    -1,    -1,
      -1,   230,    73,    -1,  2619,    -1,  1436,    -1,    -1,  2485,
      -1,    -1,    -1,    -1,    -1,    -1,  2720,    -1,    -1,    -1,
    2724,    -1,    -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2737,    -1,    -1,    -1,    -1,    -1,  2206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1154,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,  2765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2774,    -1,    -1,    -1,  2778,    -1,    -1,  2692,  2782,    -1,
      -1,    -1,    -1,    -1,  2385,    -1,  2604,    -1,    -1,  2385,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2801,  2802,  2803,
    2804,    -1,   173,    -1,    -1,  2720,    -1,    -1,  2275,  1539,
      -1,    -1,    -1,    -1,  2415,    -1,    -1,    -1,   189,  2415,
      -1,    -1,  2640,   194,    -1,   476,    -1,    -1,  2604,    -1,
      -1,    -1,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,    -1,    -1,  2847,    -1,   216,   217,   376,    -1,    -1,
      -1,    -1,    -1,  2671,  1584,  2859,  2674,  2861,  1264,   230,
      -1,    -1,    -1,    -1,  2640,    -1,  2870,    -1,  1274,    -1,
    1276,    -1,     0,  1279,  1280,  1281,  1282,    -1,    -1,    -1,
    2884,    -1,    -1,    -1,  2485,    -1,  2890,    -1,    -1,  2485,
      -1,    -1,    -1,    -1,    -1,  2671,    -1,  1303,  2674,    -1,
     271,    -1,    -1,  1309,  1310,  1311,  1312,  2911,  1892,    -1,
      -1,  1317,  1318,    -1,   285,    -1,  1322,    -1,  2385,    -1,
    1326,    -1,    -1,  1329,  1330,  1331,  1332,  1333,  1334,  1335,
    1336,  1337,    -1,    -1,  1340,    -1,    -1,    -1,    -1,  1345,
      -1,    -1,  1348,    -1,  1350,    -1,  1352,   476,  2415,    -1,
      -1,    -1,    -1,    -1,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,  1375,
      -1,    -1,    -1,  1957,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,  1975,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
    1406,  1407,    -1,  2604,    -1,   376,    -1,    -1,  2604,    -1,
      -1,    33,    -1,    -1,    -1,    -1,  2000,   145,  2485,    41,
      -1,    -1,    -1,  2007,    -1,    -1,    48,    -1,    -1,    -1,
     158,    -1,    -1,    -1,    -1,   163,    -1,    -1,    -1,  2640,
     168,    -1,    -1,    -1,  2640,    -1,  2030,    -1,    -1,   177,
      -1,    73,    -1,   181,    -1,    -1,  2874,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2671,    -1,    -1,  2674,    -1,  2671,    -1,  1483,  2674,    -1,
    1486,  1487,    -1,  1489,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2874,     8,
      -1,    -1,    11,   231,    -1,   476,    -1,    -1,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,  1524,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,  2604,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   173,   280,    -1,    -1,   283,    -1,    -1,    -1,    -1,
      -1,   289,  1892,  2147,    73,    -1,    -1,   189,    -1,    -1,
      -1,    -1,   194,  2640,    -1,    -1,  1582,    -1,    -1,    -1,
      -1,    -1,    -1,  1589,    -1,    -1,    -1,    -1,  1594,    -1,
      -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2671,    -1,    -1,  2674,   230,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   345,    -1,    -1,
      -1,    -1,  2206,    -1,    -1,    -1,  1632,  1957,    -1,    -1,
      -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,  1644,    -1,
    1646,  1647,    -1,    -1,    -1,  1975,   268,    -1,  1654,   271,
      -1,    -1,  1658,    -1,    -1,  1661,   894,    -1,    -1,    -1,
      -1,    -1,    -1,   285,   173,    -1,   288,    -1,    -1,    -1,
    2000,    -1,   400,  2874,    -1,    -1,    -1,  2007,  2874,    -1,
     189,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,  1695,
      -1,  2275,  1698,    -1,  1700,    -1,   934,    -1,    -1,   427,
    2030,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   230,    -1,   451,    -1,   453,   454,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   376,    -1,  1762,    -1,     0,    -1,
      -1,    -1,   490,    -1,    -1,   493,   494,   495,    -1,    -1,
      -1,    -1,    -1,  1779,  1780,    -1,   285,    19,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    -1,    31,
      32,    -1,  1798,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2385,    -1,    -1,  1042,    47,    -1,  2874,    -1,    -1,
      -1,  1049,    -1,    -1,    56,     3,    -1,  2147,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    68,    -1,    16,    17,
      18,  2415,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    36,    91,
    1856,    93,    -1,    41,   476,    -1,    -1,   479,   480,   481,
      48,   483,   484,   485,   486,   487,   488,   376,    -1,   111,
      -1,    -1,    -1,    -1,   496,    -1,  2206,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,   141,
      -1,  2485,    -1,    -1,    -1,    -1,    -1,   149,    -1,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2275,    -1,    -1,  1954,    -1,
      -1,   193,    -1,    -1,    -1,    -1,    -1,  1963,    -1,    -1,
    1966,    -1,    -1,  1969,    -1,    -1,   208,   476,    -1,    -1,
      -1,    -1,    -1,    -1,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,     8,    -1,   173,    11,    -1,    -1,  1995,
    1996,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,  2009,    -1,    -1,   194,    -1,    -1,    -1,
      -1,    -1,  2018,    -1,    -1,  2021,    41,  2023,    -1,    -1,
    2604,    -1,    -1,    48,  1262,  2031,    -1,    -1,   216,   217,
      -1,    -1,    -1,  2039,  2040,  1273,    -1,    -1,    -1,  1277,
      -1,    -1,   230,    -1,    -1,  1283,  1284,  1285,    73,     8,
      -1,    -1,    11,    -1,  1292,  2385,  2640,    16,    17,    18,
      -1,    -1,  2068,    -1,    -1,    -1,    -1,    -1,   310,    -1,
      -1,   313,  2078,    -1,    33,    -1,    -1,    36,    -1,    -1,
     268,    -1,    41,   271,    -1,  2415,    -1,  2671,  2094,    48,
    2674,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,   341,
     288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   350,  1347,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   364,    -1,    -1,    -1,    -1,    -1,    -1,   371,
      -1,    -1,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,   385,    11,    -1,    -1,    -1,   173,    16,
      17,    18,    -1,  1391,   396,  2485,    -1,    -1,   400,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    33,  1405,    -1,   194,
      -1,    -1,  1410,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,   376,    -1,
      -1,    -1,    -1,    -1,   436,    -1,    -1,    -1,    -1,   441,
      -1,    -1,    -1,    -1,    -1,   230,    73,    -1,    -1,    -1,
      -1,    -1,   454,    -1,   173,    -1,    -1,  2223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,   194,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     492,    -1,    -1,   495,    -1,    -1,    -1,   216,   217,    -1,
     285,    -1,    -1,  2269,  2270,    -1,    -1,    -1,  2274,    -1,
      -1,   230,    -1,  2279,  2604,    -1,  2282,  2283,    -1,    -1,
      -1,  2287,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,
    2874,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,   268,
    2640,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,   285,   194,  2334,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2671,    -1,    -1,  2674,    -1,    -1,    -1,    -1,   216,
     217,   376,    -1,    -1,  1592,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,
    2376,    -1,    -1,  1611,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1628,    -1,  1630,  1631,    -1,  1633,    -1,  1635,    -1,    -1,
      -1,   268,  1640,    -1,   271,  1643,    -1,    -1,    -1,    -1,
    1648,    -1,    -1,  1651,    -1,    -1,    -1,   376,   285,    -1,
      -1,   288,    -1,    -1,    -1,  1663,    -1,    -1,    -1,  1667,
    1668,  1669,  1670,    -1,    -1,    -1,    -1,    -1,  1676,  1677,
      -1,  1679,  1680,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   476,    -1,  1691,    -1,    -1,  1694,    -1,   483,   484,
     485,   486,   487,   488,  1702,  1703,  1704,  1705,  1706,  1707,
    1708,  1709,  1710,  1711,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1719,    -1,  2489,    -1,  1723,    -1,    -1,    -1,    -1,
      -1,  2497,  2498,    -1,    -1,  2501,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1745,    -1,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
      -1,  2537,  2538,    -1,   493,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2874,  2551,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    74,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,   476,
      -1,    -1,   479,   480,   481,    90,   483,   484,   485,   486,
     487,   488,    33,  1861,  1862,  1863,   493,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2663,     8,    -1,
      -1,    11,    73,  1901,    -1,    -1,    16,    17,    18,   144,
      -1,    -1,  2678,    -1,    -1,    -1,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,  2693,    -1,    -1,
     165,    41,    -1,    -1,    -1,   170,    -1,    -1,    48,    -1,
      -1,    -1,  2708,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1953,    -1,    -1,    -1,    -1,
      -1,  1959,   197,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1972,  1973,  1974,    -1,  1976,  1977,
    1978,  1979,    -1,    -1,  1982,  1983,  1984,  1985,  1986,  1987,
    1988,  1989,  1990,  1991,  1992,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,   241,    -1,    -1,    -1,
     245,    -1,  2010,    -1,    -1,  2013,    -1,  2015,   189,    -1,
      -1,  2019,  2020,   194,  2790,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2033,  2034,  2035,  2036,    -1,
    2038,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2822,    -1,    -1,   230,
      -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   308,    -1,    -1,  2842,  2843,    -1,   189,
      -1,    -1,    -1,    -1,   194,    -1,    -1,   322,    -1,    -1,
    2856,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
     271,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,  2111,   285,    -1,    -1,   288,    -1,   354,
     230,    -1,   357,    -1,    -1,    -1,  2892,    -1,    -1,    -1,
     365,    -1,    -1,   368,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,   387,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,   271,    33,    -1,    -1,   400,    -1,    -1,    -1,    -1,
      41,    -1,   407,    -1,    -1,   285,    -1,    48,   288,    -1,
      -1,   416,    -1,    -1,    -1,    -1,    -1,   422,    -1,    -1,
      -1,    -1,  2958,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,   376,    -1,    -1,    -1,    -1,
      -1,    -1,   447,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2224,    -1,    -1,    -1,
    2228,  2229,    -1,  2231,    -1,    -1,  2234,  2235,  2236,  2237,
      -1,    -1,    -1,  2241,  2242,  2243,  2244,  2245,  2246,  2247,
    2248,  2249,  2250,  2251,  2252,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,  2262,    -1,   376,    16,    17,    18,
    2268,    -1,    -1,  2271,    -1,  2273,    -1,    -1,    -1,  2277,
      -1,    -1,  2280,  2281,    33,    -1,  2284,  2285,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,   173,    -1,    -1,   476,    -1,    -1,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   189,    -1,
      -1,    -1,   493,   194,    73,    -1,    -1,  2325,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2333,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,   217,    23,  2346,    -1,
      -1,    -1,    -1,    29,    -1,    -1,    -1,    -1,    -1,   230,
      36,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,    55,
      -1,    -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
     271,    -1,    -1,    -1,    -1,    -1,    23,    -1,    -1,    -1,
      -1,    -1,    29,    -1,   285,    -1,    -1,   288,    -1,    36,
      -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,
     106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    55,    -1,
     189,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2478,   230,    -1,    -1,  2482,    -1,    -1,    -1,    -1,   106,
      -1,    -1,    -1,  2491,  2492,  2493,    -1,    -1,  2496,    -1,
      -1,  2499,  2500,    -1,    -1,   376,  2504,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,   268,
     196,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     246,    -1,    -1,  2571,    -1,    -1,    -1,    -1,   254,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,  2590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,   479,   480,
     481,   287,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,   297,   493,    -1,    -1,    -1,    -1,   376,    -1,   246,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,
    2638,  2639,    -1,    -1,    -1,    -1,  2644,  2645,  2646,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   337,    -1,    -1,    -1,   341,    -1,   343,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,  2685,  2686,   365,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,  2699,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
      -1,    -1,    -1,  2711,    -1,    -1,    -1,    -1,    -1,    -1,
     337,    -1,    -1,    -1,   341,    -1,   343,   476,    -1,    -1,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,    -1,   493,    -1,    -1,    -1,   365,    -1,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
      -1,  2759,   438,    -1,    -1,    -1,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2777,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2799,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2813,    -1,    -1,    -1,    -1,
      -1,   438,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,  2881,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,  2895,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
     130,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,   485,    -1,    -1,    -1,    -1,
     490,    -1,   492,   493,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,   493,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,    -1,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,   168,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    34,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,   485,    -1,    -1,    -1,    -1,
     490,    -1,   492,    -1,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,    -1,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,   493,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,   493,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,   168,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,    -1,    -1,
     490,    -1,   492,    -1,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,    -1,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,    -1,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,    -1,    -1,
     490,    -1,   492,    -1,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,    -1,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,    -1,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,
     218,   219,   220,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
      -1,   269,   270,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,    -1,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,     3,     4,     5,
       6,     7,   492,     9,    10,    -1,    -1,    -1,    -1,   499,
     500,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,    -1,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,
      -1,    -1,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
      -1,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    -1,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,    -1,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,   219,
     220,   221,   222,   223,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,    -1,   269,
     270,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,     3,    -1,    -1,    -1,    -1,
     490,    -1,   492,    -1,    -1,    -1,    -1,   497,    -1,   499,
     500,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,   169,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,
     218,   219,   220,   221,   222,   223,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
      -1,   269,   270,    -1,   272,    -1,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   493,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,    -1,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,   284,   285,   286,   287,    -1,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,    -1,    -1,   452,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,     3,   478,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,    -1,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,   284,   285,   286,   287,    -1,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,   434,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   492,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,    -1,   227,   228,   229,   230,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,    -1,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,    -1,    -1,
     285,   286,   287,    -1,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,   434,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,   434,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,   213,    -1,   215,    -1,
      -1,   218,    -1,   220,   221,   222,   223,   224,    -1,    -1,
     227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
     267,    -1,   269,   270,    -1,   272,    -1,   274,   275,   276,
     277,   278,   279,    -1,   281,   282,   283,    -1,   285,   286,
     287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
       3,    -1,    -1,    -1,    -1,    -1,   483,   484,   485,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,
     223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,   267,    -1,   269,   270,    -1,   272,
      -1,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,     3,   478,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,
      -1,   220,   221,   222,   223,   224,    -1,    -1,   227,    -1,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,   265,   266,   267,    -1,
     269,   270,    -1,   272,    -1,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,
      -1,   290,   291,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,     3,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   492,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,    -1,    -1,   218,    -1,   220,   221,   222,   223,   224,
      -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,    -1,   269,   270,    -1,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,    -1,    -1,
     285,   286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,     3,   478,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,
     221,   222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,   267,    -1,   269,   270,
      -1,   272,    -1,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
     291,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,   213,    -1,   215,    -1,
      -1,   218,    -1,   220,   221,   222,   223,   224,    -1,    -1,
     227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
     267,    -1,   269,   270,    -1,   272,    -1,   274,   275,   276,
     277,   278,   279,    -1,   281,   282,    -1,    -1,   285,   286,
     287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,
     223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,   267,    -1,   269,   270,    -1,   272,
      -1,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,
      -1,   220,   221,   222,   223,   224,    -1,    -1,   227,    -1,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,   265,   266,   267,    -1,
     269,   270,    -1,   272,    -1,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,
      -1,   290,   291,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   492,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,    -1,    -1,   218,    -1,   220,   221,   222,   223,   224,
      -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,    -1,   269,   270,    -1,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,    -1,    -1,
     285,   286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,    -1,   492,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,    -1,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,    -1,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   472,   473,   474,   475,    -1,     3,
      -1,   479,   480,   481,     8,   483,   484,   485,   486,   487,
     488,    -1,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,   223,
     224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,   267,    -1,   269,   270,    -1,   272,    -1,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,    -1,     8,    -1,    -1,    11,    41,    -1,    -1,    -1,
      16,    17,    18,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      73,     8,    -1,    -1,    11,    -1,    -1,    33,    -1,    16,
      17,    18,    -1,    -1,    -1,    41,    -1,    -1,    73,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,   189,    -1,   173,    -1,
       8,   194,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,   189,    -1,    73,    -1,    -1,   194,
      -1,    -1,    -1,   216,   217,    33,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,   230,    -1,    -1,
      48,   216,   217,   189,    -1,    -1,   173,    -1,   194,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    73,    -1,   194,    -1,    -1,
     216,   217,    -1,    -1,    -1,   268,    -1,    -1,   271,    -1,
      -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,   216,
     217,    -1,   285,   268,    -1,   288,   271,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,   288,    -1,    -1,   173,    -1,    -1,    -1,
      -1,    -1,   268,    -1,    -1,   271,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,   285,
      -1,   268,   288,    -1,   271,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,   216,
     217,   288,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,   376,    -1,    -1,   194,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,
      -1,   268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,   285,    -1,
     376,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,
     288,    -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
     493,   476,    -1,    -1,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,   493,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,    -1,    -1,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,   493,    -1,   476,
      -1,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,   493,    -1,   376,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      -1,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,   493,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,     3,
      -1,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,    -1,    -1,   491,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,    -1,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,   267,   268,   269,   270,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   485,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,
     221,   222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,   267,    -1,   269,   270,
      -1,   272,    -1,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
     291,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,   485,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,
     218,    -1,   220,   221,   222,   223,   224,    -1,    -1,   227,
      -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,   265,   266,   267,
      -1,   269,   270,    -1,   272,    -1,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,   283,    -1,   285,   286,   287,
      -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,     4,
       5,    -1,    -1,    -1,     9,   483,   484,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,    -1,    -1,   218,    -1,   220,   221,   222,   223,   224,
      -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,    -1,   269,   270,    -1,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,   283,    -1,
     285,   286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,     4,     5,    -1,    -1,    -1,     9,   483,   484,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,   267,    -1,   269,   270,    -1,
     272,    -1,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,   283,    -1,   285,   286,   287,    -1,    -1,   290,   291,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,     8,    -1,    -1,    11,    -1,
      -1,   483,   484,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      33,    16,    17,    18,    37,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,    -1,     8,    -1,    -1,    11,    41,    -1,    -1,    -1,
      16,    17,    18,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      73,     8,    -1,    -1,    11,    -1,    -1,    33,    -1,    16,
      17,    18,    -1,    -1,    -1,    41,    -1,    -1,    73,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    33,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   163,    33,
      -1,    -1,    -1,   168,    -1,    -1,   189,    41,   173,    -1,
      -1,   194,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,   162,    -1,    -1,   194,
      -1,    -1,    -1,   216,   217,    -1,    -1,   173,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,   216,   217,   189,    -1,    -1,   173,    -1,   194,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,
     216,   217,    -1,    -1,    -1,   268,    -1,    -1,   271,    -1,
      -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,   216,
     217,    -1,   285,   268,    -1,   288,   271,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,    -1,    -1,   271,    -1,    -1,    -1,   173,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,
      -1,   268,   288,    -1,   271,   189,    -1,    -1,    -1,    -1,
     194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,
      -1,   288,    -1,    -1,    -1,   311,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   376,    -1,     8,   230,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    36,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,   268,    48,    -1,   271,    -1,    -1,
     376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   285,   435,    -1,   288,    -1,    -1,    -1,    -1,   376,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,   476,    -1,    -1,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,    -1,   376,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,   476,
     173,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,     8,    -1,   189,    11,    -1,    -1,
      -1,   194,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,   216,   217,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,   230,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,   476,    -1,    -1,   479,   480,   481,    33,   483,
     484,   485,   486,   487,   488,   268,    41,    -1,   271,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,   285,    -1,    11,   288,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   168,    -1,    73,    -1,    33,   173,
      -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,   189,    -1,    -1,    -1,     8,
     194,    -1,    11,   376,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,   216,   217,    33,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    41,    -1,    -1,    -1,   230,    -1,    -1,    48,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,   268,    -1,   173,   271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,   285,   189,    -1,   288,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,    -1,    -1,   173,   216,
     217,    -1,    -1,   268,    -1,    -1,   271,    -1,    -1,    -1,
      -1,    -1,    -1,   230,   189,    -1,    -1,    -1,    -1,   194,
     285,    -1,    -1,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,   173,    -1,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,   271,   230,    -1,    -1,    -1,    -1,
     189,    -1,   376,    -1,     8,   194,    -1,    11,   285,    -1,
      -1,   288,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    33,
      -1,    -1,    -1,   268,    -1,    -1,   271,    41,    -1,    -1,
      -1,   230,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
     285,   376,     8,   288,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,   268,
      -1,    -1,   271,   408,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,   285,    -1,    -1,   376,
      -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,   376,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,   476,    -1,    -1,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    41,   173,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,   376,    -1,    -1,
     194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      73,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   216,   217,    -1,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,
      -1,   476,    -1,    -1,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,   268,    -1,    -1,   271,    -1,    -1,
      -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,
      -1,   285,    -1,    -1,   288,    -1,    -1,   476,    -1,    -1,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,    -1,    -1,   271,   189,    -1,    -1,    -1,
      -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,    -1,    -1,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,    -1,     5,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
      -1,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,   267,   268,   269,   270,    -1,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,    -1,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,   267,   268,   269,
     270,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,    -1,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,    -1,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
     267,   268,   269,   270,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,    -1,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    -1,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,   165,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,
     218,    -1,   220,   221,   222,   223,   224,    -1,    -1,   227,
      -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,   265,   266,   267,
      -1,   269,   270,    -1,   272,    -1,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
     165,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,    -1,    -1,   218,    -1,   220,   221,   222,   223,   224,
      -1,    -1,   227,    -1,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,    -1,   269,   270,    -1,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,    -1,    -1,
     285,   286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,   267,    -1,   269,   270,    -1,
     272,    -1,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,   283,    -1,   285,   286,   287,    -1,    -1,   290,   291,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,
      -1,   220,   221,   222,   223,   224,    -1,    -1,   227,    -1,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,   265,   266,   267,    -1,
     269,   270,    -1,   272,    -1,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,
      -1,   290,   291,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
      -1,    -1,   218,    -1,   220,   221,   222,   223,   224,    -1,
      -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,   265,
     266,   267,    -1,   269,   270,    -1,   272,    -1,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,   284,   285,
     286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,
     223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,   267,    -1,   269,   270,    -1,   272,
      -1,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,   284,   285,   286,   287,    -1,    -1,   290,   291,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,
     220,   221,   222,   223,   224,    -1,    -1,   227,    -1,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,   267,    -1,   269,
     270,    -1,   272,    -1,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,   213,    -1,   215,    -1,
      -1,   218,    -1,   220,   221,   222,   223,   224,    -1,    -1,
     227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
     267,    -1,   269,   270,    -1,   272,    -1,   274,   275,   276,
     277,   278,   279,    -1,   281,   282,    -1,    -1,   285,   286,
     287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
       4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,   223,
     224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,   267,    -1,   269,   270,    -1,   272,    -1,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,
     221,   222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,   267,    -1,   269,   270,
      -1,   272,    -1,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
     291,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,
     218,    -1,   220,   221,   222,   223,   224,    -1,    -1,   227,
      -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,   265,   266,   267,
      -1,   269,   270,    -1,   272,    -1,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,    -1,    -1,   218,    -1,   220,   221,   222,   223,   224,
      -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,    -1,   269,   270,    -1,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,    -1,    -1,
     285,   286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,   267,    -1,   269,   270,    -1,
     272,    -1,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,
      -1,   220,   221,   222,   223,   224,    -1,    -1,   227,    -1,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,   265,   266,   267,    -1,
     269,   270,    -1,   272,    -1,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,
      -1,   290,   291,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
      -1,    -1,   218,    -1,   220,   221,   222,   223,   224,    -1,
      -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,   265,
     266,   267,    -1,   269,   270,    -1,   272,    -1,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,
     223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,   267,    -1,   269,   270,    -1,   272,
      -1,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,
     220,   221,   222,   223,   224,    -1,    -1,   227,    -1,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,   267,    -1,   269,
     270,    -1,   272,    -1,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,   213,    -1,   215,    -1,
      -1,   218,    -1,   220,   221,   222,   223,   224,    -1,    -1,
     227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
     267,    -1,   269,   270,    -1,   272,    -1,   274,   275,   276,
     277,   278,   279,    -1,   281,   282,    -1,    -1,   285,   286,
     287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,   223,
     224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,   267,    -1,   269,   270,    -1,   272,    -1,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,
     221,   222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,   267,    -1,   269,   270,
      -1,   272,    -1,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
     291,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,
     218,    -1,   220,   221,   222,   223,   224,    -1,    -1,   227,
      -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,   265,   266,   267,
      -1,   269,   270,    -1,   272,    -1,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,    -1,    -1,   218,    -1,   220,   221,   222,   223,   224,
      -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,    -1,   269,   270,    -1,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,    -1,    -1,
     285,   286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,   267,    -1,   269,   270,    -1,
     272,    -1,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,
      -1,   220,   221,   222,   223,   224,    -1,    -1,   227,    -1,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,   265,   266,   267,    -1,
     269,   270,    -1,   272,    -1,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,
      -1,   290,   291,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
      -1,    -1,   218,    -1,   220,   221,   222,   223,   224,    -1,
      -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,   265,
     266,   267,    -1,   269,   270,    -1,   272,    -1,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,
     223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,   267,    -1,   269,   270,    -1,   272,
      -1,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,
     220,   221,   222,   223,   224,    -1,    -1,   227,    -1,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,   267,    -1,   269,
     270,    -1,   272,    -1,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,   213,    -1,   215,    -1,
      -1,   218,    -1,   220,   221,   222,   223,   224,    -1,    -1,
     227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
     267,    -1,   269,   270,    -1,   272,    -1,   274,   275,   276,
     277,   278,   279,    -1,   281,   282,    -1,    -1,   285,   286,
     287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,   213,
      -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,   223,
     224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,   267,    -1,   269,   270,    -1,   272,    -1,
     274,   275,   276,   277,   278,   279,    -1,   281,   282,    -1,
      -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,
     221,   222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,   267,    -1,   269,   270,
      -1,   272,    -1,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
     291,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,
     218,    -1,   220,   221,   222,   223,   224,    -1,    -1,   227,
      -1,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,   265,   266,   267,
      -1,   269,   270,    -1,   272,    -1,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,    -1,    -1,   285,   286,   287,
      -1,    -1,   290,   291,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,    -1,
     215,    -1,    -1,   218,    -1,   220,   221,   222,   223,   224,
      -1,    -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,    -1,   269,   270,    -1,   272,    -1,   274,
     275,   276,   277,   278,   279,    -1,   281,   282,    -1,    -1,
     285,   286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,   213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,   267,    -1,   269,   270,    -1,
     272,    -1,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,
      -1,   220,   221,   222,   223,   224,    -1,    -1,   227,    -1,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,   265,   266,   267,    -1,
     269,   270,    -1,   272,    -1,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,
      -1,   290,   291,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,   213,    -1,   215,
      -1,    -1,   218,    -1,   220,   221,   222,   223,   224,    -1,
      -1,   227,    -1,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,   265,
     266,   267,    -1,   269,   270,    -1,   272,    -1,   274,   275,
     276,   277,   278,   279,    -1,   281,   282,    -1,    -1,   285,
     286,   287,    -1,    -1,   290,   291,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,    -1,    -1,   218,    -1,   220,   221,   222,
     223,   224,    -1,    -1,   227,    -1,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,   267,    -1,   269,   270,    -1,   272,
      -1,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,    -1,   285,   286,   287,    -1,    -1,   290,   291,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,   213,    -1,   215,    -1,    -1,   218,    -1,
     220,   221,   222,   223,   224,    -1,    -1,   227,    -1,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,   267,    -1,   269,
     270,    -1,   272,    -1,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,
     290,   291,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,    -1,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,    -1,    -1,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,    -1,   213,    -1,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,    -1,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,    -1,   269,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,    -1,   281,   282,    -1,    -1,   285,   286,
     287,    -1,    -1,   290,    -1,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,    -1,   416,
      -1,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   472,   473,   474,   475,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    -1,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    -1,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,    -1,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,    -1,
      -1,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,    -1,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,    -1,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,    -1,
     269,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,    -1,   281,   282,    -1,    -1,   285,   286,   287,    -1,
      -1,   290,    -1,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,    -1,   416,    -1,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   472,   473,   474,   475,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    -1,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,    -1,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,    -1,    -1,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,    -1,    -1,   269,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,    -1,
     281,   282,    -1,    -1,   285,   286,   287,    -1,    -1,   290,
      -1,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,    -1,   373,   374,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,    -1,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,    -1,   416,    -1,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   472,   473,   474,   475,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    -1,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,    -1,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,    -1,    -1,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,    -1,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,    -1,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,   238,   239,   240,   241,    -1,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,    -1,    -1,   269,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,    -1,   281,   282,
      -1,    -1,   285,   286,   287,    -1,    -1,   290,    -1,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,    -1,
     373,   374,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
      -1,   394,    -1,   396,    -1,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,    -1,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   472,
     473,   474,   475
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   164,   193,
     208,   233,   310,   313,   341,   350,   364,   371,   375,   385,
     396,   400,   436,   441,   454,   478,   492,   503,   504,   505,
     506,   517,   518,   519,   520,   521,   528,   532,   534,   535,
     539,   553,   555,   562,   608,   610,   611,   613,   616,   623,
     626,   627,   629,   631,   636,   637,   643,   660,   663,   664,
     667,   668,   669,   670,   671,   672,   673,   722,   859,   863,
     866,   873,   876,   413,   457,   628,   197,   357,   365,   400,
     447,   628,     3,    19,    20,    21,    22,    23,    24,    25,
      26,    28,    29,    30,    38,    39,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    54,    55,
      56,    57,    58,    59,    62,    63,    64,    65,    66,    68,
      69,    70,    71,    72,    74,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    89,    90,    91,
      92,    94,    95,    96,    97,   101,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   116,   118,   119,   120,
     121,   122,   123,   125,   126,   127,   128,   129,   132,   133,
     134,   135,   136,   138,   139,   140,   142,   143,   144,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   157,
     159,   160,   161,   162,   164,   166,   167,   169,   170,   171,
     172,   173,   174,   176,   178,   179,   180,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   195,
     196,   197,   198,   199,   200,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   213,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   227,   228,   229,   230,
     232,   233,   234,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   269,   270,   271,   272,   274,   275,
     276,   277,   278,   279,   281,   282,   285,   286,   287,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   365,
     366,   367,   368,   369,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   398,
     399,   401,   402,   403,   404,   405,   406,   407,   409,   410,
     413,   414,   415,   416,   417,   419,   420,   421,   422,   423,
     424,   425,   426,   429,   430,   431,   432,   433,   436,   437,
     438,   439,   440,   441,   442,   444,   445,   446,   447,   448,
     449,   452,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   778,   844,   848,   851,   878,   879,   880,
     628,    50,   492,   655,   170,   174,   234,   241,   288,   357,
     404,   406,   422,   428,   431,   606,   622,   661,     3,    27,
     242,   313,   393,   842,   848,   878,    21,    74,    90,   144,
     153,   165,   170,   197,   241,   245,   308,   322,   354,   357,
     365,   368,   387,   400,   407,   416,   422,   447,   867,   868,
     871,   628,   842,    93,   445,   492,   524,   528,   535,   623,
     667,   668,   859,   108,    68,   208,   108,     5,   533,   847,
     848,   533,   848,   842,    27,   409,   413,   612,   614,   615,
     848,   628,    27,   130,   680,   681,   174,   234,   357,   369,
     409,   612,   638,   639,   628,   441,   612,   668,   673,     5,
     284,   733,   840,   848,   849,   169,   492,   633,   492,   329,
     674,   675,   842,   674,   669,   670,     0,   495,   445,   522,
     120,   207,   433,    27,   409,   413,   612,   668,   145,   212,
     289,   427,   683,   684,   669,   671,   672,   496,   187,   840,
     842,   187,   840,   187,   733,   187,   840,   492,   490,   494,
     826,   828,   535,   666,   667,   668,   859,   840,   404,   406,
     404,   406,   339,   187,   848,   848,   853,   329,   365,   400,
     447,   197,   840,    27,   842,   247,   416,   107,   400,   447,
     360,     3,    44,    49,    50,    51,    52,    64,    65,    74,
      82,    94,   101,   112,   113,   134,   161,   167,   169,   173,
     187,   189,   203,   210,   211,   213,   216,   217,   219,   228,
     230,   242,   261,   262,   263,   271,   276,   292,   294,   326,
     348,   352,   372,   376,   379,   393,   402,   409,   410,   421,
     442,   445,   744,   745,   747,   749,   751,   753,   755,   756,
     757,   759,   760,   761,   763,   764,   852,   872,   878,   881,
     187,   853,   869,   187,   841,   842,   187,   842,   492,   877,
     606,   524,     3,    48,    49,    51,    52,    64,    65,    72,
     112,   113,   150,   155,   161,   178,   179,   204,   210,   211,
     213,   242,   261,   263,   267,   274,   276,   291,   295,   309,
     312,   326,   352,   372,   379,   393,   395,   409,   410,   415,
     417,   421,   441,   442,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   525,   527,   528,   530,   531,
     878,   882,   522,   847,   533,   847,   481,   492,   492,   665,
     475,   218,   494,   283,     4,     6,     7,     8,     9,    10,
      35,    49,    51,    52,    60,    61,    64,    65,    72,    74,
      98,    99,   100,   101,   102,   103,   104,   112,   113,   115,
     150,   155,   156,   161,   178,   179,   210,   211,   213,   235,
     236,   261,   263,   268,   273,   274,   276,   285,   295,   309,
     326,   352,   370,   379,   395,   409,   410,   415,   417,   418,
     421,   434,   442,   476,   483,   484,   485,   490,   492,   497,
     499,   500,   669,   713,   748,   751,   754,   755,   756,   758,
     759,   760,   763,   764,   775,   777,   778,   779,   781,   794,
     795,   801,   820,   825,   832,   833,   844,   845,   846,   847,
     848,   831,   832,   638,   638,   847,   638,   475,   168,   411,
     481,   492,   840,   485,   828,     3,   167,   169,   445,   528,
     632,   634,   167,   635,   775,   805,   848,   674,   496,   492,
     855,   493,   493,   505,   840,   168,   214,   733,   860,   475,
     218,    27,   130,   679,   679,    54,   679,   158,   163,   231,
     280,   689,   691,   692,   715,   717,   718,   719,   683,   684,
     492,   150,    23,    29,   135,   287,   337,   341,   371,   438,
     511,   514,   515,   337,   150,    36,    55,   106,   196,   246,
     254,   266,   297,   337,   343,   365,   371,   385,   514,   556,
     559,   150,   337,   371,   514,   150,   337,   371,   514,     3,
      27,    44,    50,    74,    82,    94,   101,   130,   167,   169,
     173,   189,   203,   216,   217,   219,   228,   230,   242,   262,
     271,   292,   294,   348,   376,   393,   402,   421,   443,   445,
     485,   493,   775,   807,   808,   850,   856,   878,   883,   775,
     827,     3,    27,    31,    32,    33,    34,    35,    36,    37,
      40,    53,    60,    61,    67,    73,    75,    86,    93,    98,
      99,   100,   102,   103,   104,   115,   117,   124,   130,   131,
     137,   141,   145,   156,   158,   163,   165,   168,   175,   177,
     181,   194,   201,   212,   214,   225,   226,   231,   235,   236,
     268,   273,   280,   283,   284,   288,   289,   306,   316,   331,
     345,   364,   370,   381,   397,   400,   408,   411,   412,   418,
     427,   428,   434,   435,   441,   443,   450,   451,   453,   454,
     843,   857,   878,   882,   884,   826,   493,   492,   596,   606,
     268,   864,   494,   854,    36,   447,   187,   840,   187,   625,
     840,   840,    82,   619,   492,   662,   458,    83,   127,   300,
     405,   444,   762,   762,   762,   492,   750,   750,   312,   492,
     752,   150,   492,    64,    65,   762,   750,   747,   456,   478,
     492,   765,   492,   765,   492,    35,   746,   492,   109,   110,
     184,   185,   248,   249,   250,   251,   252,   253,   256,   257,
     361,   362,   472,   473,   492,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   750,    58,   344,   496,   870,   150,
     496,   870,   150,   496,   870,   150,   283,   805,   400,   493,
     496,     4,   156,   283,   418,   483,   484,   523,   525,   526,
     529,   558,   561,   846,   847,   524,   492,   650,   654,   529,
     558,   640,   642,   807,   745,   809,    36,   229,   848,   492,
     829,   490,   775,   824,   492,   492,   163,   492,   492,   669,
     492,   492,   492,   775,   492,   492,   492,   492,   492,   492,
     492,   492,   492,   775,   775,   775,   146,   834,   835,   805,
     806,   669,   775,   805,   796,   797,   848,   849,     9,   829,
     828,   492,   847,   492,   846,   847,     3,     8,    11,    16,
      17,    18,    33,    36,    41,    48,    73,   173,   189,   194,
     216,   217,   230,   268,   271,   285,   288,   376,   476,   479,
     480,   481,   483,   484,   485,   486,   487,   488,   799,   800,
     801,   803,   455,   782,   829,    15,   294,   775,    15,   214,
     496,   676,   492,   847,   829,   494,   828,   676,     3,   115,
     234,   558,   641,   764,   847,    97,   115,   642,   115,   642,
     840,   493,   496,   522,   493,   496,   675,   841,    36,   855,
     860,   537,   840,    36,   848,   371,   229,   671,   671,   685,
     686,   775,   671,   160,   265,   705,   220,   266,   325,   374,
     433,     4,     9,    27,   700,   775,   483,   484,   701,   702,
     775,   777,   715,   716,   692,   691,   689,   690,   163,   718,
     278,   720,   689,   715,   805,   840,    67,    75,    86,   165,
     187,   316,   428,   577,   587,   602,   848,    75,    86,   554,
      86,   554,   492,   411,   492,   575,   240,   431,   575,    86,
     496,   411,   840,   747,   558,    54,   560,   558,   558,   106,
     246,   254,    54,   411,   454,   478,   557,   259,   357,   557,
     559,   733,    86,   411,   554,   357,   840,   411,   357,   807,
     807,   808,   493,   496,   683,   684,    13,    14,   491,   501,
     411,   595,   600,   848,   454,   653,   329,   400,   447,   150,
      93,   562,   608,   616,   629,   865,   843,   494,   142,   840,
     268,   556,   609,   268,    36,   492,   596,   596,   187,   590,
     620,   848,   493,   807,    36,   492,   805,   846,   872,   809,
     762,   762,    35,   746,   409,   409,   846,   846,   743,   848,
     490,   490,   846,   846,   411,   411,   411,   411,   745,   869,
     853,   841,   842,   842,   853,   493,   187,   625,   840,   524,
     530,     4,   846,     4,   846,   652,   659,   857,    50,    95,
     121,   139,   143,   164,   167,   182,   273,   281,   323,   656,
     496,   493,   496,   493,   496,   666,   805,   826,   806,   450,
     821,   822,   775,   805,   492,   846,   846,     3,   766,   767,
     768,   769,   770,   771,   772,   773,   810,   811,   847,   846,
     846,   775,     8,    16,    17,    18,   479,   480,   481,   483,
     484,   485,   486,   487,   488,   799,   804,   848,   775,   812,
     483,   484,   492,   776,   777,   801,   814,   825,   493,   805,
     775,   805,   815,   775,    53,   168,   226,   412,   775,   805,
     818,   775,   492,   848,   339,   838,   491,   493,   496,   496,
     498,   501,   805,   775,   774,   774,   745,   775,   775,   775,
     775,     5,   857,   858,   409,    40,   397,   830,   853,   775,
     775,   492,   669,   819,   130,   156,   268,   273,   278,   418,
     429,   775,   273,   492,   775,   411,    48,   173,   189,   194,
     230,   376,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,    27,    34,   381,   798,   177,   159,   783,   775,
     352,   492,   795,   775,   174,   234,   400,   404,   406,   431,
     677,   840,   833,   168,   723,   807,   485,   723,   492,   847,
     493,   840,   632,   534,   840,   775,   493,   492,   435,   862,
     115,   296,   492,   536,   668,    36,   848,   492,   541,   550,
     552,   848,   496,    37,   124,   435,   687,   352,   353,   483,
     484,   702,   704,   777,   374,   220,   284,   305,   305,   496,
     487,     4,   703,   846,   703,   352,   353,   704,   839,   840,
     272,   378,   721,   716,   690,   493,   337,   514,   492,   187,
     587,   842,   220,   268,   220,   435,   492,   580,   745,   842,
     848,   187,   842,   187,   848,    23,   135,   371,   510,   513,
     570,   585,   857,   842,   579,   599,   857,   842,   511,   842,
     337,   371,   514,   556,   558,   853,   842,   558,   853,   842,
     558,   337,   371,   514,   842,   842,   842,   842,   337,   371,
     514,   842,   842,   683,   683,   683,   443,   808,   188,   342,
     682,   775,   775,   775,   827,   321,   649,   493,   496,   281,
     168,   411,   644,   447,   840,   840,   848,   606,   843,   492,
     492,   150,   150,   149,   668,   230,   577,   587,   591,   594,
     603,   605,   848,   454,   456,   582,   454,   621,   268,   283,
     493,   775,   805,   493,   493,   870,   493,   490,   475,   475,
     493,   493,   493,   496,   745,   846,   491,   846,   493,   493,
     767,   769,   770,   771,   770,   771,   771,   870,   870,   283,
     870,   268,    36,   493,   496,   485,   492,   529,   558,   651,
      36,   648,   847,   648,   268,   273,   323,   648,   648,   640,
     745,   493,   491,   775,   137,   822,   823,    36,   493,   775,
     493,   493,   493,   168,   493,   493,   496,   493,   494,   306,
     813,   493,   776,   776,   775,    11,    16,    17,    18,   194,
     216,   285,   479,   480,   481,   483,   484,   485,   486,   487,
     488,   801,   776,   493,   493,   163,   168,   816,   817,   493,
      36,   818,   805,   818,   818,   168,   493,    36,   841,   492,
     775,   836,   829,   775,   796,   775,   493,   493,   475,   776,
     776,   143,   805,   168,   130,   156,   273,   278,   418,   429,
     492,   143,   804,   775,   397,   830,   775,   819,   775,   411,
     492,   669,   492,   492,   293,   787,   404,   406,   404,   406,
     840,   400,   678,   678,   678,   225,   353,   492,   669,   724,
     725,   726,   733,   734,   778,   780,   781,   848,   451,   739,
     683,   835,   739,   846,   774,   855,   666,   724,   451,   861,
     441,   399,   434,   545,   540,   549,   848,   283,   542,   848,
     546,   552,   496,   723,   481,   829,   686,   285,   799,   802,
     477,   688,     4,   846,   704,   284,   433,   701,   496,   239,
     411,   775,   268,   602,   492,   150,   492,   580,   197,   600,
     563,   287,   573,   563,    23,   135,   341,   343,   371,   507,
     508,   509,   515,   516,   150,   870,   150,   870,   570,   585,
     570,   493,   496,   566,   847,   493,   496,   481,   494,   411,
     357,    86,   411,   554,   357,   411,   411,   411,   357,   682,
     682,   682,   808,   275,   275,   493,   491,   388,   389,   658,
     847,   595,   649,   840,   492,   596,   864,   400,   847,   874,
     875,   600,   840,   625,   840,   842,   454,   624,   840,   493,
     496,   281,   575,   281,   283,   574,   575,    36,   150,   840,
     493,   746,   846,   765,   765,   746,   848,   491,   491,   853,
     150,   652,   529,   646,   657,   847,   847,   273,   600,   485,
     600,   847,   847,   408,   775,   141,   745,   493,   775,   775,
     804,   775,   816,   745,   776,   776,   776,   776,   130,   268,
     278,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   775,   775,   817,   816,   745,   493,   493,   493,   805,
     745,   493,   775,   836,   837,    36,   493,   774,   775,    33,
      33,   775,   493,   775,   168,   492,   809,   775,   493,   143,
     776,   776,   143,   143,   775,   775,   684,   451,   492,   788,
     848,   678,   678,   678,   678,   840,   840,   840,   669,   734,
     168,   669,   725,   726,    36,   727,   728,   848,   496,    94,
     169,   203,   219,   228,   262,   348,   730,   728,    36,   727,
     729,   848,   478,   738,   828,   775,   177,   706,   682,   838,
     706,   493,   493,   775,   345,   544,   440,   493,   496,   829,
      84,   544,   493,   496,   541,   861,   775,   492,   688,   160,
     224,   284,   840,   842,   493,   150,   600,   587,   600,   563,
     590,   493,   117,   201,   266,   268,   586,   492,   597,   172,
     115,   186,   268,   575,   557,   107,   115,   172,   268,   387,
     390,   559,   575,   371,   509,   422,   842,   848,   513,   599,
       3,    44,    50,    74,    82,    94,   101,   167,   169,   173,
     189,   203,   216,   217,   219,   228,   230,   242,   262,   267,
     271,   285,   292,   294,   348,   372,   376,   393,   402,   421,
     445,   483,   484,   558,   564,   601,   745,   802,   847,   850,
     878,   884,   857,   842,   842,   842,   842,   842,   842,   842,
     842,   842,   842,   493,   493,   493,   683,   557,   658,   492,
     594,   621,   187,   840,   493,   496,   493,   609,    36,   492,
     877,   107,   266,   584,   582,   591,    79,   668,   590,   435,
     618,   491,   745,   870,   625,   493,   496,   600,   775,   493,
     493,   817,   168,   130,   278,   492,   493,   493,   493,   496,
     848,   775,   775,   775,   809,   493,   775,    33,    33,   775,
     775,   143,   493,   493,   775,   789,   848,   840,   840,   840,
     840,   728,   729,   492,   493,   848,   849,   402,   697,   698,
     492,   725,   219,   292,   731,   725,   731,   219,   730,   731,
     219,   698,   492,   848,   698,   492,   290,    54,   181,   714,
     493,   714,   847,   832,   668,   296,   668,   540,   283,   492,
     538,   481,   552,   544,   804,   563,   587,   493,   493,   454,
     593,   118,   190,   199,   117,   437,   570,   588,    67,    73,
      86,   115,   117,   172,   201,   268,   273,   316,   331,   428,
     435,   568,   569,   581,    30,    54,   607,   187,   273,   558,
     775,   607,   273,   483,   484,   561,   848,   745,   870,   870,
     242,   393,   850,   854,   481,   411,   411,   682,   650,   435,
     645,   647,   600,   493,    36,   268,   492,   847,   621,   149,
     668,   594,   624,   107,   147,   195,   574,   120,   135,   315,
     454,   630,   283,   617,   848,   492,    36,   657,   776,   168,
     492,   809,   836,   493,   775,   775,   775,   493,   302,   790,
     735,   736,   780,   727,   492,     4,     9,   693,   695,   696,
     848,   841,   725,   283,   435,   732,   725,   219,   725,   740,
     741,   848,   492,   740,   848,    96,   178,   351,   492,   707,
     708,   709,   710,   711,   712,   775,   775,   453,   784,   847,
     784,   545,    86,   492,   543,   551,   780,   848,   131,   775,
     493,   331,   593,   492,   583,   563,   493,   496,   492,   853,
     842,   776,   607,   118,   190,   117,   273,   220,   840,   593,
      81,   115,    36,   150,    73,   742,   854,   487,   564,   842,
     842,   493,   557,   122,   493,   582,   668,   150,    36,   842,
     624,   493,    27,    78,    87,   116,   186,   198,   387,   390,
     578,   578,   353,   353,    59,    67,   234,   840,   551,   776,
     809,   493,    54,   683,   493,   496,    36,   737,   841,   305,
     487,   305,   353,   487,   492,   492,   493,   775,   492,   725,
     732,   493,   496,   745,   740,   493,   492,   373,   492,   493,
     496,   785,   786,   848,   435,   694,   694,   440,   842,   775,
     493,   496,    73,   547,   547,   269,   433,   840,   563,   589,
     592,   857,   570,   775,   268,   569,    36,   593,   596,   842,
     186,   853,   435,   512,   487,   422,   650,   847,   621,   574,
     630,   840,   668,   877,   582,    67,   286,    67,   618,   493,
     493,   805,   324,   353,   791,   738,   735,   492,   493,   848,
     693,   841,   741,   742,   493,   805,   492,   805,   708,   496,
      36,   355,   668,   493,   739,   543,   853,   548,   853,   548,
     371,   596,   493,   496,   481,   493,   186,   244,   604,   492,
     565,   775,   422,    36,   492,   630,   624,   574,   286,   286,
     492,   621,    48,    97,   424,   775,   792,   793,   792,   493,
     740,   493,   496,   493,   493,   493,   707,   493,   786,   788,
     696,   547,   687,   687,   550,   604,   592,   564,   266,   576,
     565,   169,   301,   377,   283,   571,   572,   598,   556,   668,
     551,   739,   793,   352,   162,   311,   162,   311,   493,     9,
     338,   699,   493,   548,   688,   688,   739,   572,   199,   120,
     433,   283,   598,   283,   571,   493,   630,   493,    33,   493,
     492,   687,   563,    58,   266,   344,   371,   567,   567,   621,
     793,     9,   688,    22,   115,   273,   739,   493
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 466 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 482 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 494 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 537 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 111:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 112:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 113:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 114:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 115:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 116:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 117:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 118:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 124:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 125:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 126:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 127:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 128:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 129:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 130:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 131:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 132:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 133:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 134:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 135:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 136:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 137:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 138:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 139:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 140:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 141:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 142:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 143:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 144:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 145:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 146:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 147:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 148:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 149:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 150:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 151:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 152:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 153:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 154:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 155:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 156:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 157:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 158:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 159:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 160:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 161:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 162:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 163:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 164:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 165:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 166:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 167:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 168:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 169:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 170:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 171:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 172:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 173:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 174:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 175:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 176:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 177:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 178:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 179:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 180:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 181:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 182:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 183:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 184:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 185:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 186:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 187:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 188:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 189:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 190:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 191:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 192:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 193:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 194:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 200:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 201:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 204:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 205:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 206:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 207:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 209:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 210:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 211:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 212:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 213:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 214:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 215:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 216:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 217:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 218:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 219:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 220:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 221:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 222:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 223:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 224:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 225:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 226:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 227:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 228:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 229:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 230:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 231:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 235:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 236:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 237:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 238:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 239:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 240:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 241:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 242:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 243:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 244:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 245:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 246:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 247:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 248:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 249:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 250:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 251:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 252:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 253:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 254:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 255:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 256:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 257:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 258:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 259:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 260:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 261:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 262:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 263:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 264:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 265:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 266:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 267:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 268:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 269:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 270:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 271:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 272:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 273:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 274:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 275:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 276:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 277:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 278:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 279:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 280:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 281:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 282:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 283:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 284:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 285:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 286:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 287:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 288:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 289:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 290:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 291:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 292:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 293:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 294:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 295:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 296:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 297:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 298:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 299:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 300:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 302:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 303:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 304:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 305:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 306:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 307:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 308:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 309:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 310:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 311:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 312:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 313:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 314:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 315:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 316:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 317:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 318:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 319:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 320:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 321:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 322:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 323:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 324:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 325:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 326:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 327:
#line 461 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 328:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 329:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 330:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 331:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 332:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 333:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 334:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 335:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 336:
#line 498 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 337:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 338:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 339:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 340:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 341:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 342:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 343:
#line 549 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 344:
#line 564 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 345:
#line 577 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 346:
#line 592 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 348:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 349:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 350:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 351:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 352:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 353:
#line 649 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 354:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 355:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 356:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 357:
#line 661 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 358:
#line 663 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 359:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 360:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 361:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 362:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 363:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 364:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 365:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 366:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 367:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 368:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 369:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 370:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 371:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 372:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 373:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 374:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 377:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 378:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 379:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 380:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 381:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 382:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 383:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 384:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 385:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 386:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 387:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 388:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 389:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 390:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 391:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 392:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 393:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 394:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 395:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 396:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 397:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 398:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 399:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 400:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 401:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 402:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 403:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;

  case 404:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 405:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 406:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 407:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 408:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 409:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 410:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 411:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 412:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 413:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 414:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 415:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 416:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 417:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 418:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 419:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 420:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 421:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 422:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 423:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 424:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 425:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 426:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 427:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 428:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 429:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 430:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 431:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 432:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 433:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 434:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 435:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 436:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 437:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 438:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 439:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 440:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 441:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 442:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 443:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 444:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 445:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 446:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 447:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 448:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 449:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 450:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 451:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 452:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 453:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 454:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 455:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 456:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 457:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 458:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 459:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 460:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 461:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 462:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 463:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 464:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 465:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 466:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 467:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 470:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 471:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 472:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 473:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 474:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 475:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 476:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 477:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 478:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 479:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 480:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 481:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 482:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 483:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 484:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 485:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 486:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 487:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 488:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 489:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 490:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 491:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 492:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 493:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 494:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 495:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 496:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 497:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 498:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 499:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 500:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 501:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 502:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 503:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 504:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 505:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 506:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 507:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 508:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 509:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 510:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 511:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 512:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 513:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 516:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 517:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 518:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 519:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 520:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 521:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 522:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 527:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 530:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 531:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 532:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 533:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 534:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 535:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 536:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 537:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 538:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 539:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 540:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 541:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 542:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 543:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 544:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 545:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 546:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 547:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 548:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 549:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 550:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 551:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 552:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 553:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 554:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 555:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 556:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 557:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 558:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 559:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 560:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 561:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 562:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 563:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 564:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 565:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 566:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 567:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 568:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 569:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 570:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 571:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 572:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 573:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 574:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 575:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 576:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 577:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 578:
#line 373 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 579:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 580:
#line 378 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 581:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 582:
#line 383 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 583:
#line 387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 584:
#line 396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 585:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 586:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 587:
#line 408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 588:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 589:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 590:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 591:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 592:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 593:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 594:
#line 420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 595:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 596:
#line 425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 597:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 598:
#line 432 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 599:
#line 448 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 600:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 601:
#line 455 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 602:
#line 458 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 603:
#line 466 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 604:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 605:
#line 474 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 606:
#line 478 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 607:
#line 482 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 608:
#line 486 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 609:
#line 493 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 610:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 611:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 612:
#line 505 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 613:
#line 510 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 614:
#line 514 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 615:
#line 518 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 616:
#line 522 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 617:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 618:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 619:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 620:
#line 541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 621:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 622:
#line 546 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 623:
#line 548 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 624:
#line 553 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 625:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 626:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 627:
#line 561 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 628:
#line 581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 629:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 630:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 631:
#line 589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 632:
#line 590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 633:
#line 594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 634:
#line 595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 635:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 636:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 637:
#line 624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 638:
#line 625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 639:
#line 629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 640:
#line 630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 641:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 642:
#line 635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 643:
#line 636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 644:
#line 637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 645:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 646:
#line 643 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 647:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 648:
#line 663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 649:
#line 670 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 650:
#line 676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 651:
#line 677 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 652:
#line 681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 653:
#line 682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 654:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 655:
#line 687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 656:
#line 691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 657:
#line 692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 658:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 659:
#line 697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 660:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 661:
#line 712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 662:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 663:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 664:
#line 715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 665:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 666:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 667:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 668:
#line 726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 669:
#line 727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 670:
#line 737 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 671:
#line 743 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 672:
#line 760 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 673:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 674:
#line 765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 675:
#line 766 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 676:
#line 773 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 677:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 678:
#line 787 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 679:
#line 795 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 680:
#line 804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 681:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 682:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 683:
#line 843 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 684:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 685:
#line 860 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 686:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 687:
#line 889 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 688:
#line 901 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 689:
#line 917 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 690:
#line 923 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 691:
#line 928 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 692:
#line 934 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 693:
#line 940 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 694:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 695:
#line 950 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 696:
#line 954 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 697:
#line 958 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 698:
#line 964 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 699:
#line 970 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 700:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 701:
#line 976 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 702:
#line 977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 703:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 704:
#line 982 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 705:
#line 983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 706:
#line 995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 707:
#line 996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 708:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 709:
#line 1009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 710:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 711:
#line 1023 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 712:
#line 1055 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 713:
#line 1066 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 714:
#line 1079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 715:
#line 1083 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 716:
#line 1084 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 717:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 718:
#line 1088 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 719:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 720:
#line 1092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 721:
#line 1097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 722:
#line 1098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 723:
#line 1104 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 724:
#line 1108 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 725:
#line 1114 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 726:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 727:
#line 1142 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 728:
#line 1155 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 729:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 732:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 733:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 734:
#line 1177 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 735:
#line 1182 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 736:
#line 1188 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 737:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 738:
#line 1198 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 739:
#line 1204 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 740:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 741:
#line 1216 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 742:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 743:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 744:
#line 1223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 745:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 746:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 747:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 748:
#line 1228 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 749:
#line 1233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 750:
#line 1252 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 751:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 752:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 753:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 754:
#line 1267 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 755:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 756:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 757:
#line 1288 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 758:
#line 1293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 759:
#line 1298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 760:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 761:
#line 1308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 762:
#line 1313 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 763:
#line 1318 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 764:
#line 1323 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 765:
#line 1329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 766:
#line 1335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 767:
#line 1341 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 768:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 769:
#line 1369 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 770:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 771:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 772:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 773:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 774:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 775:
#line 1415 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 776:
#line 1436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 777:
#line 1440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 778:
#line 1446 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 779:
#line 1450 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 780:
#line 1463 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 781:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 782:
#line 1481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 783:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 784:
#line 1485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 785:
#line 1487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 786:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 787:
#line 1491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 788:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 789:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 790:
#line 1504 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 791:
#line 1513 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 792:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 793:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 794:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 795:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 796:
#line 1549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 797:
#line 1550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 814:
#line 1579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 815:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 816:
#line 1583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 817:
#line 1585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 818:
#line 1587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 819:
#line 1589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 820:
#line 1591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 821:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 822:
#line 1595 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 823:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 824:
#line 1605 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 825:
#line 1611 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 826:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 827:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 828:
#line 1629 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 829:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 830:
#line 1665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 831:
#line 1668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 832:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 833:
#line 1678 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 834:
#line 1693 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 835:
#line 1695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 836:
#line 1697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 837:
#line 1699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 838:
#line 1701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 1703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 1709 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 1711 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 1713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 1715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 848:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 849:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 850:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 851:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 852:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 853:
#line 1733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 854:
#line 1735 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 855:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 856:
#line 1743 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 857:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 858:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 859:
#line 1760 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 860:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 861:
#line 1772 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 862:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 863:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 864:
#line 1794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 865:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 866:
#line 1810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 867:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 868:
#line 1836 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 869:
#line 1844 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 1852 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 871:
#line 1860 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 872:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 873:
#line 1875 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 874:
#line 1879 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 875:
#line 1883 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 876:
#line 1888 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 877:
#line 1896 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 878:
#line 1904 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 879:
#line 1920 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 880:
#line 1928 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 881:
#line 1936 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 882:
#line 1944 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 883:
#line 1952 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 884:
#line 1960 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 885:
#line 1968 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 886:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 887:
#line 1976 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 888:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 889:
#line 1984 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 890:
#line 1992 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 891:
#line 2000 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 892:
#line 2008 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 893:
#line 2016 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 894:
#line 2036 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 895:
#line 2058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 896:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 897:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 898:
#line 2089 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 899:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 900:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 901:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 902:
#line 2112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 903:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 904:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 905:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 906:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 907:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 908:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 909:
#line 2126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 910:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 911:
#line 2130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 912:
#line 2132 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 913:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 914:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 915:
#line 2138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 916:
#line 2140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 917:
#line 2142 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 918:
#line 2144 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 919:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 920:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 921:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 922:
#line 2169 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 923:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 924:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 925:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 926:
#line 2191 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 927:
#line 2206 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 928:
#line 2218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 929:
#line 2220 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 930:
#line 2232 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 931:
#line 2243 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 932:
#line 2267 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 933:
#line 2278 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 934:
#line 2287 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 935:
#line 2291 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 936:
#line 2298 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 937:
#line 2306 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 938:
#line 2314 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 939:
#line 2325 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 940:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 941:
#line 2361 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 942:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 943:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 944:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 945:
#line 2415 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 946:
#line 2421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 947:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 948:
#line 2429 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 949:
#line 2433 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 950:
#line 2437 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 951:
#line 2441 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 952:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 953:
#line 2449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 954:
#line 2453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 955:
#line 2457 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 956:
#line 2461 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 957:
#line 2465 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 958:
#line 2469 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 959:
#line 2473 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 960:
#line 2477 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 961:
#line 2481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 962:
#line 2483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 963:
#line 2485 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 964:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 965:
#line 2498 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 966:
#line 2503 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 967:
#line 2510 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 968:
#line 2525 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 969:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 970:
#line 2536 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 971:
#line 2540 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 972:
#line 2544 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 973:
#line 2548 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 974:
#line 2561 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 975:
#line 2562 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 976:
#line 2566 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 977:
#line 2567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 978:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 979:
#line 2576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 980:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 981:
#line 2582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 982:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 983:
#line 2595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 984:
#line 2597 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 985:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 986:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 987:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 988:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 989:
#line 2644 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 990:
#line 2645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 991:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 992:
#line 2663 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 993:
#line 2669 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 994:
#line 2679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 995:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 996:
#line 2741 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 997:
#line 2749 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 998:
#line 2757 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 999:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 1000:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 1001:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1002:
#line 2794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1003:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 1004:
#line 2798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 1005:
#line 2802 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 1006:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1007:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1008:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 1009:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 1010:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 1011:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1012:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 1013:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 1014:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 1015:
#line 2826 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 1016:
#line 2827 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 1017:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 1018:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 1019:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 1020:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 1021:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 1022:
#line 2833 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 1023:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 1024:
#line 2835 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 1025:
#line 2839 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1026:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1027:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1028:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1029:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1030:
#line 2855 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1031:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 1032:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 1033:
#line 2861 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 1034:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 1035:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 1036:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 1037:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1038:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1039:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 1040:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1041:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1042:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 1043:
#line 2910 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 1044:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1045:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 1046:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 1047:
#line 2933 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 1048:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 1049:
#line 2944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 1050:
#line 2949 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1051:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1052:
#line 2959 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1053:
#line 2960 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 1054:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 1055:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 1056:
#line 2963 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 1057:
#line 2964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 1058:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 1059:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1060:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1061:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1062:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1063:
#line 2983 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1064:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1065:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1066:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1067:
#line 3014 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1068:
#line 3018 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1069:
#line 3023 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1070:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1071:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1072:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1073:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1074:
#line 3053 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1075:
#line 3056 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1076:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1077:
#line 3058 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1078:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1079:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1080:
#line 3079 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1081:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1082:
#line 3093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1083:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1084:
#line 3108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1085:
#line 3109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1086:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1087:
#line 3113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1088:
#line 3117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1089:
#line 3121 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1090:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1091:
#line 3132 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1092:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1093:
#line 3150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1094:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1095:
#line 3155 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1096:
#line 3156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1097:
#line 3160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1098:
#line 3161 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1101:
#line 3175 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1102:
#line 3176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1103:
#line 3180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1104:
#line 3181 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1105:
#line 3185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1106:
#line 3201 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1107:
#line 3209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1108:
#line 3217 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1109:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1110:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1111:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1112:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1113:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1114:
#line 3257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1115:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1116:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1117:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1118:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1119:
#line 3267 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1120:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1121:
#line 3278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1122:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1123:
#line 3294 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1124:
#line 3321 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1125:
#line 3323 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1126:
#line 3327 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1127:
#line 3329 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1128:
#line 3340 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1129:
#line 3343 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1130:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1131:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1132:
#line 3362 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1133:
#line 3374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1134:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1135:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1136:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1137:
#line 3432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1138:
#line 3436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1139:
#line 3440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1140:
#line 3444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1141:
#line 3448 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1142:
#line 3452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1143:
#line 3456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1144:
#line 3461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1145:
#line 3462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1146:
#line 3478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1147:
#line 3479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1148:
#line 3480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1149:
#line 3483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1150:
#line 3484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1151:
#line 3490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1152:
#line 3491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1153:
#line 3492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1154:
#line 3495 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1155:
#line 3496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1156:
#line 3497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1157:
#line 3500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1158:
#line 3501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1159:
#line 3502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1160:
#line 3505 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1161:
#line 3506 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1162:
#line 3510 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1163:
#line 3512 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1164:
#line 3516 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1165:
#line 3517 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1167:
#line 3528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1168:
#line 3529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1169:
#line 3530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1170:
#line 3531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1171:
#line 3534 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 3535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1173:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1174:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1175:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1176:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1177:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1178:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1179:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1180:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1181:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1182:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1183:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1184:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1189:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1190:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1191:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1192:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1193:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1194:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1195:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1196:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1197:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 1198:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 1199:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1200:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1201:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 1202:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 1203:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 1204:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 1205:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 1206:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 1207:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 1208:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 1209:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 1210:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 1211:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 1212:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 1213:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 1214:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 1215:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 1216:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 1217:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 1218:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 1219:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1220:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1221:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 1222:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 1223:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 1224:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 1225:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 1226:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 1227:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 1228:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 1229:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1230:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1231:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1232:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1233:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1234:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1235:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1236:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1237:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1238:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;


/* Line 1267 of yacc.c.  */
#line 24523 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 65 "third_party/libpg_query/grammar/statements/execute.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

