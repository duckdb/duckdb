/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXPORT_STATE = 408,
     EXTENSION = 409,
     EXTERNAL = 410,
     EXTRACT = 411,
     FALSE_P = 412,
     FAMILY = 413,
     FETCH = 414,
     FILTER = 415,
     FIRST_P = 416,
     FLOAT_P = 417,
     FOLLOWING = 418,
     FOR = 419,
     FORCE = 420,
     FOREIGN = 421,
     FORWARD = 422,
     FREEZE = 423,
     FROM = 424,
     FULL = 425,
     FUNCTION = 426,
     FUNCTIONS = 427,
     GENERATED = 428,
     GLOB = 429,
     GLOBAL = 430,
     GRANT = 431,
     GRANTED = 432,
     GROUP_P = 433,
     GROUPING = 434,
     GROUPING_ID = 435,
     HANDLER = 436,
     HAVING = 437,
     HEADER_P = 438,
     HOLD = 439,
     HOUR_P = 440,
     HOURS_P = 441,
     IDENTITY_P = 442,
     IF_P = 443,
     IGNORE_P = 444,
     ILIKE = 445,
     IMMEDIATE = 446,
     IMMUTABLE = 447,
     IMPLICIT_P = 448,
     IMPORT_P = 449,
     IN_P = 450,
     INCLUDING = 451,
     INCREMENT = 452,
     INDEX = 453,
     INDEXES = 454,
     INHERIT = 455,
     INHERITS = 456,
     INITIALLY = 457,
     INLINE_P = 458,
     INNER_P = 459,
     INOUT = 460,
     INPUT_P = 461,
     INSENSITIVE = 462,
     INSERT = 463,
     INSTALL = 464,
     INSTEAD = 465,
     INT_P = 466,
     INTEGER = 467,
     INTERSECT = 468,
     INTERVAL = 469,
     INTO = 470,
     INVOKER = 471,
     IS = 472,
     ISNULL = 473,
     ISOLATION = 474,
     JOIN = 475,
     JSON = 476,
     KEY = 477,
     LABEL = 478,
     LANGUAGE = 479,
     LARGE_P = 480,
     LAST_P = 481,
     LATERAL_P = 482,
     LEADING = 483,
     LEAKPROOF = 484,
     LEFT = 485,
     LEVEL = 486,
     LIKE = 487,
     LIMIT = 488,
     LISTEN = 489,
     LOAD = 490,
     LOCAL = 491,
     LOCALTIME = 492,
     LOCALTIMESTAMP = 493,
     LOCATION = 494,
     LOCK_P = 495,
     LOCKED = 496,
     LOGGED = 497,
     MACRO = 498,
     MAP = 499,
     MAPPING = 500,
     MATCH = 501,
     MATERIALIZED = 502,
     MAXVALUE = 503,
     METHOD = 504,
     MICROSECOND_P = 505,
     MICROSECONDS_P = 506,
     MILLISECOND_P = 507,
     MILLISECONDS_P = 508,
     MINUTE_P = 509,
     MINUTES_P = 510,
     MINVALUE = 511,
     MODE = 512,
     MONTH_P = 513,
     MONTHS_P = 514,
     MOVE = 515,
     NAME_P = 516,
     NAMES = 517,
     NATIONAL = 518,
     NATURAL = 519,
     NCHAR = 520,
     NEW = 521,
     NEXT = 522,
     NO = 523,
     NONE = 524,
     NOT = 525,
     NOTHING = 526,
     NOTIFY = 527,
     NOTNULL = 528,
     NOWAIT = 529,
     NULL_P = 530,
     NULLIF = 531,
     NULLS_P = 532,
     NUMERIC = 533,
     OBJECT_P = 534,
     OF = 535,
     OFF = 536,
     OFFSET = 537,
     OIDS = 538,
     OLD = 539,
     ON = 540,
     ONLY = 541,
     OPERATOR = 542,
     OPTION = 543,
     OPTIONS = 544,
     OR = 545,
     ORDER = 546,
     ORDINALITY = 547,
     OUT_P = 548,
     OUTER_P = 549,
     OVER = 550,
     OVERLAPS = 551,
     OVERLAY = 552,
     OVERRIDING = 553,
     OWNED = 554,
     OWNER = 555,
     PARALLEL = 556,
     PARSER = 557,
     PARTIAL = 558,
     PARTITION = 559,
     PASSING = 560,
     PASSWORD = 561,
     PERCENT = 562,
     PLACING = 563,
     PLANS = 564,
     POLICY = 565,
     POSITION = 566,
     PRAGMA_P = 567,
     PRECEDING = 568,
     PRECISION = 569,
     PREPARE = 570,
     PREPARED = 571,
     PRESERVE = 572,
     PRIMARY = 573,
     PRIOR = 574,
     PRIVILEGES = 575,
     PROCEDURAL = 576,
     PROCEDURE = 577,
     PROGRAM = 578,
     PUBLICATION = 579,
     QUALIFY = 580,
     QUOTE = 581,
     RANGE = 582,
     READ_P = 583,
     REAL = 584,
     REASSIGN = 585,
     RECHECK = 586,
     RECURSIVE = 587,
     REF = 588,
     REFERENCES = 589,
     REFERENCING = 590,
     REFRESH = 591,
     REINDEX = 592,
     RELATIVE_P = 593,
     RELEASE = 594,
     RENAME = 595,
     REPEATABLE = 596,
     REPLACE = 597,
     REPLICA = 598,
     RESET = 599,
     RESPECT_P = 600,
     RESTART = 601,
     RESTRICT = 602,
     RETURNING = 603,
     RETURNS = 604,
     REVOKE = 605,
     RIGHT = 606,
     ROLE = 607,
     ROLLBACK = 608,
     ROLLUP = 609,
     ROW = 610,
     ROWS = 611,
     RULE = 612,
     SAMPLE = 613,
     SAVEPOINT = 614,
     SCHEMA = 615,
     SCHEMAS = 616,
     SCROLL = 617,
     SEARCH = 618,
     SECOND_P = 619,
     SECONDS_P = 620,
     SECURITY = 621,
     SELECT = 622,
     SEQUENCE = 623,
     SEQUENCES = 624,
     SERIALIZABLE = 625,
     SERVER = 626,
     SESSION = 627,
     SESSION_USER = 628,
     SET = 629,
     SETOF = 630,
     SETS = 631,
     SHARE = 632,
     SHOW = 633,
     SIMILAR = 634,
     SIMPLE = 635,
     SKIP = 636,
     SMALLINT = 637,
     SNAPSHOT = 638,
     SOME = 639,
     SQL_P = 640,
     STABLE = 641,
     STANDALONE_P = 642,
     START = 643,
     STATEMENT = 644,
     STATISTICS = 645,
     STDIN = 646,
     STDOUT = 647,
     STORAGE = 648,
     STRICT_P = 649,
     STRIP_P = 650,
     STRUCT = 651,
     SUBSCRIPTION = 652,
     SUBSTRING = 653,
     SUMMARIZE = 654,
     SYMMETRIC = 655,
     SYSID = 656,
     SYSTEM_P = 657,
     TABLE = 658,
     TABLES = 659,
     TABLESAMPLE = 660,
     TABLESPACE = 661,
     TEMP = 662,
     TEMPLATE = 663,
     TEMPORARY = 664,
     TEXT_P = 665,
     THEN = 666,
     TIME = 667,
     TIMESTAMP = 668,
     TO = 669,
     TRAILING = 670,
     TRANSACTION = 671,
     TRANSFORM = 672,
     TREAT = 673,
     TRIGGER = 674,
     TRIM = 675,
     TRUE_P = 676,
     TRUNCATE = 677,
     TRUSTED = 678,
     TRY_CAST = 679,
     TYPE_P = 680,
     TYPES_P = 681,
     UNBOUNDED = 682,
     UNCOMMITTED = 683,
     UNENCRYPTED = 684,
     UNION = 685,
     UNIQUE = 686,
     UNKNOWN = 687,
     UNLISTEN = 688,
     UNLOGGED = 689,
     UNTIL = 690,
     UPDATE = 691,
     USER = 692,
     USING = 693,
     VACUUM = 694,
     VALID = 695,
     VALIDATE = 696,
     VALIDATOR = 697,
     VALUE_P = 698,
     VALUES = 699,
     VARCHAR = 700,
     VARIADIC = 701,
     VARYING = 702,
     VERBOSE = 703,
     VERSION_P = 704,
     VIEW = 705,
     VIEWS = 706,
     VOLATILE = 707,
     WHEN = 708,
     WHERE = 709,
     WHITESPACE_P = 710,
     WINDOW = 711,
     WITH = 712,
     WITHIN = 713,
     WITHOUT = 714,
     WORK = 715,
     WRAPPER = 716,
     WRITE_P = 717,
     XML_P = 718,
     XMLATTRIBUTES = 719,
     XMLCONCAT = 720,
     XMLELEMENT = 721,
     XMLEXISTS = 722,
     XMLFOREST = 723,
     XMLNAMESPACES = 724,
     XMLPARSE = 725,
     XMLPI = 726,
     XMLROOT = 727,
     XMLSERIALIZE = 728,
     XMLTABLE = 729,
     YEAR_P = 730,
     YEARS_P = 731,
     YES_P = 732,
     ZONE = 733,
     NOT_LA = 734,
     NULLS_LA = 735,
     WITH_LA = 736,
     POSTFIXOP = 737,
     UMINUS = 738
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXPORT_STATE 408
#define EXTENSION 409
#define EXTERNAL 410
#define EXTRACT 411
#define FALSE_P 412
#define FAMILY 413
#define FETCH 414
#define FILTER 415
#define FIRST_P 416
#define FLOAT_P 417
#define FOLLOWING 418
#define FOR 419
#define FORCE 420
#define FOREIGN 421
#define FORWARD 422
#define FREEZE 423
#define FROM 424
#define FULL 425
#define FUNCTION 426
#define FUNCTIONS 427
#define GENERATED 428
#define GLOB 429
#define GLOBAL 430
#define GRANT 431
#define GRANTED 432
#define GROUP_P 433
#define GROUPING 434
#define GROUPING_ID 435
#define HANDLER 436
#define HAVING 437
#define HEADER_P 438
#define HOLD 439
#define HOUR_P 440
#define HOURS_P 441
#define IDENTITY_P 442
#define IF_P 443
#define IGNORE_P 444
#define ILIKE 445
#define IMMEDIATE 446
#define IMMUTABLE 447
#define IMPLICIT_P 448
#define IMPORT_P 449
#define IN_P 450
#define INCLUDING 451
#define INCREMENT 452
#define INDEX 453
#define INDEXES 454
#define INHERIT 455
#define INHERITS 456
#define INITIALLY 457
#define INLINE_P 458
#define INNER_P 459
#define INOUT 460
#define INPUT_P 461
#define INSENSITIVE 462
#define INSERT 463
#define INSTALL 464
#define INSTEAD 465
#define INT_P 466
#define INTEGER 467
#define INTERSECT 468
#define INTERVAL 469
#define INTO 470
#define INVOKER 471
#define IS 472
#define ISNULL 473
#define ISOLATION 474
#define JOIN 475
#define JSON 476
#define KEY 477
#define LABEL 478
#define LANGUAGE 479
#define LARGE_P 480
#define LAST_P 481
#define LATERAL_P 482
#define LEADING 483
#define LEAKPROOF 484
#define LEFT 485
#define LEVEL 486
#define LIKE 487
#define LIMIT 488
#define LISTEN 489
#define LOAD 490
#define LOCAL 491
#define LOCALTIME 492
#define LOCALTIMESTAMP 493
#define LOCATION 494
#define LOCK_P 495
#define LOCKED 496
#define LOGGED 497
#define MACRO 498
#define MAP 499
#define MAPPING 500
#define MATCH 501
#define MATERIALIZED 502
#define MAXVALUE 503
#define METHOD 504
#define MICROSECOND_P 505
#define MICROSECONDS_P 506
#define MILLISECOND_P 507
#define MILLISECONDS_P 508
#define MINUTE_P 509
#define MINUTES_P 510
#define MINVALUE 511
#define MODE 512
#define MONTH_P 513
#define MONTHS_P 514
#define MOVE 515
#define NAME_P 516
#define NAMES 517
#define NATIONAL 518
#define NATURAL 519
#define NCHAR 520
#define NEW 521
#define NEXT 522
#define NO 523
#define NONE 524
#define NOT 525
#define NOTHING 526
#define NOTIFY 527
#define NOTNULL 528
#define NOWAIT 529
#define NULL_P 530
#define NULLIF 531
#define NULLS_P 532
#define NUMERIC 533
#define OBJECT_P 534
#define OF 535
#define OFF 536
#define OFFSET 537
#define OIDS 538
#define OLD 539
#define ON 540
#define ONLY 541
#define OPERATOR 542
#define OPTION 543
#define OPTIONS 544
#define OR 545
#define ORDER 546
#define ORDINALITY 547
#define OUT_P 548
#define OUTER_P 549
#define OVER 550
#define OVERLAPS 551
#define OVERLAY 552
#define OVERRIDING 553
#define OWNED 554
#define OWNER 555
#define PARALLEL 556
#define PARSER 557
#define PARTIAL 558
#define PARTITION 559
#define PASSING 560
#define PASSWORD 561
#define PERCENT 562
#define PLACING 563
#define PLANS 564
#define POLICY 565
#define POSITION 566
#define PRAGMA_P 567
#define PRECEDING 568
#define PRECISION 569
#define PREPARE 570
#define PREPARED 571
#define PRESERVE 572
#define PRIMARY 573
#define PRIOR 574
#define PRIVILEGES 575
#define PROCEDURAL 576
#define PROCEDURE 577
#define PROGRAM 578
#define PUBLICATION 579
#define QUALIFY 580
#define QUOTE 581
#define RANGE 582
#define READ_P 583
#define REAL 584
#define REASSIGN 585
#define RECHECK 586
#define RECURSIVE 587
#define REF 588
#define REFERENCES 589
#define REFERENCING 590
#define REFRESH 591
#define REINDEX 592
#define RELATIVE_P 593
#define RELEASE 594
#define RENAME 595
#define REPEATABLE 596
#define REPLACE 597
#define REPLICA 598
#define RESET 599
#define RESPECT_P 600
#define RESTART 601
#define RESTRICT 602
#define RETURNING 603
#define RETURNS 604
#define REVOKE 605
#define RIGHT 606
#define ROLE 607
#define ROLLBACK 608
#define ROLLUP 609
#define ROW 610
#define ROWS 611
#define RULE 612
#define SAMPLE 613
#define SAVEPOINT 614
#define SCHEMA 615
#define SCHEMAS 616
#define SCROLL 617
#define SEARCH 618
#define SECOND_P 619
#define SECONDS_P 620
#define SECURITY 621
#define SELECT 622
#define SEQUENCE 623
#define SEQUENCES 624
#define SERIALIZABLE 625
#define SERVER 626
#define SESSION 627
#define SESSION_USER 628
#define SET 629
#define SETOF 630
#define SETS 631
#define SHARE 632
#define SHOW 633
#define SIMILAR 634
#define SIMPLE 635
#define SKIP 636
#define SMALLINT 637
#define SNAPSHOT 638
#define SOME 639
#define SQL_P 640
#define STABLE 641
#define STANDALONE_P 642
#define START 643
#define STATEMENT 644
#define STATISTICS 645
#define STDIN 646
#define STDOUT 647
#define STORAGE 648
#define STRICT_P 649
#define STRIP_P 650
#define STRUCT 651
#define SUBSCRIPTION 652
#define SUBSTRING 653
#define SUMMARIZE 654
#define SYMMETRIC 655
#define SYSID 656
#define SYSTEM_P 657
#define TABLE 658
#define TABLES 659
#define TABLESAMPLE 660
#define TABLESPACE 661
#define TEMP 662
#define TEMPLATE 663
#define TEMPORARY 664
#define TEXT_P 665
#define THEN 666
#define TIME 667
#define TIMESTAMP 668
#define TO 669
#define TRAILING 670
#define TRANSACTION 671
#define TRANSFORM 672
#define TREAT 673
#define TRIGGER 674
#define TRIM 675
#define TRUE_P 676
#define TRUNCATE 677
#define TRUSTED 678
#define TRY_CAST 679
#define TYPE_P 680
#define TYPES_P 681
#define UNBOUNDED 682
#define UNCOMMITTED 683
#define UNENCRYPTED 684
#define UNION 685
#define UNIQUE 686
#define UNKNOWN 687
#define UNLISTEN 688
#define UNLOGGED 689
#define UNTIL 690
#define UPDATE 691
#define USER 692
#define USING 693
#define VACUUM 694
#define VALID 695
#define VALIDATE 696
#define VALIDATOR 697
#define VALUE_P 698
#define VALUES 699
#define VARCHAR 700
#define VARIADIC 701
#define VARYING 702
#define VERBOSE 703
#define VERSION_P 704
#define VIEW 705
#define VIEWS 706
#define VOLATILE 707
#define WHEN 708
#define WHERE 709
#define WHITESPACE_P 710
#define WINDOW 711
#define WITH 712
#define WITHIN 713
#define WITHOUT 714
#define WORK 715
#define WRAPPER 716
#define WRITE_P 717
#define XML_P 718
#define XMLATTRIBUTES 719
#define XMLCONCAT 720
#define XMLELEMENT 721
#define XMLEXISTS 722
#define XMLFOREST 723
#define XMLNAMESPACES 724
#define XMLPARSE 725
#define XMLPI 726
#define XMLROOT 727
#define XMLSERIALIZE 728
#define XMLTABLE 729
#define YEAR_P 730
#define YEARS_P 731
#define YES_P 732
#define ZONE 733
#define NOT_LA 734
#define NULLS_LA 735
#define WITH_LA 736
#define POSTFIXOP 737
#define UMINUS 738




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1280 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1305 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  597
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   54935

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  505
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  396
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1840
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3043

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   738

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   502,     2,   490,     2,     2,
     495,   496,   488,   486,   499,   487,   497,   489,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   504,   498,
     482,   484,   483,   503,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   493,     2,   494,   491,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   500,     2,   501,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   485,   492
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    82,    87,    94,    99,   106,   111,   118,   123,   130,
     132,   135,   139,   142,   144,   148,   151,   155,   157,   161,
     164,   170,   174,   181,   186,   193,   200,   207,   213,   219,
     226,   236,   241,   247,   255,   262,   267,   276,   281,   284,
     289,   293,   300,   305,   308,   311,   314,   317,   319,   322,
     323,   325,   328,   331,   334,   336,   340,   345,   348,   350,
     351,   354,   358,   361,   365,   374,   376,   377,   379,   383,
     390,   397,   406,   413,   422,   429,   438,   445,   454,   463,
     474,   483,   494,   496,   497,   505,   507,   512,   517,   525,
     528,   530,   534,   539,   543,   544,   546,   547,   550,   554,
     560,   569,   575,   576,   582,   588,   596,   599,   600,   602,
     604,   606,   610,   613,   614,   616,   617,   619,   623,   625,
     629,   631,   634,   636,   640,   643,   646,   651,   657,   663,
     672,   674,   675,   679,   689,   702,   706,   707,   712,   719,
     721,   724,   726,   728,   729,   731,   734,   737,   739,   742,
     745,   747,   750,   754,   757,   760,   763,   766,   770,   774,
     778,   780,   784,   786,   787,   789,   792,   795,   798,   801,
     804,   807,   810,   813,   815,   817,   818,   828,   841,   853,
     854,   857,   859,   861,   863,   865,   867,   869,   873,   874,
     876,   879,   881,   883,   886,   889,   893,   895,   897,   900,
     903,   905,   908,   912,   918,   922,   925,   931,   937,   940,
     944,   946,   948,   951,   954,   955,   960,   961,   965,   970,
     975,   976,   980,   983,   984,   988,   990,   992,   994,   996,
     998,  1000,  1002,  1004,  1006,  1008,  1012,  1016,  1018,  1021,
    1024,  1027,  1030,  1033,  1036,  1037,  1041,  1045,  1049,  1050,
    1052,  1055,  1057,  1060,  1063,  1066,  1069,  1074,  1076,  1080,
    1082,  1086,  1088,  1090,  1092,  1094,  1098,  1100,  1103,  1104,
    1106,  1109,  1110,  1112,  1116,  1117,  1120,  1121,  1125,  1129,
    1131,  1137,  1141,  1143,  1147,  1149,  1152,  1154,  1159,  1165,
    1171,  1178,  1182,  1190,  1195,  1207,  1209,  1213,  1216,  1219,
    1222,  1223,  1227,  1229,  1231,  1234,  1237,  1240,  1243,  1245,
    1246,  1248,  1251,  1260,  1272,  1283,  1290,  1295,  1302,  1307,
    1314,  1323,  1328,  1335,  1337,  1339,  1341,  1343,  1346,  1348,
    1351,  1353,  1356,  1358,  1360,  1362,  1366,  1370,  1374,  1378,
    1381,  1384,  1386,  1390,  1392,  1394,  1396,  1398,  1402,  1404,
    1406,  1407,  1409,  1411,  1413,  1415,  1419,  1428,  1436,  1438,
    1440,  1443,  1447,  1456,  1468,  1478,  1480,  1482,  1486,  1487,
    1489,  1493,  1495,  1496,  1498,  1499,  1501,  1502,  1504,  1508,
    1510,  1512,  1514,  1518,  1519,  1522,  1525,  1526,  1529,  1530,
    1532,  1533,  1535,  1537,  1539,  1543,  1547,  1549,  1551,  1555,
    1559,  1563,  1567,  1572,  1576,  1579,  1581,  1583,  1585,  1587,
    1589,  1593,  1595,  1597,  1601,  1605,  1607,  1610,  1615,  1620,
    1623,  1627,  1633,  1639,  1641,  1643,  1655,  1667,  1669,  1672,
    1677,  1682,  1687,  1690,  1693,  1697,  1699,  1703,  1710,  1713,
    1714,  1718,  1722,  1727,  1732,  1737,  1742,  1746,  1749,  1751,
    1753,  1754,  1756,  1758,  1759,  1761,  1767,  1769,  1770,  1773,
    1776,  1777,  1779,  1780,  1784,  1790,  1796,  1798,  1802,  1807,
    1811,  1813,  1815,  1816,  1819,  1822,  1823,  1826,  1829,  1831,
    1833,  1835,  1836,  1839,  1844,  1850,  1855,  1858,  1862,  1865,
    1868,  1871,  1874,  1876,  1879,  1883,  1884,  1886,  1887,  1893,
    1895,  1900,  1907,  1910,  1912,  1913,  1918,  1919,  1921,  1923,
    1926,  1929,  1932,  1934,  1936,  1939,  1942,  1944,  1946,  1948,
    1950,  1952,  1954,  1958,  1962,  1966,  1967,  1969,  1973,  1975,
    1978,  1980,  1982,  1984,  1986,  1988,  1991,  1996,  2001,  2007,
    2009,  2011,  2014,  2015,  2018,  2019,  2021,  2025,  2027,  2028,
    2030,  2033,  2037,  2040,  2045,  2048,  2052,  2055,  2056,  2058,
    2061,  2062,  2067,  2073,  2075,  2078,  2081,  2082,  2084,  2088,
    2090,  2093,  2097,  2101,  2105,  2109,  2113,  2115,  2120,  2124,
    2129,  2135,  2140,  2146,  2151,  2157,  2160,  2165,  2167,  2169,
    2170,  2172,  2177,  2183,  2188,  2189,  2192,  2195,  2198,  2200,
    2202,  2203,  2208,  2211,  2213,  2216,  2219,  2224,  2227,  2234,
    2237,  2239,  2243,  2248,  2249,  2252,  2253,  2256,  2257,  2259,
    2263,  2267,  2270,  2271,  2274,  2279,  2281,  2283,  2286,  2290,
    2296,  2303,  2306,  2310,  2316,  2322,  2326,  2331,  2332,  2334,
    2336,  2338,  2340,  2342,  2345,  2350,  2352,  2354,  2356,  2358,
    2361,  2365,  2366,  2368,  2370,  2372,  2374,  2376,  2379,  2382,
    2385,  2388,  2391,  2393,  2397,  2398,  2400,  2402,  2404,  2406,
    2412,  2415,  2417,  2419,  2421,  2423,  2428,  2430,  2433,  2436,
    2438,  2442,  2446,  2449,  2451,  2452,  2458,  2461,  2467,  2470,
    2472,  2476,  2480,  2481,  2483,  2485,  2487,  2489,  2491,  2493,
    2495,  2497,  2499,  2501,  2503,  2505,  2507,  2509,  2511,  2513,
    2515,  2517,  2519,  2521,  2523,  2525,  2527,  2529,  2533,  2537,
    2541,  2545,  2549,  2553,  2557,  2558,  2560,  2564,  2568,  2574,
    2577,  2580,  2584,  2588,  2592,  2596,  2600,  2604,  2608,  2612,
    2616,  2620,  2624,  2628,  2632,  2635,  2638,  2642,  2646,  2649,
    2652,  2656,  2660,  2666,  2671,  2678,  2682,  2688,  2693,  2700,
    2705,  2712,  2718,  2726,  2730,  2733,  2738,  2742,  2745,  2747,
    2751,  2755,  2759,  2763,  2767,  2772,  2776,  2781,  2785,  2790,
    2796,  2803,  2810,  2818,  2825,  2833,  2840,  2848,  2852,  2857,
    2862,  2869,  2871,  2876,  2878,  2882,  2885,  2888,  2892,  2896,
    2900,  2904,  2908,  2912,  2916,  2920,  2924,  2928,  2932,  2936,
    2940,  2943,  2946,  2952,  2959,  2966,  2974,  2976,  2978,  2981,
    2984,  2987,  2992,  2994,  2997,  2999,  3002,  3005,  3010,  3014,
    3021,  3029,  3039,  3047,  3055,  3060,  3066,  3068,  3070,  3072,
    3078,  3080,  3082,  3087,  3089,  3094,  3096,  3101,  3103,  3108,
    3110,  3112,  3114,  3116,  3118,  3120,  3127,  3134,  3139,  3144,
    3149,  3154,  3161,  3167,  3173,  3179,  3184,  3191,  3196,  3202,
    3203,  3209,  3210,  3212,  3213,  3216,  3217,  3219,  3223,  3227,
    3230,  3233,  3234,  3241,  3243,  3244,  3248,  3249,  3252,  3255,
    3256,  3258,  3263,  3266,  3269,  3272,  3275,  3278,  3283,  3287,
    3289,  3295,  3299,  3301,  3305,  3307,  3310,  3312,  3314,  3316,
    3318,  3320,  3322,  3324,  3326,  3328,  3330,  3332,  3334,  3336,
    3338,  3340,  3342,  3344,  3346,  3351,  3353,  3358,  3360,  3365,
    3367,  3370,  3372,  3375,  3377,  3380,  3382,  3386,  3388,  3392,
    3394,  3397,  3399,  3400,  3402,  3406,  3408,  3412,  3416,  3418,
    3422,  3426,  3427,  3429,  3431,  3433,  3435,  3437,  3439,  3441,
    3443,  3445,  3447,  3452,  3456,  3459,  3463,  3464,  3468,  3472,
    3475,  3478,  3480,  3481,  3484,  3487,  3491,  3494,  3496,  3498,
    3502,  3508,  3510,  3513,  3518,  3521,  3522,  3524,  3525,  3527,
    3530,  3533,  3537,  3543,  3545,  3546,  3548,  3551,  3552,  3555,
    3557,  3558,  3560,  3561,  3563,  3567,  3569,  3572,  3576,  3579,
    3581,  3585,  3591,  3596,  3599,  3601,  3602,  3606,  3608,  3612,
    3614,  3617,  3622,  3625,  3626,  3628,  3632,  3634,  3637,  3639,
    3643,  3645,  3648,  3650,  3652,  3654,  3657,  3659,  3661,  3664,
    3666,  3668,  3671,  3679,  3682,  3688,  3692,  3696,  3698,  3700,
    3702,  3704,  3706,  3708,  3710,  3712,  3714,  3716,  3718,  3720,
    3722,  3724,  3726,  3728,  3730,  3732,  3734,  3736,  3739,  3742,
    3746,  3750,  3751,  3753,  3755,  3757,  3759,  3761,  3763,  3765,
    3771,  3775,  3776,  3778,  3780,  3782,  3784,  3789,  3797,  3800,
    3801,  3803,  3805,  3807,  3809,  3823,  3840,  3842,  3845,  3846,
    3848,  3849,  3851,  3852,  3855,  3856,  3858,  3859,  3866,  3875,
    3882,  3891,  3898,  3907,  3910,  3912,  3917,  3921,  3924,  3929,
    3933,  3939,  3941,  3942,  3944,  3946,  3947,  3949,  3951,  3953,
    3955,  3957,  3959,  3961,  3963,  3965,  3967,  3969,  3973,  3975,
    3977,  3979,  3981,  3983,  3985,  3988,  3990,  3992,  3995,  3999,
    4003,  4007,  4009,  4013,  4017,  4020,  4024,  4028,  4032,  4036,
    4038,  4040,  4042,  4044,  4048,  4054,  4056,  4058,  4060,  4062,
    4066,  4069,  4072,  4076,  4078,  4080,  4085,  4091,  4097,  4102,
    4109,  4111,  4113,  4115,  4117,  4119,  4121,  4122,  4124,  4128,
    4130,  4131,  4139,  4141,  4144,  4148,  4151,  4152,  4155,  4156,
    4159,  4164,  4167,  4169,  4171,  4173,  4176,  4180,  4183,  4186,
    4189,  4192,  4196,  4201,  4204,  4206,  4208,  4210,  4212,  4216,
    4219,  4229,  4241,  4254,  4269,  4273,  4278,  4283,  4284,  4292,
    4303,  4313,  4316,  4320,  4321,  4326,  4328,  4330,  4332,  4334,
    4336,  4338,  4340,  4342,  4344,  4346,  4348,  4350,  4352,  4354,
    4356,  4358,  4360,  4362,  4364,  4366,  4368,  4370,  4372,  4374,
    4376,  4378,  4380,  4382,  4384,  4386,  4388,  4390,  4392,  4394,
    4396,  4398,  4400,  4402,  4404,  4406,  4408,  4410,  4412,  4414,
    4416,  4418,  4420,  4422,  4424,  4426,  4428,  4430,  4432,  4434,
    4436,  4438,  4440,  4442,  4444,  4446,  4448,  4450,  4452,  4454,
    4456,  4458,  4460,  4462,  4464,  4466,  4468,  4470,  4472,  4474,
    4476,  4478,  4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,
    4496,  4498,  4500,  4502,  4504,  4506,  4508,  4510,  4512,  4514,
    4516,  4518,  4520,  4522,  4524,  4526,  4528,  4530,  4532,  4534,
    4536,  4538,  4540,  4542,  4544,  4546,  4548,  4550,  4552,  4554,
    4556,  4558,  4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,
    4576,  4578,  4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,
    4596,  4598,  4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,
    4616,  4618,  4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,
    4636,  4638,  4640,  4642,  4644,  4646,  4648,  4650,  4652,  4654,
    4656,  4658,  4660,  4662,  4664,  4666,  4668,  4670,  4672,  4674,
    4676,  4678,  4680,  4682,  4684,  4686,  4688,  4690,  4692,  4694,
    4696,  4698,  4700,  4702,  4704,  4706,  4708,  4710,  4712,  4714,
    4716,  4718,  4720,  4722,  4724,  4726,  4728,  4730,  4732,  4734,
    4736,  4738,  4740,  4742,  4744,  4746,  4748,  4750,  4752,  4754,
    4756,  4758,  4760,  4762,  4764,  4766,  4768,  4770,  4772,  4774,
    4776,  4778,  4780,  4782,  4784,  4786,  4788,  4790,  4792,  4794,
    4796,  4798,  4800,  4802,  4804,  4806,  4808,  4810,  4812,  4814,
    4816,  4818,  4820,  4822,  4824,  4826,  4828,  4830,  4832,  4834,
    4836,  4838,  4840,  4842,  4844,  4846,  4848,  4850,  4852,  4854,
    4856,  4858,  4860,  4862,  4864,  4866,  4868,  4870,  4872,  4874,
    4876,  4878,  4880,  4882,  4884,  4886,  4888,  4890,  4892,  4894,
    4896,  4898,  4900,  4902,  4904,  4906,  4908,  4910,  4912,  4914,
    4916,  4918,  4920,  4922,  4924,  4926,  4928,  4930,  4932,  4934,
    4936,  4938,  4940,  4942,  4944,  4946,  4948,  4950,  4952,  4954,
    4956,  4958,  4960,  4962,  4964,  4966,  4968,  4970,  4972,  4974,
    4976,  4978,  4980,  4982,  4984,  4986,  4988,  4990,  4992,  4994,
    4996,  4998,  5000,  5002,  5004,  5006,  5008,  5010,  5012,  5014,
    5016,  5018,  5020,  5022,  5024,  5026,  5028,  5030,  5032,  5034,
    5036,  5038,  5040,  5042,  5044,  5046,  5048,  5050,  5052,  5054,
    5056,  5058,  5060,  5062,  5064,  5066,  5068,  5070,  5072,  5074,
    5076,  5078,  5080,  5082,  5084,  5086,  5088,  5090,  5092,  5094,
    5096,  5098,  5100,  5102,  5104,  5106,  5108,  5110,  5112,  5114,
    5116,  5118,  5120,  5122,  5124,  5126,  5128,  5130,  5132,  5134,
    5136,  5138,  5140,  5142,  5144,  5146,  5148,  5150,  5152,  5154,
    5156,  5158,  5160,  5162,  5164,  5166,  5168,  5170,  5172,  5174,
    5176,  5178,  5180,  5182,  5184,  5186,  5188,  5190,  5192,  5194,
    5196,  5198,  5200,  5202,  5204,  5206,  5208,  5210,  5212,  5214,
    5216,  5218,  5220,  5222,  5224,  5226,  5228,  5230,  5232,  5234,
    5236,  5238,  5240,  5242,  5244,  5246,  5248,  5250,  5252,  5254,
    5256,  5258,  5260,  5262,  5264,  5266,  5268,  5270,  5272,  5274,
    5276,  5278,  5280,  5282,  5284,  5286,  5288,  5290,  5292,  5294,
    5296,  5298,  5300,  5302,  5304,  5306,  5308,  5310,  5312,  5314,
    5316,  5318,  5320,  5322,  5324,  5326,  5328,  5330,  5332,  5334,
    5336,  5338,  5340,  5342,  5344,  5346,  5348,  5350,  5352,  5354,
    5356,  5358,  5360,  5362,  5364,  5366,  5368,  5370,  5372,  5374,
    5376,  5378,  5380,  5382,  5384,  5386,  5388,  5390,  5392,  5394,
    5396,  5398,  5400,  5402,  5404,  5406,  5408,  5410,  5412,  5414,
    5416,  5418,  5420,  5422,  5424,  5426,  5428,  5430,  5432,  5434,
    5436,  5438,  5440,  5442,  5444,  5446,  5448,  5450,  5452,  5454,
    5456
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     506,     0,    -1,   507,    -1,   507,   498,   508,    -1,   508,
      -1,   849,    -1,   550,    -1,   509,    -1,   881,    -1,   888,
      -1,   850,    -1,   618,    -1,   891,    -1,   521,    -1,   614,
      -1,   606,    -1,   839,    -1,   546,    -1,   559,    -1,   520,
      -1,   877,    -1,   607,    -1,   548,    -1,   853,    -1,   851,
      -1,   852,    -1,   842,    -1,   526,    -1,   870,    -1,   545,
      -1,   836,    -1,   524,    -1,   635,    -1,   557,    -1,   617,
      -1,   872,    -1,   882,    -1,   864,    -1,   885,    -1,   889,
      -1,    -1,    29,   403,   704,   517,    -1,    29,   403,   188,
     150,   704,   517,    -1,    29,   198,   816,   517,    -1,    29,
     198,   188,   150,   816,   517,    -1,    29,   368,   816,   517,
      -1,    29,   368,   188,   150,   816,   517,    -1,    29,   450,
     816,   517,    -1,    29,   450,   188,   150,   816,   517,    -1,
     512,    -1,   510,   512,    -1,   374,   115,   746,    -1,   135,
     115,    -1,   346,    -1,   346,   552,   553,    -1,   374,   554,
      -1,   374,   173,   605,    -1,   516,    -1,   513,   499,   516,
      -1,    23,   584,    -1,    23,   188,   270,   150,   584,    -1,
      23,    75,   584,    -1,    23,    75,   188,   270,   150,   584,
      -1,    29,   525,   825,   511,    -1,    29,   525,   825,   135,
     270,   275,    -1,    29,   525,   825,   374,   270,   275,    -1,
      29,   525,   825,   374,   390,   556,    -1,    29,   525,   825,
     374,   572,    -1,    29,   525,   825,   344,   572,    -1,    29,
     525,   825,   374,   393,   825,    -1,    29,   525,   825,    23,
     173,   605,    36,   187,   562,    -1,    29,   525,   825,   510,
      -1,    29,   525,   825,   135,   187,    -1,    29,   525,   825,
     135,   187,   188,   150,    -1,   135,   525,   188,   150,   825,
     611,    -1,   135,   525,   825,   611,    -1,    29,   525,   825,
     519,   425,   716,   713,   515,    -1,    29,   525,   825,   518,
      -1,    23,   574,    -1,    29,    86,   819,   560,    -1,   441,
      86,   819,    -1,   135,    86,   188,   150,   819,   611,    -1,
     135,    86,   819,   611,    -1,   374,   242,    -1,   374,   434,
      -1,   374,   572,    -1,   344,   572,    -1,   518,    -1,   438,
     746,    -1,    -1,   567,    -1,   374,   567,    -1,    23,   567,
      -1,   135,   582,    -1,   514,    -1,   517,   499,   514,    -1,
     289,   495,   513,   496,    -1,   374,   107,    -1,   374,    -1,
      -1,   111,   819,    -1,   111,   315,   819,    -1,   111,    27,
      -1,   111,   315,    27,    -1,    93,   425,   830,    36,   142,
     495,   522,   496,    -1,   523,    -1,    -1,   824,    -1,   523,
     499,   824,    -1,    29,   360,   819,   340,   414,   819,    -1,
      29,   403,   704,   340,   414,   819,    -1,    29,   403,   188,
     150,   704,   340,   414,   819,    -1,    29,   368,   816,   340,
     414,   819,    -1,    29,   368,   188,   150,   816,   340,   414,
     819,    -1,    29,   450,   816,   340,   414,   819,    -1,    29,
     450,   188,   150,   816,   340,   414,   819,    -1,    29,   198,
     816,   340,   414,   819,    -1,    29,   198,   188,   150,   816,
     340,   414,   819,    -1,    29,   403,   704,   340,   525,   819,
     414,   819,    -1,    29,   403,   188,   150,   704,   340,   525,
     819,   414,   819,    -1,    29,   403,   704,   340,    86,   819,
     414,   819,    -1,    29,   403,   188,   150,   704,   340,    86,
     819,   414,   819,    -1,    75,    -1,    -1,   530,   208,   215,
     528,   527,   533,   535,    -1,   635,    -1,   298,   536,   443,
     635,    -1,   495,   540,   496,   635,    -1,   495,   540,   496,
     298,   536,   443,   635,    -1,   115,   444,    -1,   816,    -1,
     816,    36,   825,    -1,   495,   543,   496,   710,    -1,   285,
      86,   819,    -1,    -1,   640,    -1,    -1,   825,   803,    -1,
     544,   484,   746,    -1,   495,   537,   496,   484,   746,    -1,
     285,    84,   529,   131,   436,   374,   542,   710,    -1,   285,
      84,   529,   131,   271,    -1,    -1,   825,   538,   539,   654,
     655,    -1,   751,   538,   539,   654,   655,    -1,   495,   746,
     496,   538,   539,   654,   655,    -1,   348,   806,    -1,    -1,
     437,    -1,   402,    -1,   544,    -1,   537,   499,   544,    -1,
      73,   830,    -1,    -1,   830,    -1,    -1,   531,    -1,   540,
     499,   531,    -1,   532,    -1,   541,   499,   532,    -1,   541,
      -1,   541,   499,    -1,   534,    -1,   543,   499,   534,    -1,
     825,   803,    -1,   312,   825,    -1,   312,   825,   484,   869,
      -1,   312,   825,   495,   781,   496,    -1,    93,   604,   368,
     816,   547,    -1,    93,   604,   368,   188,   270,   150,   816,
     547,    -1,   551,    -1,    -1,   149,   819,   549,    -1,    93,
     604,   403,   893,    36,   149,   819,   549,   892,    -1,    93,
     604,   403,   188,   270,   150,   893,    36,   149,   819,   549,
     892,    -1,   495,   779,   496,    -1,    -1,    29,   368,   816,
     551,    -1,    29,   368,   188,   150,   816,   551,    -1,   554,
      -1,   551,   554,    -1,   457,    -1,   481,    -1,    -1,     4,
      -1,   486,     4,    -1,   487,     4,    -1,   556,    -1,    36,
     718,    -1,    55,   553,    -1,   106,    -1,   268,   106,    -1,
     197,   555,   553,    -1,   248,   553,    -1,   256,   553,    -1,
     268,   248,    -1,   268,   256,    -1,   299,    54,   830,    -1,
     368,   261,   830,    -1,   388,   552,   553,    -1,   346,    -1,
     346,   552,   553,    -1,    54,    -1,    -1,   823,    -1,   486,
     823,    -1,   487,   823,    -1,    19,   558,    -1,    47,   558,
      -1,   388,   558,    -1,    79,   558,    -1,   141,   558,    -1,
     353,   558,    -1,   460,    -1,   416,    -1,    -1,    93,   604,
     403,   816,   495,   591,   496,   579,   571,    -1,    93,   604,
     403,   188,   270,   150,   816,   495,   591,   496,   579,   571,
      -1,    93,   290,   342,   604,   403,   816,   495,   591,   496,
     579,   571,    -1,    -1,   560,   583,    -1,   599,    -1,   900,
      -1,   775,    -1,   553,    -1,   824,    -1,   269,    -1,   495,
     551,   496,    -1,    -1,   824,    -1,   268,    22,    -1,   347,
      -1,    58,    -1,   374,   275,    -1,   374,   115,    -1,    86,
     819,   566,    -1,   566,    -1,   578,    -1,    73,   830,    -1,
     270,   275,    -1,   275,    -1,   431,   590,    -1,   318,   222,
     590,    -1,    67,   495,   746,   496,   573,    -1,   438,    81,
     819,    -1,   115,   747,    -1,   173,   605,    36,   187,   562,
      -1,   334,   816,   593,   602,   569,    -1,   582,   563,    -1,
     285,   436,   564,    -1,   568,    -1,   595,    -1,   568,   595,
      -1,   595,   568,    -1,    -1,   289,   495,   585,   496,    -1,
      -1,   285,    79,   135,    -1,   285,    79,   120,   356,    -1,
     285,    79,   317,   356,    -1,    -1,   495,   576,   496,    -1,
     268,   200,    -1,    -1,    86,   819,   600,    -1,   600,    -1,
      78,    -1,    87,    -1,   116,    -1,   187,    -1,   199,    -1,
     390,    -1,   393,    -1,    27,    -1,   596,    -1,   576,   499,
     596,    -1,   438,   198,   587,    -1,   117,    -1,   270,   117,
      -1,   202,   118,    -1,   202,   191,    -1,   457,   572,    -1,
     457,   283,    -1,   459,   283,    -1,    -1,   495,   586,   496,
      -1,   581,   196,   575,    -1,   581,   147,   575,    -1,    -1,
     834,    -1,   270,   117,    -1,   117,    -1,   202,   191,    -1,
     202,   118,    -1,   270,   440,    -1,   268,   200,    -1,   825,
     716,   570,   594,    -1,   567,    -1,   585,   499,   567,    -1,
     589,    -1,   586,   499,   589,    -1,   825,    -1,   584,    -1,
     603,    -1,   574,    -1,   834,   484,   561,    -1,   834,    -1,
     457,   580,    -1,    -1,   601,    -1,   601,   499,    -1,    -1,
     825,    -1,   495,   597,   496,    -1,    -1,   594,   565,    -1,
      -1,   285,   120,   564,    -1,   834,   484,   561,    -1,   834,
      -1,   834,   497,   834,   484,   561,    -1,   834,   497,   834,
      -1,   592,    -1,   597,   499,   592,    -1,   597,    -1,   597,
     499,    -1,   716,    -1,   827,   831,   490,   425,    -1,   375,
     827,   831,   490,   425,    -1,    67,   495,   746,   496,   560,
      -1,   431,   495,   598,   496,   590,   560,    -1,   431,   577,
     560,    -1,   318,   222,   495,   598,   496,   590,   560,    -1,
     318,   222,   577,   560,    -1,   166,   222,   495,   598,   496,
     334,   816,   593,   602,   569,   560,    -1,   588,    -1,   601,
     499,   588,    -1,   246,   170,    -1,   246,   303,    -1,   246,
     380,    -1,    -1,   232,   816,   581,    -1,   409,    -1,   407,
      -1,   236,   409,    -1,   236,   407,    -1,   175,   409,    -1,
     175,   407,    -1,   434,    -1,    -1,    30,    -1,    54,   115,
      -1,    93,   604,   247,   450,   893,    36,   635,   892,    -1,
      93,   604,   247,   450,   188,   270,   150,   893,    36,   635,
     892,    -1,    93,   290,   342,   604,   247,   450,   893,    36,
     635,   892,    -1,   135,   608,   188,   150,   610,   611,    -1,
     135,   608,   610,   611,    -1,   135,   609,   188,   150,   817,
     611,    -1,   135,   609,   817,   611,    -1,   135,   612,   819,
     285,   830,   611,    -1,   135,   612,   188,   150,   819,   285,
     830,   611,    -1,   135,   425,   613,   611,    -1,   135,   425,
     188,   150,   613,   611,    -1,   403,    -1,   368,    -1,   171,
      -1,   243,    -1,   243,   403,    -1,   450,    -1,   247,   450,
      -1,   198,    -1,   166,   403,    -1,    74,    -1,    90,    -1,
     390,    -1,   410,   363,   302,    -1,   410,   363,   127,    -1,
     410,   363,   408,    -1,   410,   363,    83,    -1,    21,   249,
      -1,   144,   419,    -1,   154,    -1,   166,   107,   461,    -1,
     324,    -1,   360,    -1,   371,    -1,   830,    -1,   610,   499,
     830,    -1,    58,    -1,   347,    -1,    -1,   310,    -1,   357,
      -1,   419,    -1,   716,    -1,   613,   499,   716,    -1,    93,
     604,   615,   816,   616,    36,   403,   635,    -1,    93,   604,
     615,   816,   616,    36,   746,    -1,   171,    -1,   243,    -1,
     495,   496,    -1,   495,   781,   496,    -1,   530,   436,   878,
     374,   542,   693,   879,   535,    -1,    91,   630,   816,   593,
     628,   619,   624,   633,   620,   552,   625,    -1,    91,   495,
     838,   496,   414,   624,   633,   552,   625,    -1,   169,    -1,
     414,    -1,   622,   122,   824,    -1,    -1,   632,    -1,   621,
     499,   632,    -1,   438,    -1,    -1,    36,    -1,    -1,   323,
      -1,    -1,   629,    -1,   495,   634,   496,    -1,   861,    -1,
     553,    -1,   488,    -1,   495,   621,   496,    -1,    -1,   834,
     626,    -1,   457,   283,    -1,    -1,   629,   631,    -1,    -1,
      50,    -1,    -1,    50,    -1,   283,    -1,   168,    -1,   121,
     623,   824,    -1,   275,   623,   824,    -1,    95,    -1,   183,
      -1,   326,   623,   824,    -1,   143,   623,   824,    -1,   165,
     326,   597,    -1,   165,   326,   488,    -1,   165,   270,   275,
     597,    -1,   165,   275,   597,    -1,   139,   824,    -1,   861,
      -1,   824,    -1,   391,    -1,   392,    -1,   627,    -1,   634,
     499,   627,    -1,   637,    -1,   636,    -1,   495,   637,   496,
      -1,   495,   636,   496,    -1,   639,    -1,   638,   651,    -1,
     638,   650,   684,   657,    -1,   638,   650,   656,   685,    -1,
     640,   638,    -1,   640,   638,   651,    -1,   640,   638,   650,
     684,   657,    -1,   640,   638,   650,   656,   685,    -1,   639,
      -1,   636,    -1,   367,   648,   805,   643,   693,   710,   673,
     682,   756,   683,   661,    -1,   367,   647,   807,   643,   693,
     710,   673,   682,   756,   683,   661,    -1,   692,    -1,   403,
     704,    -1,   638,   430,   646,   638,    -1,   638,   213,   646,
     638,    -1,   638,   145,   646,   638,    -1,   457,   641,    -1,
     481,   641,    -1,   457,   332,   641,    -1,   642,    -1,   641,
     499,   642,    -1,   819,   832,    36,   495,   838,   496,    -1,
     215,   644,    -1,    -1,   409,   645,   816,    -1,   407,   645,
     816,    -1,   236,   409,   645,   816,    -1,   236,   407,   645,
     816,    -1,   175,   409,   645,   816,    -1,   175,   407,   645,
     816,    -1,   434,   645,   816,    -1,   403,   816,    -1,   816,
      -1,   403,    -1,    -1,    27,    -1,   130,    -1,    -1,   130,
      -1,   130,   285,   495,   779,   496,    -1,    27,    -1,    -1,
     189,   277,    -1,   345,   277,    -1,    -1,   651,    -1,    -1,
     291,    54,   652,    -1,   291,    54,    27,   654,   655,    -1,
     291,    54,   488,   654,   655,    -1,   653,    -1,   652,   499,
     653,    -1,   746,   438,   775,   655,    -1,   746,   654,   655,
      -1,    37,    -1,   124,    -1,    -1,   480,   161,    -1,   480,
     226,    -1,    -1,   658,   659,    -1,   659,   658,    -1,   658,
      -1,   659,    -1,   656,    -1,    -1,   233,   667,    -1,   233,
     667,   499,   668,    -1,   159,   672,   669,   671,   286,    -1,
     159,   672,   671,   286,    -1,   282,   668,    -1,   282,   669,
     671,    -1,     4,   490,    -1,     9,   490,    -1,     4,   307,
      -1,     9,   307,    -1,     9,    -1,     9,   356,    -1,   438,
     358,   663,    -1,    -1,   825,    -1,    -1,   662,   495,   660,
     496,   666,    -1,   660,    -1,   660,   495,   825,   496,    -1,
     660,   495,   825,   499,     9,   496,    -1,   405,   663,    -1,
     664,    -1,    -1,   341,   495,     9,   496,    -1,    -1,   746,
      -1,    27,    -1,   746,   490,    -1,     4,   307,    -1,     9,
     307,    -1,   746,    -1,   748,    -1,   486,   670,    -1,   487,
     670,    -1,   823,    -1,     4,    -1,   355,    -1,   356,    -1,
     161,    -1,   267,    -1,   178,    54,   675,    -1,   178,    54,
      27,    -1,   178,    54,   488,    -1,    -1,   676,    -1,   674,
     499,   676,    -1,   674,    -1,   674,   499,    -1,   746,    -1,
     677,    -1,   679,    -1,   678,    -1,   680,    -1,   495,   496,
      -1,   354,   495,   779,   496,    -1,    96,   495,   779,   496,
      -1,   179,   376,   495,   675,   496,    -1,   179,    -1,   180,
      -1,   182,   746,    -1,    -1,   325,   746,    -1,    -1,   686,
      -1,   164,   328,   286,    -1,   684,    -1,    -1,   687,    -1,
     686,   687,    -1,   688,   689,   690,    -1,   164,   436,    -1,
     164,   268,   222,   436,    -1,   164,   377,    -1,   164,   222,
     377,    -1,   280,   815,    -1,    -1,   274,    -1,   381,   241,
      -1,    -1,   444,   495,   779,   496,    -1,   691,   499,   495,
     779,   496,    -1,   691,    -1,   691,   499,    -1,   169,   695,
      -1,    -1,   696,    -1,   694,   499,   696,    -1,   694,    -1,
     694,   499,    -1,   704,   699,   665,    -1,   705,   700,   665,
      -1,   227,   705,   700,    -1,   636,   699,   665,    -1,   227,
     636,   699,    -1,   697,    -1,   495,   697,   496,   698,    -1,
     495,   697,   496,    -1,   696,    94,   220,   696,    -1,   696,
     701,   220,   696,   703,    -1,   696,   220,   696,   703,    -1,
     696,   264,   701,   220,   696,    -1,   696,   264,   220,   696,
      -1,    36,   825,   495,   818,   496,    -1,    36,   826,    -1,
     825,   495,   818,   496,    -1,   825,    -1,   698,    -1,    -1,
     698,    -1,    36,   495,   711,   496,    -1,    36,   825,   495,
     711,   496,    -1,   825,   495,   711,   496,    -1,    -1,   170,
     702,    -1,   230,   702,    -1,   351,   702,    -1,   204,    -1,
     294,    -1,    -1,   438,   495,   818,   496,    -1,   285,   746,
      -1,   816,    -1,   816,   488,    -1,   286,   816,    -1,   286,
     495,   816,   496,    -1,   751,   709,    -1,   356,   169,   495,
     707,   496,   709,    -1,   751,   708,    -1,   706,    -1,   707,
     499,   706,    -1,    36,   495,   711,   496,    -1,    -1,   481,
     292,    -1,    -1,   454,   746,    -1,    -1,   712,    -1,   711,
     499,   712,    -1,   825,   716,   713,    -1,    73,   830,    -1,
      -1,   825,   716,    -1,   714,   499,   825,   716,    -1,   355,
      -1,   396,    -1,   718,   717,    -1,   375,   718,   717,    -1,
     718,    35,   493,   823,   494,    -1,   375,   718,    35,   493,
     823,   494,    -1,   718,    35,    -1,   375,   718,    35,    -1,
     715,   495,   714,   496,   717,    -1,   244,   495,   783,   496,
     717,    -1,   717,   493,   494,    -1,   717,   493,   823,   494,
      -1,    -1,   720,    -1,   722,    -1,   724,    -1,   728,    -1,
     734,    -1,   735,   745,    -1,   735,   495,   823,   496,    -1,
     722,    -1,   725,    -1,   729,    -1,   734,    -1,   829,   721,
      -1,   495,   779,   496,    -1,    -1,   211,    -1,   212,    -1,
     382,    -1,    49,    -1,   329,    -1,   162,   723,    -1,   134,
     314,    -1,   113,   721,    -1,   112,   721,    -1,   278,   721,
      -1,    52,    -1,   495,   823,   496,    -1,    -1,   726,    -1,
     727,    -1,   726,    -1,   727,    -1,    51,   733,   495,   779,
     496,    -1,    51,   733,    -1,   730,    -1,   731,    -1,   730,
      -1,   731,    -1,   732,   495,   823,   496,    -1,   732,    -1,
      65,   733,    -1,    64,   733,    -1,   445,    -1,   263,    65,
     733,    -1,   263,    64,   733,    -1,   265,   733,    -1,   447,
      -1,    -1,   413,   495,   823,   496,   736,    -1,   413,   736,
      -1,   412,   495,   823,   496,   736,    -1,   412,   736,    -1,
     214,    -1,   481,   412,   478,    -1,   459,   412,   478,    -1,
      -1,   475,    -1,   476,    -1,   258,    -1,   259,    -1,   109,
      -1,   110,    -1,   185,    -1,   186,    -1,   254,    -1,   255,
      -1,   364,    -1,   365,    -1,   252,    -1,   253,    -1,   250,
      -1,   251,    -1,   737,    -1,   738,    -1,   739,    -1,   740,
      -1,   741,    -1,   742,    -1,   743,    -1,   744,    -1,   737,
     414,   738,    -1,   739,   414,   740,    -1,   739,   414,   741,
      -1,   739,   414,   742,    -1,   740,   414,   741,    -1,   740,
     414,   742,    -1,   741,   414,   742,    -1,    -1,   748,    -1,
     746,    11,   716,    -1,   746,    73,   830,    -1,   746,    41,
     412,   478,   746,    -1,   486,   746,    -1,   487,   746,    -1,
     746,   486,   746,    -1,   746,   487,   746,    -1,   746,   488,
     746,    -1,   746,   489,   746,    -1,   746,   490,   746,    -1,
     746,   491,   746,    -1,   746,   482,   746,    -1,   746,   483,
     746,    -1,   746,   484,   746,    -1,   746,    16,   746,    -1,
     746,    17,   746,    -1,   746,    18,   746,    -1,   746,   774,
     746,    -1,   774,   746,    -1,   746,   774,    -1,   746,    33,
     746,    -1,   746,   290,   746,    -1,   270,   746,    -1,   479,
     746,    -1,   746,   174,   746,    -1,   746,   232,   746,    -1,
     746,   232,   746,   143,   746,    -1,   746,   479,   232,   746,
      -1,   746,   479,   232,   746,   143,   746,    -1,   746,   190,
     746,    -1,   746,   190,   746,   143,   746,    -1,   746,   479,
     190,   746,    -1,   746,   479,   190,   746,   143,   746,    -1,
     746,   379,   414,   746,    -1,   746,   379,   414,   746,   143,
     746,    -1,   746,   479,   379,   414,   746,    -1,   746,   479,
     379,   414,   746,   143,   746,    -1,   746,   217,   275,    -1,
     746,   218,    -1,   746,   217,   270,   275,    -1,   746,   270,
     275,    -1,   746,   273,    -1,   767,    -1,   500,   770,   501,
      -1,   493,   780,   494,    -1,   746,    15,   746,    -1,   767,
     296,   767,    -1,   746,   217,   421,    -1,   746,   217,   270,
     421,    -1,   746,   217,   157,    -1,   746,   217,   270,   157,
      -1,   746,   217,   432,    -1,   746,   217,   270,   432,    -1,
     746,   217,   130,   169,   746,    -1,   746,   217,   270,   130,
     169,   746,    -1,   746,   217,   280,   495,   783,   496,    -1,
     746,   217,   270,   280,   495,   783,   496,    -1,   746,    48,
     804,   747,    33,   746,    -1,   746,   479,    48,   804,   747,
      33,   746,    -1,   746,    48,   400,   747,    33,   746,    -1,
     746,   479,    48,   400,   747,    33,   746,    -1,   746,   195,
     793,    -1,   746,   479,   195,   793,    -1,   746,   776,   771,
     636,    -1,   746,   776,   771,   495,   746,   496,    -1,   115,
      -1,    35,   493,   780,   494,    -1,   748,    -1,   747,    11,
     716,    -1,   486,   747,    -1,   487,   747,    -1,   747,   486,
     747,    -1,   747,   487,   747,    -1,   747,   488,   747,    -1,
     747,   489,   747,    -1,   747,   490,   747,    -1,   747,   491,
     747,    -1,   747,   482,   747,    -1,   747,   483,   747,    -1,
     747,   484,   747,    -1,   747,    16,   747,    -1,   747,    17,
     747,    -1,   747,    18,   747,    -1,   747,   774,   747,    -1,
     774,   747,    -1,   747,   774,    -1,   747,   217,   130,   169,
     747,    -1,   747,   217,   270,   130,   169,   747,    -1,   747,
     217,   280,   495,   783,   496,    -1,   747,   217,   270,   280,
     495,   783,   496,    -1,   799,    -1,   822,    -1,   502,     9,
      -1,   503,   803,    -1,    10,   803,    -1,   495,   746,   496,
     803,    -1,   794,    -1,   750,   803,    -1,   636,    -1,   636,
     802,    -1,   150,   636,    -1,   681,   495,   779,   496,    -1,
     821,   495,   496,    -1,   821,   495,   781,   650,   649,   496,
      -1,   821,   495,   446,   782,   650,   649,   496,    -1,   821,
     495,   781,   499,   446,   782,   650,   649,   496,    -1,   821,
     495,    27,   781,   650,   649,   496,    -1,   821,   495,   130,
     781,   650,   649,   496,    -1,   821,   495,   488,   496,    -1,
     749,   753,   754,   755,   759,    -1,   752,    -1,   749,    -1,
     752,    -1,    74,   164,   495,   746,   496,    -1,    99,    -1,
     102,    -1,   102,   495,   823,   496,    -1,   103,    -1,   103,
     495,   823,   496,    -1,   237,    -1,   237,   495,   823,   496,
      -1,   238,    -1,   238,   495,   823,   496,    -1,   100,    -1,
     104,    -1,   373,    -1,   437,    -1,    98,    -1,   101,    -1,
      61,   495,   746,    36,   716,   496,    -1,   424,   495,   746,
      36,   716,   496,    -1,   156,   495,   784,   496,    -1,   297,
     495,   786,   496,    -1,   311,   495,   788,   496,    -1,   398,
     495,   789,   496,    -1,   418,   495,   746,    36,   716,   496,
      -1,   420,   495,    53,   792,   496,    -1,   420,   495,   228,
     792,   496,    -1,   420,   495,   415,   792,   496,    -1,   420,
     495,   792,   496,    -1,   276,   495,   746,   499,   746,   496,
      -1,    72,   495,   779,   496,    -1,   458,   178,   495,   651,
     496,    -1,    -1,   160,   495,   454,   746,   496,    -1,    -1,
     153,    -1,    -1,   456,   757,    -1,    -1,   758,    -1,   757,
     499,   758,    -1,   825,    36,   760,    -1,   295,   760,    -1,
     295,   825,    -1,    -1,   495,   761,   762,   650,   763,   496,
      -1,   825,    -1,    -1,   304,    54,   778,    -1,    -1,   327,
     764,    -1,   356,   764,    -1,    -1,   765,    -1,    48,   765,
      33,   765,    -1,   427,   313,    -1,   427,   163,    -1,    97,
     355,    -1,   746,   313,    -1,   746,   163,    -1,   355,   495,
     779,   496,    -1,   355,   495,   496,    -1,   766,    -1,   495,
     778,   499,   746,   496,    -1,   826,   504,   746,    -1,   768,
      -1,   769,   499,   768,    -1,   769,    -1,   769,   499,    -1,
      34,    -1,   384,    -1,    27,    -1,     8,    -1,   773,    -1,
     486,    -1,   487,    -1,   488,    -1,   489,    -1,   490,    -1,
     491,    -1,   482,    -1,   483,    -1,   484,    -1,    16,    -1,
      17,    -1,    18,    -1,     8,    -1,   287,   495,   777,   496,
      -1,   772,    -1,   287,   495,   777,   496,    -1,   772,    -1,
     287,   495,   777,   496,    -1,   232,    -1,   479,   232,    -1,
     174,    -1,   479,   174,    -1,   190,    -1,   479,   190,    -1,
     772,    -1,   825,   497,   777,    -1,   746,    -1,   778,   499,
     746,    -1,   778,    -1,   778,   499,    -1,   779,    -1,    -1,
     782,    -1,   781,   499,   782,    -1,   746,    -1,   833,    13,
     746,    -1,   833,    14,   746,    -1,   716,    -1,   783,   499,
     716,    -1,   785,   169,   746,    -1,    -1,     3,    -1,   737,
      -1,   738,    -1,   739,    -1,   740,    -1,   741,    -1,   742,
      -1,   743,    -1,   744,    -1,   824,    -1,   746,   787,   790,
     791,    -1,   746,   787,   790,    -1,   308,   746,    -1,   747,
     195,   747,    -1,    -1,   746,   790,   791,    -1,   746,   791,
     790,    -1,   746,   790,    -1,   746,   791,    -1,   778,    -1,
      -1,   169,   746,    -1,   164,   746,    -1,   746,   169,   779,
      -1,   169,   779,    -1,   779,    -1,   636,    -1,   495,   779,
     496,    -1,    60,   798,   795,   797,   141,    -1,   796,    -1,
     795,   796,    -1,   453,   746,   411,   746,    -1,   137,   746,
      -1,    -1,   746,    -1,    -1,   825,    -1,   825,   802,    -1,
     497,   820,    -1,   493,   746,   494,    -1,   493,   801,   504,
     801,   494,    -1,   746,    -1,    -1,   800,    -1,   802,   800,
      -1,    -1,   803,   800,    -1,    40,    -1,    -1,   807,    -1,
      -1,   808,    -1,   806,   499,   808,    -1,   806,    -1,   806,
     499,    -1,   746,    36,   835,    -1,   746,     3,    -1,   746,
      -1,   488,   810,   814,    -1,   825,   497,   488,   810,   814,
      -1,   146,   495,   818,   496,    -1,   146,   825,    -1,   809,
      -1,    -1,   746,    36,   825,    -1,   811,    -1,   812,   499,
     811,    -1,   812,    -1,   812,   499,    -1,   342,   495,   813,
     496,    -1,   342,   811,    -1,    -1,   816,    -1,   815,   499,
     816,    -1,   826,    -1,   825,   802,    -1,   819,    -1,   817,
     499,   819,    -1,   817,    -1,   817,   499,    -1,   825,    -1,
     834,    -1,   828,    -1,   825,   802,    -1,   823,    -1,     4,
      -1,   824,   803,    -1,     6,    -1,     7,    -1,   821,   824,
      -1,   821,   495,   781,   650,   649,   496,   824,    -1,   719,
     824,    -1,   735,   495,   746,   496,   745,    -1,   735,   823,
     745,    -1,   735,   824,   745,    -1,   421,    -1,   157,    -1,
     275,    -1,     9,    -1,     5,    -1,     3,    -1,   894,    -1,
     895,    -1,   825,    -1,     5,    -1,     3,    -1,   894,    -1,
     899,    -1,     3,    -1,   894,    -1,   896,    -1,     3,    -1,
     894,    -1,   897,    -1,   825,    -1,   825,   831,    -1,   497,
     820,    -1,   831,   497,   820,    -1,   495,   817,   496,    -1,
      -1,   827,    -1,     3,    -1,   898,    -1,   894,    -1,   900,
      -1,   834,    -1,     5,    -1,   315,   819,   837,    36,   838,
      -1,   495,   783,   496,    -1,    -1,   635,    -1,   526,    -1,
     617,    -1,   877,    -1,    93,   360,   825,   840,    -1,    93,
     360,   188,   270,   150,   825,   840,    -1,   840,   841,    -1,
      -1,   559,    -1,   842,    -1,   546,    -1,   889,    -1,    93,
     848,   198,   845,   846,   285,   816,   844,   495,   543,   496,
     847,   710,    -1,    93,   848,   198,   845,   188,   270,   150,
     587,   285,   816,   844,   495,   543,   496,   847,   710,    -1,
     825,    -1,   438,   843,    -1,    -1,    82,    -1,    -1,   587,
      -1,    -1,   457,   572,    -1,    -1,   431,    -1,    -1,    29,
     403,   704,   374,   360,   819,    -1,    29,   403,   188,   150,
     704,   374,   360,   819,    -1,    29,   368,   816,   374,   360,
     819,    -1,    29,   368,   188,   150,   816,   374,   360,   819,
      -1,    29,   450,   816,   374,   360,   819,    -1,    29,   450,
     188,   150,   816,   374,   360,   819,    -1,   165,    68,    -1,
      68,    -1,   152,   108,   824,   625,    -1,   194,   108,   824,
      -1,   151,   856,    -1,   151,   860,   854,   856,    -1,   151,
     448,   856,    -1,   151,   495,   859,   496,   856,    -1,   448,
      -1,    -1,   861,    -1,   553,    -1,    -1,   635,    -1,   526,
      -1,   617,    -1,   877,    -1,   891,    -1,     3,    -1,   894,
      -1,   898,    -1,   857,    -1,   824,    -1,   862,    -1,   859,
     499,   862,    -1,    32,    -1,    31,    -1,   421,    -1,   157,
      -1,   285,    -1,   858,    -1,   863,   855,    -1,   857,    -1,
     860,    -1,   374,   865,    -1,   374,   236,   865,    -1,   374,
     372,   865,    -1,   374,   175,   865,    -1,   866,    -1,   887,
     169,    97,    -1,   412,   478,   868,    -1,   360,   824,    -1,
     887,   414,   869,    -1,   887,   484,   869,    -1,   887,   414,
     115,    -1,   887,   484,   115,    -1,   861,    -1,   553,    -1,
     824,    -1,     3,    -1,   735,   824,   745,    -1,   735,   495,
     823,   496,   824,    -1,   553,    -1,   115,    -1,   236,    -1,
     867,    -1,   869,   499,   867,    -1,   235,   871,    -1,   209,
     871,    -1,   165,   209,   871,    -1,   824,    -1,   825,    -1,
     439,   874,   876,   854,    -1,   439,   874,   876,   854,   816,
      -1,   439,   874,   876,   854,   881,    -1,   439,   495,   875,
     496,    -1,   439,   495,   875,   496,   816,   832,    -1,   860,
      -1,   448,    -1,   168,    -1,   170,    -1,     3,    -1,   170,
      -1,    -1,   873,    -1,   875,   499,   873,    -1,   168,    -1,
      -1,   530,   120,   169,   878,   880,   879,   535,    -1,   704,
      -1,   704,   825,    -1,   704,    36,   825,    -1,   454,   746,
      -1,    -1,   438,   695,    -1,    -1,   860,   854,    -1,   860,
     854,   816,   832,    -1,   344,   884,    -1,   887,    -1,    27,
      -1,   883,    -1,   412,   478,    -1,   416,   219,   231,    -1,
     886,   635,    -1,   399,   635,    -1,   399,   887,    -1,   886,
     887,    -1,   886,   412,   478,    -1,   886,   416,   219,   231,
      -1,   886,    27,    -1,   886,    -1,   378,    -1,   125,    -1,
     825,    -1,   887,   497,   825,    -1,    56,   749,    -1,    93,
     604,   450,   816,   593,   847,    36,   635,   890,    -1,    93,
     290,   342,   604,   450,   816,   593,   847,    36,   635,   890,
      -1,    93,   604,   332,   450,   816,   495,   597,   496,   847,
      36,   635,   890,    -1,    93,   290,   342,   604,   332,   450,
     816,   495,   597,   496,   847,    36,   635,   890,    -1,   457,
      67,   288,    -1,   457,    59,    67,   288,    -1,   457,   236,
      67,   288,    -1,    -1,    93,   604,   403,   893,    36,   635,
     892,    -1,    93,   604,   403,   188,   270,   150,   893,    36,
     635,   892,    -1,    93,   290,   342,   604,   403,   893,    36,
     635,   892,    -1,   457,   107,    -1,   457,   268,   107,    -1,
      -1,   816,   593,   579,   571,    -1,    19,    -1,    20,    -1,
      21,    -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,
      26,    -1,    28,    -1,    29,    -1,    30,    -1,    38,    -1,
      39,    -1,    41,    -1,    42,    -1,    43,    -1,    45,    -1,
      46,    -1,    47,    -1,    54,    -1,    55,    -1,    56,    -1,
      57,    -1,    58,    -1,    59,    -1,    62,    -1,    63,    -1,
      66,    -1,    68,    -1,    69,    -1,    70,    -1,    71,    -1,
      76,    -1,    77,    -1,    78,    -1,    79,    -1,    80,    -1,
      81,    -1,    83,    -1,    84,    -1,    85,    -1,    87,    -1,
      88,    -1,    89,    -1,    90,    -1,    91,    -1,    92,    -1,
      95,    -1,    96,    -1,    97,    -1,   105,    -1,   106,    -1,
     107,    -1,   108,    -1,   109,    -1,   110,    -1,   111,    -1,
     114,    -1,   116,    -1,   118,    -1,   119,    -1,   120,    -1,
     121,    -1,   122,    -1,   123,    -1,   125,    -1,   126,    -1,
     127,    -1,   128,    -1,   129,    -1,   132,    -1,   133,    -1,
     134,    -1,   135,    -1,   136,    -1,   138,    -1,   139,    -1,
     140,    -1,   142,    -1,   143,    -1,   144,    -1,   146,    -1,
     147,    -1,   148,    -1,   149,    -1,   151,    -1,   152,    -1,
     153,    -1,   154,    -1,   155,    -1,   158,    -1,   160,    -1,
     161,    -1,   163,    -1,   165,    -1,   167,    -1,   171,    -1,
     172,    -1,   173,    -1,   175,    -1,   177,    -1,   181,    -1,
     183,    -1,   184,    -1,   185,    -1,   186,    -1,   187,    -1,
     188,    -1,   189,    -1,   191,    -1,   192,    -1,   193,    -1,
     194,    -1,   196,    -1,   197,    -1,   198,    -1,   199,    -1,
     200,    -1,   201,    -1,   203,    -1,   206,    -1,   207,    -1,
     208,    -1,   209,    -1,   210,    -1,   216,    -1,   219,    -1,
     221,    -1,   222,    -1,   223,    -1,   224,    -1,   225,    -1,
     226,    -1,   229,    -1,   231,    -1,   234,    -1,   235,    -1,
     236,    -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,
     243,    -1,   245,    -1,   246,    -1,   247,    -1,   248,    -1,
     249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,    -1,
     254,    -1,   255,    -1,   256,    -1,   257,    -1,   258,    -1,
     259,    -1,   260,    -1,   261,    -1,   262,    -1,   266,    -1,
     267,    -1,   268,    -1,   271,    -1,   272,    -1,   274,    -1,
     277,    -1,   279,    -1,   280,    -1,   281,    -1,   283,    -1,
     284,    -1,   287,    -1,   288,    -1,   289,    -1,   292,    -1,
     295,    -1,   298,    -1,   299,    -1,   300,    -1,   301,    -1,
     302,    -1,   303,    -1,   304,    -1,   305,    -1,   306,    -1,
     307,    -1,   309,    -1,   310,    -1,   312,    -1,   313,    -1,
     315,    -1,   316,    -1,   317,    -1,   319,    -1,   320,    -1,
     321,    -1,   322,    -1,   323,    -1,   324,    -1,   326,    -1,
     327,    -1,   328,    -1,   330,    -1,   331,    -1,   332,    -1,
     333,    -1,   335,    -1,   336,    -1,   337,    -1,   338,    -1,
     339,    -1,   340,    -1,   341,    -1,   342,    -1,   343,    -1,
     344,    -1,   345,    -1,   346,    -1,   347,    -1,   349,    -1,
     350,    -1,   352,    -1,   353,    -1,   354,    -1,   356,    -1,
     357,    -1,   358,    -1,   359,    -1,   360,    -1,   361,    -1,
     362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,    -1,
     368,    -1,   369,    -1,   370,    -1,   371,    -1,   372,    -1,
     374,    -1,   376,    -1,   377,    -1,   378,    -1,   380,    -1,
     381,    -1,   383,    -1,   385,    -1,   386,    -1,   387,    -1,
     388,    -1,   389,    -1,   390,    -1,   391,    -1,   392,    -1,
     393,    -1,   394,    -1,   395,    -1,   397,    -1,   399,    -1,
     401,    -1,   402,    -1,   404,    -1,   406,    -1,   407,    -1,
     408,    -1,   409,    -1,   410,    -1,   416,    -1,   417,    -1,
     419,    -1,   422,    -1,   423,    -1,   425,    -1,   426,    -1,
     427,    -1,   428,    -1,   429,    -1,   432,    -1,   433,    -1,
     434,    -1,   435,    -1,   436,    -1,   439,    -1,   440,    -1,
     441,    -1,   442,    -1,   443,    -1,   447,    -1,   449,    -1,
     450,    -1,   451,    -1,   452,    -1,   455,    -1,   458,    -1,
     459,    -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,
     475,    -1,   476,    -1,   477,    -1,   478,    -1,    48,    -1,
      49,    -1,    51,    -1,    52,    -1,    64,    -1,    65,    -1,
      72,    -1,   112,    -1,   113,    -1,   150,    -1,   156,    -1,
     162,    -1,   179,    -1,   180,    -1,   205,    -1,   211,    -1,
     212,    -1,   214,    -1,   244,    -1,   263,    -1,   265,    -1,
     269,    -1,   276,    -1,   278,    -1,   293,    -1,   297,    -1,
     311,    -1,   314,    -1,   329,    -1,   355,    -1,   375,    -1,
     382,    -1,   396,    -1,   398,    -1,   412,    -1,   413,    -1,
     418,    -1,   420,    -1,   424,    -1,   444,    -1,   445,    -1,
     464,    -1,   465,    -1,   466,    -1,   467,    -1,   468,    -1,
     469,    -1,   470,    -1,   471,    -1,   472,    -1,   473,    -1,
     474,    -1,    44,    -1,    50,    -1,    74,    -1,    82,    -1,
      94,    -1,   101,    -1,   168,    -1,   170,    -1,   174,    -1,
     190,    -1,   204,    -1,   217,    -1,   218,    -1,   220,    -1,
     230,    -1,   232,    -1,   244,    -1,   264,    -1,   273,    -1,
     294,    -1,   296,    -1,   351,    -1,   379,    -1,   396,    -1,
     405,    -1,   448,    -1,    44,    -1,    50,    -1,    74,    -1,
      82,    -1,    94,    -1,   101,    -1,   168,    -1,   170,    -1,
     174,    -1,   190,    -1,   204,    -1,   217,    -1,   218,    -1,
     220,    -1,   230,    -1,   232,    -1,   264,    -1,   273,    -1,
     294,    -1,   296,    -1,   351,    -1,   379,    -1,   405,    -1,
     424,    -1,   448,    -1,    48,    -1,    49,    -1,    51,    -1,
      52,    -1,    65,    -1,    64,    -1,    72,    -1,   112,    -1,
     113,    -1,   150,    -1,   156,    -1,   162,    -1,   179,    -1,
     180,    -1,   205,    -1,   212,    -1,   214,    -1,   211,    -1,
     244,    -1,   263,    -1,   265,    -1,   269,    -1,   276,    -1,
     278,    -1,   293,    -1,   297,    -1,   311,    -1,   314,    -1,
     329,    -1,   355,    -1,   375,    -1,   382,    -1,   396,    -1,
     398,    -1,   412,    -1,   413,    -1,   418,    -1,   420,    -1,
     424,    -1,   444,    -1,   445,    -1,   464,    -1,   465,    -1,
     466,    -1,   467,    -1,   468,    -1,   469,    -1,   470,    -1,
     471,    -1,   472,    -1,   473,    -1,   474,    -1,    44,    -1,
      50,    -1,    74,    -1,    82,    -1,    94,    -1,   101,    -1,
     168,    -1,   170,    -1,   174,    -1,   190,    -1,   204,    -1,
     217,    -1,   218,    -1,   220,    -1,   230,    -1,   232,    -1,
     244,    -1,   264,    -1,   273,    -1,   294,    -1,   296,    -1,
     351,    -1,   379,    -1,   396,    -1,   405,    -1,   424,    -1,
     448,    -1,    27,    -1,    31,    -1,    32,    -1,    33,    -1,
      34,    -1,    35,    -1,    36,    -1,    37,    -1,    40,    -1,
      53,    -1,    60,    -1,    61,    -1,    67,    -1,    73,    -1,
      75,    -1,    86,    -1,    93,    -1,    98,    -1,    99,    -1,
     100,    -1,   102,    -1,   103,    -1,   104,    -1,   115,    -1,
     117,    -1,   124,    -1,   130,    -1,   131,    -1,   137,    -1,
     141,    -1,   145,    -1,   157,    -1,   159,    -1,   164,    -1,
     166,    -1,   169,    -1,   176,    -1,   178,    -1,   182,    -1,
     195,    -1,   202,    -1,   213,    -1,   215,    -1,   227,    -1,
     228,    -1,   233,    -1,   237,    -1,   238,    -1,   270,    -1,
     275,    -1,   282,    -1,   285,    -1,   286,    -1,   290,    -1,
     291,    -1,   308,    -1,   318,    -1,   325,    -1,   334,    -1,
     348,    -1,   367,    -1,   373,    -1,   384,    -1,   400,    -1,
     403,    -1,   411,    -1,   414,    -1,   415,    -1,   421,    -1,
     430,    -1,   431,    -1,   437,    -1,   438,    -1,   446,    -1,
     453,    -1,   454,    -1,   456,    -1,   457,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   468,   468,   484,   496,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     541,     9,    18,    27,    36,    45,    54,    63,    72,    85,
      87,    93,    94,    99,   103,   107,   118,   126,   130,   139,
     148,   157,   166,   175,   184,   192,   200,   209,   218,   227,
     236,   253,   262,   271,   280,   290,   303,   318,   327,   335,
     350,   358,   368,   378,   385,   392,   400,   407,   418,   419,
     424,   428,   433,   438,   446,   447,   452,   456,   457,   458,
       7,    13,    19,    25,     7,    17,    18,    21,    23,     6,
      15,    25,    35,    45,    55,    65,    75,    85,    95,   106,
     117,   127,   140,   141,     8,    21,    27,    34,    40,    47,
      57,    61,    70,    79,    88,    95,    96,   101,   113,   118,
     143,   153,   163,   169,   180,   191,   206,   207,   213,   214,
     219,   220,   226,   227,   231,   232,   237,   239,   245,   246,
     250,   251,   254,   255,   260,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    36,    56,
      57,    84,    85,    86,    87,    88,    89,    93,    94,    99,
     104,   105,   106,   107,   108,   113,   120,   121,   122,   139,
     146,   153,   163,   173,   185,   193,   202,   211,   230,   237,
     242,   244,   246,   248,   251,   256,   257,   261,   262,   263,
     264,   269,   273,   274,   279,   286,   291,   292,   293,   294,
     295,   296,   297,   298,   304,   305,   309,   314,   321,   328,
     335,   347,   348,   349,   350,   354,   359,   360,   361,   366,
     371,   372,   373,   374,   375,   376,   381,   404,   408,   415,
     416,   420,   424,   425,   426,   430,   434,   442,   443,   448,
     449,   450,   454,   462,   463,   468,   469,   473,   478,   482,
     486,   491,   499,   500,   504,   505,   509,   510,   516,   527,
     540,   554,   568,   582,   596,   619,   623,   630,   634,   642,
     647,   654,   664,   665,   666,   667,   668,   675,   682,   683,
     688,   689,     8,    21,    34,     9,    19,    29,    39,    49,
      59,    69,    79,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   113,
     114,   115,   116,   117,   118,   119,   124,   125,   130,   131,
     132,   137,   138,   139,   142,   143,     8,    20,    36,    37,
      41,    45,     7,     1,    30,    53,    54,    59,    63,    68,
      72,    80,    81,    85,    86,    91,    92,    96,    97,   102,
     103,   104,   105,   106,   111,   119,   123,   128,   129,   134,
     138,   143,   147,   151,   155,   159,   163,   167,   171,   175,
     179,   183,   187,   191,   195,   203,   209,   210,   211,   216,
     220,    47,    48,    52,    53,    68,    69,    76,    84,    92,
     100,   108,   116,   127,   128,   155,   171,   188,   189,   208,
     212,   216,   233,   240,   247,   257,   258,   261,   273,   284,
     292,   297,   302,   307,   312,   320,   328,   333,   338,   345,
     346,   350,   351,   352,   359,   360,   364,   365,   369,   370,
     371,   375,   376,   380,   381,   391,   404,   405,   408,   417,
     428,   429,   430,   433,   434,   435,   439,   440,   441,   442,
     446,   447,   451,   453,   469,   471,   476,   479,   487,   491,
     495,   499,   503,   507,   514,   519,   526,   527,   531,   535,
     539,   543,   550,   557,   558,   563,   564,   568,   569,   574,
     576,   578,   583,   603,   604,   606,   611,   612,   616,   617,
     620,   621,   646,   647,   652,   657,   661,   662,   666,   667,
     671,   672,   673,   674,   675,   679,   692,   699,   706,   713,
     714,   718,   719,   723,   724,   728,   729,   733,   734,   738,
     739,   743,   754,   755,   756,   757,   761,   762,   767,   768,
     769,   778,   784,   793,   794,   807,   808,   812,   813,   817,
     818,   824,   830,   838,   846,   855,   864,   868,   894,   898,
     911,   925,   940,   952,   968,   974,   979,   985,   992,   993,
    1001,  1005,  1009,  1015,  1022,  1027,  1028,  1029,  1030,  1034,
    1035,  1047,  1048,  1053,  1060,  1067,  1074,  1106,  1117,  1130,
    1135,  1136,  1139,  1140,  1143,  1144,  1149,  1150,  1155,  1159,
    1165,  1186,  1194,  1207,  1210,  1214,  1214,  1216,  1221,  1228,
    1233,  1239,  1244,  1250,  1256,  1265,  1267,  1270,  1274,  1275,
    1276,  1277,  1278,  1279,  1284,  1304,  1305,  1306,  1307,  1318,
    1332,  1333,  1339,  1344,  1349,  1354,  1359,  1364,  1369,  1374,
    1380,  1386,  1392,  1399,  1421,  1430,  1434,  1442,  1446,  1454,
    1466,  1487,  1491,  1497,  1501,  1514,  1522,  1532,  1534,  1536,
    1538,  1540,  1542,  1547,  1548,  1555,  1564,  1572,  1581,  1592,
    1600,  1601,  1602,  1606,  1606,  1609,  1609,  1612,  1612,  1615,
    1615,  1618,  1618,  1621,  1621,  1624,  1624,  1627,  1627,  1630,
    1632,  1634,  1636,  1638,  1640,  1642,  1644,  1646,  1651,  1656,
    1662,  1669,  1674,  1680,  1686,  1717,  1719,  1721,  1729,  1744,
    1746,  1748,  1750,  1752,  1754,  1756,  1758,  1760,  1762,  1764,
    1766,  1768,  1770,  1773,  1775,  1777,  1780,  1782,  1784,  1786,
    1789,  1794,  1799,  1806,  1811,  1818,  1823,  1830,  1835,  1843,
    1851,  1859,  1867,  1885,  1893,  1901,  1909,  1917,  1925,  1929,
    1933,  1937,  1945,  1961,  1969,  1977,  1985,  1993,  2001,  2009,
    2013,  2017,  2021,  2025,  2033,  2041,  2049,  2057,  2077,  2099,
    2110,  2117,  2131,  2147,  2149,  2151,  2153,  2155,  2157,  2159,
    2161,  2163,  2165,  2167,  2169,  2171,  2173,  2175,  2177,  2179,
    2181,  2183,  2185,  2189,  2193,  2197,  2211,  2212,  2213,  2220,
    2232,  2247,  2259,  2261,  2273,  2284,  2308,  2319,  2328,  2332,
    2339,  2347,  2355,  2366,  2374,  2402,  2438,  2449,  2450,  2457,
    2463,  2467,  2471,  2475,  2479,  2483,  2487,  2491,  2495,  2499,
    2503,  2507,  2511,  2515,  2519,  2523,  2525,  2527,  2531,  2540,
    2545,  2552,  2567,  2574,  2578,  2582,  2586,  2590,  2604,  2605,
    2609,  2610,  2614,  2615,  2622,  2623,  2627,  2628,  2633,  2641,
    2643,  2657,  2660,  2687,  2688,  2691,  2692,  2703,  2709,  2716,
    2725,  2742,  2787,  2795,  2803,  2811,  2819,  2840,  2841,  2844,
    2845,  2849,  2859,  2860,  2864,  2865,  2869,  2870,  2871,  2874,
    2875,  2878,  2879,  2880,  2881,  2882,  2883,  2884,  2885,  2886,
    2887,  2888,  2889,  2892,  2894,  2899,  2901,  2906,  2908,  2910,
    2912,  2914,  2916,  2918,  2920,  2934,  2936,  2940,  2944,  2951,
    2956,  2974,  2979,  2987,  2991,  2997,  3001,  3010,  3021,  3022,
    3026,  3030,  3037,  3038,  3039,  3040,  3041,  3042,  3043,  3044,
    3045,  3046,  3056,  3060,  3067,  3074,  3075,  3091,  3095,  3100,
    3104,  3119,  3124,  3128,  3131,  3134,  3135,  3136,  3139,  3146,
    3156,  3170,  3171,  3175,  3186,  3187,  3190,  3191,  3194,  3198,
    3205,  3209,  3217,  3228,  3229,  3233,  3234,  3238,  3239,  3242,
    3243,  3253,  3254,  3258,  3259,  3263,  3264,  3267,  3283,  3291,
    3299,  3314,  3332,  3333,  3336,  3337,  3340,  3344,  3345,  3349,
    3350,  3353,  3354,  3355,  3365,  3366,  3377,  3381,  3408,  3410,
    3416,  3417,  3420,  3422,  3432,  3435,  3446,  3450,  3454,  3466,
    3470,  3479,  3486,  3524,  3528,  3532,  3536,  3540,  3544,  3548,
    3554,  3555,  3571,  3572,  3573,  3576,  3577,  3583,  3584,  3585,
    3588,  3589,  3590,  3593,  3594,  3595,  3598,  3599,  3602,  3604,
    3609,  3610,  3613,  3621,  3622,  3623,  3624,  3627,  3628,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    72,    73,    78,    82,    90,    91,
      96,    97,    98,   104,   109,   117,   118,    10,    16,    22,
      28,    38,    39,    47,    58,    70,    78,    86,    93,   103,
     105,   111,   115,   119,   134,   141,   142,   143,   147,   148,
       7,    14,    20,    28,    29,     8,    22,    36,    48,    56,
      70,    71,    72,    73,    74,    87,    88,    93,    94,    98,
      99,     7,    21,    25,    32,    43,    44,    50,    51,     9,
      19,     2,     7,    14,    24,    25,    32,     3,    10,    17,
      24,    31,    38,    45,    52,    61,    61,    63,    64,     6,
       8,    21,    34,    52,    74,    75,    76,    77,    11,    24,
      37,    54,    55,    56,    61,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE",
  "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOB", "GLOBAL", "GRANT", "GRANTED", "GROUP_P", "GROUPING",
  "GROUPING_ID", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "HOURS_P", "IDENTITY_P", "IF_P", "IGNORE_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTALL",
  "INSTEAD", "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO",
  "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN", "JSON", "KEY", "LABEL",
  "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF",
  "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
  "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO",
  "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUALIFY", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING", "SUMMARIZE",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'{'", "'}'", "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti",
  "stmt", "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list",
  "enum_val_list", "RenameStmt", "opt_column", "InsertStmt", "insert_rest",
  "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list",
  "set_clause_list_opt_comma", "index_params", "set_target", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "columnList_opt_comma",
  "func_type", "ConstraintElem", "TableElementList", "key_match",
  "TableLikeClause", "OptTemp", "generated_when", "CreateMatViewStmt",
  "DropStmt", "drop_type_any_name", "drop_type_name", "any_name_list",
  "opt_drop_behavior", "drop_type_name_on_any_name", "type_name_list",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_list_opt_comma", "group_by_item",
  "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "qualify_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause",
  "values_clause_opt_comma", "from_clause", "from_list",
  "from_list_opt_comma", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "export_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "dict_arguments_opt_comma", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "expr_list_opt_comma", "opt_expr_list_opt_comma", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list_opt_comma",
  "target_list", "target_list_opt_comma", "target_el", "except_list",
  "opt_except_list", "replace_list_el", "replace_list",
  "replace_list_opt_comma", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name_list_opt_comma", "name",
  "attr_name", "func_name", "AexprConst", "Iconst", "Sconst", "ColId",
  "ColIdOrString", "type_function_name", "function_name_token",
  "type_name_token", "any_name", "attrs", "opt_name_list", "param_name",
  "ColLabel", "ColLabelOrString", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "IndexStmt", "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,    60,    62,    61,   737,    43,    45,    42,    47,
      37,    94,   738,    91,    93,    40,    41,    46,    59,    44,
     123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   505,   506,   507,   507,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   509,   509,   509,   509,   509,   509,   509,   509,   510,
     510,   511,   511,   512,   512,   512,   512,   513,   513,   514,
     514,   514,   514,   514,   514,   514,   514,   514,   514,   514,
     514,   514,   514,   514,   514,   514,   514,   514,   514,   514,
     514,   514,   514,   514,   514,   514,   514,   514,   515,   515,
     516,   516,   516,   516,   517,   517,   518,   519,   519,   519,
     520,   520,   520,   520,   521,   522,   522,   523,   523,   524,
     524,   524,   524,   524,   524,   524,   524,   524,   524,   524,
     524,   524,   525,   525,   526,   527,   527,   527,   527,   527,
     528,   528,   529,   529,   529,   530,   530,   531,   532,   532,
     533,   533,   533,   534,   534,   534,   535,   535,   536,   536,
     537,   537,   538,   538,   539,   539,   540,   540,   541,   541,
     542,   542,   543,   543,   544,   545,   545,   545,   546,   546,
     547,   547,   548,   548,   548,   549,   549,   550,   550,   551,
     551,   552,   552,   552,   553,   553,   553,   553,   554,   554,
     554,   554,   554,   554,   554,   554,   554,   554,   554,   554,
     554,   554,   555,   555,   556,   556,   556,   557,   557,   557,
     557,   557,   557,   558,   558,   558,   559,   559,   559,   560,
     560,   561,   561,   561,   561,   561,   561,   562,   562,   563,
     564,   564,   564,   564,   564,   565,   565,   565,   565,   566,
     566,   566,   566,   566,   566,   566,   566,   566,   567,   568,
     569,   569,   569,   569,   569,   570,   570,   571,   571,   571,
     571,   572,   573,   573,   574,   574,   575,   575,   575,   575,
     575,   575,   575,   575,   576,   576,   577,   578,   578,   578,
     578,   579,   579,   579,   579,   580,   581,   581,   581,   582,
     583,   583,   583,   583,   583,   583,   584,   585,   585,   586,
     586,   587,   588,   588,   588,   589,   589,   590,   590,   591,
     591,   591,   592,   593,   593,   594,   594,   595,   596,   596,
     596,   596,   597,   597,   598,   598,   599,   599,   599,   600,
     600,   600,   600,   600,   600,   601,   601,   602,   602,   602,
     602,   603,   604,   604,   604,   604,   604,   604,   604,   604,
     605,   605,   606,   606,   606,   607,   607,   607,   607,   607,
     607,   607,   607,   608,   608,   608,   608,   608,   608,   608,
     608,   608,   608,   608,   608,   608,   608,   608,   608,   609,
     609,   609,   609,   609,   609,   609,   610,   610,   611,   611,
     611,   612,   612,   612,   613,   613,   614,   614,   615,   615,
     616,   616,   617,   618,   618,   619,   619,   620,   620,   621,
     621,   622,   622,   623,   623,   624,   624,   625,   625,   626,
     626,   626,   626,   626,   627,   628,   628,   629,   629,   630,
     630,   631,   631,   631,   631,   631,   631,   631,   631,   631,
     631,   631,   631,   631,   631,   632,   633,   633,   633,   634,
     634,   635,   635,   636,   636,   637,   637,   637,   637,   637,
     637,   637,   637,   638,   638,   639,   639,   639,   639,   639,
     639,   639,   640,   640,   640,   641,   641,   642,   643,   643,
     644,   644,   644,   644,   644,   644,   644,   644,   644,   645,
     645,   646,   646,   646,   647,   647,   648,   648,   649,   649,
     649,   650,   650,   651,   651,   651,   652,   652,   653,   653,
     654,   654,   654,   655,   655,   655,   656,   656,   656,   656,
     657,   657,   658,   658,   658,   658,   659,   659,   660,   660,
     660,   660,   660,   660,   661,   661,   662,   662,   663,   663,
     663,   663,   664,   665,   665,   666,   666,   667,   667,   667,
     667,   667,   668,   669,   669,   669,   670,   670,   671,   671,
     672,   672,   673,   673,   673,   673,   674,   674,   675,   675,
     676,   676,   676,   676,   676,   677,   678,   679,   680,   681,
     681,   682,   682,   683,   683,   684,   684,   685,   685,   686,
     686,   687,   688,   688,   688,   688,   689,   689,   690,   690,
     690,   691,   691,   692,   692,   693,   693,   694,   694,   695,
     695,   696,   696,   696,   696,   696,   696,   696,   697,   697,
     697,   697,   697,   697,   698,   698,   698,   698,   699,   699,
     700,   700,   700,   700,   700,   701,   701,   701,   701,   702,
     702,   703,   703,   704,   704,   704,   704,   705,   705,   706,
     707,   707,   708,   708,   709,   709,   710,   710,   711,   711,
     712,   713,   713,   714,   714,   715,   715,   716,   716,   716,
     716,   716,   716,   716,   716,   717,   717,   717,   718,   718,
     718,   718,   718,   718,   718,   719,   719,   719,   719,   720,
     721,   721,   722,   722,   722,   722,   722,   722,   722,   722,
     722,   722,   722,   723,   723,   724,   724,   725,   725,   726,
     727,   728,   728,   729,   729,   730,   731,   732,   732,   732,
     732,   732,   732,   733,   733,   734,   734,   734,   734,   735,
     736,   736,   736,   737,   737,   738,   738,   739,   739,   740,
     740,   741,   741,   742,   742,   743,   743,   744,   744,   745,
     745,   745,   745,   745,   745,   745,   745,   745,   745,   745,
     745,   745,   745,   745,   745,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   748,   748,   748,   748,
     748,   748,   748,   748,   748,   748,   748,   748,   749,   749,
     749,   749,   749,   749,   749,   750,   750,   751,   751,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   753,   753,
     754,   754,   755,   755,   756,   756,   757,   757,   758,   759,
     759,   759,   760,   761,   761,   762,   762,   763,   763,   763,
     764,   764,   765,   765,   765,   765,   765,   766,   766,   767,
     767,   768,   769,   769,   770,   770,   771,   771,   771,   772,
     772,   773,   773,   773,   773,   773,   773,   773,   773,   773,
     773,   773,   773,   774,   774,   775,   775,   776,   776,   776,
     776,   776,   776,   776,   776,   777,   777,   778,   778,   779,
     779,   780,   780,   781,   781,   782,   782,   782,   783,   783,
     784,   784,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   786,   786,   787,   788,   788,   789,   789,   789,
     789,   789,   789,   790,   791,   792,   792,   792,   793,   793,
     794,   795,   795,   796,   797,   797,   798,   798,   799,   799,
     800,   800,   800,   801,   801,   802,   802,   803,   803,   804,
     804,   805,   805,   806,   806,   807,   807,   808,   808,   808,
     808,   808,   809,   809,   810,   810,   811,   812,   812,   813,
     813,   814,   814,   814,   815,   815,   816,   816,   817,   817,
     818,   818,   819,   820,   821,   821,   822,   822,   822,   822,
     822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
     823,   824,   825,   825,   825,   826,   826,   827,   827,   827,
     828,   828,   828,   829,   829,   829,   830,   830,   831,   831,
     832,   832,   833,   834,   834,   834,   834,   835,   835,   836,
     837,   837,   838,   838,   838,   838,   839,   839,   840,   840,
     841,   841,   841,   841,   842,   842,   843,   844,   844,   845,
     845,   846,   846,   847,   847,   848,   848,   849,   849,   849,
     849,   849,   849,   850,   850,   851,   852,   853,   853,   853,
     853,   854,   854,   855,   855,   855,   856,   856,   856,   856,
     856,   857,   857,   857,   858,   858,   859,   859,   860,   860,
     861,   861,   861,   861,   862,   863,   863,   864,   864,   864,
     864,   865,   865,   865,   865,   866,   866,   866,   866,   867,
     867,   868,   868,   868,   868,   868,   868,   868,   869,   869,
     870,   870,   870,   871,   871,   872,   872,   872,   872,   872,
     873,   873,   873,   873,   873,   874,   874,   875,   875,   876,
     876,   877,   878,   878,   878,   879,   879,   880,   880,   881,
     881,   882,   883,   883,   884,   884,   884,   885,   885,   885,
     885,   885,   885,   885,   885,   886,   886,   887,   887,   888,
     889,   889,   889,   889,   890,   890,   890,   890,   891,   891,
     891,   892,   892,   892,   893,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     4,     6,     4,     6,     4,     6,     4,     6,     1,
       2,     3,     2,     1,     3,     2,     3,     1,     3,     2,
       5,     3,     6,     4,     6,     6,     6,     5,     5,     6,
       9,     4,     5,     7,     6,     4,     8,     4,     2,     4,
       3,     6,     4,     2,     2,     2,     2,     1,     2,     0,
       1,     2,     2,     2,     1,     3,     4,     2,     1,     0,
       2,     3,     2,     3,     8,     1,     0,     1,     3,     6,
       6,     8,     6,     8,     6,     8,     6,     8,     8,    10,
       8,    10,     1,     0,     7,     1,     4,     4,     7,     2,
       1,     3,     4,     3,     0,     1,     0,     2,     3,     5,
       8,     5,     0,     5,     5,     7,     2,     0,     1,     1,
       1,     3,     2,     0,     1,     0,     1,     3,     1,     3,
       1,     2,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,    11,     0,
       2,     1,     1,     1,     1,     1,     1,     3,     0,     1,
       2,     1,     1,     2,     2,     3,     1,     1,     2,     2,
       1,     2,     3,     5,     3,     2,     5,     5,     2,     3,
       1,     1,     2,     2,     0,     4,     0,     3,     4,     4,
       0,     3,     2,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     1,     2,     2,
       2,     2,     2,     2,     0,     3,     3,     3,     0,     1,
       2,     1,     2,     2,     2,     2,     4,     1,     3,     1,
       3,     1,     1,     1,     1,     3,     1,     2,     0,     1,
       2,     0,     1,     3,     0,     2,     0,     3,     3,     1,
       5,     3,     1,     3,     1,     2,     1,     4,     5,     5,
       6,     3,     7,     4,    11,     1,     3,     2,     2,     2,
       0,     3,     1,     1,     2,     2,     2,     2,     1,     0,
       1,     2,     8,    11,    10,     6,     4,     6,     4,     6,
       8,     4,     6,     1,     1,     1,     1,     2,     1,     2,
       1,     2,     1,     1,     1,     3,     3,     3,     3,     2,
       2,     1,     3,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     3,     8,     7,     1,     1,
       2,     3,     8,    11,     9,     1,     1,     3,     0,     1,
       3,     1,     0,     1,     0,     1,     0,     1,     3,     1,
       1,     1,     3,     0,     2,     2,     0,     2,     0,     1,
       0,     1,     1,     1,     3,     3,     1,     1,     3,     3,
       3,     3,     4,     3,     2,     1,     1,     1,     1,     1,
       3,     1,     1,     3,     3,     1,     2,     4,     4,     2,
       3,     5,     5,     1,     1,    11,    11,     1,     2,     4,
       4,     4,     2,     2,     3,     1,     3,     6,     2,     0,
       3,     3,     4,     4,     4,     4,     3,     2,     1,     1,
       0,     1,     1,     0,     1,     5,     1,     0,     2,     2,
       0,     1,     0,     3,     5,     5,     1,     3,     4,     3,
       1,     1,     0,     2,     2,     0,     2,     2,     1,     1,
       1,     0,     2,     4,     5,     4,     2,     3,     2,     2,
       2,     2,     1,     2,     3,     0,     1,     0,     5,     1,
       4,     6,     2,     1,     0,     4,     0,     1,     1,     2,
       2,     2,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     0,     1,     3,     1,     2,
       1,     1,     1,     1,     1,     2,     4,     4,     5,     1,
       1,     2,     0,     2,     0,     1,     3,     1,     0,     1,
       2,     3,     2,     4,     2,     3,     2,     0,     1,     2,
       0,     4,     5,     1,     2,     2,     0,     1,     3,     1,
       2,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     2,     3,     5,
       6,     2,     3,     5,     5,     3,     4,     0,     1,     1,
       1,     1,     1,     2,     4,     1,     1,     1,     1,     2,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     3,     3,     5,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     2,     3,     3,     2,     2,
       3,     3,     5,     4,     6,     3,     5,     4,     6,     4,
       6,     5,     7,     3,     2,     4,     3,     2,     1,     3,
       3,     3,     3,     3,     4,     3,     4,     3,     4,     5,
       6,     6,     7,     6,     7,     6,     7,     3,     4,     4,
       6,     1,     4,     1,     3,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     5,     6,     6,     7,     1,     1,     2,     2,
       2,     4,     1,     2,     1,     2,     2,     4,     3,     6,
       7,     9,     7,     7,     4,     5,     1,     1,     1,     5,
       1,     1,     4,     1,     4,     1,     4,     1,     4,     1,
       1,     1,     1,     1,     1,     6,     6,     4,     4,     4,
       4,     6,     5,     5,     5,     4,     6,     4,     5,     0,
       5,     0,     1,     0,     2,     0,     1,     3,     3,     2,
       2,     0,     6,     1,     0,     3,     0,     2,     2,     0,
       1,     4,     2,     2,     2,     2,     2,     4,     3,     1,
       5,     3,     1,     3,     1,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     1,     4,     1,     4,     1,
       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
       2,     1,     0,     1,     3,     1,     3,     3,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     1,     2,     3,     2,     1,
       3,     5,     4,     2,     1,     0,     3,     1,     3,     1,
       2,     4,     2,     0,     1,     3,     1,     2,     1,     3,
       1,     2,     1,     1,     1,     2,     1,     1,     2,     1,
       1,     2,     7,     2,     5,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     2,     1,     4,     3,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     2,     3,     1,     1,     4,     5,     5,     4,     6,
       1,     1,     1,     1,     1,     1,     0,     1,     3,     1,
       0,     7,     1,     2,     3,     2,     0,     2,     0,     2,
       4,     2,     1,     1,     1,     2,     3,     2,     2,     2,
       2,     3,     4,     2,     1,     1,     1,     1,     3,     2,
       9,    11,    12,    14,     3,     4,     4,     0,     7,    10,
       9,     2,     3,     0,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     136,   215,     0,  1179,  1178,   215,     0,  1154,   215,   430,
     349,     0,  1256,     0,   215,     0,   136,     0,     0,     0,
       0,     0,     0,     0,     0,   215,   497,     0,  1255,   215,
       0,     0,  1226,     0,     0,     0,     0,     0,     2,     4,
       7,    19,    13,    31,    27,     0,    29,    17,    22,     6,
      33,    18,    15,    21,    14,    34,    11,    32,   464,   451,
     502,   463,   135,   603,   467,    30,    16,    26,     5,    10,
      24,    25,    23,  1162,    37,    28,    35,    20,     8,    36,
      38,  1254,     9,    39,    12,   214,   213,   207,     0,     0,
       0,     0,     0,   208,  1092,  1275,  1276,  1277,  1278,  1279,
    1280,  1281,  1282,  1283,  1284,  1285,  1286,  1287,  1288,  1289,
    1290,  1633,  1291,  1292,  1293,  1581,  1582,  1634,  1583,  1584,
    1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1585,  1586,
    1302,  1303,  1304,  1305,  1306,  1587,  1635,  1307,  1308,  1309,
    1310,  1311,  1312,  1636,  1313,  1314,  1315,  1316,  1317,  1318,
    1319,  1320,  1321,  1637,  1322,  1323,  1324,  1638,  1325,  1326,
    1327,  1328,  1329,  1330,  1331,  1588,  1589,  1332,  1333,  1334,
    1335,  1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,  1344,
    1345,  1346,  1347,  1348,  1349,  1350,  1351,  1352,  1353,  1354,
    1355,  1356,  1357,  1358,  1359,  1590,  1360,  1361,  1362,  1363,
    1364,  1591,  1365,  1366,  1367,  1592,  1368,  1369,  1370,  1639,
    1640,  1371,  1372,  1373,  1641,  1374,  1375,  1593,  1594,  1376,
    1377,  1378,  1379,  1380,  1381,  1382,  1383,  1642,  1384,  1385,
    1386,  1387,  1388,  1389,  1390,  1391,  1392,  1393,  1394,  1643,
    1595,  1395,  1396,  1397,  1398,  1399,  1596,  1597,  1598,  1400,
    1644,  1645,  1401,  1646,  1402,  1403,  1404,  1405,  1406,  1407,
    1408,  1647,  1409,  1648,  1410,  1411,  1412,  1413,  1414,  1415,
    1416,  1417,  1599,  1418,  1419,  1420,  1421,  1422,  1423,  1424,
    1425,  1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  1434,
    1435,  1600,  1650,  1601,  1436,  1437,  1438,  1602,  1439,  1440,
    1651,  1441,  1603,  1442,  1604,  1443,  1444,  1445,  1446,  1447,
    1448,  1449,  1450,  1451,  1605,  1652,  1452,  1653,  1606,  1453,
    1454,  1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,  1463,
    1464,  1607,  1465,  1466,  1608,  1467,  1468,  1469,  1470,  1471,
    1472,  1473,  1474,  1475,  1476,  1477,  1478,  1609,  1479,  1480,
    1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,
    1491,  1492,  1493,  1494,  1495,  1496,  1497,  1654,  1498,  1499,
    1500,  1610,  1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,
    1509,  1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1611,
    1518,  1519,  1520,  1655,  1521,  1522,  1612,  1523,  1524,  1525,
    1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1613,
    1535,  1614,  1536,  1537,  1538,  1539,  1657,  1540,  1541,  1542,
    1543,  1544,  1615,  1616,  1545,  1546,  1617,  1547,  1618,  1548,
    1549,  1619,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,
    1558,  1559,  1560,  1561,  1562,  1563,  1564,  1620,  1621,  1565,
    1658,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,
    1575,  1576,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,
    1630,  1631,  1632,  1577,  1578,  1579,  1580,  1259,     0,     0,
    1074,  1093,  1094,  1102,   210,   429,   136,     0,     0,     0,
       0,     0,   343,   342,     0,  1145,   348,     0,     0,  1092,
     102,  1599,  1467,  1613,   100,  1072,  1093,     0,   372,   373,
       0,   381,     0,   365,   370,   366,     0,   391,   383,   392,
     384,   364,   385,   374,   363,     0,   393,     0,   368,     0,
       0,     0,   211,   176,   349,   136,     0,  1167,  1168,  1166,
    1157,  1162,  1169,  1170,     0,  1153,     0,     0,  1091,  1213,
    1214,  1211,  1210,   165,  1121,  1243,  1615,  1545,  1257,  1244,
    1241,  1242,   212,   496,   494,     0,  1042,  1374,  1412,  1505,
    1516,  1615,  1187,  1191,     0,   209,  1620,  1248,     0,  1249,
    1096,     0,   468,   643,  1095,  1066,  1225,     0,  1230,     0,
    1481,   472,   475,  1111,   473,   464,     0,     1,   136,     0,
       0,     0,   493,   493,     0,   493,     0,   456,   464,   459,
     463,   604,  1161,  1239,  1253,  1615,  1545,  1247,  1250,  1382,
       0,     0,  1382,     0,  1382,     0,  1382,     0,     0,  1034,
       0,  1035,  1075,  1123,  1124,  1122,     0,  1125,   314,   347,
     346,   345,   344,   349,  1382,  1129,  1106,     0,   398,   399,
       0,     0,     0,     0,     0,     0,  1140,   103,   101,   379,
     380,     0,   371,   367,   369,     0,  1103,  1659,   695,  1660,
     724,   702,   724,   724,  1661,  1662,  1663,  1664,   691,   691,
    1347,   704,  1665,  1666,  1667,  1382,  1668,  1669,   692,   693,
     729,  1670,  1671,  1672,  1673,  1674,     0,     0,  1675,   724,
    1676,   691,  1677,  1678,   696,  1679,   665,     0,  1680,   694,
     666,  1681,   732,   732,  1682,   719,  1683,   390,     0,   394,
     677,   678,   679,   680,   705,   706,   681,   711,   712,   716,
     682,   764,   691,  1104,  1105,  1382,   390,   386,  1382,   390,
    1068,  1382,     0,     0,   172,     0,     0,  1159,  1171,  1684,
    1685,  1686,  1687,  1689,  1688,  1690,  1691,  1692,  1693,  1694,
    1695,  1696,  1697,  1698,  1701,  1699,  1700,  1702,  1703,  1704,
    1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,
    1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,
    1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,
    1735,  1185,     0,  1186,  1176,  1165,  1172,  1173,   136,   428,
    1212,  1156,     0,     0,     0,     0,  1245,     0,     0,     0,
    1077,  1079,  1080,   963,  1090,  1037,     0,  1582,  1583,  1584,
    1027,     0,  1585,  1586,  1587,  1635,   893,   880,   889,   894,
     881,   883,   890,  1588,  1589,   831,  1590,  1591,  1088,  1592,
    1593,  1594,  1596,  1597,  1598,   885,   887,  1600,  1601,     0,
    1089,  1603,  1604,  1448,  1606,  1607,  1609,  1610,   891,  1612,
    1614,  1615,  1616,  1617,  1618,  1087,  1619,   892,  1621,     0,
       0,     0,  1055,   982,     0,     0,     0,  1037,   864,     0,
       0,   685,   686,   707,   708,   687,   713,   714,   688,     0,
    1049,   765,   909,  1037,   876,   939,   808,     0,   862,   856,
    1045,   479,  1043,     0,   857,  1076,  1037,  1028,   479,  1041,
    1190,  1188,  1194,  1189,     0,     0,     0,     0,     0,   645,
     644,  1067,  1224,  1222,  1223,  1221,  1220,  1227,     0,  1229,
    1162,   977,   979,     0,  1028,   474,     0,     0,     0,   454,
     453,     3,     0,     0,  1232,     0,   491,   492,     0,     0,
       0,     0,     0,     0,     0,     0,   588,   518,   519,   521,
     585,   589,   597,     0,   460,     0,  1111,  1251,     0,     0,
       0,   123,   123,     0,     0,     0,     0,     0,    94,    43,
      87,     0,     0,     0,     0,   190,   203,     0,     0,     0,
       0,     0,   200,     0,     0,   183,    45,   177,   179,     0,
     123,     0,    41,     0,     0,     0,    47,  1092,     0,  1633,
    1634,  1635,  1636,  1637,   894,     0,  1639,  1640,  1641,  1642,
    1643,  1644,  1645,  1646,  1647,  1648,  1599,  1650,  1651,  1652,
    1653,  1654,  1655,  1613,  1657,  1619,     0,  1658,     0,   868,
     985,   502,   983,  1112,     0,  1093,  1099,  1033,     0,  1113,
    1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,
    1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,
    1783,  1784,  1785,  1786,  1787,  1788,  1789,  1790,  1791,  1792,
    1793,  1794,  1795,  1796,  1797,  1798,  1799,  1800,  1801,  1802,
    1803,  1804,  1805,  1806,  1807,  1808,  1809,  1810,  1811,  1812,
    1813,  1814,  1815,  1816,  1817,  1818,  1819,  1820,  1821,  1822,
    1823,  1824,  1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,
    1833,  1834,  1835,  1723,  1836,  1837,  1838,  1839,  1840,  1030,
    1073,  1115,  1114,  1116,  1036,     0,     0,   426,     0,     0,
    1126,     0,  1107,     0,     0,     0,  1382,   171,  1382,   314,
       0,   314,     0,  1139,  1142,   382,   378,   376,   375,   377,
     723,   710,   718,   717,     0,   700,   699,   698,     0,   697,
       0,     0,   724,   724,   722,   701,   677,     0,     0,     0,
     728,     0,   726,   388,   389,     0,   361,     0,   671,   667,
       0,   737,   738,   739,   740,   747,   748,   745,   746,   741,
     742,   735,   736,   743,   744,   733,   734,     0,   749,   750,
     751,   752,   753,   754,   755,   756,   683,   689,     0,     0,
     356,     0,     0,   358,     0,     0,     0,   349,     0,   136,
       0,   184,  1181,  1182,  1180,     0,     0,  1164,   187,   204,
    1175,  1184,  1174,  1183,  1163,  1158,     0,  1155,   417,  1200,
    1199,  1208,   166,     0,   988,     0,   136,  1246,  1258,     0,
     860,   982,  1026,     0,     0,     0,     0,     0,     0,   866,
     991,     0,     0,   788,     0,     0,     0,  1006,     0,  1012,
       0,     0,     0,   789,   769,   770,     0,  1054,  1063,   981,
       0,   864,   977,     0,   942,   944,     0,  1095,     0,   858,
     859,   865,     0,  1083,     0,   764,   764,  1048,   963,     0,
       0,   960,   961,   962,     0,     0,     0,  1040,     0,   971,
     973,     0,     0,   804,   969,     0,   807,     0,     0,     0,
       0,   957,   958,   959,   951,   952,   953,   954,   955,   956,
     967,   950,   785,     0,     0,   911,   863,     0,   784,  1046,
       0,   606,     0,  1081,  1078,     0,  1029,   606,  1202,  1206,
    1207,  1205,     0,  1201,  1193,  1192,  1197,  1195,  1198,  1196,
       0,  1218,     0,  1215,   980,   601,   476,     0,     0,  1238,
       0,   130,     0,  1233,     0,   471,   470,   512,   512,   503,
     506,   512,   469,   560,   561,     0,     0,     0,     0,   594,
     592,  1077,  1090,   548,   522,   547,     0,     0,   526,     0,
     552,   765,   587,   458,   516,   517,   520,   457,     0,   590,
       0,   600,   588,   521,     0,  1240,  1252,     0,     0,     0,
       0,     0,  1382,     0,     0,    78,    59,   265,     0,   122,
       0,     0,     0,     0,     0,     0,     0,    86,    83,    84,
      85,     0,     0,     0,     0,   188,   189,   202,     0,   193,
     194,   191,   195,   196,     0,     0,   181,   182,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,     0,
       0,   502,   502,   502,   874,     0,   500,   501,     0,     0,
    1031,  1034,   416,   322,     0,   312,     0,     0,     0,     0,
       0,     0,     0,   349,  1132,  1130,  1128,  1131,  1133,  1108,
       0,     0,  1382,   314,     0,     0,     0,   168,   170,     0,
     311,   284,     0,  1144,     0,     0,  1382,  1141,   301,     0,
       0,     0,     0,   390,     0,   721,   720,   672,   668,     0,
       0,     0,     0,   395,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   390,   387,   390,  1069,     0,   390,
     175,     0,  1382,     0,  1160,  1177,   185,   205,   186,   206,
     449,     0,   423,   431,   436,   414,     0,   414,     0,   433,
     437,   414,   432,   414,   427,     0,   167,     0,  1120,     0,
    1119,     0,  1038,     0,     0,  1025,  1021,     0,     0,     0,
       0,     0,   992,   993,   994,   995,   996,   997,   998,   999,
    1000,     0,     0,  1001,     0,     0,     0,   949,   960,   961,
     962,   957,   958,   959,   951,   952,   953,   954,   955,   956,
     975,     0,     0,     0,     0,     0,     0,     0,     0,   833,
       0,     0,   938,     0,   977,  1011,     0,     0,     0,     0,
       0,     0,   977,  1017,     0,     0,     0,  1053,     0,  1050,
     810,  1037,     0,   945,   809,     0,     0,     0,  1085,  1086,
     766,   811,   780,   781,   782,   786,  1118,  1117,  1047,     0,
    1039,     0,     0,   767,   790,   795,     0,  1018,   827,     0,
     815,     0,   803,     0,   813,   817,   791,   806,     0,   787,
       0,  1040,   972,   974,     0,   970,     0,   777,   778,   779,
     771,   772,   773,   774,   775,   776,   783,   948,   946,   947,
       0,     0,     0,   913,     0,     0,   812,  1044,  1374,  1412,
       0,   490,   490,   490,   478,   488,     0,   657,   502,  1055,
     657,     0,   764,   646,  1111,  1228,  1216,  1217,   978,  1110,
     136,     0,  1236,     0,     0,     0,   142,   125,     0,  1234,
       0,   158,   160,   606,     0,  1037,   510,   511,   515,   515,
       0,     0,   515,  1610,  1501,     0,     0,     0,     0,   553,
     595,     0,   586,   550,   551,     0,   549,  1077,   554,  1076,
     555,   558,   559,   527,   596,  1064,   598,     0,   591,   462,
     461,   602,     0,    44,     0,  1382,    61,     0,     0,     0,
       0,     0,     0,   219,   256,   219,    99,  1382,   390,  1382,
     390,  1279,  1348,  1517,     0,    57,    90,     0,   289,   116,
       0,   274,   319,    80,    95,   109,     0,     0,    46,   178,
     192,   197,   112,   201,   198,  1149,   199,   123,     0,    42,
       0,   110,     0,  1147,     0,     0,    48,   114,  1151,   500,
     500,   500,     0,   984,     0,     0,     0,   986,   987,  1033,
       0,   415,     0,   313,     0,   425,   405,   406,   416,     0,
       0,   314,     0,   314,  1129,     0,     0,  1109,   106,     0,
       0,     0,     0,     0,     0,   304,   302,   335,     0,   309,
     303,   312,     0,     0,   260,     0,  1273,     0,     0,   400,
       0,     0,     0,     0,     0,   690,   703,   362,   677,     0,
     731,   730,   732,   732,   677,     0,   663,     0,   675,     0,
     715,   684,   757,   758,   759,   760,   761,   762,   763,   355,
     357,     0,   359,     0,     0,     0,   418,     0,   421,     0,
     420,   424,   419,   413,     0,   444,     0,     0,     0,     0,
       0,     0,  1209,   989,   495,   832,     0,     0,  1022,     0,
       0,   907,     0,   882,   884,   897,     0,   886,   888,     0,
     964,     0,     0,     0,   898,   835,   836,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   851,   850,   899,   937,     0,     0,
    1009,  1010,     0,   900,     0,     0,  1016,     0,     0,     0,
     905,     0,  1070,     0,     0,     0,  1062,   861,   978,   943,
     941,   867,   764,     0,     0,     0,     0,     0,     0,     0,
     816,   805,     0,   814,   818,     0,     0,     0,   799,     0,
       0,   797,   828,   793,     0,     0,   829,     0,     0,   912,
     921,   490,   490,   490,   490,   487,   489,     0,     0,     0,
       0,  1501,     0,   629,   609,   605,   607,   616,   629,   634,
     877,   655,   878,  1095,     0,   565,   500,  1063,   565,     0,
    1203,  1219,     0,  1237,     0,   147,   129,   149,   148,     0,
     156,     0,  1037,     0,   147,   131,     0,   150,   161,  1236,
       0,   164,     0,   504,   505,   507,     0,   965,   515,   509,
     557,   556,     0,   525,   593,   523,     0,   599,     0,     0,
       0,   264,     0,     0,     0,   219,     0,   324,     0,   331,
       0,   316,    79,     0,     0,     0,    53,    98,    71,    63,
      49,    77,     0,     0,    82,     0,    75,    92,    93,    91,
      96,     0,   248,   229,   261,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   502,   498,   499,   869,  1032,   447,   448,   183,   446,
     323,     0,     0,     0,   311,     0,  1144,  1127,   349,     0,
       0,   105,   107,     0,  1273,     0,   171,   314,     0,   288,
     284,   310,   282,   281,   283,     0,  1274,   176,     0,  1268,
    1143,     0,   401,     0,   397,     0,  1138,   709,   674,     0,
     727,   725,   673,     0,   669,   676,   390,     0,   450,     0,
     409,   445,   434,   439,     0,   443,   441,   440,   435,   438,
       0,  1024,  1020,     0,   879,   990,     0,   976,  1004,  1003,
     834,   846,   847,   848,  1005,     0,     0,     0,   843,   844,
     845,   837,   838,   839,   840,   841,   842,   849,  1014,  1013,
    1007,  1008,     0,   902,   903,   904,  1015,     0,  1071,  1052,
     977,  1057,  1059,     0,     0,   940,  1084,   768,     0,     0,
     796,  1019,   819,     0,     0,     0,   792,   964,     0,     0,
       0,     0,     0,   801,     0,     0,     0,     0,   875,     0,
       0,     0,     0,   481,   480,   486,   629,   634,     0,   464,
       0,   616,     0,   628,   544,   627,   610,     0,   640,   638,
       0,   640,     0,   640,     0,   544,     0,   630,   544,   627,
       0,   647,  1067,   656,     0,   582,     0,  1051,   582,     0,
     477,  1235,     0,  1231,     0,     0,     0,   137,   134,   124,
       0,     0,   159,   147,   138,   513,   514,     0,   508,   524,
    1065,   117,   219,     0,     0,    60,     0,   333,   276,   325,
     308,   291,     0,     0,     0,   220,     0,   296,     0,    52,
      72,     0,    68,     0,    97,     0,     0,     0,     0,     0,
      55,    67,     0,    50,     0,   390,   390,    58,   275,  1103,
    1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,  1668,
    1669,  1670,  1671,  1672,  1673,  1674,  1752,  1675,   226,  1676,
    1448,  1677,  1678,  1679,     0,  1680,   666,  1681,  1682,  1683,
     951,   952,   224,   318,   221,   326,   223,   225,     0,  1104,
     222,   321,   113,  1150,     0,   111,     0,  1148,   120,   118,
     115,  1152,   872,   873,   870,   500,   428,   408,     0,     0,
       0,  1273,     0,     0,  1382,     0,   104,     0,     0,   352,
    1144,   169,   311,     0,   341,   260,   336,     0,  1273,  1271,
       0,  1267,   396,     0,     0,     0,   670,   664,   360,     0,
     422,     0,   442,  1023,   895,   906,  1002,     0,     0,     0,
       0,   901,   896,  1060,  1061,  1056,   825,   823,   820,     0,
     821,   800,     0,     0,   798,   794,     0,   830,   908,     0,
     924,   919,   920,   485,   484,   483,   482,   615,   613,     0,
     618,  1095,   625,   537,   543,   614,     0,   608,     0,   639,
     635,     0,   636,     0,     0,   637,     0,   611,     0,  1095,
     612,     0,   654,     0,     0,   915,   869,   915,  1204,   146,
     126,     0,   127,   157,     0,     0,     0,     0,   151,   402,
       0,   329,    62,     0,   308,     0,   219,   293,   292,   295,
     290,   294,   297,     0,     0,     0,     0,     0,   277,     0,
       0,     0,   240,     0,     0,   308,     0,   315,   236,   237,
     350,     0,     0,     0,    64,    54,    51,    56,    65,     0,
       0,    66,    69,   662,    81,    74,  1752,  1759,     0,     0,
       0,     0,     0,     0,   404,   411,   183,     0,  1273,     0,
     284,  1270,     0,     0,     0,   311,   108,     0,     0,     0,
       0,  1273,     0,     0,   216,     0,   257,     0,   173,  1272,
       0,  1260,     0,  1136,  1137,     0,     0,   410,   852,     0,
       0,     0,  1058,   822,   826,   824,   802,   910,   926,   923,
     650,     0,   653,   617,     0,     0,   532,   539,     0,   542,
     536,     0,   619,     0,     0,   621,   623,     0,     0,     0,
     658,     0,     0,     0,  1072,   563,  1323,  1593,  1500,   564,
       0,   568,   562,   566,   571,   573,   572,   574,   570,   581,
       0,   584,  1082,   584,     0,     0,     0,     0,   162,     0,
     153,   153,     0,   139,   966,     0,   219,     0,   307,   330,
     255,     0,     0,   238,     0,   245,     0,   279,   280,   278,
     239,   308,   314,   241,     0,   351,     0,    73,     0,    89,
       0,     0,   320,   121,   119,   871,   428,     0,   354,  1144,
     260,  1267,     0,     0,  1273,     0,   284,   176,  1269,   273,
     266,   267,   268,   269,   270,   271,   272,   287,   286,   258,
     259,     0,     0,     0,  1138,     0,   853,     0,   854,     0,
     502,   655,     0,     0,   649,     0,   530,   528,   531,   533,
     529,     0,     0,   626,   642,     0,   622,   620,   631,     0,
     662,     0,   633,     0,     0,     0,   575,   569,   914,   916,
       0,     0,   535,   535,     0,   133,     0,   657,     0,     0,
     155,   155,   141,     0,   314,   332,     0,   299,   306,   298,
       0,     0,   235,     0,   242,   340,   244,   228,   661,     0,
      76,     0,   327,   403,   407,     0,   218,  1261,   311,     0,
     353,  1267,   260,  1273,     0,  1264,     0,     0,  1144,   855,
       0,   929,   648,   651,     0,   624,     0,     0,     0,   659,
     660,   632,     0,     0,     0,   567,     0,     0,   583,     0,
     466,   465,   128,   153,   132,   163,   152,   512,   154,   512,
       0,   340,   285,     0,     0,   263,   228,     0,   254,     0,
      70,    88,   328,     0,   311,  1262,   217,   174,  1265,  1266,
       0,   657,   925,     0,     0,     0,     0,   540,     0,   546,
     641,   577,     0,   576,   917,   918,   537,   155,   515,   515,
     657,   254,   300,   305,     0,   243,   246,   337,   338,   339,
       0,   250,   247,   251,     0,  1267,     0,  1134,  1581,  1324,
    1552,     0,   927,   930,   928,   922,   652,     0,     0,   538,
     578,   534,   512,   144,   143,   140,   219,   262,     0,     0,
       0,   252,     0,   253,   227,  1263,  1144,     0,   934,   933,
     932,   936,   935,   541,     0,   515,   334,   232,     0,   231,
       0,   317,   249,   657,     0,     0,   145,   230,   234,   233,
    1135,   931,   545
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2158,  2159,  2160,  1834,   988,
    2880,  1835,   989,   990,  2162,    41,    42,  2210,  2211,    43,
    1451,   537,  1766,  1390,  2596,    45,  2110,  1771,  2114,  2748,
    2373,  2109,  2116,  2860,  2927,  2111,  1772,  1773,  2749,  1774,
      46,    47,  1527,    48,   744,    49,  1528,  1478,  1259,  1008,
    1468,  1248,    50,    87,    51,  2149,  2463,  2940,  2172,  3031,
    2627,  2628,  1836,  2981,  2982,  2151,  2226,  1460,  2975,  1905,
    2807,  1840,  1823,  2629,  1914,  2758,  2504,  1837,  2405,  1906,
    2613,  2866,  1537,  1907,  2867,  2606,  1908,  1503,  1531,  2407,
    2983,  1841,  1504,  2148,  2464,  1447,  1909,  2938,  1910,   497,
    2632,    52,    53,   529,   530,   736,  1196,   531,   717,    54,
     655,  1535,   538,    56,  1888,  2656,  2249,  2657,  1964,  1882,
    1257,  1961,  1580,  1507,  1258,   487,  1594,  2250,  2198,  1581,
     539,   888,    59,    60,    61,   578,   591,   592,  1361,  1744,
    2077,   958,   565,   566,  1876,   606,  1497,  1399,  1400,  1778,
    2123,  1426,  1427,   967,   968,  2707,  2920,  2708,  2709,  2564,
    2565,  2999,  1414,  1418,  1419,  1798,  1788,  1405,  2365,  2731,
    2732,  2733,  2734,  2735,  2736,  2737,   889,  2585,  2852,  1422,
    1423,   970,   971,   972,  1431,  1808,    63,    64,  1747,  2084,
    2085,  2086,  2087,  2343,  2344,  2358,  2354,  2570,  2715,  2088,
    2089,  2700,  2701,  2824,  2361,  2095,  2719,  2720,  2779,  1554,
     718,  1264,  1199,   720,   890,   721,  1175,   891,  1179,   723,
     892,   893,   894,   726,   895,   896,   897,   729,  1171,   898,
     899,  1190,  1218,  1219,  1220,  1221,  1222,  1223,  1224,  1225,
    1226,   941,  1648,   901,   902,   903,  2091,   904,  1355,  1733,
    2070,  2741,  2848,  2849,  2328,  2551,  2698,  2820,  2955,  2992,
    2993,   905,   906,  1304,  1305,  1306,  1730,  1350,  1351,   907,
    2466,  1353,  1641,   942,  1663,  1300,  1051,  1052,  1265,  1621,
    1622,  1644,  1993,  1651,  1656,  2020,  2021,  1664,  1698,   908,
    1605,  1606,  1979,  1273,   909,   631,  1058,   632,  1270,  1692,
     918,   910,   911,   912,  1297,  1298,  2036,  2302,  2303,  1669,
    1804,   583,  2032,  2711,   740,  1139,   913,   914,   915,   916,
     944,   585,  1053,   480,   732,  2928,  1152,   948,  1054,  1838,
    1688,    65,   815,   636,    66,  1150,  1516,    67,  2684,  2515,
    1164,  1539,  1918,   498,    68,    69,    70,    71,    72,   613,
    1251,   540,  1252,  1253,   802,    73,  1260,   804,   805,    74,
     572,   573,  1261,  1374,  1262,    75,   551,    76,   937,   588,
     938,   940,   542,   955,  2105,  1762,    78,    79,   559,   560,
      80,    81,   574,    82,    83,  2681,   543,  2229,  1892,   506,
     482,   483,   734,  1142,  1056,  1143
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2686
static const int yypact[] =
{
    4073,   -96,   606, -2686, -2686,   -96, 34510, -2686,   -96,    66,
    1637, 39270, -2686,  2078,   -96, 46410,   402,   231,   209,   266,
   39746, 39746, 46410, 46410, 40222,   -96,   264, 46886, -2686,   -96,
   23797, 36890,   -24,   -91, 47362, 46410,  1334,   536,   -21, -2686,
   -2686, -2686, -2686, -2686, -2686,    55, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,   111, -2686,
      49,   118,   -98,    89, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686,   117, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, 23320, -2686, -2686, -2686, -2686, -2686, -2686, 40698, 46410,
   41174, 37366, 41650, -2686,   151, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686,   164, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,   165,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,   207,   196,
   -2686,   171, -2686, -2686, -2686, -2686,  1334, 42126,   406,   477,
     262, 47838, -2686, -2686, 46410, -2686, -2686,   820,   519, -2686,
   -2686, -2686, 42602, -2686, -2686, -2686, -2686,   504, -2686, -2686,
     307, -2686,    84, -2686, -2686,   393,   364, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686,   460, -2686, 53074, -2686, 48314,
   48790, 49266, -2686,   349,   962,   461, 22843, -2686, -2686, -2686,
   -2686,   117, -2686, -2686,   897, -2686, 39746,   897, -2686, -2686,
   -2686, -2686, -2686,  -160,   424, -2686,   433,   705, -2686, -2686,
   -2686,   438, -2686, -2686,   661,  9990,  9990, 49742, 49742,   897,
   49742,   473, -2686, -2686,   -33, -2686,   -91, -2686,   -98,   438,
   -2686, 24274, -2686,   474,   196, -2686, -2686,   205,   811, 13497,
   46410,   508, -2686,   516,   508,   520,   525, -2686,  4073,   859,
     819, 36890,   316,   316,   990,   316,   125,   991, -2686,  1459,
   -2686,   565, -2686, 42126, -2686,   608,   875, -2686,   438,   949,
     627,   768,   972, 28288,  1022,  1018,  1030,  1032,  6483, 13497,
   33082, -2686,   196, -2686, -2686, -2686,   643, -2686,   706, -2686,
   -2686, -2686, -2686,   597,   916, -2686,   736,  1203, -2686, -2686,
     803,   810, 43078, 43554, 42126, 42126,  1167, -2686, -2686, -2686,
   -2686,   783, -2686, -2686, -2686,   141, -2686, -2686, -2686, -2686,
     832, -2686,   832,   832, -2686, -2686, -2686, -2686,   801,   801,
     953,   806, -2686, -2686, -2686,  1155, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686,   825,   790, -2686,   832,
   -2686,   801, -2686, -2686, -2686, -2686, -2686, 54457, -2686, -2686,
   -2686, -2686,   341,   432, -2686, -2686, -2686,    54,   827, -2686,
    1292, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,   871,
   -2686,  5885,   801, -2686, -2686,  1220,    59, -2686,  1224,    65,
   -2686,  1227,  1101, 13497, -2686,  1048,   994, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,   -91, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686,   408, -2686, -2686, 30654, -2686, -2686,   461,   907,
   -2686, -2686, 30654, 13998, 53535,  1373, -2686,  1173, 46410,   918,
   -2686, -2686, -2686, -2686, -2686, -2686,   925,  1433,   154,  1440,
   13497,   958,   154,   154,   966,  1293, -2686, -2686, -2686,   172,
     968,   970, -2686,   173,   173, -2686,   976,   979, -2686,   174,
     981,   999,  1493,  1495,   140,  1010,  1026,   790,   154, 13497,
   -2686,  1036,   173,  1051,  1057,  1061,  1502,  1065, -2686,  1522,
    1066,   132,   137,  1070,  1078, -2686,  1079, -2686,   175, 13497,
   13497, 13497,  1397, 13497,  7485, 42126,  1566, -2686,   196,  1082,
     897, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,   163,
    5210, -2686,  1120, -2686, -2686, -2686,  1283, 13497, -2686, -2686,
    1081,  1367, -2686,   176, -2686, -2686, -2686,   375,  1367, -2686,
   -2686, -2686, -2686, -2686,   213,  1484, 29702, 30178, 42126, -2686,
   -2686,   196, -2686, -2686, -2686, -2686, -2686, -2686,   416, -2686,
     117, 31830,  1084,  1088,   196,   508, 46410, 46410,  1549, -2686,
   -2686, -2686, 36890, 42126, 50218,  1212, -2686, -2686,   -98,   -98,
    8988,   -98,   198,     3, 10491, 14499,  1426,  1312,   243,   135,
    1431, -2686,  1316,   125,   991, 13497,   516, -2686,  1369, 42126,
   34986,   471,   657,  1102,  1188,  1104,    39,  1519, -2686,  1107,
   -2686,  1196, 42126, 54457,   106, -2686,  1563,   106,   106,   734,
    1565,  1214,   235,  1370,    11,    37,  1107,  1905, -2686, 36890,
     113,   497,  1107, 42126,  1216,   500,  1107,   108, 13998,   852,
     926,   328,   971,   989,   126, 13998,  1182,  1296,  1320,  1351,
    1366,  1368,  1375,  1381,  1394,  1402,   147,  1408,  1416,  1419,
    1422,  1427,  1442,   150,  1455,   116, 13998,  1465,  1138, -2686,
   31830,   -49, -2686, -2686,  1477,   152, -2686, 28273,  1131, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686,  1233, 46410,  1181,    52,  1499,
    1557, 33082,  1159,  1515, 44030, 42126,  1389,  1905,  1391,  1168,
    1631,   706,  1178, -2686, 50694, -2686, -2686, -2686, -2686, -2686,
   -2686,  1179, -2686, -2686, 13497, -2686, -2686, -2686,  1668, -2686,
   53535, 53535,   832,   832, -2686, -2686,  1643,  1267,  1268,  1668,
   -2686,  1668, -2686, -2686, -2686, 53535, -2686, 46410,  1189,  1190,
    1668, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686,  1668,  1270, -2686,
    1273,  1274,  1279, -2686, -2686, -2686, -2686, -2686, 46410, 46410,
   -2686, 46410, 46410, -2686, 46410, 46410,  1199,   597, 44506,   461,
   37842, -2686, -2686, -2686, -2686,   709,   752, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, 33082, -2686,  2136, -2686,
   -2686, -2686,  1200,   429, -2686,   531,  1334, -2686, -2686, 13497,
     196, 13497, 31830,  1245, 13497, 13497,  1205,  1668,  1668, -2686,
    2932,  1668,  1668, 31843, 13497, 27139, 13497, 18006, 10992, 13497,
   13497,  7986, 13497, 31843,  1692,  1692, 25228, -2686,  1372, -2686,
    1228,  2318,  5824,  1211, -2686,  1222,  1225, -2686,  1223, -2686,
     196,   196, 13497, -2686, 13497,  2401,  2401, -2686,   159, 53535,
   13497, 13497, 13497, 13497, 13497, 32606,  1318,   104, 46410, 13497,
   13497,  1236,   796, -2686, 13497,  1453, -2686,  1238, 13497,  1324,
     203, 13497, 13497, 13497, 13497, 13497, 13497, 13497, 13497, 13497,
   -2686, -2686, 19495,   185,  1556,  1579,   196,  -107,   297,  9990,
   38318,  1573,  6483, -2686,   196, 28750,   146,  1573, -2686, -2686,
   -2686, -2686,   177, -2686, -2686, -2686, -2686,  1200, -2686,  1200,
    1247, 42126,   205, 36414, 13497, -2686, -2686,   533,  1249,  1307,
     702,  1711, 46410, -2686, 25705,  1535, -2686,   238,   238,  1250,
   -2686, 31127,  1535, -2686, -2686, 18493,  1376,  1532,  1471, -2686,
   -2686,  1452,  1456, -2686,  1261, 31897, 15000, 15000, -2686,  1148,
   31830,  1162, -2686, -2686, -2686, -2686, -2686, -2686,     8, -2686,
   42126,     6,  1426,   135,  1269, -2686, -2686,  1248,  1272, 51170,
   46410,  1542,  1498,  1547,  -132, -2686, -2686, -2686, 53535, -2686,
   46410, 46410, 51646, 52122, 33558, 46410, 33082, -2686, -2686, -2686,
   -2686, 46410,  1013, 46410, 28289, -2686, -2686, -2686,   106, -2686,
   -2686, -2686, -2686, -2686, 46410, 46410, -2686, -2686,   106, 46410,
   46410,   106, -2686,  1331, 46410, 46410, 46410, 46410,  1362, 46410,
   46410,   -39,   -39,  1485, -2686, 11493,    93, -2686, 13497, 13497,
   -2686, 13497,  1454, -2686,   539, -2686,  1492,    60,  1329,  1330,
   42126, 42126, 46410,  1113, -2686, -2686, -2686, -2686, -2686, -2686,
   33082,  1287,  1513,   706,  1748,  1291,  1642, -2686,  1905,  1644,
   35462,   593,   529,  1338, 11994,  1760,  1527, -2686, -2686,  1514,
   13497,  1302,  1304,    54,   547, -2686, -2686,  1308,  1190,  1326,
    1327,  1306,  1310, -2686,   555, 53535,  1668,    92,  1313,  1314,
    1266,  1165,   330,  1171,    59, -2686,    65, -2686,  1526,   134,
   -2686,  1410,  1544,  1780, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686,   566, 22366, -2686, -2686,  1781,   897,  1781,   476, -2686,
   -2686,  1781, -2686,  1781, -2686, 30654, -2686, 13998, -2686, 53535,
   -2686,  1322, -2686,  1325, 13497,     4, -2686, 31187,  1328, 13497,
    1336,  1337, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686,  1341,  1651, -2686,  1342,  1343,  4838, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686,  1345,  1333, 31221,  1346, 18006, 18006,  7485,  1229, -2686,
   18006,  1347, -2686,  1349, 31140,  1323,  1352, 31464, 12495, 13497,
   12495, 12495, 31523, -2686,  1353, 31709, 46410, -2686, 15501, -2686,
   -2686, -2686, 13497, 42126, -2686, 13497,  1354,  5939, -2686, -2686,
   -2686,   297,  3451,  3451,  3451, 31843, -2686, -2686, -2686,  1356,
   -2686, 18006, 18006, -2686,  3595,  2722,  7485, -2686, -2686,  1652,
   -2686,   719, -2686,  1357, -2686, -2686,  3214, -2686, 27139,  4686,
   13497,   133, -2686, 13497,  1236, 13497,  1439,  3451,  3451,  3451,
     245,   245,   160,   160,   160,   282,   297, -2686, -2686, -2686,
    1359,  1363,  1364,  1670,  1065, 13497, -2686, -2686,   751,   772,
   42126,  2048,  2848,  3218, -2686, -2686, 20935,  1393,   -49,  1397,
    1393,  1668,  2401, -2686,   516, -2686, -2686, -2686, 31830, -2686,
    1334, 20935,  1411,  1424,  -100, 23797,  1587, -2686, 46410, -2686,
   46410, -2686,  1377,  1573,  1396, -2686, -2686, -2686,  1398,  1398,
   13497,  1409,  1398,  1591,  1595,   794,   794,  1148,  1596, -2686,
   -2686,  1447, -2686, -2686, -2686, 13497,  8487,  1183, -2686,  1185,
   -2686, -2686, -2686, -2686,  1385, -2686, -2686,  1645, -2686, -2686,
   -2686, -2686,  1476,  1107, 13497,  1615, -2686,    81,  1399,  1751,
    -104,  1710, 46410, -2686,  1620, -2686,   124,  1761,   134,  1764,
     134, 33082, 33082, 33082,   574, -2686, -2686,   897, -2686, -2686,
     579, -2686,  -131, -2686, -2686, -2686,  1503,   510,  1107,  1905,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686,   128,   588,  1107,
    1504, -2686,  1505, -2686,  1506,   730,  1107, -2686, -2686,    93,
      93,    93, 13998, -2686,  1639,  1646,  1428, 31830, 31830, 31830,
    1432, -2686,   119, -2686, 46410, -2686, -2686, -2686,  1454, 42126,
   42126,  1430,  1886,   706, -2686,  1593,   391, -2686,   897,  1786,
    1334, 46410, 42126, 42126, 42126, -2686, -2686, -2686,  1441,  1443,
   -2686, 53535,   -55,  1656,  1655, 46410,  1486,  1104,  1908, -2686,
     583, 12996,  1795, 42126,  1450, -2686, -2686, -2686, -2686,  1668,
   -2686, -2686,   247,   247, -2686, 46410, -2686,  1458, -2686,  1461,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686, 46410, -2686, 42126,  1800,  1334, -2686, 33082, -2686, 35938,
   -2686, -2686, -2686, -2686,   897, -2686,   897,  1682, 46410, 29226,
     897,   897, -2686, -2686, -2686, -2686, 31754, 13497, -2686,  1817,
   53535, -2686, 27623, -2686, -2686, -2686, 13497, -2686, -2686, 13497,
   -2686, 27139, 13497,  1790, -2686,  1950,  1950,  5824, 53535, 18006,
   18006, 18006, 18006,   581,  1051, 18006, 18006, 18006, 18006, 18006,
   18006, 18006, 18006, 18006, 18994,   289, -2686, -2686, 13497, 13497,
    1798,  1790, 13497, -2686, 53535,  1467, -2686,  1470,  1472, 13497,
   -2686, 53535,  1468,  1473,  7485, 31783, -2686,   196, 27642, -2686,
   31830, -2686,  2401, 13497,  3081,  3893, 13497,  1474, 13497,  1803,
   -2686, -2686,  1478, -2686, -2686, 53535, 13497,  1479,  4818, 18006,
   18006,  5339, -2686,  5421, 13497,  7485, -2686,  1485,  1523, -2686,
    1683,  1576,  1576,  1576,  1576, -2686, -2686, 42126, 42126, 42126,
   21412,  1818, 20458, 44982,  1489, -2686,  1281, -2686, 44982, 45458,
   -2686,  1508, -2686,   196, 13497,  1807,    93,  1372,  1807,  1534,
   -2686, -2686,  1536, -2686, 13497,  1661, -2686, -2686, -2686,  1548,
   -2686,   596, -2686,  1906,  1661, -2686,   610, -2686, 25705,  1411,
   13497,   196,   131, -2686, -2686, -2686,  1538, -2686,  1398, -2686,
   -2686, -2686,  1745, -2686, -2686, -2686, 42126, -2686, 46410, 27671,
    1888, -2686, 46410, 46410, 46410, -2686, 46410,  1540,  1545,   527,
    1539, -2686,   527,  1863,   139,  1104,   235,  3935,   302, -2686,
   -2686, -2686,  1618, 46410, -2686, 46410, -2686, -2686, -2686, -2686,
   -2686, 33558, -2686, -2686, -2686, 33082, 26662, 33082, 46410, 46410,
   46410, 46410, 46410, 46410, 46410, 46410, 46410, 46410,  1551,  1555,
    1559,  1485, -2686, -2686, -2686, -2686, -2686, -2686,    37, -2686,
   -2686,   119,  2009,  1561, 35462,  1334,  1338,  1557,   597, 45934,
    1564,  1553, -2686, 42126,  1486,   639,  1905,  1562,  2025, -2686,
     593, 35462, -2686, -2686, -2686,  1984, -2686,   349,   157, -2686,
   -2686,  1334, -2686,  1334, 31830, 46410,  1626, -2686,  1190,  1571,
   -2686, -2686,  1190, 53535, -2686, -2686,   134, 42126, -2686,   670,
   -2686, -2686, -2686, -2686, 46410,  1568, -2686,  1568, -2686, -2686,
   13497, 31830, -2686,  1574, -2686, 31830, 27690, -2686, 31830,  1798,
   -2686,  1125,  1125,  1125,  1080,  1900,   149,  1577,  1125,  1125,
    1125,   301,   301,   103,   103,   103,  1950,   289, 31830, 31830,
   -2686, -2686,  1581, -2686, -2686, -2686, -2686,  1582, 46410, -2686,
    5696, -2686,  1580,  1585, 46410, -2686, -2686,   274, 13497, 13497,
    3595, -2686, 32133, 13497, 53535,   677,  3595,   186, 13497,  3996,
    4278, 13497, 13497,  5775, 27757,  1590, 13497, 26182, -2686, 42126,
   42126, 42126, 42126, -2686, -2686, -2686, 44982, 45458,  1578, 19980,
    1281,  1594, 42126, -2686,  1686,  1592, 20935,  1855,  1799, -2686,
   20935,  1799,  1012,  1799,  1875,  1686, 24751, -2686,  1686,  1601,
    1805, -2686,   452, 31830,  2046,  1919,  1607, -2686,  1919,   897,
   -2686, 31830,  9990, -2686,  1334,  1031, 46410,   196,   -76, -2686,
    1621, 46410, -2686,  1661, 31830, -2686, -2686, 27139, -2686, -2686,
   -2686, -2686, -2686, 46410,  1608, -2686,  1610,   527, -2686, 46410,
    1653, -2686,   178,  1909,    98, -2686, 33082,  2526,   655, -2686,
    1920,  1836, -2686,   106, -2686, 13497,   655,  1837,   187, 46410,
   -2686, -2686,   816, -2686, 53535,   134,   134, -2686, -2686,  1616,
    1619,  1622,  1623,  1624,  1625,  1627,  1628,  1630,  1632,  1634,
    1640,  1641,  1647,  1648,  1650,  1654,   825,  1660, -2686,  1662,
    1538,  1665,  1669,  1677, 53996,  1688,  1690,  1691,  1697,  1698,
     709,   752, -2686, -2686, -2686, -2686, -2686, -2686,   736,  1699,
   -2686,  1633, -2686, -2686,  1701, -2686,  1709, -2686, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686,    93,   907,    78,  1334, 46410,
    1671,  1486,  2103,   -58,  1872,  1663, -2686,   897,  2107, -2686,
    1338, -2686, 35462,   690,   434,  1655, -2686,   120,  1486, -2686,
    2041,  1741, -2686,  1914, 46410,  1705, -2686, -2686, -2686,  2165,
   -2686, 35938,  1568, 31830, -2686, -2686, -2686, 18006,  2033,  1713,
   53535, -2686, -2686, 13497, -2686, -2686,  3595,  3595, 32133,   691,
   -2686,  3595, 13497, 13497,  3595,  3595, 13497, -2686, -2686, 27992,
   52598, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, 34034,
   44982,  1714, -2686, 38794, -2686, -2686, 46410,  1281, 20935, -2686,
   -2686,  1734, -2686, 20935,  1985, -2686, 20935, -2686, 46410,  1715,
   -2686, 46410, -2686,  9489, 13497,  1755,   897,  1755, -2686,  1719,
   -2686,  -100, -2686, -2686,  2127, 21889,  2083, 13497, -2686, -2686,
    1723,   527, -2686,  1887,  1653,  1725, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686,   695,  1728, 46410, 46410, 18006, -2686,   655,
     191,   161, -2686,  2002, 42126,  1653,  2144, -2686, -2686, -2686,
   -2686,  2114,  2197,  2084, -2686, -2686, 31830, -2686, -2686,  1668,
    1668, -2686, -2686,  2163, -2686, -2686, -2686, -2686,   736,  -176,
   26662, 46410, 46410,  1742, -2686, -2686,    37,  2117,  1486,   707,
     593, -2686,  1334, 42126,  2090, 35462, -2686,  1334,  2206,  1749,
   46410,  1486,   821,   821, -2686,  1890, -2686,  1891, -2686, -2686,
     179, -2686, 42126, -2686, -2686, 21889,  1334, -2686,  2138, 18006,
   53535,   713, -2686, -2686,  3595,  3595,  3595, -2686,  1944, -2686,
   -2686,   722,  2214, -2686, 46410,   -62,   -66,  1758,  1768, -2686,
   -2686,  1759, -2686, 13497,  1769, -2686, -2686, 20935,  1734,   723,
   -2686, 53535, 46410,   731, 53535, -2686,  1770,  -109,  1771, -2686,
    6984,  1757, -2686, -2686, -2686, -2686, -2686, -2686, 31830, 31830,
   46410,  1934, -2686,  1934,  9990,  1824, 46410, 13497, -2686,   742,
    2195,    70,   -22, 31830, -2686, 42126, -2686, 33082, -2686,   527,
   -2686, 33082, 13497, -2686,   930,  1080,  2233, -2686, -2686, -2686,
   -2686,  1653,   706, -2686, 46410, -2686,  2085, -2686, 46410,  1832,
     276,  1846, -2686, -2686, -2686, -2686,   907,   897, -2686,  1338,
    1655,  1741,  1779, 42126,  1486,  1334,   593,   349, -2686, -2686,
   -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686, -2686,
   -2686,  2210,  1990,  2213,  1626,   755,  2138,   762, -2686,  2228,
    1485,  1508, 34034,  1788, -2686,  1791, -2686, -2686, -2686, -2686,
   -2686, 46410,   834, -2686, 31830, 46410, -2686, -2686, -2686, 46410,
    2163,   799, -2686, 13497,  1789, 13497, -2686, 16002,  1787, -2686,
    2252, 13497,  1852,  1852,  1334, -2686, 28043,  1393, 21889, 46410,
   46410, 46410, -2686,  1917,   706,   527,   804, -2686,  1808, -2686,
   28182,  2019, -2686,  2109, -2686,  2052, -2686,  1804, -2686, 13497,
   -2686,  1880, -2686, -2686, -2686,  2264, -2686, -2686, 35462,  1814,
   -2686,  1741,  1655,  1486,  2022, -2686,  2023,  1823,  1338, -2686,
   13497,   -23, -2686, -2686, 46410, -2686,   848,  1826,  1827, -2686,
   -2686, -2686,  1828, 16002,  1830, -2686, 46410,  1834, 31830,  1974,
   -2686, -2686, -2686,  2195, -2686, -2686, -2686,   238, -2686,   238,
   25705,  2052, -2686, 33082, 26662,  2067,  1804,    73,  2051,  1905,
   -2686, 31830, -2686,  1334, 35462, -2686, -2686, -2686, -2686, -2686,
   21889,  1393,  1323, 16503, 16503,  1841,   849, -2686,  2329,  2000,
   -2686, -2686,  1849, -2686, -2686, -2686, 38794, 46410,  1398,  1398,
    1393,  2051, -2686, -2686,  2147, -2686, -2686, -2686, -2686, -2686,
      64,  2063, -2686,  2064,  1588,  1741,   856, -2686, 17505,  1996,
     156, 31174, -2686, -2686, -2686, -2686, -2686,  1857,  1861, -2686,
   -2686, -2686,   238, -2686, -2686, -2686, -2686, -2686,   225,   225,
    2237, -2686,  1923, -2686, -2686, -2686,  1338,  2327, -2686, -2686,
   -2686, -2686, -2686, -2686,  2352,  1398,   527, -2686,  2341, -2686,
     155, -2686, -2686,  1393, 17004,  1868, -2686, -2686, -2686, -2686,
   -2686, -2686, -2686
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2686, -2686, -2686,  1767, -2686, -2686, -2686,   210, -2686,   905,
   -2686,   201,  -531,   548, -2686, -2686, -2686, -2686, -2686, -2686,
    -928,    21, -2686, -2686, -2686, -2686,    -1,   258, -2686,  -479,
   -1908,  -214, -2686, -2501, -2589, -2686, -2686,  -550, -2483, -1685,
   -2686, -1106,   166, -2686, -2134, -2686,  -622,  -991,  -771,  -955,
   -2686,   -37, -2686,  1494, -1097, -1780, -2452,  -553, -2686,  -620,
   -2686,  -377, -1773,  -593,  -580, -2686, -2370,  -947, -2686,  1412,
    -280, -2686,   575, -2686, -2131, -2686, -2686,   562, -2686,  -950,
   -2686, -2686, -1881,   180,  -536, -2309, -2123, -1784,  -636, -2686,
    -583,   224, -1734, -1028, -2686,   586, -2686,  -527, -2686,  -517,
   -2158, -2686, -2686, -2686, -2686,  1184,  -674, -2686,  1235, -2686,
   -2686, -2686,    28, -2686, -2686, -2686, -2686, -2686,  -879,   534,
   -2303, -2686,   467, -2686, -2686, -2686, -2686,   -95,   216, -2686,
      10,  1023,     1,     2,    22,    27,    62,  1481,  1510, -2686,
   -1192,   669, -2686, -2686, -1766,  -604,   -53, -2686,   649, -1376,
   -1733,  -468,   998,  1464,  1466,  -398,  -417, -2686,  -529, -2686,
   -1278, -2686, -2686,   644,  1035, -1285, -1299, -2686,   344, -2686,
    -470,  -403, -2686, -2686, -2686, -2686, -2686,    77,  -296,  -456,
    1024, -2686,  1480, -2686, -2686, -2686, -2686, -2686, -1242, -2686,
     693, -2002,   373, -1970, -1878,   121,   105, -1138,  -259,    16,
     380,  -361, -2686, -2686,  -357, -1708, -2407,  -373,  -371, -2686,
   -2686,  -518, -1116,  -692, -2686, -2686,  -372,  1133, -2686, -2686,
   -2686,  1421,  1816, -2686, -2686,  2222,  2347, -2686,  -545,  2439,
     109,  -677,  1187, -1075,  1191, -1083,  -983,  -880,  1192,  1193,
   -1217,  3489,  1884,  -882,     0, -2686, -2374, -1659, -2686, -2686,
   -2686,  -117, -2686,  -442, -2686,  -441, -2686, -2686, -2686,  -475,
   -2685, -2686,  1118,   807, -2686, -2686, -2686, -1266, -2686,  3357,
     703, -2686, -1630,  -873,  -585,  1218,  -752,  -969, -1157, -2686,
   -2686, -2686, -2686, -2686, -2686, -1671, -1813,  -643,   769, -2686,
   -2686,   880, -2686, -2686, -2686,  -606,   986,  -561,  -837,   780,
   -2686,   127,  1930, -1330, -2686,   757, -1928, -2686, -2686,   403,
   -2686,  1537,  -461, -1615,    -3, -1017,    12, -2686,  -737,    51,
    1840,  -846, -2102, -2686, -2686,  -481, -2237,  -917, -2686,  -627,
   -2686, -2686, -2686, -1158, -2686,   607, -2686, -1095, -2686,  -307,
   -2686, -2686, -2149, -2686, -2686, -2686, -2686, -2686, -2686,  -408,
   -2686,  -472,  -469, -2686, -2686,    19,  -789,  1277, -2686, -2686,
      87, -2686,   913, -2686,   628, -2686,    88, -2686,  1127, -2686,
   -2686, -2686,    33,  1560,   395, -2686,  1135, -2686, -2686, -2686,
   -2686, -2686,   700, -2686, -1094, -2559,    90, -2119,  -577,    -6,
   -2686, -2686, -2686,  -495, -2686, -2103
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1763
static const yytype_int16 yytable[] =
{
     481,  1007,  1147,  1140,   943,   973,   477,   607,   504,   719,
      57,  1303,   533,   647,  1481,  1186,  1254,   746,   478,  1640,
     554,    44,  1779,   931,  1544,  1782,  1144,    62,    55,  1737,
    1446,   593,   593,    77,  1247,   541,  1192,   596,  1457,  1308,
     577,   807,  2098,    62,  1514,  2152,  2124,   582,   737,  2129,
    1310,  2033,  1482,  1515,  1453,  1517,  1518,  2492,  2167,  1435,
    2169,  1263,  1230,   747,   609,  1233,  1356,   801,  1249,   739,
    1548,   549,   549,  2470,  2468,  1249,  1160,  1493,  2057,  1364,
    2340,  2490,  1486,  1421,   610,  2117,   621,  2092,  2147,  2505,
      84,   617,  1006,  2508,  1012,  2499,  1016,   594,  1678,  1679,
    2200,   824,  2092,  2188,  2189,  2190,  2301,   625,  1600,   552,
    1241,  -452,  1193, -1100,  1998,   824,   485,  1193,  -455,  2357,
    1803, -1097, -1097,  1193,   548,  1750,  1148,  1172,  1173, -1761,
   -1761, -1638,  1800,   808,  1519,  2674,   925,  -732,   966, -1741,
   -1741,  1977,  -732,  2859,  1690,  -729,   586,  2153,  1438,  -729,
     969, -1075, -1649,  1371,  1184, -1656, -1100, -1101,  1236,  -724,
   -1752, -1752,  1315, -1759, -1759, -1098, -1098,  2215,   548, -1649,
   -1656,  1319,   824,  1690,  2723,   599, -1101, -1638,  -691,  -704,
    -719,   548,   548,  2654,  3008,  2702,  -949,  1249,  1449,  1249,
    1249,   661,  1193,  -949,   602,  1192,   824,  1616,  2782,  1484,
    -412,  1326,  2815,  1449,  -452,  1614,  2379,  2290,   932,  2594,
    2355,  -455,  1727,  -968,  2180,  2610,  1368,  1241,   548,  1728,
    -968,  2750,   824,  1466,  1166,  1406,  1469,  1470,  2222,  1886,
    1406,  2649,  2887,  1328,  2255,  2257,     3,     4,  2811,  -183,
    2675,  2828,   604,  2977,  -183,  2826,  2812,  1441,  1734,  2862,
    2861,  1711,   604,  1458,  2409,  2676,  1319,  1249,  2637,  2154,
    1249,  1249,   603,   600,  2509,  2398,  1491,  2844,  1167,    26,
    3038,  1407,  2929,  1492,  1509,  1776,  1407,   545,  2769,  2528,
    1806,  1458,  1874,  3027,   962,  1319,  1326,  1172,  1173,   963,
    2829,   563,  2385,  1319,   962,  2756,  2607,  1617,  1299,  1508,
    1998,  1465,  2107,  3017,  2953,    31,  1821,  1176,  1319,  2767,
     807,  2750,  1998,  1184,  2781,  2841,  2773,   807,  1328,  3019,
      85,  1520,  2269,  1326,   812,  1144,  2410,  1311,  1369,  1185,
    2366,  1408,  2945,  2954,  1821,   813,  1255,  2108,  1326,   544,
     604, -1738, -1738,   956,  2567,  2663,    33,  1328,  2571,  3041,
    2291,  2668,  2648,  2176,  2513,  1328,  1366,  2386,   964,  1403,
    1227,  2267,  1777,  1822,    86,  2397,  2177,  2357,   964,  2608,
    1328,  1480,  2661,   933,   547,   934,  2978,  1712,  3002,  2669,
    1409,   926,  2768,  1366,  1509,  1409,  -579,  1807,  1735,  2678,
    1434,  2144,  1511,  1713,   564,  2388,  -452,    36,  1714,  1443,
    1618,  1194,   962,  -455,   589,  1649,  1194,   965,  2147,  2411,
    2147,  2780,  1194,   983,  2863,  2813,  1655,   965,   546,  2595,
    2886,  2092,  2967,  2092,  2830,  2510,  3015,   690,  2827,  2529,
    3039,   807,   807,     3,     4,  1715,  2770,  2677,  1875,  1410,
    1456,  1542,  1640,  1168,  1410,  1459,   957,  1496,  2702,  1370,
    1495,   927,  1551,  2979,  1552,  1510,  2526,  1604,  2557,  -452,
    1597,  2766,  2874,  1558,   818,  1404,  -455,  2986,  2155,  3020,
    2156,   587,  1176,  1459,  1887,  2599,   964,   598,  1943,   605,
    1559,  1194,  2973,  2883,  2750,  1942,  1387,   662,  2132,  1816,
    1185,   601,  1276,  3028,  1476,   534,   635,  2956,  2157,   658,
    3009,  1800,  1511,  1897,  1691,  1432,  1456,   633,  1577,  1579,
    2196,  2197,  1444,    62,   634,  2127,  2655,  1433,  1477,   637,
    2522,   733,  2946,  1789,  1140,  1533,  1873,  1485,   742,  2790,
     806,  2119,  1383,  2059,  1456,  2100,   597,   596,  2611,  2788,
    1610,  1611,  2181,  -949,  1624,  1625,  1449,  2470,  2468,  1169,
    2078,  2079,  2798,  1195,   534,   803,   974,  1450,  1229,   481,
     481,   486,    62,   629,  1232,   612,  2712,   630,  -452,  1729,
    -968,  2716,  3029,  1482,  2718,  -455,  2750,  1524,  1944,  1946,
     609,  2672,  1716,   481,  1209,  1210,  1938,   593,   611,  1541,
    2703,  1187,  1245,  1246,  2013,   809,  1187,   549,   811,  3030,
     610,  1170,  2102, -1100,   643,  2692,   936,  -452,    57,  -452,
    1748,  1292,  2601,  1188,  -455,  2200,  -455,   954,  1188,    44,
     922, -1638,  1055,   481,  1141,    62,    55,  1189,  1873,  1582,
    2673,    77,  1191,  2612,   810,  -729,   731,  1545,  1546,   629,
    2885, -1075, -1649,   630,  2401, -1656, -1100, -1101,  2156,  -724,
     980,  1349,   945,   935,   920,   921,   981,   923,  1314, -1649,
   -1656,  1573,   719,  2893,  1602,  2892, -1101, -1638,  1174,  1178,
    -719,  1362,  1751,  2639,  2640,  2890,  2422,  1553,  1915,  1799,
    1799,  1945,  1947,  1948,  1601,  2630,  1299,  2092,    84,   629,
    1608,  2092,  1476,   630,  1213,  1214,  2598,  1850,  1687,  1245,
    1246,   733,   628,  1653,  1602,  1144,  1187,  1853,  1966,  2631,
    1856,  2275,  1970,  1576,  1971,  2836,  1477,   656,   824,  2653,
    1571,  -183,  -183,   651,   561,  1640,   660,  1676,  1188,  2402,
     579,  1249,  1449,  1346,  1347,  1348,  1349,   481,  1140,  1458,
    1311,  1249,  1458,  1452,  1249,   807,  1967,   737,  1565,  2951,
    1602,  1968,  1458,   659,  1569,  2659,  1578,  2600,  1602,   652,
    1144,   824,   982,  1649,  1649,  2490,  2881,  1574,  1649,    26,
    1566,   801,   488,  1520,  2947,  2008,  2009,  2010,  2011,  2012,
    2013,   618,  1920,  1344,  1345,  1346,  1347,  1348,  1349,  2010,
    2011,  2012,  2013,  1962,  2209,  2403,   663,  2404,  2130,   806,
    1187,  1680,  1969,   824,    88,    31,   806,  1055,   733,  1649,
    1649,  1960,  2238,   639,   664,   640,   731,  1763,  2242,  1937,
    1939,  2669,  1188,   665,   481,  2306,  2759,  1308,    26,  1842,
    1458,  2470,  2468,   489,  2037,    62,  1189,  2101,  2705,  2670,
    1471,   654,  1849,  2706,   743,  1249,    33,  1693,  2799,  2049,
     535,  2276,   993,   481,  1182,  1183,  1250,  1487,  1249,    34,
    1490,  2277,  1303,  1250,    31, -1736, -1736,  3033,   629,  1927,
    2179,   994,  1365,   481,   481,   481,  2050,   481,   481,  2329,
    2330,  2331,  2332,    35,   641,   596,   642,  1869,  1870,  1871,
    1949,  1187,  1950,  1140,  1482,  1952,    26,   536,  2315,  2800,
    2092,   481,   548,  2191,  1239,    33,  1813,  1240,  2801,  2092,
    2127,   816,  1381,  1188,  2092,  1382,   983,  2092,    34,   814,
     806,   806,   995,   731,   817,  1596,  1699,  1191,  1597,  2182,
    1824,  1459,    31,  1848,  1459,   818,  2092,  2802,  2121, -1737,
   -1737,  1313,    35,   593,  1459,   629,   819, -1075,  2183,   630,
    1316,   924,  1859,  1700,   481,  1924,    36,  1866,   481,   481,
    1395,  1396,   930,  1402,  1363,  2223,    89,   984,   954,   481,
    2230,   985,  1458,    33,    90,  1373,  2865,  1250,  1250,   939,
     610,   610,  1472,   610, -1739, -1739,    34,   733,  2869,  2416,
    1473,   648,  1456,  1851,  2051,  1456,  1896,  2614,  1854,  2052,
    1764,   986, -1740, -1740,   492,  1456,   493,   946,  2803,    91,
      35,   947,  1055,   996,  2099,  2025,   949,  2027,  2028,  1055,
    2804,   950,  1459,    58,    36,  1483,  2092,  1598,   952,  1759,
    1599,   496,  1232,  1372,   953,  1883,   980,  1936,  1884,    58,
    1055,   980,   981,  1928,   960,  2617,  1599,   981,  2131,  2131,
    1912,  1934,  1913,    58,  1935,   980,    92,    26,  2092,   595,
     975,   981,  1956,   649,   997,  1957,  1701,   650,   987,    26,
    2170,  1702,   998,  2171,  2026,  2174,  1703,  2577,  2175,  2232,
    2580,  1973,  1597,  1456,   999,   608,   977,   807,   823,  2825,
    2187,  1998,  2375,    31,   978,  2376,  1999,  2000,  2001,   979,
     807,  1514,   731,  2619,    58,    31,  2380,  2825,   991,  2381,
    1515,  2047,  1517,  1518,  2394,  1000,  2396,  1649,  1649,  1649,
    1649,  1640,   992,  1649,  1649,  1649,  1649,  1649,  1649,  1649,
    1649,  1649,  1649,   823,    33,  2500,  1998,   488,  1884,  1145,
    2053, -1763, -1763, -1763,  2096,  1141,    33,    34,   982,  2924,
    -501,  2054,   651,   982,  2164,  -501,  2166,  2539,  2071,    34,
    2072,  1303,  1002,  2092,  1459,  2413,  2520,   982,   481,  2521,
    2251,    35,  1009,  2540,   733,   733,  1599,  1649,  1649,  2073,
    1013,  2074,  2348,    35,  1003,    36,  1149,  2693,   652,   733,
    1599,  2760,  2239,  2395,  2761, -1742, -1742,  1765,   489,  2092,
    2871,  1146,  2420,  2789,  1005,  2622,  1884,  2486,  2412,  2818,
    2421,  2805,  1599,  2572,  2806,  2575,  2349,  1704,  2821,  2838,
    2908,  2822,  2839,   653,  -501,  1456,  3026,  2842,  1705,  1567,
    2839,  1568,  2573,  1151,   806,  3003,  3004,   823,  2857,  1153,
    1998,  2858,  2351,  2987,  1165,  1999,  2000,  2001,  2623,  1163,
    1141,  2898,   745,  1154,  2858,  2240,  2241,  2206,  2899,   803,
    1155,  1599,  3005,   481,  2624,   481,    62,  1177,   481,   481,
     654,   980,   959,  -501,   961,  2377,   635,   981,   481,  1170,
     481,   481,   481,   481,   481,   481,   481,   633,   488,   731,
     731,  2092,  3036,    62,   634,  2911,  1174,  2003,  2839,   637,
    2932,  1178,   983,  2933,   731,  1180,   481,   983,   481, -1743,
   -1743, -1146,  2202,   733,   481,   481,   481,   481,   481,  1141,
    1181,   983,  1197,   481,   481,  3040,  2218,  1198,   481,  2591,
    1582,  1623,   481, -1744, -1744,   481,   481,   481,   481,   481,
     481,   481,   481,   481,  2957,  2996,   481,  2958,  2839,   489,
    1203,  1204,  3016,   481,   980,  2858,  1055,   985,  1010,  1141,
     981,  2625,   985,  2353, -1745, -1745,  1200,  2004,  2626,   492,
    1228,   493,  1014,  2691,  1231,  2347,   985,  1234,   481, -1746,
   -1746, -1747, -1747,   982,  2127,   980,  1235,   986, -1748, -1748,
    1237,   981,  1011,  1824, -1749, -1749,   496,  1238,    26,   481,
    1767,   936,  1256,  1895,  1267,  2462,  1015, -1750, -1750,  1266,
     481,   481,  2004,  1269,  1737, -1751, -1751,  1627,  1271,  1209,
    1210, -1753, -1753,  1752,  2002,  1628,  1629,  1630,   731, -1754,
   -1754,  1602, -1755, -1755,    31, -1756, -1756,  1817,  -695,  1249,
   -1757, -1757,   733,  2602,  2296,  -702,  2003,  1825,  1141,  1828,
    1141,  2348,  1839,  1274,   987, -1758, -1758,  1276,  1843,   987,
    1845,  1275,  2263,  1277,   807,  1278,   982,  2420, -1760, -1760,
    2246,    36,  1852,   987,  1280,    33,  -579,  1855, -1762, -1762,
    2270,  1860,  1861,  1862,  1863,  2349,  1867,  1868,    34,  1055,
    1498,  1499,   481,   481,  -580,   481,  2562,   982,  -692,    93,
    -693,  2350,   484,  1801,  1802,  1281,  2292,  -696,   532,    58,
    2562,  2351,    35,  2297,  1141,  1602,  2004,  -553,  -553,   562,
     492,  1282,   493,   575,  1211,  1212,    36,  -694,  1055,  1213,
    1214,  1284,  2362,  2817,   481,  1213,  1214,   983,  -557,  -557,
    -556,  -556,  1916,  1296,   495,  2352,  1285,   496,  1842,   733,
    2471,  2968,  1286,  2969,  1377,  1379,  1287,   731,    58,   595,
    1288,  1289,  2005,  2006,  2007,  1290,  2008,  2009,  2010,  2011,
    2012,  2013,  2518,  1291,  1292,  1309,   806,  1312,  1354,  1357,
    1359,  1375,  1360,  1384,  1385,  1388,  1394,  2485,  1812,   806,
     963,  1055,   985,   733,   965,  1428,  1430,  1454,   481,  1456,
    1436,   608,  1455,   481,   602,  1461,  1462, -1763, -1763, -1763,
    1463,  2008,  2009,  2010,  2011,  2012,  2013,  1467,  -502,  1474,
     983,    58,   986,  -502,   993,   620,  3025,   623,  1475,   627,
    1489,  1479,  2353,  1250,  1494,  1501,  2498,  1965,  1506,   481,
     481,   481,  2635,   994,   481,  1649,  1250,  1502,   596,  1512,
    1513,   983,   481,   481,   481,   481,  1520,  1521,  2465,  1526,
     722,  1529,   481,  1530,   731,  2786,   481,  1532,  2127,   481,
    2519,  1857,   603,  1534,  1540,   985,  1249,   824,  1547,  1549,
    1550,  1249,  1556,  1557,  1560,   481,   481,  1561,  1562,   987,
     481,  2493,  -502,  1563,   995,  1570,  2126,   596,  1604,  1595,
    1609,    26,  1864,  1319,   481,  1858,   985,   481,   731,   481,
    1672,  2005,  2006,  2007,  1668,  2008,  2009,  2010,  2011,  2012,
    2013,  1673,  1670,  1577,  1579,  2517,  1674,  1675,  1707,   481,
    1689,  1696,  2251,  1708,  1731,  1649,  1865,    31,  1710,  1732,
     481,  -502,  1746,  1753,  1760,  1761,  2090,  1768,   603,  1780,
     604,  2644,  2645,  1790,  1791,   481,  1144,  1792,   478,  1793,
    1795,  2090,  1186,  1794,  1818,  1811,   596,  1814,  1819,  1820,
     635,  1602,   987,   478,   481,  1885,   604,  1881,    33,  1889,
    1890,   633,  1898,  1899,  1900,   996,  1901,    62,   634,   481,
     481,    34,  1902,   637,  1903,  1917,  1921,  1922,  1925,  1923,
    1926,  1929,  1932,   987,  1930,  1931,  1933,  1649,   481,  1940,
    1941,  1951,   488,  1953,  1954,    35,  1955,  1963,  1974,  1975,
    1986,  2048,  2022,  2069,  1981,  1141,  1141,  1141,  2347,    36,
    1991,    58,  1983,  1984,  2043, -1146,   997,  1985,  1987,  1988,
     722,  1990,  1994,  2016,   998,  2017,   479,  2094,  2023,  2030,
    2041,   505,  2055,  2064,  2065,   505,   999,  1303,  2067,  2068,
     550,   550,   553,   505,   558,  2104,  1055,   558,  2106,  1279,
     558,   584,  2113,   489,   505,   505,  2118,  -558,  2122,  2462,
    2120,  -559,  2133,  2134,  2136,  2140,  2137,  1000,  2173,   605,
    2138,  1631,  1632,  1633,  2142,  1634,  1635,  1636,  1637,  1638,
    1639,  2143,  1577,  1579,  2348,   733,  2643,  1301,  2146,  2150,
    2214,  2163,  2227,  1249,  2165,   481,  2192,  2178,  2184,  2185,
    2186,   558,  2205,  2193,  2194,  2204,  2195,   490,   584,   505,
     584,   584,   584,  2199,  1002,  2208,  2213,  2220,  2349,  2224,
    2225,   993,  2221,  2228,  2231,  2235,  2237,   722,   724,  2212,
    2247,  1141,  2244,   806,  2350,  2245,  1003,  2254,  2262,  2019,
     994,  1998,  2018,  2293,  2351,  1916,  2294,  2298,  2295,  2299,
    2311,   481,  2313,  2314,   733,  2317,  1005,  2326,  2327,  2076,
     481,   608,   608,   481,   608,  2364,   481,  2338,  2346,  2360,
    2378,  2374,   733,   481,   481,   481,   481,   491,  2352,   481,
     481,   481,   481,   481,   481,   481,   481,   481,   481,  2372,
    1250,   995,   481,   481,  2325,  2252,   481,  2253,   733,  2713,
     731,  2258,  2259,   481,   638,   733,   807,  2952,   481,  1482,
    2369,  2389,  2370,  2387,  2406,   596,  2408,   481,  2393,  2399,
     481,  2400,   481,  2424,   492,  2488,   493,  2482, -1541,   733,
     481,  2483,  2497,   481,   481,  2484,  2489,  2502,   481,   481,
    2496,  2503,   494,  2507,  2514,  2516,   596,  1884,   495,  2527,
    2524,   496,  2530,  2559,   481,  2568,   481,  2531,  2532,  2533,
    2090,  2534,  2090,   596,  3014,  2353,  2548,  2566,   481,   731,
    2560,  2563,   478,  2569,   478,  2576,  2581,  2582,   481,   507,
    2583,  2584,   996,  2586,  2603,  2597,  2604,   731,  2633,  2609,
    2605,  2634,  2638, -1097,   481,  2651, -1736,  2650,   929, -1737,
   -1738, -1739, -1740,  2652, -1741, -1742,   722, -1743,   724, -1744,
    2868, -1745,  2465,   731,  2763,  2391,  2875, -1746, -1747,  2662,
     731, -1541,  2664,  2667, -1748, -1749,   823, -1750,  2679,  1998,
     976, -1751,   508,   997,  1999,  2000,  2001, -1753,  2665, -1754,
    2425,   998, -1755,  2462,   731,  1141, -1756,  2660,   509,  1141,
    2469,  1141,  2714,   999, -1757,  2472,  2473,  2474,  2475,  2476,
    2477,  2478,  2479,  2480,  2481, -1758,  1583, -1759, -1760,  1157,
    1159,  1161,  1162, -1541, -1761, -1762, -1098,  1249,  2680,  2682,
    2685,  2686,  2689,  2840,  1000,  2717,  2840, -1541,  2690,  2704,
    2722,  2740, -1541,  2746,  2752,  2491,  2901, -1541,  2744,  2754,
    2757,  2755,   510,  2762,  2771,  2774, -1541,  2467,  2931,  2775,
   -1541,  1584,   511,  2776,  2777,   724,  2778,   733,  2785,  2787,
    2793,  2511,  2795,  2512,   512,  2796,  2809,  2810,  2819,   513,
    2823,  1002,  2199,  2831,   481,  2833,  2847,  1585,  2912,  2851,
    2914, -1541,    58,  2832,  2835,  2843,  2845,  2854,  2859,  2873,
    2879,  2882,  2877,  1003,  2888,  1586,   514,  2894,  2895,  1587,
    2896, -1541,  2900,  2904,  2913,   731,  2916,  2905,  2917,    58,
    2919,  2930,  2934,  1005,  2770,  1567,  2936,  2878,  2937,  2939,
    2943,  1588,   481,   481,  1589,  2942,  2868,   481,   733,  2944,
    2948,  2949,   481,   722,   722,   481,   481,  2984,  2950,  1590,
     481,   515,  2959,  2960,  2961,   516,  2963,   584,   722,  2550,
   -1541,   645,  2966, -1541,   646,  2974,  2980,  2995,  2997, -1541,
     481,  2998,   505,   725,   481,  3000,  2090,  3007,  3010,  3012,
    2090,  3018,   731,  3023,  1697, -1763,  3024,  3008,   478,  3009,
    3034,  3035,   478,  3037,  3042,   951,   481,  1844,  2423,   646,
     505,   505,  2427, -1541,  2161,  2593,  2382,  2745,  2926,  2925,
    2970,  2641,  2501,  2976,  2590,  2592,   550,  2872,   517,  3032,
    3013,  3006,  1445,  2808,  2168,  2145, -1541,  2972,  3011,  2428,
    1141,  2506,   518,  2141,  2971,   917,   917,   558,   558,   481,
     558,  1591,  1564,    58,   724,  1543,  2465,  2487,   733,  1592,
    2588,   584,  2201,   731,  2248,  2004,  2687,  1386,  1367,  2125,
     505,  1810,  1425,  1424,  2907,   519,  2921,  3001,   520,  2135,
    1787,   584,  2368,  2962,  2915,  2587,   521,  2853,  2469,   522,
    1429,  2076,   722,   584,  2103,  2341,  1809,  2574,  2558,  2837,
    2337,  2903,  1593,  -464,  2902,  1380,  2909,  1613,   523,  2910,
    2743,  1615,  1619,  1620,  2964,  1736,  2965,  -464, -1541,  2994,
    2039,   524,  -464,  2062,  2128,  1978, -1541,  1880,   525,  1603,
    1391,  2060,   584,   584,   584,   584,   919,   526,  2658,  2589,
    2367,  2207, -1541,   527, -1541, -1541,  2097,  2897,  1972,  1755,
    1201,  1202,  1389,  2671,  2383,   806,  1437,  1575,  1757,     0,
       0,   481,     0,   725,   733,     0,     0,   481,   528,  1464,
       0,  -464,     0,   731,     0,     0,   481,   481,     0,     0,
     481, -1541,     0,     0, -1541, -1541, -1541,     0,  2666,     0,
    1488,  -464,     0,   481,     0,    58,     0,     0,     0,  2090,
       0,     0,   481,   731,     0,     0,     0,   481,  2090,     0,
     481,   478,  1250,  2090,     0,     0,  2090,   481,   481,     0,
     478,   722,     0,     0,     0,   478,  1203,  1204,   478,   481,
       0,   481,     0,  2614,     0,  2090,     0,     0,     0,  2615,
    -464,   724,   724,     0,     0,     0,     0,   478,     0,  -464,
       0,   481,  2616,  2764,     0,     0,   724,     0,     0,     0,
    2005,  2006,  2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,
     725,     0,     0,     0,     0,     0,     0,  2742,     0,   731,
       0,  2617,     0,  2618,  2469,     0,     0,     0,  2783,  2784,
       0,  1205,  1206,  1207,  1208,  1209,  1210,     0,  1268,  1211,
    1212,     0,     0,     0,     0,     0,     0,  2797,     0,     0,
    1301,     0,  2791,     0,     0,     0,     0,  2794,     0,   481,
       0,     0,     0,   481,   733,  2090,     0,     0,   722,     0,
       0,  1523,  1525,     0,     0,     0,  2671,   478,     0,  2619,
       0,  2467,     0,     0,     0,     0,     0,   481,     0,     0,
       0,   481,     0,     0,     0,   733,     0,  2090,   733,  1301,
       0,     0,     0,     0,   481,  1307,     0,     0,  2620,   478,
    1318,   596,   722,  1319,     0,     0,     0,  1697,   481,     0,
     724,   481,     0,  2855,     0,     0,     0,     0,  -464,   727,
       0,  1141,     0,  2066,     0,  1141,   481,     0,     0,   731,
       0,     0,     0,  1326,     0,  1213,  1214,     0,   584,  2083,
   -1763,  2876,     0,     0,     0,  1523,     0,     0,     0,     0,
       0,     0,     0,    58,  2083,     0,   505,   505,   595,     0,
       0,     0,   584,   584,  1393,  1328,  2621,     0,     0,   731,
       0,  2622,     0,     0,     0,  2891,     0,     0,     0,   725,
       0,   629,     0,     0,   949,   630,   481,     0,     0,   584,
    1448,     0,  2090,     0,     0,     0,     0,     0,     0,     0,
     731,     0,   584,   731,   478,     0,     0,   481,  2884,   481,
       0,   481,     0,     0,  2623,   481,     0,     0, -1543,   584,
       0,     0,   481,   584,     0,     0,     0,     0,  2090,     0,
    2624,     0,     0,     0,  2922,  2046,     0,     0,     0,   724,
     478,     0,     0,   481,   728,     0,  1215,  1216,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   481,     0, -1763,  1745,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   481,     0,     0,
       0,     0, -1763,     0,     0,     0,     0, -1763,  1754,     0,
    1756,     0,     0,    58,     0,     0,     0,  1141,  2469,   727,
       0,     0,     0,     0,     0,  1612,     0,   548,     0,     0,
       0, -1543,     0,     0,   481,     0,     0,   481,   481,     0,
    2090,     0,     0,  2985, -1763,     0,     0,  2625,     0,     0,
       0,     0,   478,     0,  2626,     0,   730,  1805,     0,     0,
       0,     0,     0,     0,     0,     0,   724,     0,    58,     0,
       0,     0,   481,     0,     0,  2467,  1505,     0,     0,     0,
       0,     0,     0, -1543,   584,   584,   725,   725,     0,     0,
       0,     0,     0,     0,  1538,     0,     0, -1543,     0,  1337,
       0,   725, -1543,     0,     0,     0,     0, -1543,     0,     0,
     724,     0,     0,     0,     0,     0, -1543,     0,   481,     0,
   -1543,     0,     0,     0,     0,     0,   727,  1555,     0,     0,
       0,  1201,  1202,   731,   722,     0,     0,  1891,  1893,     0,
       0,     0,     0,     0,   728,     0,     0,  1301,     0,     0,
       0, -1543,     0,     0,     0,     0,     0,     0,   646,   646,
       0,   505,   505,     0,   505,   646,     0,     0,   584,     0,
       0, -1543,     0,     0,     0,     0,     0,     0,  1301,   823,
       0,     0,  1998,     0,     0,     0,     0,  1999,  2000,  2001,
       0, -1763,     0,  2336,     0,  2339,     0,     0,     0,     0,
       0,     0,     0,   722,  2308,     0,     0,  1203,  1204,     0,
       0,     0,     0,     0,     0,  1642,     0,     0,     0,     0,
   -1543,   722,     0, -1543,     0,   725,  1667,     0,     0, -1543,
       0,     0,     0,     0,     0,     0,   730,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   722,     0,     0,
       0,   728,     0,     0,   722,     0,     0,     0,   646,     0,
       0,     0,     0, -1543,     0,     0,     0,     0,     0,     0,
       0,     0,  1205,  1206,  1207,  1208,  1209,  1210,   722,     0,
    1211,  1212,     0,     0,     0,     0, -1543,     0,     0,   917,
     584, -1763,     0,     0,     0,     0,     0,     0,  1344,  1345,
    1346,  1347,  1348,  1349,     0,   727,     0,     0, -1557,     0,
       0,   584,  1318,   584,     0,  1319,     0,     0,    58,     0,
       0,     0,  1769,     0,  1775,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2076,     0,   730,    58,  1326,    58,     0,     0,     0,
       0,     0, -1763,     0,   725,     0,     0,     0,     0,     0,
     584,     0,     0,     0,     0,     0,     0,  2075, -1543,  1448,
     505,     0,     0,     0,     0,     0, -1543,  1328,     0,     0,
     505,  1826,   505,  1830,     0,   505,  1213,  1214,  2003,     0,
       0,   505, -1543,   505, -1543, -1543,     0,     0,     0,   722,
       0, -1557,     0,     0,   646,   505,     0,     0,     0,   646,
     505,     0,     0,     0,   505,   505,   505,   505,     0,   505,
     505,     0,   724,     0,     0,     0,     0,     0,     0,     0,
     728, -1543,     0,     0, -1543, -1543, -1543,     0,     0,     0,
     584,   584,  1894,     0,     0,     0,     0,  2056,     0,     0,
       0,     0,     0, -1557,     0,     0,     0,     0,  2004,  2083,
    1911,   725,     0,  2083,     0,     0,   722, -1557,     0,     0,
       0,     0, -1557,     0,     0,     0,     0, -1557, -1763,     0,
       0,     0,     0,     0,     0,     0, -1557,    58,    58,     0,
   -1557,   724,   727,   727, -1763,     0,     0,  1215,  1216, -1763,
       0,     0,     0,     0,     0,   725,     0,   727,     0,   724,
       0,     0,     0,     0,     0,     0,  1523,  2203,     0,     0,
       0, -1557,   730,     0,     0,     0,     0,     0,     0,  2216,
    2217,  2219,     0,     0,     0,   724, -1763,   722,     0,     0,
       0, -1557,   724,     0,     0,     0,     0,     0,     0,  1318,
    2236,     0,  1319,     0,     0,     0,     0, -1763, -1763, -1763,
       0,     0,     0,     0,     0,     0,   724,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1523,     0,  1326,     0,     0,     0,     0,     0,     0,  1327,
   -1557,  1337,     0, -1557,     0,     0,   505,     0,     0, -1557,
       0,    58,     0,  1307,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,    58,   728,   728,  1995,
    1996,     0,     0,     0,  2015,     0,     0,     0,     0,     0,
       0,   727,   728, -1557,     0,     0,     0,     0,  1642,     0,
       0,     0,     0,     0,     0,     0,     0,   722,     0,     0,
       0,     0,     0,  2005,  2006,  2007, -1557,  2008,  2009,  2010,
    2011,  2012,  2013,     0,     0,  2044,  2045,     0,     0,     0,
     584,     0,     0,     0,     0,     0,  2093,   722,     0,     0,
       0,  2083,     0, -1763,     0,     0,  2083,   724,     0,  2083,
       0,  2093,     0,  1318,     0,  2112,  1319,     0,  2115,     0,
    1775,     0,     0,     0,  2333,  2334,  2335,     0,     0,   730,
     730,  2076,     0,     0,     0,  1329,     0,     0,     0,     0,
       0,     0,     0,     0,   730,     0,  1326,     0,     0,     0,
       0,  1330,     0, -1763,     0,     0,  1331,     0, -1557,     0,
       0,     0,     0,     0,     0,     0, -1557,     0,     0,     0,
       0,     0,  1505,   722,   724,     0,   728,     0,  1328,     0,
     727,     0, -1557,  2390, -1557, -1557,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,    58,     0,     0,     0,     0,
      58,     0,     0, -1763,     0,     0,     0,     0,     0,     0,
    1344,  1345,  1346,  1347,  1348,  1349,     0,     0,     0,    58,
       0, -1557,     0,     0, -1557, -1557, -1557,     0,     0,     0,
       0,     0,     0,     0,  1505,     0,     0,   725,     0,   584,
     584,     0,     0,     0,     0,   724,     0,     0,  1337,     0,
    2083,  1505,   584,   584,   584,     0,  2495,     0,     0,     0,
    1523,     0,     0,  1301,     0,   505,     0,     0,   730,     0,
       0,     0,     0,   584,     0,     0,     0,     0,     0, -1763,
       0,     0,     0,     0,     0,  2243,     0,   727,     0,     0,
       0,     0,     0,   722,  1523, -1763,     0,     0,     0,     0,
   -1763,   646,     0,   584,     0,   728,   725,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1505,  1505,
       0,     0,     0,     0,   725,     0,     0,     0,    58,     0,
       0,   727,     0,   722,     0,     0,     0, -1763,     0,     0,
    1339,  1642,     0,     0,     0,     0,     0,     0,     0,     0,
     725,     0,     0,     0,     0,   724,     0,   725,     0,     0,
       0,     0,     0,     0,   722,     0,     0,   722,     0,     0,
       0,     0,     0,     0,     0,     0,  2553,  2554,  2555,  2556,
       0,   725,     0,     0,     0,   724,     0,    58,     0,     0,
       0,     0,  1337,  2271,  2272,  2273,  2274,   730,     0,  2278,
    2279,  2280,  2281,  2282,  2283,  2284,  2285,  2286,  2287,     0,
       0,   823,   728,     0,  1998,     0,     0,     0,     0,  1999,
    2000,  2001,     0,     0,     0,     0,     0,   584,   584,   584,
     479,     0,  2093,  2345,     0,     0,  2309,     0,  2345,  2359,
    1340,     0,     0, -1763, -1763, -1763,     0,  1344,  1345,  1346,
    1347,  1348,  1349,  2319,  2320,     0,   728,     0,     0,     0,
       0,   724,     0,     0,     0,     0,     0,     0,  1775,     0,
       0,     0,     0,     0,     0,     0,    58,     0,     0,     0,
       0,   993,     0,     0, -1763,     0,   584,     0,   505,     0,
       0,     0,  1505,  1448,  1505,     0,  1538,     0,     0,     0,
     994,     0,   725,     0,   730,     0,     0,     0,     0,     0,
       0,     0,     0,   505,   823,  2426,     0,  1998,     0,     0,
       0,     0,  1999,  2000,  2001,     0,     0,     0,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,     0,  2542,
       0,     0,     0,     0,     0,     0,     0,     0,   730,     0,
       0,   995,  2414,     0,  1911,     0,     0,     0,     0,   584,
    2415,     0,     0,   584,   900,   900,     0,     0,     0,   725,
       0,  1448,     0,     0,     0,     0,     0,   722,     0,     0,
       0,   724,     0,   -40, -1763,  1538,     0,     0,     0,     0,
       0,  1344,  1345,  1346,  1347,  1348,  1349,   584,     0,     0,
       0,     0,     1,     0,  1505,     0,     0,     0,     0,     0,
       0,     0,     2,     0,     3,     4,     0,     0,  2416,     0,
    2003,   724,     0,     0,     0,     0,     0,  1050,  1057,     0,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     6,
     725,     0,   996,   727,     0,     0,     0,     0,   505,     0,
       0,     7,   724,     0,  2535,   724,     0,     0,     0,     0,
       0,     0,     8,     0,     0,     0,     0,     0,     0,     0,
       0,  2772,     0,     0,     9,     0,    10,  2552,     0,   584,
     584,   584,   584,     0,     0,     0,  2345,  2359,     0,  2345,
    2004,     0,  2561,   997,    11,     0,  2093,     0,     0,     0,
    2093,   998,     0,     0,     0,     0,  2579,     0,    12,     0,
    2792,     0,   727,   999,     0,  2417,     0,     0,    13,     0,
       0,     0,   917,  2003,    14,     0,  2112,     0,     0,  2814,
     727,  1775,    15,     0,    16,    17,     0,  1642,     0,     0,
       0,     0,     0,  1448,  1000,     0,     0,     0,    18,  1505,
     725,     0,     0,     0,     0,     0,   727,     0,     0,     0,
       0,     0,     0,   727,     0,     0,     0,  1352,   728,  2642,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
     725,     0,     0,     0,     0,     0,     0,   727,     0,     0,
       0,  1002,    20,  2004,     0,     0,   823,     0,     0,  1998,
       0,     0,  2864,     0,  1999,  2000,  2001,     0,  1352,     0,
       0,     0,  1050,  1003,     0,     0,     0,     0,    21,     0,
       0,  2543,     0,     0,     0,     0,     0,     0,     0,  1272,
       0,     0,     0,  1005,     0,  2418,     0,   728,  2419,  1505,
    2889,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1911,     0,     0,   728,   725,     0,  1283,     0,
     730,     0,     0,     0,  2683,   724,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1293,  1294,
    1295,   728,     0,  1302,     0,  2005,  2006,  2007,   728,  2008,
    2009,  2010,  2011,  2012,  2013,    22,     0,     0,    23,     0,
    2699,     0,     0,     0,     0,     0,  1358,     0,   727,   479,
    2345,     0,   728,  2710,     0,     0,   505,  1352,  2093,     0,
       0,  2688,     0,  2093,  1352,     0,  2093,    24,  2721,   730,
       0,  2724,     0,     0,     0,     0,    25,     0,     0,     0,
    1456,     0,     0,     0,     0,  2751,     0,   730,     0,     0,
      26,     0,     0,     0,     0,     0,     0,    27,     0,  1401,
       0,    28,     0,  1415,  1420,   646,   505,     0,     0,     0,
       0,    29,     0,   730,   584,   727,   725,     0,     0,     0,
     730,     0,    30,     0,     0,     0,    31,     0,  2005,  2006,
    2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,     0,     0,
       0,   505,   505,     0,   730,  2003,     0,     0,     0,     0,
       0,  2765,     0,   584,     0,  1448,   725,  1050,     0,     0,
     505,     0,    32,     0,  1050,     0,     0,    33,     0,     0,
       0,     0,   584,   728,     0,  2751,     0,     0,     0,     0,
      34,     0,     0,     0,     0,  1050,   727,   725,     0,     0,
     725,     0,     0,     0,   505,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    35,     0,     0,  2093,     0,     0,
       0,     0,  2724,     0,     0,  2004,     0,     0,    36,     0,
       0,   -40,     0,  2816,     0,     0,     0,     0,     0,     0,
    2850,     0,     0,     0,   917,     0,   505,     0,     0,     0,
     728,     0,     0,     0,     0,   584,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   505,   730,     0,     0,   646,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1352,
       0,     0,     0,   584,     0,     0,     0,     0,     0,     0,
    1352,     0,     0,     0,  1650,     0,   727,     0,     0,     0,
    1352,  1352,  1352,     0,     0,     0,     0,     0,     0,  1352,
       0,   728,   479,     0,     0,     0,     0,     0,     0,     0,
       0,  2906,     0,     0,     0,   505,   727,     0,     0,  2721,
       0,     0,   730,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1318,     0,     0,  1319,  2751,   646,
     646,   646,  1321,  1322,  1323,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1352,     0,     0,     0,  1324,
       0,     0,     0,     0,     0,     0,     0,  1326,  1448,     0,
       0,     0,     0,     0,  1327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2721,     0,     0,     0,     0,     0,
     725,     0,   727,   730,     0,     0,  2850,     0,  1352,  1328,
    2005,  2006,  2007,  1607,  2008,  2009,  2010,  2011,  2012,  2013,
    1775,   728,  1352,  1626,     0,  1643,     0,  1352,  1654,  1657,
    1662,  1665,     0,     0,  1448,     0,     0,     0,     0,     0,
    2751,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   728,     0,  1677,     0,     0,  2710,   646,     0,  1681,
    1682,  1683,  1684,  1685,     0,     0,     0,     0,  1694,  1695,
       0,     0,     0,  1706,     0,     0,  1318,  1709,     0,  1319,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,     0,
       0,  1726,     0,     0,     0,     0,  1318,     0,   900,  1319,
       0,  1050,     0,  1320,  1321,  1322,  1323,     0,     0,  1326,
    1329,     0,     0,   730,     0,     0, -1763,     0,     0,     0,
       0,  1324,   727,  1758,     0,     0,  1330,   728,     0,  1326,
       0,  1331,     0,     0,     0,     0,  1327,     0,     0,     0,
       0,  1328,     0,   730,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1332,  1333,  1294,  1295,     0,     0,     0,
       0,  1328,   727,     0,     0,     0,     0,     0,  1334,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   727,     0,     0,   727,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1335,     0,     0,  1336,
       0,  2318,     0,     0,  1352,     0,     0,     0,     0,   730,
       0,     0,     0,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1352,  1050,     0,     0,  1877,  1878,     0,
    1879,     0, -1763,     0,     0,     0,     0,   728,     0,     0,
    1352,     0,  1650,  1650,     0,  2014,     0,  1650, -1763,     0,
       0,  1352,  1329, -1763,  1352,     0,     0,     0,     0,  1352,
       0,     0,  1352,  1050,     0,     0,     0,     0,  1330,     0,
       0,     0,     0,  1331,  1352,     0,     0,   728,  1352,  1352,
    1352,  1352,  1352,     0,     0,     0,     0,     0,  1650,  1650,
   -1763,  1352,  1352,     0,     0,  1332,  1333,     0,     0,     0,
       0,     0,     0,  1352,     0,  1339,  1352,     0,   728,     0,
    1334,   728,     0,     0,  1352,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,     0,     0,  1050,     0,     0,   730,
       0,     0,     0,  1976,     0,     0,     0,     0,  1982,     0,
       0,     0,     0,     0,     0,  1337,     0,     0,  1335,     0,
       0,  1336,     0,     0,     0,  1352,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1337,     0,     0,  1338,   730,
       0,     0,     0,     0,     0,     0,  1997,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1662,     0,  1662,
    1662,     0,     0,     0,     0,     0,   727,  2035,     0,     0,
     730,  2038,     0,   730,  2040,  1340,     0,     0,  1341,  1342,
    1343,     0,  1344,  1345,  1346,  1347,  1348,  1349,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1763,     0,  2058,
       0,     0,  2061,     0,  2063,     0,     0,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,     0,  1339,  1318,     0,
       0,  1319,     0,     0,     0,  1320,  1321,  1322,  1323,     0,
       0,     0,     0,     0,  1352,  1352,  1352,     0,     0,     0,
       0,     0,     0,  1324,     0,     0,  1325,     0,     0,     0,
       0,  1326,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1401,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   728,     0,  1328,  1420,  1724,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1763,     0,     0,
       0,     0,     0,  2139,  1344,  1345,  1346,  1347,  1348,  1349,
       0,     0,     0,     0,     0,     0,     0,  1340,     0,     0,
    1341,  1342,  1343,     0,  1344,  1345,  1346,  1347,  1348,  1349,
       0,     0,     0,  1352,     0,     0,     0,  1989,     0,  1352,
       0,     0,     0,     0,     0,     0,     0,  1318,     0,     0,
    1319,     0,  2014,  2014,  1352,     0,  1650,  1650,  1650,  1650,
       0,  1050,  1650,  1650,  1650,  1650,  1650,  1650,  1650,  1650,
    1650,  1650,  2014,   730,     0,     0,     0,     0,     0,     0,
    1326,     0,     0,     0,  1329,     0,     0, -1763,     0,     0,
       0,     0,  1352,     0,     0,  1352,     0,  1352,     0,     0,
    1330,  2014,  2014,     0,     0,  1331,     0,     0,     0,     0,
    2234,     0,  1328,     0,     0,  1352,  1650,  1650,  1352,     0,
    1352,     0,     0,     0,     0,     0,     0,  1332,  1333,  1318,
       0,     0,  1319,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1326,     0,     0,     0,  2261,     0,     0, -1763,
       0,     0,     0,     0,     0,  2265,     0,     0,  2266,     0,
    1335,  2268,  2321,  1336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,  1352,  1337,     0,     0,
    1338,     0,     0,     0,     0,     0,     0,  2288,  2289,     0,
       0,  1758,     0, -1763,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2300,     0,     0,     0,     0,     0, -1763,
       0,     0,  2307,     0, -1763,  2310,     0,  2312,     0,     0,
       0,     0,     0,     0,     0,  2316,     0,     0,     0,     0,
       0,     0,     0,  2323,  2324,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2322,     0,     0,     0,     0,     0,
       0, -1763,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2363,     0,     0,     0,     0,     0,  1339,
       0,  1352,     0,  2371,     0, -1763,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2384,
       0, -1763,     0,     0,     0,     0, -1763,     0,  1352,     0,
       0,     0,  1352,  1352,     0,  1352,  1337,     0,  2014,  2014,
    2014,  2014,     0,     0,     0,  2014,  2014,  2014,  2014,  2014,
    2014,  2014,  2014,  2014,  2014,  1352,  1352,     0,     0,     0,
       0,     0,     0, -1763,     0,     0,     0,  1352,     0,     0,
       0,     0,     0,     0,  1352,     0,     0,  1352,     0,  1352,
       0,     0,     0,  1352,     0,     0,  2014,  2014,     0,     0,
    1352,  1352,     0,     0,     0,     0,     0,     0,     0,  1340,
       0,     0,  1341,  1342,  1343,     0,  1344,  1345,  1346,  1347,
    1348,  1349,     0,     0,  1318,     0,     0,  1319,  1337,     0,
       0,  1320,  1321,  1322,  1323,     0,     0,     0, -1763,     0,
    1352,     0,     0,     0,     0,     0,     0,     0,  1352,  1324,
       0,     0,  2304,     0,     0,     0,     0,  1326,     0,     0,
       0,  1352,     0,     0,  1327,     0,     0,     0,     0,  2523,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1328,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1318,     0,     0,  1319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2536,  2537,     0,
   -1763,     0,  2538,     0,     0,     0,     0,  2541,     0,     0,
    2544,  2545,     0,     0,     0,  2549,  1326,     0, -1763,     0,
       0,     0,     0, -1763,     0,  1344,  1345,  1346,  1347,  1348,
    1349,     0,  1318,     0,     0,  1319,     0,     0,     0,  1320,
    1321,  1322,  1323,     0,     0,     0,     0,     0,  1328,     0,
       0,     0,     0,     0,     0,     0,     0,  1324,     0,     0,
       0,   900,     0,     0,     0,  1326,     0,     0,     0,     0,
    1329,     0,  1327,     0,     0,     0,     0,     0,     0,     0,
    1352,     0,     0,     0,  1650,     0,  1330,     0,     0,     0,
       0,  1331,     0,  1352,  1352,  1352,     0,  1328,  1352,     0,
   -1763,  1352,  1352,     0,  2636,     0,  1352,  1344,  1345,  1346,
    1347,  1348,  1349,  1332,  1333,     0,     0,     0,  2546,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1334,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1318,     0, -1763,
    1319,     0,     0,     0,  1320,  1321,  1322,  1323,     0,     0,
       0,     0,     0,     0,     0, -1763,  1335,     0,     0,  1336,
   -1763,     0,  1324,     0,  1650,     0,     0,     0,     0,     0,
    1326,     0,     0,  1337,     0,     0,  1338,  1327,     0,     0,
       0,     0,     0,  1352,  1201,  1202,     0,     0,  1329,     0,
       0,     0,     0,     0,     0,     0,     0, -1763,     0,     0,
       0,     0,  1328,     0,  1330,     0,     0,     0,     0,  1331,
       0,     0,  2035,     0,     0,     0,     0,     0,     0,     0,
       0,  2694,  2695,     0,     0,  2696,     0,     0,     0,     0,
       0,  1332,  1333,     0,     0,  2014,  1650,     0,     0,     0,
       0,  1352,  1352,  1352,     0,     0,  1334,     0,     0,     0,
       0,     0,  1337,     0,     0,     0,     0,     0,     0,     0,
    1203,  1204,  2738,  2739,     0,  1339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2753,     0,     0,     0,
       0,     0,     0,     0,  1335,  1352,  1352,  1336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1352,  1337,     0,  1329,  1338,     0,     0,     0,     0,     0,
       0,     0,  2014,     0,     0,     0,     0,     0,     0,  1330,
       0,     0,     0,     0,  1331,  1205,  1206,  1207,  1208,  1209,
    1210,     0,     0,  1211,  1212,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1763,     0,  1332,  1333,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1334,     0,  2014,     0,  1340,     0,     0,  1341,  1342,
    1343,     0,  1344,  1345,  1346,  1347,  1348,  1349,     0,     0,
       0,  1352,  1671,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2834,  1339,     0,     0,     0,     0,     0,  1335,
       0,     0,  1336,  1352,     0,     0,     0,     0,     0,  1302,
       0,     0,     0,     0,     0,     0,  1337,  1352,     0,  1338,
       0,     0,     0,   900,     0,     0,  2856,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1213,
    1214,  2870,     0,     0, -1763,     0,     0,     0,     0,     0,
       0,  1344,  1345,  1346,  1347,  1348,  1349,     0,     0,     0,
       0,     0,     0,     0,     0,  1352,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1352,     0,
       0,     0,     0,  1340,     0,     0,  1341,  1342,  1343,     0,
    1344,  1345,  1346,  1347,  1348,  1349,     0,     0,  1339,     0,
    1671,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2738,     0,     0,     0,
    2918,     0,     0,     0,     0,     0,     0,     0,  1352,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1215,  1216,     0,     0,     0,     0,     0,     0,  2941,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1217,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2738,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1340,     0,
       0,  1341,  1342,  1343,     0,  1344,  1345,  1346,  1347,  1348,
    1349,     0,     0,     0,     0,  2042,     0,     0,     0,     0,
       0,     0,  2991,  2991,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2991,     0,     0,
       0,     0,     0,     0,     0,     0,  1017,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,    95,    96,    97,    98,    99,   100,   101,   102,
    1018,   103,   104,   105,     0,     0,     0,     0,   826,     0,
       0,   106,   107,  2991,   108,   109,   110,  1019,   112,   113,
     114,   115,   827,  1020,   828,   829,     0,   120,   121,   122,
     123,   124,   125,   830,   831,   126,   127,   832,   833,   130,
       0,   131,   132,   133,   134,   834,     0,  1021,     0,   137,
     138,   139,   140,   141,   142,  1022,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,  1023,   154,   155,
     156,   836,   837,   838,  1024,   840,   841,   842,   158,   159,
     160,   161,   162,   163,   164,   843,   844,   167,   845,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,  1025,     0,   180,   181,   680,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   846,   196,   197,   198,   199,   200,   847,
     848,   202,     0,   203,   204,   849,   206,     0,   207,     0,
     208,  1026,     0,  1027,   211,   212,   213,  1028,   215,     0,
     216,     0,   850,   851,   219,     0,   220,   221,   222,   223,
     224,   225,   226,  1029,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,  1030,   240,   241,
     242,   243,   244,   245,   852,   853,     0,   854,     0,   249,
    1031,  1032,   252,  1033,   254,   255,   256,   257,   258,   259,
       0,     0,   260,  1034,   262,  1035,     0,   264,   265,   266,
     855,   856,   267,   268,   269,   270,   271,  1036,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   857,  1037,   858,   294,
     295,   296,   297,   859,   298,   299,  1038,   301,   860,   861,
     303,   862,   305,   306,   307,     0,   308,   309,     0,     0,
     863,   311,   312,     0,     0,   313,   314,  1039,   316,  1040,
     864,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   865,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   866,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,  1041,   368,   369,   370,   867,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   868,   388,   389,   390,
     391,   392,  1042,   394,   395,   869,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,  1043,
     410,   870,   412,     0,   413,   414,     0,   415,  1044,   417,
     418,   419,   420,   421,     0,   871,   872,     0,     0,   424,
     425,   873,   427,   874,   875,   429,   430,  1045,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     877,     0,   442,   443,   444,   445,   446,   447,   878,  1046,
     449,  1047,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   879,     0,     0,     0,     0,     0,     0,   880,
     881,  1048,     0,     0,     0,     0,   883,     0,   884,  1049,
       0,     0,     0,   885,     0,   886,   887,    94,   820,   548,
     821,   822,   823,   824,   825,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,   826,
       0,     0,   106,   107,     0,   108,   109,   110,   111,   112,
     113,   114,   115,   827,   117,   828,   829,     0,   120,   121,
     122,   123,   124,   125,   830,   831,   126,   127,   832,   833,
     130,     0,   131,   132,   133,   134,   834,     0,   835,     0,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,   154,
     155,   156,   836,   837,   838,   839,   840,   841,   842,   158,
     159,   160,   161,   162,   163,   164,   843,   844,   167,   845,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   680,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   846,   196,   197,   198,   199,   200,
     847,   848,   202,     0,   203,   204,   849,   206,     0,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,   850,   851,   219,     0,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   852,   853,     0,   854,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   261,   262,   263,     0,   264,   265,
     266,   855,   856,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   857,   292,   858,
     294,   295,   296,   297,   859,   298,   299,   300,   301,   860,
     861,   303,   862,   305,   306,   307,     0,   308,   309,     0,
       0,   863,   311,   312,     0,     0,   313,   314,   315,   316,
     317,   864,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   865,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   866,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   867,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,    26,   383,   384,   385,   386,   387,   868,   388,   389,
     390,   391,   392,   393,   394,   395,   869,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   870,   412,     0,   413,   414,    31,   415,   416,
     417,   418,   419,   420,   421,     0,   871,   872,     0,     0,
     424,   425,   873,   427,   874,   875,   429,   430,   876,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   877,     0,   442,   443,   444,   445,   446,   576,   878,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
       0,    34,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   879,     0,    35,     0,     0,     0,     0,
     880,   881,     0,     0,     0,     0,     0,   883,     0,   884,
    2846,     0,     0,     0,   885,     0,   886,   887,    94,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
     826,     0,     0,   106,   107,     0,   108,   109,   110,   111,
     112,   113,   114,   115,   827,   117,   828,   829,     0,   120,
     121,   122,   123,   124,   125,   830,   831,   126,   127,   832,
     833,   130,     0,   131,   132,   133,   134,   834,     0,   835,
       0,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
     154,   155,   156,   836,   837,   838,   839,   840,   841,   842,
     158,   159,   160,   161,   162,   163,   164,   843,   844,   167,
     845,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   680,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   846,   196,   197,   198,   199,
     200,   847,   848,   202,     0,   203,   204,   849,   206,     0,
     207,     0,   208,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,   850,   851,   219,     0,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   852,   853,     0,   854,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,     0,   260,   261,   262,   263,     0,   264,
     265,   266,   855,   856,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   857,   292,
     858,   294,   295,   296,   297,   859,   298,   299,   300,   301,
     860,   861,   303,   862,   305,   306,   307,     0,   308,   309,
       0,     0,   863,   311,   312,     0,     0,   313,   314,   315,
     316,   317,   864,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   865,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   866,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     867,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,    26,   383,   384,   385,   386,   387,   868,   388,
     389,   390,   391,   392,   393,   394,   395,   869,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   870,   412,     0,   413,   414,    31,   415,
     416,   417,   418,   419,   420,   421,     0,   871,   872,     0,
       0,   424,   425,   873,   427,   874,   875,   429,   430,   876,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   877,     0,   442,   443,   444,   445,   446,   576,
     878,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,     0,    34,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   879,     0,    35,     0,     0,     0,
       0,   880,   881,     0,     0,     0,     0,     0,   883,     0,
     884,     0,     0,     0,     0,   885,     0,   886,   887,    94,
     820,   548,   821,   822,   823,   824,   825,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,   826,     0,     0,   106,   107,     0,   108,   109,   110,
     111,   112,   113,   114,   115,   827,   117,   828,   829,  1658,
     120,   121,   122,   123,   124,   125,   830,   831,   126,   127,
     832,   833,   130,     0,   131,   132,   133,   134,   834,     0,
     835,     0,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,   154,   155,   156,   836,   837,   838,   839,   840,   841,
     842,   158,   159,   160,   161,   162,   163,   164,   843,   844,
     167,   845,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     680,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   846,   196,   197,   198,
     199,   200,   847,   848,   202,     0,   203,   204,   849,   206,
       0,   207,     0,   208,   209,  1659,   210,   211,   212,   213,
     214,   215,     0,   216,     0,   850,   851,   219,     0,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   852,   853,     0,
     854,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,  1660,   260,   261,   262,   263,     0,
     264,   265,   266,   855,   856,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   857,
     292,   858,   294,   295,   296,   297,   859,   298,   299,   300,
     301,   860,   861,   303,   862,   305,   306,   307,     0,   308,
     309,     0,     0,   863,   311,   312,     0,     0,   313,   314,
     315,   316,   317,   864,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   865,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   866,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   867,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   868,
     388,   389,   390,   391,   392,   393,   394,   395,   869,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   870,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   871,   872,
       0,  1661,   424,   425,   873,   427,   874,   875,   429,   430,
     876,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   877,     0,   442,   443,   444,   445,   446,
     447,   878,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   879,     0,     0,     0,     0,
       0,     0,   880,   881,     0,     0,     0,     0,     0,   883,
       0,   884,     0,     0,     0,     0,   885,     0,   886,   887,
      94,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,    95,    96,    97,    98,
      99,   100,   101,   102,  -955,   103,   104,   105,     0,     0,
       0,  -955,   826,     0,     0,   106,   107,     0,   108,   109,
     110,   111,   112,   113,   114,   115,   827,   117,   828,   829,
       0,   120,   121,   122,   123,   124,   125,   830,   831,   126,
     127,   832,   833,   130,     0,   131,   132,   133,   134,   834,
       0,   835,     0,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,   154,   155,   156,   836,   837,   838,   839,   840,
     841,   842,   158,   159,   160,   161,   162,   163,   164,   843,
     844,   167,   845,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   680,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,   846,   196,   197,
     198,   199,   200,   847,   848,   202,     0,   203,   204,   849,
     206,     0,   207,     0,   208,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,   850,   851,   219,     0,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   852,   853,
       0,   854,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,     0,   260,   261,   262,   263,
       0,   264,   265,   266,   855,   856,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     857,   292,   858,   294,   295,   296,   297,   859,   298,   299,
     300,   301,   860,   861,   303,   862,   305,   306,   307,     0,
     308,   309,     0,     0,   863,   311,   312,     0,     0,   313,
     314,   315,   316,   317,   864,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   865,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   866,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   867,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     868,   388,   389,   390,   391,   392,   393,   394,   395,   869,
     397,  -955,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   870,   412,     0,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,   871,
     872,     0,     0,   424,   425,   873,   427,   874,   875,   429,
     430,   876,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,   877,     0,   442,   443,   444,   445,
     446,   447,   878,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   879,     0,     0,     0,
       0,     0,     0,   880,   881,     0,     0,     0,     0,     0,
     883,     0,   884,     0,     0,     0,     0,   885,     0,   886,
     887,    94,   820,   548,   821,   822,   823,   824,   825,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,  1397,   103,   104,   105,     0,
       0,     0,     0,   826,     0,     0,   106,   107,     0,   108,
     109,   110,   111,   112,   113,   114,   115,   827,   117,   828,
     829,     0,   120,   121,   122,   123,   124,   125,   830,   831,
     126,   127,   832,   833,   130,     0,   131,   132,   133,   134,
     834,     0,   835,     0,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,   154,   155,   156,   836,   837,   838,   839,
     840,   841,   842,   158,   159,   160,   161,   162,   163,   164,
     843,   844,   167,   845,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   680,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   846,   196,
     197,   198,   199,   200,   847,   848,   202,     0,   203,   204,
     849,   206,     0,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,   850,   851,   219,
       0,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   852,
     853,     0,   854,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,     0,   260,   261,   262,
     263,     0,   264,   265,   266,   855,   856,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   857,   292,   858,   294,   295,   296,   297,   859,   298,
     299,   300,   301,   860,   861,   303,   862,   305,   306,   307,
       0,   308,   309,     0,     0,   863,   311,   312,     0,     0,
     313,   314,   315,   316,   317,   864,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   865,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   866,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   867,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   868,   388,   389,   390,   391,   392,   393,   394,   395,
     869,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   870,   412,     0,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
     871,   872,     0,     0,   424,   425,   873,   427,   874,   875,
     429,   430,   876,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,   877,     0,   442,   443,   444,
     445,   446,   447,   878,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   879,     0,     0,
       0,     0,     0,     0,   880,   881,  1398,     0,     0,     0,
       0,   883,     0,   884,     0,     0,     0,     0,   885,     0,
     886,   887,    94,   820,   548,   821,   822,   823,   824,   825,
       0,     0,     0,     0,     0,     0,     0,     0,    95,    96,
      97,    98,    99,   100,   101,   102,  2725,   103,   104,   105,
       0,     0,     0,     0,   826,     0,     0,   106,   107,     0,
     108,   109,   110,   111,   112,   113,   114,   115,   827,   117,
     828,   829,     0,   120,   121,   122,   123,   124,   125,   830,
     831,   126,   127,   832,   833,   130,     0,   131,   132,   133,
     134,   834,     0,   835,     0,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,   154,  2726,   156,   836,   837,   838,
     839,   840,   841,   842,   158,   159,   160,   161,   162,   163,
     164,   843,   844,   167,   845,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   680,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   846,
     196,   197,   198,   199,   200,   847,   848,   202,     0,   203,
     204,   849,   206,     0,   207,     0,   208,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,  2727,   851,
     219,     0,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     852,   853,     0,   854,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,     0,   260,   261,
     262,   263,     0,   264,   265,   266,   855,   856,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   857,   292,   858,   294,   295,   296,   297,   859,
     298,   299,   300,   301,   860,   861,   303,   862,   305,   306,
     307,     0,   308,   309,     0,     0,   863,   311,   312,     0,
       0,   313,   314,   315,   316,   317,   864,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     865,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   866,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,  2728,   867,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   868,   388,   389,   390,   391,   392,   393,   394,
     395,   869,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   870,   412,     0,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,   871,   872,     0,     0,   424,   425,   873,   427,   874,
     875,   429,   430,   876,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,   877,     0,   442,   443,
     444,   445,   446,   447,   878,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   879,     0,
       0,     0,     0,     0,     0,   880,   881,  2729,     0,     0,
       0,     0,   883,     0,  2730,     0,     0,     0,     0,   885,
       0,   886,   887,    94,   820,   548,   821,   822,   823,   824,
     825,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,   826,     0,     0,   106,   107,
       0,   108,   109,   110,   111,   112,   113,   114,   115,   827,
     117,   828,   829,     0,   120,   121,   122,   123,   124,   125,
     830,   831,   126,   127,   832,   833,   130,     0,   131,   132,
     133,   134,   834,     0,   835,     0,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,   154,   155,   156,   836,   837,
     838,   839,   840,   841,   842,   158,   159,   160,   161,   162,
     163,   164,   843,   844,   167,   845,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   680,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     846,   196,   197,   198,   199,   200,   847,   848,   202,     0,
     203,   204,   849,   206,     0,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,   850,
     851,   219,     0,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   852,   853,     0,   854,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,     0,   260,
     261,   262,   263,     0,   264,   265,   266,   855,   856,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   857,   292,   858,   294,   295,   296,   297,
     859,   298,   299,   300,   301,   860,   861,   303,   862,   305,
     306,   307,     0,   308,   309,     0,     0,   863,   311,   312,
       0,     0,   313,   314,   315,   316,   317,   864,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   865,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   866,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   867,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   868,   388,   389,   390,   391,   392,   393,
     394,   395,   869,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   870,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   871,   872,     0,     0,   424,   425,   873,   427,
     874,   875,   429,   430,   876,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   877,     0,   442,
     443,   444,   445,   446,   447,   878,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   879,
       0,     0,     0,     0,     0,     0,   880,   881,   882,     0,
       0,     0,     0,   883,     0,   884,     0,     0,     0,     0,
     885,     0,   886,   887,    94,  1411,   548,   821,   822,   823,
    1412,   825,     0,     0,     0,     0,     0,     0,     0,     0,
      95,    96,    97,    98,    99,   100,   101,   102,  1413,   103,
     104,   105,     0,     0,     0,     0,   826,     0,     0,   106,
     107,     0,   108,   109,   110,   111,   112,   113,   114,   115,
     827,   117,   828,   829,     0,   120,   121,   122,   123,   124,
     125,   830,   831,   126,   127,   832,   833,   130,     0,   131,
     132,   133,   134,   834,     0,   835,     0,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,   154,   155,   156,   836,
     837,   838,   839,   840,   841,   842,   158,   159,   160,   161,
     162,   163,   164,   843,   844,   167,   845,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   680,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   846,   196,   197,   198,   199,   200,   847,   848,   202,
       0,   203,   204,   849,   206,     0,   207,     0,   208,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
     850,   851,   219,     0,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   852,   853,     0,   854,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,     0,
     260,   261,   262,   263,     0,   264,   265,   266,   855,   856,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   857,   292,   858,   294,   295,   296,
     297,   859,   298,   299,   300,   301,   860,   861,   303,   862,
     305,   306,   307,     0,   308,   309,     0,     0,   863,   311,
     312,     0,     0,   313,   314,   315,   316,   317,   864,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   865,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     866,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   867,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   868,   388,   389,   390,   391,   392,
     393,   394,   395,   869,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   870,
     412,     0,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,   871,   872,     0,     0,   424,   425,   873,
     427,   874,   875,   429,   430,   876,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,   877,     0,
     442,   443,   444,   445,   446,   447,   878,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     879,     0,     0,     0,     0,     0,     0,   880,   881,     0,
       0,     0,     0,     0,   883,     0,   884,     0,     0,     0,
       0,   885,     0,   886,   887,    94,   820,   548,   821,   822,
     823,   824,   825,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,   826,     0,     0,
     106,   107,     0,   108,   109,   110,   111,   112,   113,   114,
     115,   827,   117,   828,   829,     0,   120,   121,   122,   123,
     124,   125,   830,   831,   126,   127,   832,   833,   130,     0,
     131,   132,   133,   134,   834,     0,   835,     0,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,   154,   155,   156,
     836,   837,   838,   839,   840,   841,   842,   158,   159,   160,
     161,   162,   163,   164,   843,   844,   167,   845,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   680,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   846,   196,   197,   198,   199,   200,   847,   848,
     202,     0,   203,   204,   849,   206,     0,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,   850,   851,   219,     0,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   852,   853,     0,   854,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
       0,   260,   261,   262,   263,     0,   264,   265,   266,   855,
     856,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   857,   292,   858,   294,   295,
     296,   297,   859,   298,   299,   300,   301,   860,   861,   303,
     862,   305,   306,   307,     0,   308,   309,     0,     0,   863,
     311,   312,     0,     0,   313,   314,   315,   316,   317,   864,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   865,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   866,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   867,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   868,   388,   389,   390,   391,
     392,   393,   394,   395,   869,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     870,   412,     0,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,   871,   872,     0,     0,   424,   425,
     873,   427,   874,   875,   429,   430,   876,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,   877,
       0,   442,   443,   444,   445,   446,   447,   878,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   879,     0,     0,     0,     0,     0,     0,   880,   881,
       0,     0,     0,     0,     0,   883,     0,   884,  1652,     0,
       0,     0,   885,     0,   886,   887,  1017,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,   826,     0,
       0,   106,   107,     0,   108,   109,   110,  1019,   112,   113,
     114,   115,   827,  1020,   828,   829,     0,   120,   121,   122,
     123,   124,   125,   830,   831,   126,   127,   832,   833,   130,
       0,   131,   132,   133,   134,   834,     0,  1021,     0,   137,
     138,   139,   140,   141,   142,  1022,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,  1023,   154,   155,
     156,   836,   837,   838,  1024,   840,   841,   842,   158,   159,
     160,   161,   162,   163,   164,   843,   844,   167,   845,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   680,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   846,   196,   197,   198,   199,   200,   847,
     848,   202,     0,   203,   204,   849,   206,     0,   207,     0,
     208,  1026,     0,  1027,   211,   212,   213,  1028,   215,     0,
     216,     0,   850,   851,   219,     0,   220,   221,   222,   223,
     224,   225,   226,  1029,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,  1030,   240,   241,
     242,   243,   244,   245,   852,   853,     0,   854,     0,   249,
    1031,  1032,   252,  1033,   254,   255,   256,   257,   258,   259,
       0,     0,   260,  1034,   262,  1035,     0,   264,   265,   266,
     855,   856,   267,   268,   269,   270,   271,  1036,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   857,  1037,   858,   294,
     295,   296,   297,   859,   298,   299,  1038,   301,   860,   861,
     303,   862,   305,   306,   307,     0,   308,   309,     0,     0,
     863,   311,   312,     0,     0,   313,   314,  1039,   316,  1040,
     864,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   865,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   866,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,  1041,   368,   369,   370,   867,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   868,   388,   389,   390,
     391,   392,  1042,   394,   395,   869,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,  1043,
     410,   870,   412,     0,   413,   414,     0,   415,  1044,   417,
     418,   419,   420,   421,     0,   871,   872,     0,     0,   424,
     425,   873,   427,   874,   875,   429,   430,  1045,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     877,     0,   442,   443,   444,   445,   446,   447,   878,  1872,
     449,  1047,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   879,     0,     0,     0,     0,     0,     0,   880,
     881,     0,     0,     0,     0,     0,   883,     0,   884,     0,
       0,     0,     0,   885,     0,   886,   887,  1017,   820,   548,
     821,   822,   823,   824,   825,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,   826,
       0,     0,   106,   107,     0,   108,   109,   110,  1019,   112,
     113,   114,   115,   827,  1020,   828,   829,     0,   120,   121,
     122,   123,   124,   125,   830,   831,   126,   127,   832,   833,
     130,     0,   131,   132,   133,   134,   834,     0,  1021,     0,
     137,   138,   139,   140,   141,   142,  1022,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,  1023,   154,
     155,   156,   836,   837,   838,  1024,   840,   841,   842,   158,
     159,   160,   161,   162,   163,   164,   843,   844,   167,   845,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   680,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   846,   196,   197,   198,   199,   200,
     847,   848,   202,     0,   203,   204,   849,   206,     0,   207,
       0,   208,  1026,     0,  1027,   211,   212,   213,  1028,   215,
       0,   216,     0,   850,   851,   219,     0,   220,   221,   222,
     223,   224,   225,   226,  1029,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,  1030,   240,
     241,   242,   243,   244,   245,   852,   853,     0,   854,     0,
     249,  1031,  1032,   252,  1033,   254,   255,   256,   257,   258,
     259,     0,     0,   260,  1034,   262,  1035,     0,   264,   265,
     266,   855,   856,   267,   268,   269,   270,   271,  1036,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   857,  1037,   858,
     294,   295,   296,   297,   859,   298,   299,  1038,   301,   860,
     861,   303,   862,   305,   306,   307,     0,   308,   309,     0,
       0,   863,   311,   312,     0,     0,   313,   314,  1039,   316,
    1040,   864,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   865,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   866,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,  1041,   368,   369,   370,   867,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   868,   388,   389,
     390,   391,   392,  1042,   394,   395,   869,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
    1043,   410,   870,   412,     0,   413,   414,     0,   415,  1044,
     417,   418,   419,   420,   421,     0,   871,   872,     0,     0,
     424,   425,   873,   427,   874,   875,   429,   430,  1045,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   877,     0,   442,   443,   444,   445,   446,   447,   878,
       0,   449,  1047,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   879,     0,     0,     0,     0,     0,     0,
     880,   881,     0,     0,     0,     0,     0,   883,     0,   884,
    1919,     0,     0,     0,   885,     0,   886,   887,    94,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
     826,     0,     0,   106,   107,     0,   108,   109,   110,   111,
     112,   113,   114,   115,   827,   117,   828,   829,     0,   120,
     121,   122,   123,   124,   125,   830,   831,   126,   127,   832,
     833,   130,     0,   131,   132,   133,   134,   834,     0,   835,
       0,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
     154,   155,   156,   836,   837,   838,   839,   840,   841,   842,
     158,   159,   160,   161,   162,   163,   164,   843,   844,   167,
     845,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   680,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   846,   196,   197,   198,   199,
     200,   847,   848,   202,     0,   203,   204,   849,   206,     0,
     207,     0,   208,   209,  1659,   210,   211,   212,   213,   214,
     215,     0,   216,     0,   850,   851,   219,     0,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   852,   853,     0,   854,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,     0,   260,   261,   262,   263,     0,   264,
     265,   266,   855,   856,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   857,   292,
     858,   294,   295,   296,   297,   859,   298,   299,   300,   301,
     860,   861,   303,   862,   305,   306,   307,     0,   308,   309,
       0,     0,   863,   311,   312,     0,     0,   313,   314,   315,
     316,   317,   864,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   865,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   866,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     867,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   868,   388,
     389,   390,   391,   392,   393,   394,   395,   869,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   870,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   871,   872,     0,
       0,   424,   425,   873,   427,   874,   875,   429,   430,   876,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   877,     0,   442,   443,   444,   445,   446,   447,
     878,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   879,     0,     0,     0,     0,     0,
       0,   880,   881,     0,     0,     0,     0,     0,   883,     0,
     884,     0,     0,     0,     0,   885,     0,   886,   887,    94,
     820,   548,   821,   822,   823,   824,   825,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,   826,     0,     0,   106,   107,     0,   108,   109,   110,
     111,   112,   113,   114,   115,   827,   117,   828,   829,     0,
     120,   121,   122,   123,   124,   125,   830,   831,   126,   127,
     832,   833,   130,     0,   131,   132,   133,   134,   834,     0,
     835,     0,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,   154,   155,   156,   836,   837,   838,   839,   840,   841,
     842,   158,   159,   160,   161,   162,   163,   164,   843,   844,
     167,   845,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     680,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   846,   196,   197,   198,
     199,   200,   847,   848,   202,     0,   203,   204,   849,   206,
       0,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,   850,   851,   219,     0,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   852,   853,     0,
     854,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,     0,   260,   261,   262,   263,     0,
     264,   265,   266,   855,   856,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   857,
     292,   858,   294,   295,   296,   297,   859,   298,   299,   300,
     301,   860,   861,   303,   862,   305,   306,   307,     0,   308,
     309,     0,     0,   863,   311,   312,     0,     0,   313,   314,
     315,   316,   317,   864,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   865,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   866,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   867,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   868,
     388,   389,   390,   391,   392,   393,   394,   395,   869,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   870,   412,     0,   413,   414,  2233,
     415,   416,   417,   418,   419,   420,   421,     0,   871,   872,
       0,     0,   424,   425,   873,   427,   874,   875,   429,   430,
     876,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   877,     0,   442,   443,   444,   445,   446,
     447,   878,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   879,     0,     0,     0,     0,
       0,     0,   880,   881,     0,     0,     0,     0,     0,   883,
       0,   884,     0,     0,     0,     0,   885,     0,   886,   887,
      94,   820,   548,   821,   822,   823,   824,   825,     0,     0,
       0,     0,     0,     0,     0,     0,    95,    96,    97,    98,
      99,   100,   101,   102,     0,   103,   104,   105,     0,     0,
       0,     0,   826,     0,     0,   106,   107,     0,   108,   109,
     110,   111,   112,   113,   114,   115,   827,   117,   828,   829,
       0,   120,   121,   122,   123,   124,   125,   830,   831,   126,
     127,   832,   833,   130,     0,   131,   132,   133,   134,   834,
       0,   835,     0,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   153,   154,   155,   156,   836,   837,   838,   839,   840,
     841,   842,   158,   159,   160,   161,   162,   163,   164,   843,
     844,   167,   845,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   680,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,   846,   196,   197,
     198,   199,   200,   847,   848,   202,     0,   203,   204,   849,
     206,     0,   207,     0,   208,   209,     0,   210,   211,   212,
     213,   214,   215,     0,   216,     0,   850,   851,   219,     0,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   852,   853,
       0,   854,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,     0,   260,   261,   262,   263,
       0,   264,   265,   266,   855,   856,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     857,   292,   858,   294,   295,   296,   297,   859,   298,   299,
     300,   301,   860,   861,   303,   862,   305,   306,   307,     0,
     308,   309,     0,     0,   863,   311,   312,     0,     0,   313,
     314,   315,   316,   317,   864,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   865,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   866,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   867,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     868,   388,   389,   390,   391,   392,   393,   394,   395,   869,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   870,   412,     0,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,   871,
     872,     0,     0,   424,   425,   873,   427,   874,   875,   429,
     430,   876,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,   877,     0,   442,   443,   444,   445,
     446,   447,   878,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   879,     0,     0,     0,
       0,     0,     0,   880,   881,     0,     0,     0,     0,     0,
     883,     0,   884,     0,     0,     0,     0,   885,     0,   886,
     887,  1017,   820,   548,   821,   822,   823,   824,   825,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,   826,     0,     0,   106,   107,     0,   108,
     109,   110,  1019,   112,   113,   114,   115,   827,  1020,   828,
     829,     0,   120,   121,   122,   123,   124,   125,   830,   831,
     126,   127,   832,   833,   130,     0,   131,   132,   133,   134,
     834,     0,  1021,     0,   137,   138,   139,   140,   141,   142,
    1022,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,  1023,   154,   155,   156,   836,   837,   838,  1024,
     840,   841,   842,   158,   159,   160,   161,   162,   163,   164,
     843,   844,   167,   845,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   680,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   846,   196,
     197,   198,   199,   200,   847,   848,   202,     0,   203,   204,
     849,   206,     0,   207,     0,   208,  1026,     0,  1027,   211,
     212,   213,  1028,   215,     0,   216,     0,   850,   851,   219,
       0,   220,   221,   222,   223,   224,   225,   226,  1029,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,  1030,   240,   241,   242,   243,   244,   245,   852,
     853,     0,   854,     0,   249,  1031,  1032,   252,  1033,   254,
     255,   256,   257,   258,   259,     0,     0,   260,  1034,   262,
    1035,     0,   264,   265,   266,   855,   856,   267,   268,   269,
     270,   271,  1036,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   857,  1037,   858,   294,   295,   296,   297,   859,   298,
     299,  1038,   301,   860,   861,   303,   862,   305,   306,   307,
       0,   308,   309,     0,     0,   863,   311,   312,     0,     0,
     313,   314,  1039,   316,  1040,   864,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   865,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   866,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,  1041,
     368,   369,   370,   867,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   868,   388,   389,   390,   391,   392,  1042,   394,   395,
     869,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,  1043,   410,   870,   412,     0,   413,
     414,     0,   415,  1044,   417,   418,   419,   420,   421,     0,
     871,   872,     0,     0,   424,   425,   873,   427,   874,   875,
     429,   430,  1045,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,   877,     0,   442,   443,   444,
     445,   446,   447,   878,     0,   449,  1047,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   879,     0,     0,
       0,     0,     0,     0,   880,   881,     0,     0,     0,     0,
       0,   883,     0,   884,     0,     0,     0,     0,   885,     0,
     886,   887,    94,   820,   548,   821,   822,   823,   824,   825,
       0,     0,     0,     0,     0,     0,     0,     0,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,   826,     0,     0,   106,   107,     0,
     108,   109,   110,   111,   112,   113,   114,   115,   827,   117,
     828,   829,     0,   120,   121,   122,   123,   124,   125,   830,
     831,   126,   127,   832,   833,   130,     0,   131,   132,   133,
     134,   834,     0,   835,     0,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,   154,   155,   156,   836,   837,   838,
     839,   840,   841,   842,   158,   159,   160,   161,   162,   163,
     164,   843,   844,   167,   845,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   680,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   846,
     196,   197,   198,   199,   200,   847,   848,   202,     0,   203,
     204,   849,   206,     0,   207,     0,   208,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,   850,   851,
     219,     0,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     852,   853,     0,   854,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,     0,   260,   261,
     262,   263,     0,   264,   265,   266,   855,   856,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   857,   292,   858,   294,   295,   296,   297,   859,
     298,   299,   300,   301,   860,   861,   303,   862,   305,   306,
     307,     0,   308,   309,     0,     0,   863,   311,   312,     0,
       0,   313,   314,   315,   316,   317,   864,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     865,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   866,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   867,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   868,   388,   389,   390,   391,   392,   393,   394,
     395,   869,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   870,   412,     0,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,   871,   872,     0,     0,   424,   425,   873,   427,   874,
     875,   429,   430,   876,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,   877,     0,   442,   443,
     444,   445,   446,   447,   878,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   879,     0,
       0,     0,     0,     0,     0,  1416,  1417,     0,     0,     0,
       0,     0,   883,     0,   884,     0,     0,     0,     0,   885,
       0,   886,   887,    94,  1797,   548,   821,   822,   823,   824,
     825,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,   826,     0,     0,   106,   107,
       0,   108,   109,   110,   111,   112,   113,   114,   115,   827,
     117,   828,   829,     0,   120,   121,   122,   123,   124,   125,
     830,   831,   126,   127,   832,   833,   130,     0,   131,   132,
     133,   134,   834,     0,   835,     0,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,   154,   155,   156,   836,   837,
     838,   839,   840,   841,   842,   158,   159,   160,   161,   162,
     163,   164,   843,   844,   167,   845,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   680,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     846,   196,   197,   198,   199,   200,   847,   848,   202,     0,
     203,   204,   849,   206,     0,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,   850,
     851,   219,     0,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   852,   853,     0,   854,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,     0,   260,
     261,   262,   263,     0,   264,   265,   266,   855,   856,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   857,   292,   858,   294,   295,   296,   297,
     859,   298,   299,   300,   301,   860,   861,   303,   862,   305,
     306,   307,     0,   308,   309,     0,     0,   863,   311,   312,
       0,     0,   313,   314,   315,   316,   317,   864,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   865,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   866,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   867,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   868,   388,   389,   390,   391,   392,   393,
     394,   395,   869,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   870,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   871,   872,     0,     0,   424,   425,   873,   427,
     874,   875,   429,   430,   876,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   877,     0,   442,
     443,   444,   445,   446,   447,   878,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   879,
       0,     0,     0,     0,     0,     0,   880,   881,     0,     0,
       0,     0,     0,   883,     0,   884,     0,     0,     0,     0,
     885,     0,   886,   887,    94,   820,   548,   821,   822,   823,
     824,   825,     0,     0,     0,     0,     0,     0,     0,     0,
      95,    96,    97,    98,    99,   100,   101,   102,     0,   103,
     104,   105,     0,     0,     0,     0,   826,     0,     0,   106,
     107,     0,   108,   109,   110,   111,   112,   113,   114,   115,
     827,   117,   828,   829,     0,   120,   121,   122,   123,   124,
     125,   830,   831,   126,   127,   832,   833,   130,     0,   131,
     132,   133,   134,   834,     0,   835,     0,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   153,   154,   155,   156,   836,
     837,   838,   839,   840,   841,   842,   158,   159,   160,   161,
     162,   163,   164,   843,   844,   167,   845,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   680,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   846,   196,   197,   198,   199,   200,   847,   848,   202,
       0,   203,   204,   849,   206,     0,   207,     0,   208,   209,
       0,   210,   211,   212,   213,   214,   215,     0,   216,     0,
     850,   851,   219,     0,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   852,   853,     0,   854,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,     0,
     260,   261,   262,   263,     0,   264,   265,   266,   855,   856,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   857,   292,   858,   294,   295,   296,
     297,   859,   298,   299,   300,   301,   860,   861,   303,   862,
     305,   306,   307,     0,   308,   309,     0,     0,   863,   311,
     312,     0,     0,   313,   314,   315,   316,   317,   864,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   865,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     866,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   370,   867,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   868,   388,   389,   390,   391,   392,
     393,   394,   395,   869,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   870,
     412,     0,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,   871,   872,     0,     0,   424,   425,   873,
     427,   874,   875,   429,   430,   876,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,   877,     0,
     442,   443,   444,   445,   446,   447,   878,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     879,     0,     0,     0,     0,     0,     0,   880,   881,     0,
       0,     0,     0,     0,   883,     0,  2034,     0,     0,     0,
       0,   885,     0,   886,   887,    94,   820,   548,   821,   822,
     823,   824,   825,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,   826,     0,     0,
     106,   107,     0,   108,   109,   110,   111,   112,   113,   114,
     115,   827,   117,   828,   829,     0,   120,   121,   122,   123,
     124,   125,   830,   831,   126,   127,   832,   833,   130,     0,
     131,   132,   133,   134,   834,     0,   835,     0,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,   154,  2726,   156,
     836,   837,   838,   839,   840,   841,   842,   158,   159,   160,
     161,   162,   163,   164,   843,   844,   167,   845,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   680,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   846,   196,   197,   198,   199,   200,   847,   848,
     202,     0,   203,   204,   849,   206,     0,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,  2727,   851,   219,     0,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   852,   853,     0,   854,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
       0,   260,   261,   262,   263,     0,   264,   265,   266,   855,
     856,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   857,   292,   858,   294,   295,
     296,   297,   859,   298,   299,   300,   301,   860,   861,   303,
     862,   305,   306,   307,     0,   308,   309,     0,     0,   863,
     311,   312,     0,     0,   313,   314,   315,   316,   317,   864,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   865,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   866,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,  2728,   867,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   868,   388,   389,   390,   391,
     392,   393,   394,   395,   869,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     870,   412,     0,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,   871,   872,     0,     0,   424,   425,
     873,   427,   874,   875,   429,   430,   876,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,   877,
       0,   442,   443,   444,   445,   446,   447,   878,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   879,     0,     0,     0,     0,     0,     0,   880,   881,
       0,     0,     0,     0,     0,   883,     0,  2730,     0,     0,
       0,     0,   885,     0,   886,   887,    94,   820,   548,   821,
     822,   823,   824,   825,     0,     0,     0,     0,     0,     0,
       0,     0,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,   826,     0,
       0,   106,   107,     0,   108,   109,   110,   111,   112,   113,
     114,  2988,   827,   117,   828,   829,     0,   120,   121,   122,
     123,   124,   125,   830,   831,   126,   127,   832,   833,   130,
       0,   131,   132,   133,   134,   834,     0,   835,     0,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,   154,   155,
    2989,   836,   837,   838,   839,   840,   841,   842,   158,   159,
     160,   161,   162,   163,   164,   843,   844,   167,   845,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   680,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   846,   196,   197,   198,   199,   200,   847,
     848,   202,     0,   203,   204,   849,   206,     0,   207,     0,
     208,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,   850,   851,   219,     0,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   852,   853,     0,   854,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,     0,   260,   261,   262,   263,     0,   264,   265,   266,
     855,   856,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   857,   292,   858,   294,
     295,   296,   297,   859,   298,   299,   300,   301,   860,   861,
     303,   862,   305,   306,   307,     0,   308,   309,     0,     0,
     863,   311,   312,     0,     0,   313,   314,   315,   316,   317,
     864,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   865,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   866,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,   867,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   868,   388,   389,   390,
     391,   392,   393,   394,   395,   869,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   870,   412,     0,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,   871,   872,     0,     0,   424,
     425,   873,   427,   874,   875,   429,   430,   876,   432,   433,
    2990,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     877,     0,   442,   443,   444,   445,   446,   447,   878,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   879,     0,     0,     0,     0,     0,     0,   880,
     881,     0,     0,     0,     0,     0,   883,     0,   884,     0,
       0,     0,     0,   885,     0,   886,   887,    94,   820,   548,
     821,   822,   823,   824,   825,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,   826,
       0,     0,   106,   107,     0,   108,   109,   110,   111,   112,
     113,   114,   115,   827,   117,   828,   829,     0,   120,   121,
     122,   123,   124,   125,   830,   831,   126,   127,   832,   833,
     130,     0,   131,   132,   133,   134,   834,     0,   835,     0,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,   154,
     155,  2989,   836,   837,   838,   839,   840,   841,   842,   158,
     159,   160,   161,   162,   163,   164,   843,   844,   167,   845,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   680,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   846,   196,   197,   198,   199,   200,
     847,   848,   202,     0,   203,   204,   849,   206,     0,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,   850,   851,   219,     0,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   852,   853,     0,   854,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   261,   262,   263,     0,   264,   265,
     266,   855,   856,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   857,   292,   858,
     294,   295,   296,   297,   859,   298,   299,   300,   301,   860,
     861,   303,   862,   305,   306,   307,     0,   308,   309,     0,
       0,   863,   311,   312,     0,     0,   313,   314,   315,   316,
     317,   864,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   865,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   866,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   867,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   868,   388,   389,
     390,   391,   392,   393,   394,   395,   869,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   870,   412,     0,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,   871,   872,     0,     0,
     424,   425,   873,   427,   874,   875,   429,   430,   876,   432,
     433,  2990,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   877,     0,   442,   443,   444,   445,   446,   447,   878,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   879,     0,     0,     0,     0,     0,     0,
     880,   881,     0,     0,     0,     0,     0,   883,     0,   884,
       0,     0,     0,     0,   885,     0,   886,   887,    94,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
     826,     0,     0,   106,   107,     0,   108,   109,   110,   111,
     112,   113,   114, -1763,   827,   117,   828,   829,     0,   120,
     121,   122,   123,   124,   125,   830,   831,   126,   127,   832,
     833,   130,     0,   131,   132,   133,   134,   834,     0,   835,
       0,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
     154,   155,  2989,   836,   837,   838,   839,   840,   841,   842,
     158,   159,   160,   161,   162,   163,   164,   843,   844,   167,
     845,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   680,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   846,   196,   197,   198,   199,
     200,   847,   848,   202,     0,   203,   204,   849,   206,     0,
     207,     0,   208,   209,     0,   210,   211,   212,   213, -1763,
     215,     0,   216,     0,   850,   851,   219,     0,   220,   221,
     222,   223,   224,   225,   226, -1763,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   852,   853,     0,   854,
       0,   249,     0,     0,   252,   253,   254,   255,   256,   257,
     258,   259,     0,     0,   260,   261,   262, -1763,     0,   264,
     265,   266,   855,   856,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   857,   292,
     858,   294,   295,   296,   297,     0,   298,   299,     0,   301,
     860,   861,   303,   862,   305,   306,   307,     0,   308,   309,
       0,     0,   863,   311,   312,     0,     0,   313,   314,   315,
     316,   317,   864,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   865,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   866,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     867,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   868,   388,
     389,   390,   391,   392, -1763,   394,   395,   869,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   870,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   871,   872,     0,
       0,   424,   425,   873,   427,   874,   875,   429,   430,   876,
     432,   433,  2990,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   877,     0,   442,   443,   444,   445,   446,   447,
     878,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476, -1763,     0,     0,     0,     0,     0,
       0,   880,   881,     0,     0,     0,     0,     0,   883,     0,
     884,     0,     0,     0,     0,   885,     0,   886,   887,    94,
     820,   548,   821,   822,   823,   824,   825,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
     111,   112,   113,   114,   115,   827,   117,   828,   829,     0,
     120,   121,   122,   123,   124,   125,   830,   831,   126,   127,
     832,   833,   130,     0,   131,   132,   133,   134,   834,     0,
     835,     0,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
     153,   154,   155,   156,   836,   837,   838,   839,   840,   841,
     842,   158,   159,   160,   161,   162,   163,   164,   843,   844,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     680,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   846,   196,   197,   198,
     199,   200,   847,   848,   202,     0,   203,   204,   849,   206,
       0,   207,     0,   208,   209,     0,   210,   211,   212,   213,
     214,   215,     0,   216,     0,   850,   851,   219,     0,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   852,   853,     0,
     854,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,     0,   260,   261,   262,   263,     0,
     264,   265,   266,   855,   856,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   857,
     292,   858,   294,   295,   296,   297,     0,   298,   299,   300,
     301,   860,   861,   303,   862,   305,   306,   307,     0,   308,
     309,     0,     0,   863,   311,   312,     0,     0,   313,   314,
     315,   316,   317,   864,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   865,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   866,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   868,
     388,   389,   390,   391,   392,   393,   394,   395,   869,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   870,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   871,   872,
       0,     0,   424,   425,   873,   427,   874,   875,   429,   430,
     876,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   877,     0,   442,   443,   444,   445,   446,
     447,   878,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,     0,     0,     0,     0,     0,
       0,     0,  1645,  1646,     0,     0,    94,   820,   548,   821,
     822,  1647,   824,   825,     0,     0,     0,     0,   886,   887,
       0,     0,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,   111,   112,   113,
     114,   115,   827,   117,   828,   829,     0,   120,   121,   122,
     123,   124,   125,   830,   831,   126,   127,   832,   833,   130,
       0,   131,   132,   133,   134,   834,     0,   835,     0,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   153,   154,   155,
     156,   836,   837,   838,   839,   840,   841,   842,   158,   159,
     160,   161,   162,   163,   164,   843,   844,   167,     0,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   680,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   846,   196,   197,   198,   199,   200,   847,
     848,   202,     0,   203,   204,   849,   206,     0,   207,     0,
     208,   209,     0,   210,   211,   212,   213,   214,   215,     0,
     216,     0,   850,   851,   219,     0,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   852,   853,     0,   854,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,     0,   260,   261,   262,   263,     0,   264,   265,   266,
     855,   856,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   857,   292,   858,   294,
     295,   296,   297,     0,   298,   299,   300,   301,   860,   861,
     303,   862,   305,   306,   307,     0,   308,   309,     0,     0,
     310,   311,   312,     0,     0,   313,   314,   315,   316,   317,
     864,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   865,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   866,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,  1783,  1784,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   868,   388,   389,   390,
     391,   392,   393,   394,   395,   869,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   870,   412,     0,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,   871,   872,     0,     0,   424,
     425,   873,   427,   874,   875,   429,   430,   876,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
     877,     0,   442,   443,   444,   445,   446,   447,   878,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,     0,     0,     0,     0,     0,     0,     0,  1785,
    1786,     0,     0,     0,     0,     0,     0,     0,  1647,     0,
       0,     0,     0,     0,     0,   886,   887,    94,   820,   548,
     821,   822,   823,   824,   825,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   111,   112,
     113,   114,   115,   827,   117,   828,   829,     0,   120,   121,
     122,   123,   124,   125,   830,   831,   126,   127,   832,   833,
     130,     0,   131,   132,   133,   134,   834,     0,   835,     0,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,   154,
     155,   156,   836,   837,   838,   839,   840,   841,   842,   158,
     159,   160,   161,   162,   163,   164,   843,   844,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   680,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   846,   196,   197,   198,   199,   200,
     847,   848,   202,     0,   203,   204,   849,   206,     0,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,   850,   851,   219,     0,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   852,   853,     0,   854,     0,
     249,     0,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   261,   262,   263,     0,   264,   265,
     266,   855,   856,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   857,   292,   858,
     294,   295,   296,   297,     0,   298,   299,   300,   301,   860,
     861,   303,   862,   305,   306,   307,     0,   308,   309,     0,
       0,   863,   311,   312,     0,     0,   313,   314,   315,   316,
     317,   864,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   865,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   866,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   868,   388,   389,
     390,   391,   392,   393,   394,   395,   869,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   870,   412,     0,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,   871,   872,     0,     0,
     424,   425,   873,   427,   874,   875,   429,   430,   876,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   877,     0,   442,   443,   444,   445,   446,   447,   878,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,     0,     0,     0,     0,     0,     0,     0,
    1645,  1646,     0,     0,     0,     0,     0,     0,     0,  1647,
       0,     0,     0,     0,     0,     0,   886,   887,    94,   820,
     548,   821,   822,   823,   824,   825,     0,     0,     0,     0,
       0,     0,     0,     0,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
     826,     0,     0,   106,   107,     0,   108,   109,   110,   111,
     112,   113,   114,     0,   827,   117,   828,   829,     0,   120,
     121,   122,   123,   124,   125,   830,   831,   126,   127,   832,
     833,   130,     0,   131,   132,   133,   134,   834,     0,   835,
       0,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
     154,   155,   156,   836,   837,   838,   839,   840,   841,   842,
     158,   159,   160,   161,   162,   163,   164,   843,   844,   167,
     845,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   680,
     183,   184,     0,   185,   186,   187,     0,   188,     0,   190,
       0,   191,   192,   193,   194,   846,   196,   197,   198,   199,
     200,   847,   848,   202,     0,   203,   204,   849,   206,     0,
     207,     0,   208,   209,     0,   210,   211,   212,   213,     0,
     215,     0,   216,     0,   850,   851,   219,     0,   220,   221,
     222,   223,   224,   225,   226,     0,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   852,   853,     0,   854,
       0,   249,     0,     0,   252,   253,   254,   255,   256,   257,
     258,   259,     0,     0,   260,   261,   262,     0,     0,   264,
     265,   266,   855,   856,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   857,   292,
     858,   294,   295,   296,   297,     0,   298,   299,     0,   301,
     860,   861,   303,   862,   305,   306,   307,     0,   308,   309,
       0,     0,   863,   311,   312,     0,     0,   313,   314,   315,
     316,   317,   864,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   865,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   866,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     867,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   868,   388,
     389,   390,   391,   392,     0,   394,   395,   869,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   870,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   871,   872,     0,
       0,   424,   425,   873,   427,   874,   875,   429,   430,   876,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   877,     0,   442,   443,   444,   445,   446,   447,
     878,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,     0,     0,     0,     0,     0,     0,
       0,   880,   881,   499,     0,     0,     0,     0,   883,     0,
     884,     0,     0,     0,     0,   885,     0,   886,   887,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,  2342,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,  -629,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
    -629,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,  -629,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
    -629,   254,   255,   256,   257,   258,   259,     0,     0,   260,
    -629,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,  -629,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,  -629,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,  -629,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,     0,
       0,    94,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   949,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,   831,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     834,     0,   835,     0,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,   153,   154,   155,   156,   836,   837,   838,   839,
     840,   841,   842,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   847,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,   209,     0,   210,   211,
     212,   213,   214,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,  2080,     0,   260,   261,   262,
     263,     0,   264,   265,   266,   855,   856,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,     0,   298,
     299,   300,   301,     0,   861,   303,   304,   305,   306,   307,
       0,   308,   309,     0,   581,   310,   311,   312,     0,     0,
     313,   314,   315,   316,   317,   864,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   865,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,  2081,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,    26,   383,   384,   385,   386,
     387,   868,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   870,   412,     0,   413,
     414,    31,   415,   416,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   873,   427,   874,     0,
     429,   430,   876,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,   877,     0,   442,   443,   444,
     445,   446,   576,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,     0,    34,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,     0,    94,    35,
     580,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2082,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,   125,     0,   831,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   834,     0,   835,
       0,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   153,
     154,   155,   156,   836,   837,   838,   839,   840,   841,   842,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   847,     0,   202,     0,   203,   204,   205,   206,     0,
     207,     0,   208,   209,     0,   210,   211,   212,   213,   214,
     215,     0,   216,     0,   217,   218,   219,     0,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,  2080,     0,   260,   261,   262,   263,     0,   264,
     265,   266,   855,   856,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,     0,   298,   299,   300,   301,
       0,   861,   303,   304,   305,   306,   307,     0,   308,   309,
       0,   581,   310,   311,   312,     0,     0,   313,   314,   315,
     316,   317,   864,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   865,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,  2081,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   868,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   870,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   422,   423,     0,
       0,   424,   425,   873,   427,   874,     0,   429,   430,   876,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   877,     0,   442,   443,   444,   445,   446,   447,
     448,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,     0,    94,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2082,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,   831,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   834,     0,   835,     0,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   153,   154,   155,   156,
     836,   837,   838,   839,   840,   841,   842,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   847,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
     209,     0,   210,   211,   212,   213,   214,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
       0,   260,   261,   262,   263,     0,   264,   265,   266,   855,
     856,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,     0,   298,   299,   300,   301,     0,   861,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,   315,   316,   317,   864,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   865,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,  2081,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   868,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     870,   412,     0,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     873,   427,   874,     0,   429,   430,   876,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,   877,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,     0,    94,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,   125,     0,
     831,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   834,     0,   835,     0,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   153,   154,   155,   156,   836,   837,   838,
     839,   840,   841,   842,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   847,     0,   202,     0,   203,
     204,   205,   206,     0,   207,     0,   208,   209,     0,   210,
     211,   212,   213,   214,   215,     0,   216,     0,   217,   218,
     219,     0,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,     0,   260,   261,
     262,   263,     0,   264,   265,   266,   855,   856,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,     0,
     298,   299,   300,   301,     0,   861,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,   310,   311,   312,     0,
       0,   313,   314,   315,   316,   317,   864,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     865,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   868,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   870,   412,     0,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,   422,   423,     0,     0,   424,   425,   873,   427,   874,
       0,   429,   430,   876,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,   877,     0,   442,   443,
     444,   445,   446,   447,   448,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,     0,   748,
    1241,   548,     0,     0,     0,   824,     0,     0,     0,     0,
       0,     0,     0,     0,  2747,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   749,   750,     0,   751,   752,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     753,   754,   130,     0,   131,   132,   133,   134,   755,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   756,   757,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   758,   196,   197,   198,
     199,   200,   759,  1242,   202,     0,   203,   204,   760,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   761,   762,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   763,   241,   242,   243,   244,   245,   764,   765,     0,
     766,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     767,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   768,
       0,   769,   294,   295,   296,   770,     0,   298,   299,     0,
     301,     0,   771,   303,   772,   305,   306,   307,     0,   308,
     309,  1243,     0,   310,   311,   312,     0,     0,   313,   773,
       0,   316,     0,   774,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   775,   332,   333,
     776,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   777,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   778,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   779,   390,   391,   392,     0,   394,   395,   780,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   781,   410,   782,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   783,   784,
       0,     0,   424,   425,   785,   427,   786,  1244,   429,   430,
     787,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
    1133,   789,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     790,   791,   792,   793,   794,   795,   796,   797,   798,   799,
     800,   473,   474,   475,   476,     0,   748,     0,     0,     0,
       0,     0,  1245,  1246,  1958,     0,     0,     0,     0,     0,
       0,  1959,    95,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,     3,     4,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   112,   113,
     114,   749,   750,     0,   751,   752,     0,   120,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   753,   754,   130,
       0,   131,   132,   133,   134,   755,     0,     0,     0,   137,
     138,   139,   140,   141,   142,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   154,   155,
     156,     0,     0,     0,     0,     0,     0,     0,   158,   159,
     160,   161,   162,   163,   164,   756,   757,   167,     0,   168,
       0,   169,   170,   171,   172,   173,   174,     0,   175,   176,
     177,   178,   179,     0,     0,   180,   181,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,     0,   191,
     192,   193,   194,   758,   196,   197,   198,   199,   200,   759,
       0,   202,     0,   203,   204,   760,   206,     0,   207,     0,
     208,     0,     0,     0,   211,   212,   213,     0,   215,     0,
     216,     0,   761,   762,   219,     0,   220,   221,   222,   223,
     224,   225,   226,     0,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   763,   241,
     242,   243,   244,   245,   764,   765,     0,   766,     0,   249,
       0,     0,   252,     0,   254,   255,   256,   257,   258,   259,
       0,     0,   260,     0,   262,     0,     0,   264,   265,   266,
       0,     0,   267,   268,   269,   270,   271,   767,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   768,     0,   769,   294,
     295,   296,   770,     0,   298,   299,     0,   301,     0,   771,
     303,   772,   305,   306,   307,     0,   308,   309,     0,     0,
     310,   311,   312,     0,     0,   313,   773,     0,   316,     0,
     774,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   775,   332,   333,   776,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,     0,   344,
     345,   346,   777,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   368,   369,   370,   778,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
      26,   383,   384,   385,   386,   387,     0,   388,   779,   390,
     391,   392,     0,   394,   395,   780,   397,     0,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   781,
     410,   782,   412,     0,   413,   414,    31,   415,     0,   417,
     418,   419,   420,   421,     0,   783,   784,     0,     0,   424,
     425,   785,   427,   786,     0,   429,   430,   787,   432,   433,
     434,   435,   436,     0,     0,   437,   438,   439,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   788,   789,     0,
     449,     0,   451,   452,   453,   454,     0,     0,   455,     0,
      34,   456,   457,   458,   459,   460,   461,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   799,   800,   473,   474,
     475,   476,     0,   499,    35,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    36,    95,
      96,    97,    98,    99,   100,   101,   102,   614,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,    26,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,    31,   415,     0,   417,   418,   419,   420,
     421,     0,   615,   423,     0,     0,   616,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   576,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,    34,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,     0,
     499,    35,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    36,    95,    96,    97,    98,
      99,   100,   101,   102,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   112,   113,   114,   115,   116,     0,   118,   119,
       0,   120,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   137,   138,   139,   140,   141,   142,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   154,   155,   156,     0,     0,     0,     0,     0,
       0,     0,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,     0,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,     0,   202,     0,   203,   204,   205,
     206,     0,   207,     0,   208,     0,     0,     0,   211,   212,
     213,     0,   215,     0,   216,     0,   217,   218,   219,     0,
     220,   221,   222,   223,   224,   225,   226,     0,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,   252,     0,   254,   255,
     256,   257,   258,   259,     0,     0,   260,     0,   262,     0,
       0,   264,   265,   266,     0,     0,   267,   268,   269,   270,
     271,   501,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   293,   294,   295,   296,   297,     0,   298,   299,
       0,   301,     0,   302,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,   310,   311,   312,     0,     0,   313,
     314,     0,   316,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,    26,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,     0,   394,   395,   396,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   503,   410,   411,   412,     0,   413,   414,
      31,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   576,   448,     0,   449,     0,   451,   452,   453,   454,
       0,     0,   455,     0,    34,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,     0,   499,    35,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,     0,   499,     0,   580,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   928,
      95,    96,    97,    98,    99,   100,   101,   102,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   112,   113,   114,   115,
     116,     0,   118,   119,     0,   120,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   137,   138,   139,
     140,   141,   142,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   154,   155,   156,     0,
       0,     0,     0,     0,     0,     0,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,     0,   168,     0,   169,
     170,   171,   172,   173,   174,     0,   175,   176,   177,   178,
     179,     0,     0,   180,   181,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,     0,   202,
       0,   203,   204,   205,   206,     0,   207,     0,   208,     0,
       0,     0,   211,   212,   213,     0,   215,     0,   216,     0,
     217,   218,   219,     0,   220,   221,   222,   223,   224,   225,
     226,     0,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
     252,     0,   254,   255,   256,   257,   258,   259,     0,     0,
     260,     0,   262,     0,     0,   264,   265,   266,     0,     0,
     267,   268,   269,   270,   271,   501,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   293,   294,   295,   296,
     297,     0,   298,   299,     0,   301,     0,   302,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,   310,   311,
     312,     0,     0,   313,   314,     0,   316,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,     0,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
       0,   394,   395,   396,   397,     0,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   503,   410,   411,
     412,     0,   413,   414,     0,   415,     0,   417,   418,   419,
     420,   421,     0,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,   429,   430,   431,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   447,   448,     0,   449,     0,
     451,   452,   453,   454,     0,     0,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
       0,   499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2578,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,     0,   499,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1666,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     112,   113,   114,   115,   116,     0,   118,   119,     0,   120,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   137,   138,   139,   140,   141,   142,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     154,   155,   156,     0,     0,     0,     0,     0,     0,     0,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
       0,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,     0,   202,     0,   203,   204,   205,   206,     0,
     207,     0,   208,     0,     0,     0,   211,   212,   213,     0,
     215,     0,   216,     0,   217,   218,   219,     0,   220,   221,
     222,   223,   224,   225,   226,     0,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
       0,   249,     0,     0,   252,     0,   254,   255,   256,   257,
     258,   259,     0,     0,   260,     0,   262,     0,     0,   264,
     265,   266,     0,     0,   267,   268,   269,   270,   271,   501,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     293,   294,   295,   296,   297,     0,   298,   299,     0,   301,
       0,   302,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,   310,   311,   312,     0,     0,   313,   314,     0,
     316,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,     0,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,     0,   394,   395,   396,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   503,   410,   411,   412,     0,   413,   414,     0,   415,
       0,   417,   418,   419,   420,   421,     0,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,   429,   430,   431,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   447,
     448,     0,   449,     0,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,     0,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1770,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,     0,     0,     0,     0,  2429,  1241,   548,     0,     0,
    1627,   824,     0,     0,     0,     0,     0,  2550,  1628,  1629,
    1630,    95,    96,    97,    98,    99,   100,   101,   102,  1060,
     103,   104,   105,  1061,  1062,  1063,  1064,  1065,  1066,  1067,
     106,   107,  1068,   108,   109,   110,  2430,   112,   113,   114,
       0,   668,  2431,   670,   671,  1069,   120,   121,   122,   123,
     124,   125,  1070,  1071,   126,   127,   672,   673,   130,  1072,
     131,   132,   133,   134,     0,  1073,  2432,  1074,   137,   138,
     139,   140,   141,   142,  2433,   144,   145,   146,  1075,   147,
     148,   149,   150,   151,   152,  1076,  2434,   154,   155,   156,
    1077,  1078,  1079,  2435,  1080,  1081,  1082,   158,   159,   160,
     161,   162,   163,   164,   678,   679,   167,  1083,   168,  1084,
     169,   170,   171,   172,   173,   174,  1085,   175,   176,   177,
     178,   179,  1086,  1087,   180,   181,   680,   183,   184,  1088,
     185,   186,   187,  1089,   188,   189,   190,  1090,   191,   192,
     193,   194,     0,   196,   197,   198,   199,   200,     0,  1091,
     202,  1092,   203,   204,   681,   206,  1093,   207,  1094,   208,
    2436,  1095,  2437,   211,   212,   213,  2438,   215,  1096,   216,
    1097,     0,     0,   219,  1098,   220,   221,   222,   223,   224,
     225,   226,  2439,   228,   229,   230,   231,  1099,   232,   233,
     234,   235,   236,   237,  1100,   238,  2440,     0,   241,   242,
     243,   244,   245,   688,   689,  1101,   690,  1102,   249,  2441,
    2442,   252,  2443,   254,   255,   256,   257,   258,   259,  1103,
    1104,   260,  2444,   262,  2445,  1105,   264,   265,   266,  1106,
    1107,   267,   268,   269,   270,   271,  2446,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   697,  2447,   699,   294,   295,
     296,  2448,  1108,   298,   299,  2449,   301,  1109,     0,   303,
     701,   305,   306,   307,  1110,   308,   309,  1111,  1112,  2450,
     311,   312,  1113,  1114,   313,     0,  2451,   316,  2452,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
    1115,   329,   330,     0,   332,   333,     0,   335,   336,   337,
    1116,   338,   339,   340,   341,   342,   343,  1117,   344,   345,
     346,   704,   348,   349,   350,   351,  1118,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
    1119,   365,   366,  2453,   368,   369,   370,   706,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,  1120,
     383,   384,   385,   386,   387,  1121,   388,  2454,   390,   391,
     392,  2455,   394,   395,   709,   397,  1122,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,  2456,   410,
       0,   412,  1123,   413,   414,  1124,   415,  2457,   417,   418,
     419,   420,   421,  1125,   712,   713,  1126,  1127,   424,   425,
       0,   427,     0,  1128,   429,   430,  2458,   432,   433,   434,
     435,   436,  1129,  1130,   437,   438,   439,   440,   441,  1131,
    1132,   442,   443,   444,   445,   446,     0,   715,  1134,   449,
    2459,   451,   452,   453,   454,  1135,  1136,   455,  1137,  1138,
     456,   457,   458,   459,   460,   461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   473,   474,   475,
     476,     0,   499,     0,  1631,  1632,  1633,  1627,  2460,  2461,
    1636,  1637,  1638,  1639,     0,  1628,  1629,  1630,    95,    96,
      97,    98,    99,   100,   101,   102,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   112,   113,   114,   115,   116,     0,
     118,   119,     0,   120,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   137,   138,   139,   140,   141,
     142,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   154,   155,   156,     0,     0,     0,
       0,     0,     0,     0,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,     0,   168,     0,   169,   170,   171,
     172,   173,   174,     0,   175,   176,   177,   178,   179,     0,
       0,   180,   181,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,     0,   202,     0,   203,
     204,   205,   206,     0,   207,     0,   208,     0,     0,     0,
     211,   212,   213,     0,   215,     0,   216,     0,   217,   218,
     219,     0,   220,   221,   222,   223,   224,   225,   226,     0,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,   252,     0,
     254,   255,   256,   257,   258,   259,     0,     0,   260,     0,
     262,     0,     0,   264,   265,   266,     0,     0,   267,   268,
     269,   270,   271,   501,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   293,   294,   295,   296,   297,     0,
     298,   299,     0,   301,     0,   302,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,   310,   311,   312,     0,
       0,   313,   314,     0,   316,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,     0,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
       0,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,     0,   394,
     395,   396,   397,     0,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   503,   410,   411,   412,     0,
     413,   414,     0,   415,     0,   417,   418,   419,   420,   421,
       0,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,   429,   430,   431,   432,   433,   434,   435,   436,     0,
       0,   437,   438,   439,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   447,   448,     0,   449,     0,   451,   452,
     453,   454,     0,     0,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,     0,     0,
       0,  1631,  1632,  1633,     0,  1634,  1635,  1636,  1637,  1638,
    1639,  1318,     0,     0,  1319,     0,     0,     0,  1320,  1321,
    1322,  1323,     0,     0,     0,     0,     0,     0,     0,     0,
    1318,     0,     0,  1319,     0,     0,  1324,  1320,  1321,  1322,
    1323,     0,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,     0,  1324,     0,     0,     0,  1318,
       0,     0,  1319,  1326,     0,     0,  1320,  1321,  1322,  1323,
    1327,     0,     0,     0,     0,     0,  1328,     0,  1318,     0,
       0,  1319,     0,     0,  1324,  1320,  1321,  1322,  1323,     0,
       0,     0,  1326,     0,     0,  1328,     0,     0,     0,  1327,
       0,     0,     0,  1324,     0,     0,     0,     0,     0,     0,
       0,  1326,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,  1328,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1328,     0,  1318,     0,     0,  1319,     0,
       0,     0,  1320,  1321,  1322,  1323,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1324,     0,     0,     0,     0,     0,     0,  1329,  1326,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,     0,     0,
       0,     0,     0,  1330,     0,     0,  1329,     0,  1331,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,     0,  1330,     0,     0,     0,     0,  1331,     0,     0,
    1332,  1333,     0,     0,     0,  1329,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,     0,     0,  1332,
    1333,  1330,     0,     0,  1329,     0,  1331,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,     0,     0,     0,
    1330,     0,     0,     0,     0,  1331,     0,     0,  1332,  1333,
       0,     0,     0,  1335,     0,     0,  1336,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,     0,  1332,  1333,     0,
    1337,     0,  1335,  1338,     0,  1336,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,     0,     0,     0,     0,  1337,
       0,  1329,  1338,     0,     0,     0,     0,     0,     0,     0,
       0,  1335,     0,     0,  1336,     0,     0,  1330,     0,     0,
       0,     0,  1331,     0,     0,     0,     0,     0,  1337,     0,
    1335,  1338,     0,  1336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1332,  1333,     0,  1337,     0,     0,
    1338,     0,     0,     0,     0,     0,     0,     0,     0,  1334,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1318,     0,  1339,  1319,     0,     0,     0,  1320,  1321,  1322,
    1323,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1339,     0,     0,     0,  1324,     0,  1335,     0,     0,
    1336,     0,     0,  1326,     0,     0,     0,     0,     0,     0,
    1327,     0,     0,     0,  1337,     0,     0,  1338,     0,     0,
    1339,  1318,     0,     0,  1319,     0,     0,     0,  1320,  1321,
    1322,  1323,     0,     0,     0,  1328,     0,     0,     0,  1339,
       0,     0,     0,     0,     0,     0,  1324,     0,     0,     0,
       0,     0,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1340,     0,     0,  1341,  1342,  1343,     0,  1344,
    1345,  1346,  1347,  1348,  1349,     0,  1328,     0,     0,  2264,
       0,  1340,     0,     0,  1341,  1342,  1343,     0,  1344,  1345,
    1346,  1347,  1348,  1349,     0,     0,  1339,     0,  2305,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1340,     0,     0,  1341,  1342,  1343,     0,  1344,  1345,  1346,
    1347,  1348,  1349,     0,     0,     0,  1329,  2392,     0,  1340,
       0,     0,  1341,  1342,  1343,     0,  1344,  1345,  1346,  1347,
    1348,  1349,  1330,     0,     0,     0,  2525,  1331,     0,     0,
    1318,     0,     0,  1319,     0,     0,     0,  1320,  1321,  1322,
    1323,     0,     0,     0,     0,     0,     0,     0,     0,  1332,
    1333,     0,     0,     0,     0,  1324,     0,  1329,     0,     0,
       0,     0,     0,  1326,  1334,     0,     0,     0,     0,     0,
    1327,     0,     0,  1330,     0,     0,  1340,     0,  1331,  1341,
    1342,  1343,     0,  1344,  1345,  1346,  1347,  1348,  1349,     0,
       0,     0,     0,  2547,     0,  1328,     0,     0,     0,     0,
    1332,  1333,  1335,     0,     0,  1336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,     0,     0,  1337,
       0,  1318,  1338,     0,  1319,     0,     0,     0,  1320,  1321,
    1322,  1323,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1324,     0,     0,     0,
       0,   980,   980,  1335,  1326,     0,  1336,   981,   981,     0,
       0,  1327,     0,     0,   993,   993,     0,     0,     0,     0,
    1337,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   994,   994,     0,  1328,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1329,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1339,  1330,     0,     0,     0,     0,  1331,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   995,   995,     0,     0,     0,  1332,
    1333,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,     0,     0,     0,
       0,     0,  1339,   982,   982,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1329,     0,     0,
       0,     0,  1335,     0,     0,  1336,     0,     0,     0,     0,
       0,     0,     0,  1330,     0,     0,     0,     0,  1331,  1337,
       0,  1340,  1338,     0,  1341,  1342,  1343,     0,  1344,  1345,
    1346,  1347,  1348,  1349,     0,   996,   996,     0,  2697,     0,
    1332,  1333,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1340,     0,     0,  1341,  1342,  1343,     0,  1344,
    1345,  1346,  1347,  1348,  1349,     0,   997,   997,     0,  2923,
       0,     0,     0,  1335,   998,   998,  1336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   999,   999,     0,     0,
    1337,  1339,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   983,   983,     0,
       0,     0,     0,     0,     0,     0,     0,  1000,  1000,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,  1846,
       0,     0,   985,   985,  1002,  1002,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,     0,  1003,  1003,     0,     0,
       0,  1340,  1004,  1847,  1341,  1342,  1343,     0,  1344,  1345,
    1346,  1347,  1348,  1349,     0,     0,  1005,  1005,  2935,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   987,
     987,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1340,  1059,     0,  1341,  1342,  1343,     0,  1344,
    1345,  1346,  1347,  1348,  1349,     0,     0,  1500,     0,    95,
      96,    97,    98,    99,   100,   101,   102,  1060,   103,   104,
     105,  1061,  1062,  1063,  1064,  1065,  1066,  1067,   106,   107,
    1068,   108,   109,   110,     0,   112,   113,   114,   749,   750,
       0,   751,   752,  1069,   120,   121,   122,   123,   124,   125,
    1070,  1071,   126,   127,   753,   754,   130,  1072,   131,   132,
     133,   134,   755,  1073,     0,  1074,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,  1075,   147,   148,   149,
     150,   151,   152,  1076,     0,   154,   155,   156,  1077,  1078,
    1079,     0,  1080,  1081,  1082,   158,   159,   160,   161,   162,
     163,   164,   756,   757,   167,  1083,   168,  1084,   169,   170,
     171,   172,   173,   174,  1085,   175,   176,   177,   178,   179,
    1086,  1087,   180,   181,   182,   183,   184,  1088,   185,   186,
     187,  1089,   188,   189,   190,  1090,   191,   192,   193,   194,
     758,   196,   197,   198,   199,   200,   759,  1091,   202,  1092,
     203,   204,   760,   206,  1093,   207,  1094,   208,     0,  1095,
       0,   211,   212,   213,     0,   215,  1096,   216,  1097,   761,
     762,   219,  1098,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,  1099,   232,   233,   234,   235,
     236,   237,  1100,   238,     0,   763,   241,   242,   243,   244,
     245,   764,   765,  1101,   766,  1102,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,  1103,  1104,   260,
       0,   262,     0,  1105,   264,   265,   266,  1106,  1107,   267,
     268,   269,   270,   271,   767,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   768,     0,   769,   294,   295,   296,   770,
    1108,   298,   299,     0,   301,  1109,   771,   303,   772,   305,
     306,   307,  1110,   308,   309,  1111,  1112,   310,   311,   312,
    1113,  1114,   313,   773,     0,   316,     0,   774,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,  1115,   329,
     330,   775,   332,   333,   776,   335,   336,   337,  1116,   338,
     339,   340,   341,   342,   343,  1117,   344,   345,   346,   777,
     348,   349,   350,   351,  1118,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,  1119,   365,
     366,     0,   368,   369,   370,   778,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,  1120,   383,   384,
     385,   386,   387,  1121,   388,   779,   390,   391,   392,     0,
     394,   395,   780,   397,  1122,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   781,   410,   782,   412,
    1123,   413,   414,  1124,   415,     0,   417,   418,   419,   420,
     421,  1125,   783,   784,  1126,  1127,   424,   425,   785,   427,
     786,  1128,   429,   430,   787,   432,   433,   434,   435,   436,
    1129,  1130,   437,   438,   439,   440,   441,  1131,  1132,   442,
     443,   444,   445,   446,  1133,   789,  1134,   449,     0,   451,
     452,   453,   454,  1135,  1136,   455,  1137,  1138,   456,   457,
     458,   459,   460,   461,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,  1749,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   748,  1241,   548,     0,     0,
       0,   824,     0,     0,  2256,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     749,   750,     0,   751,   752,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   753,   754,   130,     0,
     131,   132,   133,   134,   755,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   756,   757,   167,  1376,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   758,   196,   197,   198,   199,   200,   759,  1242,
     202,     0,   203,   204,   760,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   761,   762,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   763,   241,   242,
     243,   244,   245,   764,   765,     0,   766,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   767,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   768,     0,   769,   294,   295,
     296,   770,     0,   298,   299,     0,   301,     0,   771,   303,
     772,   305,   306,   307,     0,   308,   309,  1243,     0,   310,
     311,   312,     0,     0,   313,   773,     0,   316,     0,   774,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   775,   332,   333,   776,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   777,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   778,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   779,   390,   391,
     392,     0,   394,   395,   780,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   781,   410,
     782,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   783,   784,     0,     0,   424,   425,
     785,   427,   786,  1244,   429,   430,   787,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,  1133,   789,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   799,   800,   473,   474,   475,
     476,   748,  1241,   548,     0,     0,     0,   824,  1245,  1246,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   749,   750,     0,   751,
     752,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   753,   754,   130,     0,   131,   132,   133,   134,
     755,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     756,   757,   167,  1378,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   758,   196,
     197,   198,   199,   200,   759,  1242,   202,     0,   203,   204,
     760,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   761,   762,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   763,   241,   242,   243,   244,   245,   764,
     765,     0,   766,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   767,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   768,     0,   769,   294,   295,   296,   770,     0,   298,
     299,     0,   301,     0,   771,   303,   772,   305,   306,   307,
       0,   308,   309,  1243,     0,   310,   311,   312,     0,     0,
     313,   773,     0,   316,     0,   774,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   775,
     332,   333,   776,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   777,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   778,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   779,   390,   391,   392,     0,   394,   395,
     780,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   781,   410,   782,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     783,   784,     0,     0,   424,   425,   785,   427,   786,  1244,
     429,   430,   787,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,  1133,   789,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   799,   800,   473,   474,   475,   476,   748,  1241,   548,
       0,     0,     0,   824,  1245,  1246,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   749,   750,     0,   751,   752,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   753,   754,
     130,     0,   131,   132,   133,   134,   755,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   756,   757,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   758,   196,   197,   198,   199,   200,
     759,  1242,   202,     0,   203,   204,   760,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   761,   762,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   763,
     241,   242,   243,   244,   245,   764,   765,     0,   766,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   767,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   768,     0,   769,
     294,   295,   296,   770,     0,   298,   299,     0,   301,     0,
     771,   303,   772,   305,   306,   307,     0,   308,   309,  1243,
       0,   310,   311,   312,     0,     0,   313,   773,     0,   316,
       0,   774,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   775,   332,   333,   776,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   777,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   778,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   779,
     390,   391,   392,     0,   394,   395,   780,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     781,   410,   782,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   783,   784,     0,     0,
     424,   425,   785,   427,   786,  1244,   429,   430,   787,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,  1133,   789,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   799,   800,   473,
     474,   475,   476,     0,     0,  1318,     0,     0,  1319,     0,
    1245,  1246,  1320,  1321,  1322,  1323,     0,     0,  1318,     0,
       0,  1319,     0,     0,     0,  1320,  1321,  1322,  1323,     0,
    1324,     0,     0,     0,  1776,     0,     0,     0,  1326,     0,
       0,     0,     0,  1324,     0,  1327,     0,     0,     0,     0,
       0,  1326,  1318,     0,     0,  1319,     0,     0,  1327,  1320,
    1321,  1322,  1323,     0,     0,  1318,     0,     0,  1319,     0,
    1328,     0,  1320,  1321,  1322,  1323,     0,  1324,     0,     0,
       0,     0,     0,  1328,     0,  1326,     0,     0,     0,     0,
    1324,     0,  1327,  1980,     0,     0,     0,     0,  1326,  1318,
       0,     0,  1319,     0,     0,  1327,  1320,  1321,  1322,  1323,
       0,     0,     0,     0,     0,     0,     0,  1328,     0,     0,
       0,  1777,     0,     0,  1324,     0,     0,     0,     0,     0,
    1328,     0,  1326,     0,     0,     0,     0,     0,     0,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,     0,     0,     0,     0,
       0,  1329,     0,     0,  2018,     0,     0,     0,     0,  2019,
       0,     0,     0,     0,  1329,     0,     0,  1330,     0,     0,
       0,     0,  1331,     0,     0,     0,     0,     0,     0,     0,
    1330,     0,     0,     0,     0,  1331,     0,  3021,     0,     0,
       0,     0,     0,     0,  1332,  1333,     0,     0,  1329,     0,
       0,     0,     0,     0,     0,     0,     0,  1332,  1333,  1334,
       0,  1329,     0,     0,  1330,     0,     0,     0,     0,  1331,
       0,     0,  1334,     0,     0,     0,     0,  1330,     0,     0,
       0,     0,  1331,     0,     0,     0,     0,     0,     0,     0,
       0,  1332,  1333,     0,     0,  1329,     0,  1335,     0,     0,
    1336,     0,     0,     0,  1332,  1333,  1334,     0,     0,     0,
    1335,  1330,     0,  1336,  1337,     0,  1331,  1338,     0,  1334,
       0,     0,     0,     0,     0,     0,     0,  1337,     0,     0,
    1338,     0,     0,     0,     0,     0,     0,     0,  1332,  1333,
       0,     0,     0,     0,  1335,     0,     0,  1336,     0,     0,
       0,     0,     0,  1334,     0,     0,     0,  1335,     0,     0,
    1336,  1337,     0,     0,  1338,     0,     0,     0,     0,     0,
       0,     0,  1318,     0,  1337,  1319,     0,  1338,     0,  1320,
    1321,  1322,  1323,     0,     0,     0,     0,  3022,     0,     0,
       0,  1335,     0,     0,  1336,     0,     0,  1324,     0,     0,
    2024,     0,     0,     0,     0,  1326,  1339,     0,  1337,     0,
       0,  1338,  1327,     0,     0,     0,     0,     0,     0,  1339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1992,
       0,  1318,     0,     0,  1319,     0,     0,  1328,  1320,  1321,
    1322,  1323,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1339,     0,     0,  1324,     0,     0,     0,
       0,     0,     0,     0,  1326,  1781,  1339,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1328,     0,     0,     0,
    1339,     0,     0,     0,     0,     0,  1340,     0,     0,  1341,
    1342,  1343,     0,  1344,  1345,  1346,  1347,  1348,  1349,  1340,
       0,     0,  1341,  1342,  1343,     0,  1344,  1345,  1346,  1347,
    1348,  1349,     0,     0,     0,     0,     0,     0,  1329,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1340,  1330,     0,  1341,  1342,  1343,  1331,
    1344,  1345,  1346,  1347,  1348,  1349,  1340,     0,     0,  1341,
    1342,  1343,     0,  1344,  1345,  1346,  1347,  1348,  1349,     0,
       0,  1332,  1333,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2029,     0,     0,     0,  1334,  1329,     0,     0,
    1340,     0,     0,  1341,  1342,  1343,     0,  1344,  1345,  1346,
    1347,  1348,  1349,  1330,     0,     0,     0,  1318,  1331,     0,
    1319,     0,     0,     0,  1320,  1321,  1322,  1323,     0,     0,
       0,     0,     0,     0,  1335,     0,     0,  1336,     0,     0,
    1332,  1333,  1324,     0,     0,  2031,     0,     0,     0,     0,
    1326,  1337,     0,     0,  1338,  1334,     0,  1327,     0,     0,
       0,     0,  1318,     0,     0,  1319,     0,     0,     0,  1320,
    1321,  1322,  1323,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1328,     0,     0,     0,     0,  1324,     0,     0,
       0,  1318,     0,  1335,  1319,  1326,  1336,     0,  1320,  1321,
    1322,  1323,  1327,     0,     0,     0,     0,     0,     0,     0,
    1337,     0,     0,  1338,     0,     0,  1324,     0,     0,  2304,
       0,     0,     0,     0,  1326,     0,     0,  1328,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,     0,  1318,     0,
       0,  1319,     0,  1339,     0,  1320,  1321,  1322,  1323,     0,
       0,  1318,     0,     0,  1319,     0,  1328,     0,     0,  1321,
    1322,  1323,     0,  1324,     0,     0,     0,     0,     0,     0,
       0,  1326,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,  1329,  1326,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,     0,     0,  1330,
       0,     0,  1339,  1328,  1331,  1318,     0,     0,  1319,     0,
       0,     0,  1320,  1321,  1322,  1323,  1328,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,  1333,  1329,     0,
    1324,     0,     0,     0,     0,     0,     0,     0,  1326,     0,
       0,  1334,     0,  1340,  1330,  1327,  1341,  1342,  1343,  1331,
    1344,  1345,  1346,  1347,  1348,  1349,     0,  1329,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,  1332,  1333,  1330,     0,     0,     0,     0,  1331,  1335,
       0,     0,  1336,     0,     0,     0,  1334,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1337,     0,     0,  1338,
    1332,  1333,  1340,     0,  1329,  1341,  1342,  1343,     0,  1344,
    1345,  1346,  1347,  1348,  1349,  1334,     0,  1329,     0,     0,
    1330,     0,     0,     0,  1335,  1331,     0,  1336,     0,     0,
       0,     0,     0,  1330,     0,     0,     0,     0,  1331,     0,
       0,  1337,     0,     0,  1338,     0,     0,  1332,  1333,     0,
       0,     0,     0,  1335,     0,     0,  1336,     0,     0,     0,
    1332,  1333,  1334,     0,     0,     0,     0,     0,     0,     0,
    1337,  1329,     0,  1338,     0,  1334,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1330,  1339,     0,
       0,     0,  1331,     0,     0,     0,     0,     0,     0,     0,
    1335,     0,     0,  1336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1335,  1332,  1333,  1336,  1337,     0,     0,
    1338,     0,     0,     0,     0,     0,     0,     0,     0,  1334,
    1337,     0,     0,  1339,     0,     0,     0,     0,     0,     0,
       0,  1318,     0,     0,  1319,     0,     0,     0,     0,  1321,
    1322,  1323,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,  2260,     0,  1335,     0,     0,
    1336,     0,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,  1337,     0,     0,  1338,  1340,     0,
       0,  1341,  1342,  1343,     0,  1344,  1345,  1346,  1347,  1348,
    1349,     0,     0,     0,     0,     0,  1328,     0,     0,  1339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1340,     0,     0,  1341,  1342,  1343,     0,
    1344,  1345,  1346,  1347,  1348,  1349,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1340,     0,     0,  1341,  1342,  1343,     0,  1344,
    1345,  1346,  1347,  1348,  1349,     0,  1339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1329,     0,  1340,
       0,     0,  1341,  1342,  1343,     0,  1344,  1345,  1346,  1347,
    1348,  1349,  1340,  1330,     0,  1341,  1342,  1343,  1331,  1344,
    1345,  1346,  1347,  1348,  1349,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1763, -1763,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1340,     0,     0,  1341,
    1342,  1343,     0,  1344,  1345,  1346,  1347,  1796,  1349,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1763,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1337,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1059,
       0,  1686,  1340,     0,     0,  1341,  1342,  1343,     0,  1344,
    1345,  1346,  1347,  1348,  1349,    95,    96,    97,    98,    99,
     100,   101,   102,  1060,   103,   104,   105,  1061,  1062,  1063,
    1064,  1065,  1066,  1067,   106,   107,  1068,   108,   109,   110,
       0,   112,   113,   114,   749,   750,     0,   751,   752,  1069,
     120,   121,   122,   123,   124,   125,  1070,  1071,   126,   127,
     753,   754,   130,  1072,   131,   132,   133,   134,   755,  1073,
       0,  1074,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,  1075,   147,   148,   149,   150,   151,   152,  1076,
       0,   154,   155,   156,  1077,  1078,  1079,     0,  1080,  1081,
    1082,   158,   159,   160,   161,   162,   163,   164,   756,   757,
     167,  1083,   168,  1084,   169,   170,   171,   172,   173,   174,
    1085,   175,   176,   177,   178,   179,  1086,  1087,   180,   181,
     182,   183,   184,  1088,   185,   186,   187,  1089,   188,   189,
     190,  1090,   191,   192,   193,   194,   758,   196,   197,   198,
     199,   200,   759,  1091,   202,  1092,   203,   204,   760,   206,
    1093,   207,  1094,   208,     0,  1095,     0,   211,   212,   213,
       0,   215,  1096,   216,  1097,   761,   762,   219,  1098,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,  1099,   232,   233,   234,   235,   236,   237,  1100,   238,
       0,   763,   241,   242,   243,   244,   245,   764,   765,  1101,
     766,  1102,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,  1103,  1104,   260,     0,   262,     0,  1105,
     264,   265,   266,  1106,  1107,   267,   268,   269,   270,   271,
     767,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   768,
       0,   769,   294,   295,   296,   770,  1108,   298,   299,     0,
     301,  1109,   771,   303,   772,   305,   306,   307,  1110,   308,
     309,  1111,  1112,   310,   311,   312,  1113,  1114,   313,   773,
       0,   316,     0,   774,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,  1115,   329,   330,   775,   332,   333,
     776,   335,   336,   337,  1116,   338,   339,   340,   341,   342,
     343,  1117,   344,   345,   346,   777,   348,   349,   350,   351,
    1118,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,  1119,   365,   366,     0,   368,   369,
     370,   778,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,  1120,   383,   384,   385,   386,   387,  1121,
     388,   779,   390,   391,   392,     0,   394,   395,   780,   397,
    1122,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   781,   410,   782,   412,  1123,   413,   414,  1124,
     415,     0,   417,   418,   419,   420,   421,  1125,   783,   784,
    1126,  1127,   424,   425,   785,   427,   786,  1128,   429,   430,
     787,   432,   433,   434,   435,   436,  1129,  1130,   437,   438,
     439,   440,   441,  1131,  1132,   442,   443,   444,   445,   446,
    1133,   789,  1134,   449,     0,   451,   452,   453,   454,  1135,
    1136,   455,  1137,  1138,   456,   457,   458,   459,   460,   461,
     790,   791,   792,   793,   794,   795,   796,   797,   798,   799,
     800,   473,   474,   475,   476,  1059,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,  1060,
     103,   104,   105,  1061,  1062,  1063,  1064,  1065,  1066,  1067,
     106,   107,  1068,   108,   109,   110,     0,   112,   113,   114,
     749,   750,     0,   751,   752,  1069,   120,   121,   122,   123,
     124,   125,  1070,  1071,   126,   127,   753,   754,   130,  1072,
     131,   132,   133,   134,   755,  1073,     0,  1074,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,  1075,   147,
     148,   149,   150,   151,   152,  1076,     0,   154,   155,   156,
    1077,  1078,  1079,     0,  1080,  1081,  1082,   158,   159,   160,
     161,   162,   163,   164,   756,   757,   167,  1083,   168,  1084,
     169,   170,   171,   172,   173,   174,  1085,   175,   176,   177,
     178,   179,  1086,  1087,   180,   181,   182,   183,   184,  1088,
     185,   186,   187,  1089,   188,   189,   190,  1090,   191,   192,
     193,   194,   758,   196,   197,   198,   199,   200,   759,  1091,
     202,  1092,   203,   204,   760,   206,  1093,   207,  1094,   208,
       0,  1095,     0,   211,   212,   213,     0,   215,  1096,   216,
    1097,   761,   762,   219,  1098,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,  1099,   232,   233,
     234,   235,   236,   237,  1100,   238,     0,   763,   241,   242,
     243,   244,   245,   764,   765,  1101,   766,  1102,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,  1103,
    1104,   260,     0,   262,     0,  1105,   264,   265,   266,  1106,
    1107,   267,   268,   269,   270,   271,   767,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   768,     0,   769,   294,   295,
     296,   770,  1108,   298,   299,     0,   301,  1109,   771,   303,
     772,   305,   306,   307,  1110,   308,   309,  1111,  1112,   310,
     311,   312,  1113,  1114,   313,   773,     0,   316,     0,   774,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
    1115,   329,   330,   775,   332,   333,   776,   335,   336,   337,
    1116,   338,   339,   340,   341,   342,   343,  1117,   344,   345,
     346,   777,   348,   349,   350,   351,  1118,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
    1119,   365,   366,     0,   368,   369,   370,   778,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,  1120,
     383,   384,   385,   386,   387,  1121,   388,   779,   390,   391,
     392,     0,   394,   395,   780,   397,  1122,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   781,   410,
     782,   412,  1123,   413,   414,  1124,   415,     0,   417,   418,
     419,   420,   421,  1125,   783,   784,  1126,  1127,   424,   425,
     785,   427,   786,  1128,   429,   430,   787,   432,   433,   434,
     435,   436,  1129,  1130,   437,   438,   439,   440,   441,  1131,
    1132,   442,   443,   444,   445,   446,  1133,   789,  1134,   449,
       0,   451,   452,   453,   454,  1135,  1136,   455,  1137,  1138,
     456,   457,   458,   459,   460,   461,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   799,   800,   473,   474,   475,
     476,  1059,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,  1831,   100,   101,   102,  1060,   103,   104,   105,  1061,
    1062,  1063,  1064,  1065,  1066,  1067,   106,   107,  1068,   108,
     109,   110,     0,   112,   113,   114,   749,   750,     0,   751,
     752,  1069,   120,   121,   122,   123,   124,   125,  1070,  1071,
     126,   127,   753,   754,   130,  1072,   131,   132,   133,   134,
     755,  1073,     0,  1074,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,  1075,   147,   148,   149,   150,   151,
     152,  1076,     0,   154,   155,   156,  1077,  1078,  1079,     0,
    1080,  1081,  1082,   158,   159,   160,   161,   162,   163,   164,
     756,   757,   167,  1083,   168,  1084,   169,   170,   171,   172,
     173,   174,  1085,   175,   176,   177,   178,   179,  1086,  1087,
     180,   181,   182,  1832,   184,  1088,   185,   186,   187,  1089,
     188,   189,   190,  1090,   191,   192,   193,   194,   758,   196,
     197,   198,   199,   200,   759,  1091,   202,  1092,   203,   204,
     760,   206,  1093,   207,  1094,   208,     0,  1095,     0,   211,
     212,   213,     0,   215,  1096,   216,  1097,   761,   762,   219,
    1098,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,  1099,   232,   233,   234,   235,   236,   237,
    1100,   238,     0,   763,   241,   242,   243,   244,   245,   764,
     765,  1101,   766,  1102,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,  1103,  1104,   260,     0,   262,
       0,  1105,   264,   265,   266,  1106,  1107,   267,   268,   269,
     270,   271,   767,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   768,     0,   769,   294,   295,   296,   770,  1108,   298,
     299,     0,   301,  1109,   771,   303,   772,   305,   306,   307,
    1110,   308,   309,  1111,  1112,   310,   311,   312,  1113,  1114,
     313,   773,     0,   316,     0,   774,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,  1115,   329,   330,   775,
     332,   333,   776,   335,   336,   337,  1116,   338,   339,   340,
     341,   342,   343,  1117,   344,   345,   346,   777,   348,   349,
     350,   351,  1118,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,  1119,   365,   366,     0,
     368,   369,   370,   778,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,  1120,   383,   384,   385,   386,
     387,  1121,  1833,   779,   390,   391,   392,     0,   394,   395,
     780,   397,  1122,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   781,   410,   782,   412,  1123,   413,
     414,  1124,   415,     0,   417,   418,   419,   420,   421,  1125,
     783,   784,  1126,  1127,   424,   425,   785,   427,   786,  1128,
     429,   430,   787,   432,   433,   434,   435,   436,  1129,  1130,
     437,   438,   439,   440,   441,  1131,  1132,   442,   443,   444,
     445,   446,  1133,   789,  1134,   449,     0,   451,   452,   453,
     454,  1135,  1136,   455,  1137,  1138,   456,   457,   458,   459,
     460,   461,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   799,   800,   473,   474,   475,   476,    94,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,   831,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   834,     0,   835,     0,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   153,   154,
     155,   156,   836,   837,   838,   839,   840,   841,   842,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     847,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,   209,     0,   210,   211,   212,   213,   214,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   261,   262,   263,     0,   264,   265,
     266,   855,   856,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,     0,   298,   299,   300,   301,     0,
     861,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,   315,   316,
     317,   864,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   865,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   868,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   870,   412,     0,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   873,   427,   874,     0,   429,   430,   876,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,   877,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    94,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,   136,     0,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,   153,   154,   155,   156,     0,     0,
       0,   157,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,   209,     0,
     210,   211,   212,   213,   214,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,     0,   260,
     261,   262,   263,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
       0,   298,   299,   300,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,  1438,   131,   132,   133,   134,   135,     0,
       0,  1439,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,  1440,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,  1441,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,  1442,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,  1443,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,  1444,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,  1438,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,  1440,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,  1441,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,  1904,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
    1443,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,  1444,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   748,     0,   548,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   749,   750,     0,   751,
     752,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   753,   754,   130,     0,   131,   132,   133,   134,
     755,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     756,   757,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   758,   196,
     197,   198,   199,   200,   759,  1242,   202,     0,   203,   204,
     760,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   761,   762,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   763,   241,   242,   243,   244,   245,   764,
     765,     0,   766,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   767,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   768,     0,   769,   294,   295,   296,   770,     0,   298,
     299,     0,   301,     0,   771,   303,   772,   305,   306,   307,
       0,   308,   309,  1243,     0,   310,   311,   312,     0,     0,
     313,   773,     0,   316,     0,   774,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   775,
     332,   333,   776,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   777,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   778,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   779,   390,   391,   392,     0,   394,   395,
     780,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   781,   410,   782,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     783,   784,     0,     0,   424,   425,   785,   427,   786,  1244,
     429,   430,   787,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,  1133,   789,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   799,   800,   473,   474,   475,   476,   499,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     3,     4,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,   580,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,   581,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   624,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,   581,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     3,     4,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     749,   750,     0,   751,   752,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   753,   754,   130,     0,
     131,   132,   133,   134,   755,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   756,   757,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   758,   196,   197,   198,   199,   200,   759,     0,
     202,     0,   203,   204,   760,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   761,   762,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   763,   241,   242,
     243,   244,   245,   764,   765,     0,   766,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   767,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   768,     0,   769,   294,   295,
     296,   770,     0,   298,   299,     0,   301,     0,   771,   303,
     772,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   773,     0,   316,     0,   774,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   775,   332,   333,   776,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   777,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   778,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   779,   390,   391,
     392,     0,   394,   395,   780,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   781,   410,
     782,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   783,   784,     0,     0,   424,   425,
     785,   427,   786,     0,   429,   430,   787,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,  1133,   789,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   799,   800,   473,   474,   475,
     476,   499,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,  1738,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,  1739,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,  1740,   415,     0,   417,  1741,   419,  1742,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,  1743,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,  2705,     0,
       0,     0,     0,  2706,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   225,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,   500,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   502,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,   548,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,   555,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   556,   423,     0,     0,   557,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   619,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   622,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,   580,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   626,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,   657,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,   580,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,  1156,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,  1158,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,   580,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,  1522,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,   580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,  1572,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,  2342,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,  2356,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,   580,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,  2494,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   225,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   567,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   225,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   568,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   569,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   570,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   571,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   590,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   644,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,   735,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,   738,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,   741,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
     225,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   569,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   571,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,  1392,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,     0,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   112,
     113,   114,   115,   116,     0,   118,   119,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   135,     0,     0,     0,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   154,
     155,   156,     0,     0,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,     0,   202,     0,   203,   204,   205,   206,     0,   207,
       0,   208,     0,     0,     0,   211,   212,   213,     0,   215,
       0,   216,     0,   217,   218,   219,     0,   220,   221,   222,
     223,   224,  1536,   226,     0,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,   252,     0,   254,   255,   256,   257,   258,
     259,     0,     0,   260,     0,   262,     0,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   501,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   293,
     294,   295,   296,   297,     0,   298,   299,     0,   301,     0,
     302,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,   314,     0,   316,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,     0,   394,   395,   396,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     503,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    95,
      96,    97,    98,    99,   100,   101,   102,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   112,   113,   114,   115,   116,
       0,   118,   119,     0,   120,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,     0,   154,   155,   156,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,     0,   168,     0,   169,   170,
     171,   172,   173,   174,     0,   175,   176,   177,   178,   179,
       0,     0,   180,   181,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,     0,   202,     0,
     203,   204,   205,   206,     0,   207,     0,   208,     0,     0,
       0,   211,   212,   213,     0,   215,     0,   216,     0,   217,
     218,   219,     0,   220,   221,   222,   223,   224,  1815,   226,
       0,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,   252,
       0,   254,   255,   256,   257,   258,   259,     0,     0,   260,
       0,   262,     0,     0,   264,   265,   266,     0,     0,   267,
     268,   269,   270,   271,   501,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,   295,   296,   297,
       0,   298,   299,     0,   301,     0,   302,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,   310,   311,   312,
       0,     0,   313,   314,     0,   316,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,     0,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,     0,
     394,   395,   396,   397,     0,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   503,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,     0,     0,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   112,   113,   114,   115,   116,     0,   118,   119,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   137,   138,   139,   140,   141,   142,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   154,   155,   156,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,     0,   202,     0,   203,   204,   205,   206,
       0,   207,     0,   208,     0,     0,     0,   211,   212,   213,
       0,   215,     0,   216,     0,   217,   218,   219,     0,   220,
     221,   222,   223,   224,  1827,   226,     0,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,   252,     0,   254,   255,   256,
     257,   258,   259,     0,     0,   260,     0,   262,     0,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
     501,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   293,   294,   295,   296,   297,     0,   298,   299,     0,
     301,     0,   302,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,   314,
       0,   316,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,     0,   394,   395,   396,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   503,   410,   411,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,     0,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   499,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    95,    96,    97,    98,    99,   100,   101,   102,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   112,   113,   114,
     115,   116,     0,   118,   119,     0,   120,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,     0,   154,   155,   156,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,     0,   168,     0,
     169,   170,   171,   172,   173,   174,     0,   175,   176,   177,
     178,   179,     0,     0,   180,   181,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,     0,
     202,     0,   203,   204,   205,   206,     0,   207,     0,   208,
       0,     0,     0,   211,   212,   213,     0,   215,     0,   216,
       0,   217,   218,   219,     0,   220,   221,   222,   223,   224,
    1829,   226,     0,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,   252,     0,   254,   255,   256,   257,   258,   259,     0,
       0,   260,     0,   262,     0,     0,   264,   265,   266,     0,
       0,   267,   268,   269,   270,   271,   501,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   301,     0,   302,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,   310,
     311,   312,     0,     0,   313,   314,     0,   316,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,     0,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,     0,   394,   395,   396,   397,     0,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   503,   410,
     411,   412,     0,   413,   414,     0,   415,     0,   417,   418,
     419,   420,   421,     0,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,   429,   430,   431,   432,   433,   434,
     435,   436,     0,     0,   437,   438,   439,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   447,   448,     0,   449,
       0,   451,   452,   453,   454,     0,     0,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   499,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    95,    96,    97,
      98,    99,   100,   101,   102,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   112,   113,   114,   115,   116,     0,   118,
     119,     0,   120,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   137,   138,   139,   140,   141,   142,
       0,   144,   145,   146,     0,   147,   148,   149,   150,   151,
     152,     0,     0,   154,   155,   156,     0,     0,     0,     0,
       0,     0,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,     0,   168,     0,   169,   170,   171,   172,
     173,   174,     0,   175,   176,   177,   178,   179,     0,     0,
     180,   181,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,     0,   202,     0,   203,   204,
     205,   206,     0,   207,     0,   208,     0,     0,     0,   211,
     212,   213,     0,   215,     0,   216,     0,   217,   218,   219,
       0,   220,   221,   222,   223,   224,   225,   226,     0,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,   252,     0,   254,
     255,   256,   257,   258,   259,     0,     0,   260,     0,   262,
       0,     0,   264,   265,   266,     0,     0,   267,   268,   269,
     270,   271,   501,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   293,   294,   295,   296,   297,     0,   298,
     299,     0,   301,     0,   302,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,   310,   311,   312,     0,     0,
     313,   314,     0,   316,     0,   318,   319,   320,   321,   322,
     323,   324,     0,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,     0,   344,     0,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     368,   369,   370,   371,     0,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,     0,   394,   395,
     396,   397,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   503,   410,   411,   412,     0,   413,
     414,     0,   415,     0,   417,   418,   419,   420,   421,     0,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
     429,   430,   431,   432,   433,   434,   435,   436,     0,     0,
     437,   438,   439,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   447,   448,     0,   449,     0,   451,   452,   453,
     454,     0,     0,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   666,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,    96,    97,    98,    99,   100,   101,
     102,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   667,   112,
     113,   114,     0,   668,   669,   670,   671,     0,   120,   121,
     122,   123,   124,   125,     0,     0,   126,   127,   672,   673,
     130,     0,   131,   132,   133,   134,     0,     0,   674,     0,
     137,   138,   139,   140,   141,   142,   675,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   676,   154,
     155,   156,     0,     0,     0,   677,     0,     0,     0,   158,
     159,   160,   161,   162,   163,   164,   678,   679,   167,     0,
     168,     0,   169,   170,   171,   172,   173,   174,     0,   175,
     176,   177,   178,   179,     0,     0,   180,   181,   680,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,     0,
     191,   192,   193,   194,     0,   196,   197,   198,   199,   200,
       0,     0,   202,     0,   203,   204,   681,   206,     0,   207,
       0,   208,   682,     0,   683,   211,   212,   213,   684,   215,
       0,   216,     0,     0,     0,   219,     0,   220,   221,   222,
     223,   224,   685,   226,   686,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,   238,   687,     0,
     241,   242,   243,   244,   245,   688,   689,     0,   690,     0,
     249,   691,   692,   252,   693,   254,   255,   256,   257,   258,
     259,     0,     0,   260,   694,   262,   695,     0,   264,   265,
     266,     0,     0,   267,   268,   269,   270,   271,   696,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   697,   698,   699,
     294,   295,   296,     0,     0,   298,   299,   700,   301,     0,
       0,   303,   701,   305,   306,   307,     0,   308,   309,     0,
       0,   310,   311,   312,     0,     0,   313,     0,   702,   316,
     703,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   329,   330,     0,   332,   333,     0,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,     0,
     344,   345,   346,   704,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   705,   368,   369,   370,   706,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,     0,   388,   707,
     390,   391,   392,   708,   394,   395,   709,   397,     0,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     710,   410,     0,   412,     0,   413,   414,     0,   415,   711,
     417,   418,   419,   420,   421,     0,   712,   713,     0,     0,
     424,   425,     0,   427,     0,     0,   429,   430,   714,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,   715,
       0,   449,   716,   451,   452,   453,   454,     0,     0,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   666,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   473,
     474,   475,   476,     0,    95,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,   667,
     112,   113,   114,     0,   668,   669,   670,   671,     0,   120,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   672,
     673,   130,     0,   131,   132,   133,   134,     0,     0,   674,
       0,   137,   138,   139,   140,   141,   142,   675,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   676,
     154,   155,   156,     0,     0,     0,   677,     0,     0,     0,
     158,   159,   160,   161,   162,   163,   164,   678,   679,   167,
       0,   168,     0,   169,   170,   171,   172,   173,   174,     0,
     175,   176,   177,   178,   179,     0,     0,   180,   181,   680,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
       0,   191,   192,   193,   194,     0,   196,   197,   198,   199,
     200,     0,     0,   202,     0,   203,   204,   681,   206,     0,
     207,     0,   208,   682,     0,   683,   211,   212,   213,   684,
     215,     0,   216,     0,     0,     0,   219,     0,   220,   221,
     222,   223,   224,   225,   226,   686,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,   238,   687,
       0,   241,   242,   243,   244,   245,   688,   689,     0,   690,
       0,   249,   691,   692,   252,   693,   254,   255,   256,   257,
     258,   259,     0,     0,   260,   694,   262,   695,     0,   264,
     265,   266,     0,     0,   267,   268,   269,   270,   271,   696,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   697,   698,
     699,   294,   295,   296,     0,     0,   298,   299,   700,   301,
       0,     0,   303,   701,   305,   306,   307,     0,   308,   309,
       0,     0,   310,   311,   312,     0,     0,   313,     0,   702,
     316,   703,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,   333,     0,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
       0,   344,   345,   346,   704,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   705,   368,   369,   370,
     706,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,     0,   388,
     707,   390,   391,   392,   708,   394,   395,   709,   397,     0,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   710,   410,     0,   412,     0,   413,   414,     0,   415,
     711,   417,   418,   419,   420,   421,     0,   712,   713,     0,
       0,   424,   425,     0,   427,     0,     0,   429,   430,   714,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
     715,     0,   449,   716,   451,   452,   453,   454,     0,     0,
     455,     0,     0,   456,   457,   458,   459,   460,   461,  2429,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     473,   474,   475,   476,     0,    95,    96,    97,    98,    99,
     100,   101,   102,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
    2430,   112,   113,   114,     0,   668,  2431,   670,   671,     0,
     120,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     672,   673,   130,     0,   131,   132,   133,   134,     0,     0,
    2432,     0,   137,   138,   139,   140,   141,   142,  2433,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
    2434,   154,   155,   156,     0,     0,     0,  2435,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   678,   679,
     167,     0,   168,     0,   169,   170,   171,   172,   173,   174,
       0,   175,   176,   177,   178,   179,     0,     0,   180,   181,
     680,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,     0,   191,   192,   193,   194,     0,   196,   197,   198,
     199,   200,     0,     0,   202,     0,   203,   204,   681,   206,
       0,   207,     0,   208,  2436,     0,  2437,   211,   212,   213,
    2438,   215,     0,   216,     0,     0,     0,   219,     0,   220,
     221,   222,   223,   224,   225,   226,  2439,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,   238,
    2440,     0,   241,   242,   243,   244,   245,   688,   689,     0,
     690,     0,   249,  2441,  2442,   252,  2443,   254,   255,   256,
     257,   258,   259,     0,     0,   260,  2444,   262,  2445,     0,
     264,   265,   266,     0,     0,   267,   268,   269,   270,   271,
    2646,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   697,
    2447,   699,   294,   295,   296,     0,     0,   298,   299,  2449,
     301,     0,     0,   303,   701,   305,   306,   307,     0,   308,
     309,     0,     0,   310,   311,   312,     0,     0,   313,     0,
    2451,   316,  2452,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,   333,
       0,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,     0,   344,   345,   346,   704,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,  2453,   368,   369,
     370,     0,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,     0,
     388,     0,   390,   391,   392,  2455,   394,   395,   709,   397,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,  2647,   410,     0,   412,     0,   413,   414,     0,
     415,  2457,   417,   418,   419,   420,   421,     0,   712,   713,
       0,     0,   424,   425,     0,   427,     0,     0,   429,   430,
    2458,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,   715,     0,   449,  2459,   451,   452,   453,   454,     0,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     666,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   473,   474,   475,   476,     0,    95,    96,    97,    98,
      99,   100,   101,   102,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,   667,   112,   113,   114,     0,   668,   669,   670,   671,
       0,   120,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   672,   673,   130,     0,   131,   132,   133,   134,     0,
       0,   674,     0,   137,   138,   139,   140,   141,   142,   675,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   676,   154,   155,   156,     0,     0,     0,   677,     0,
       0,     0,   158,   159,   160,   161,   162,   163,   164,   678,
     679,   167,     0,   168,     0,   169,   170,   171,   172,   173,
     174,     0,   175,   176,   177,   178,   179,     0,     0,   180,
     181,   680,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,     0,   191,   192,   193,   194,     0,   196,   197,
     198,   199,   200,     0,     0,   202,     0,   203,   204,   681,
     206,     0,   207,     0,   208,   682,     0,   683,   211,   212,
     213,   684,   215,     0,   216,     0,     0,     0,   219,     0,
     220,   221,   222,   223,   224,   225,   226,   686,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
     238,   687,     0,   241,   242,   243,   244,   245,   688,   689,
       0,   690,     0,   249,   691,   692,   252,   693,   254,   255,
     256,   257,   258,   259,     0,     0,   260,   694,   262,   695,
       0,   264,   265,   266,     0,     0,   267,   268,   269,   270,
     271,     0,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     697,   698,   699,   294,   295,   296,     0,     0,   298,   299,
     700,   301,     0,     0,   303,   701,   305,   306,   307,     0,
     308,   309,     0,     0,   310,   311,   312,     0,     0,   313,
       0,   702,   316,   703,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
     333,     0,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,     0,   344,   345,   346,   704,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   705,   368,
     369,   370,     0,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
       0,   388,     0,   390,   391,   392,   708,   394,   395,   709,
     397,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,     0,   410,     0,   412,     0,   413,   414,
       0,   415,   711,   417,   418,   419,   420,   421,     0,   712,
     713,     0,     0,   424,   425,     0,   427,     0,     0,   429,
     430,   714,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,   715,     0,   449,   716,   451,   452,   453,   454,
       0,     0,   455,     0,     0,   456,   457,   458,   459,   460,
     461,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   473,   474,   475,   476
};

static const yytype_int16 yycheck[] =
{
       6,   623,   638,   630,   589,   609,     6,    60,    11,   527,
       0,   884,    15,   494,  1005,   707,   805,   534,     6,  1285,
      23,     0,  1398,   584,  1181,  1401,   632,     0,     0,  1359,
     980,    34,    35,     0,   805,    16,   713,    36,   985,   885,
      30,   536,  1750,    16,  1150,  1825,  1779,    31,   529,  1782,
     887,  1666,  1007,  1150,   982,  1150,  1150,  2206,  1831,   976,
    1833,   813,   736,   535,    62,   739,   903,   536,   805,   530,
    1186,    20,    21,  2176,  2176,   812,   653,  1046,  1708,   916,
    2082,  2204,  1010,   965,    62,  1770,    89,  1746,  1822,  2220,
       0,    81,   623,  2227,   625,  2214,   627,    35,  1315,  1316,
    1884,     9,  1761,  1869,  1870,  1871,  2034,    91,  1266,    21,
       4,     0,    58,     5,    11,     9,    50,    58,     0,  2089,
    1419,    13,    14,    58,     5,  1367,   643,   672,   673,    13,
      14,     5,  1417,   541,  1151,  2505,   169,     5,   606,    13,
      14,   137,     5,    73,    40,     5,   170,    23,    67,     9,
     606,     5,     5,   924,   699,     5,     5,     5,   743,     5,
      13,    14,   899,    13,    14,    13,    14,  1901,     5,     5,
       5,    11,     9,    40,  2581,   120,     5,     5,     5,     5,
       5,     5,     5,  2486,   120,  2559,    27,   924,    75,   926,
     927,   107,    58,    34,   145,   872,     9,  1280,  2650,    86,
     122,    41,  2685,    75,    93,  1280,  2114,  2020,     3,   285,
    2088,    93,    27,    27,    86,   117,     3,     4,     5,    34,
      34,  2595,     9,   994,    83,   222,   997,   998,   283,   169,
     222,  2468,  2791,    73,  1968,  1969,    31,    32,    59,     4,
     120,   307,   291,   170,     9,   307,    67,   166,   355,   271,
    2751,    48,   291,   242,   115,   135,    11,   994,  2416,   135,
     997,   998,   213,   208,   107,  2146,  1018,   376,   127,   367,
     115,   268,  2861,  1025,   332,    37,   268,    68,   117,   130,
     274,   242,   189,    58,   159,    11,    41,   832,   833,   164,
     356,    27,   161,    11,   159,  2604,   118,  1280,   883,   247,
      11,   993,   402,  2988,   327,   403,   438,   679,    11,   118,
     805,  2685,    11,   858,   490,  2722,  2625,   812,    73,   163,
     416,   497,  1993,    41,   484,   931,   187,   888,   115,   701,
    2096,   328,  2891,   356,   438,   495,   808,   437,    41,   108,
     291,    13,    14,    27,  2346,   403,   444,    73,  2350,  3034,
    2021,  2500,  2454,   484,  2235,    73,   917,   226,   233,   161,
     732,  1991,   124,   495,   460,  2145,   497,  2337,   233,   191,
      73,   360,  2491,   168,   108,   170,   303,   174,  2967,  2502,
     377,   414,   191,   944,   332,   377,   495,   381,   495,  2508,
     975,   495,   450,   190,   130,  2128,   285,   495,   195,   318,
    1280,   347,   159,   285,   495,  1287,   347,   282,  2142,   270,
    2144,  2648,   347,   289,   436,   236,  1289,   282,   209,   495,
    2790,  2080,  2923,  2082,   490,   268,  2985,   214,   490,   280,
     275,   926,   927,    31,    32,   232,   275,   317,   345,   436,
     495,  1178,  1708,   302,   436,   434,   130,  1051,  2822,   236,
     499,   484,  1189,   380,  1191,   403,  2269,   453,  2336,   348,
     499,  2619,  2771,  1200,   497,   267,   348,  2950,   344,   313,
     346,   495,   844,   434,   414,  2383,   233,   498,  1561,   430,
    1217,   347,  2934,  2786,  2858,  1560,   947,   403,  1787,  1439,
     862,   436,   164,   268,   457,    93,   486,  2904,   374,   502,
     436,  1786,   450,  1520,   400,   973,   495,   486,  1245,  1246,
     391,   392,   431,   486,   486,  1781,   438,   973,   481,   486,
    2254,   527,  2892,  1405,  1151,  1161,  1495,   414,   531,  2660,
     536,  1773,   940,   400,   495,  1752,     0,   536,   440,  2658,
    1277,  1278,   414,   384,  1281,  1282,    75,  2650,  2650,   408,
    1742,  1743,  2671,   499,    93,   536,   609,    86,   499,   565,
     566,   495,   535,   493,   499,   448,  2568,   497,   457,   384,
     384,  2573,   347,  1528,  2576,   457,  2950,  1154,  1561,  1562,
     578,   147,   379,   589,   254,   255,   494,   590,   499,  1174,
    2560,   459,   486,   487,   491,   544,   459,   546,   547,   374,
     578,   447,  1760,   495,   342,  2533,   587,   496,   598,   498,
    1362,   495,  2392,   481,   496,  2399,   498,   601,   481,   598,
     569,   495,   628,   629,   630,   598,   598,   495,  1597,  1256,
     196,   598,   495,  2406,   546,   495,   527,  1182,  1183,   493,
    2789,   495,   495,   497,   117,   495,   495,   495,   346,   495,
      23,   491,   590,   448,   567,   568,    29,   570,   495,   495,
     495,  1238,  1180,  2797,  1270,  2796,   495,   495,   495,   495,
     495,   495,   495,   486,   487,  2794,   374,  1195,   149,  1416,
    1417,  1561,  1562,  1563,  1269,    30,  1271,  2346,   598,   493,
    1275,  2350,   457,   497,   364,   365,  2381,  1468,  1325,   486,
     487,   707,   495,  1288,  1310,  1311,   459,  1478,  1587,    54,
    1481,   130,  1591,     4,  1593,  2717,   481,   198,     9,  2485,
    1237,   486,   487,   332,    24,  1991,   419,  1312,   481,   202,
      30,  1468,    75,   488,   489,   490,   491,   743,  1365,   242,
    1301,  1478,   242,    86,  1481,  1240,   270,  1228,  1229,  2898,
    1356,   275,   242,   249,  1235,  2489,     4,  2387,  1364,   368,
    1366,     9,   135,  1645,  1646,  2888,   490,  1239,  1650,   367,
    1231,  1240,   175,   497,  2893,   486,   487,   488,   489,   490,
     491,    81,  1534,   486,   487,   488,   489,   490,   491,   488,
     489,   490,   491,  1582,   403,   268,   403,   270,     4,   805,
     459,  1319,   326,     9,   198,   403,   812,   813,   814,  1691,
    1692,  1582,  1928,   407,   450,   409,   707,   115,  1934,  1556,
    1557,  2944,   481,   363,   830,  2042,  2606,  1673,   367,  1456,
     242,  2934,  2934,   236,  1671,   808,   495,  1754,     4,   149,
     106,   450,  1464,     9,   495,  1582,   444,  1328,    27,   130,
     448,   270,    36,   859,    64,    65,   805,   360,  1595,   457,
     360,   280,  1735,   812,   403,    13,    14,  3016,   493,  1543,
     360,    55,   497,   879,   880,   881,   157,   883,   884,  2071,
    2072,  2073,  2074,   481,   407,   884,   409,  1491,  1492,  1493,
    1564,   459,  1566,  1520,  1849,  1569,   367,   495,  2055,    78,
    2559,   907,     5,  1872,   496,   444,  1437,   499,    87,  2568,
    2176,   478,   496,   481,  2573,   499,   289,  2576,   457,   495,
     926,   927,   106,   814,   219,   496,   130,   495,   499,  1857,
    1448,   434,   403,  1464,   434,   497,  2595,   116,  1775,    13,
      14,   890,   481,   946,   434,   493,   285,   495,   360,   497,
     899,   478,  1483,   157,   960,  1540,   495,  1488,   964,   965,
     958,   959,   488,   961,   913,  1912,   360,   340,   952,   975,
    1917,   344,   242,   444,   368,   924,  2756,   926,   927,   168,
     958,   959,   248,   961,    13,    14,   457,   993,  2761,   173,
     256,   171,   495,  1474,   275,   495,  1513,    67,  1479,   280,
     298,   374,    13,    14,   407,   495,   409,   499,   187,   403,
     481,   495,  1018,   197,  1751,  1658,   496,  1660,  1661,  1025,
     199,   496,   434,     0,   495,  1009,  2685,   496,   169,   496,
     499,   434,   499,   924,   215,   496,    23,  1555,   499,    16,
    1046,    23,    29,   496,    54,   115,   499,    29,  1785,  1786,
     457,   496,   459,    30,   499,    23,   450,   367,  2717,    36,
     495,    29,   496,   243,   248,   499,   270,   247,   441,   367,
     496,   275,   256,   499,  1659,   496,   280,  2355,   499,   496,
    2358,  1599,   499,   495,   268,    62,   478,  1582,     8,  2704,
     360,    11,   496,   403,   219,   499,    16,    17,    18,   150,
    1595,  2207,   993,   173,    81,   403,   496,  2722,   340,   499,
    2207,  1696,  2207,  2207,  2142,   299,  2144,  1999,  2000,  2001,
    2002,  2387,   150,  2005,  2006,  2007,  2008,  2009,  2010,  2011,
    2012,  2013,  2014,     8,   444,   496,    11,   175,   499,   496,
     421,    16,    17,    18,  1748,  1151,   444,   457,   135,  2857,
     159,   432,   332,   135,  1828,   164,  1830,  2314,   407,   457,
     409,  2034,   346,  2822,   434,  2156,   496,   135,  1174,   499,
    1959,   481,   150,   496,  1180,  1181,   499,  2059,  2060,   407,
     150,   409,   170,   481,   368,   495,   270,   496,   368,  1195,
     499,   496,  1929,  2143,   499,    13,    14,   495,   236,  2858,
     270,   495,  2157,   496,   388,   275,   499,  2198,  2155,   496,
    2157,   390,   499,  2351,   393,  2353,   204,   421,   496,   496,
    2835,   499,   499,   403,   233,   495,  3006,   496,   432,  1232,
     499,  1234,   220,   497,  1240,  2968,  2969,     8,   496,    36,
      11,   499,   230,  2951,   461,    16,    17,    18,   318,    82,
    1256,   496,   290,   450,   499,  1932,  1933,  1893,   496,  1240,
     450,   499,  2970,  1269,   334,  1271,  1239,   314,  1274,  1275,
     450,    23,   603,   282,   605,  2112,  1266,    29,  1284,   447,
    1286,  1287,  1288,  1289,  1290,  1291,  1292,  1266,   175,  1180,
    1181,  2950,  3025,  1266,  1266,   496,   495,   217,   499,  1266,
     496,   495,   289,   499,  1195,   150,  1312,   289,  1314,    13,
      14,   198,  1889,  1319,  1320,  1321,  1322,  1323,  1324,  1325,
     495,   289,   495,  1329,  1330,  3033,  1903,    35,  1334,   298,
    1957,  1280,  1338,    13,    14,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,  1349,   496,   496,  1352,   499,   499,   236,
     185,   186,   496,  1359,    23,   499,  1362,   344,   340,  1365,
      29,   431,   344,   351,    13,    14,   495,   287,   438,   407,
     150,   409,   340,  2530,   150,    94,   344,   150,  1384,    13,
      14,    13,    14,   135,  2650,    23,   285,   374,    13,    14,
     342,    29,   374,  1911,    13,    14,   434,   403,   367,  1405,
    1390,  1382,   495,   290,   231,  2176,   374,    13,    14,    36,
    1416,  1417,   287,   495,  2744,    13,    14,     8,   493,   254,
     255,    13,    14,  1372,   195,    16,    17,    18,  1319,    13,
      14,  2037,    13,    14,   403,    13,    14,  1440,     5,  2176,
      13,    14,  1448,  2393,  2029,     5,   217,  1450,  1454,  1452,
    1456,   170,  1455,   495,   441,    13,    14,   164,  1461,   441,
    1463,   495,  1980,   495,  1959,   495,   135,  2422,    13,    14,
    1951,   495,  1475,   441,   495,   444,   495,  1480,    13,    14,
    1998,  1484,  1485,  1486,  1487,   204,  1489,  1490,   457,  1495,
      13,    14,  1498,  1499,   495,  1501,  2342,   135,     5,     5,
       5,   220,     8,   355,   356,   495,  2024,     5,    14,   486,
    2356,   230,   481,  2031,  1520,  2121,   287,   355,   356,    25,
     407,   495,   409,    29,   258,   259,   495,     5,  1534,   364,
     365,   495,  2093,  2690,  1540,   364,   365,   289,   355,   356,
     355,   356,  1532,   146,   431,   264,   495,   434,  2175,  1555,
    2177,  2927,   495,  2929,   926,   927,   495,  1448,   535,   536,
     495,   495,   482,   483,   484,   495,   486,   487,   488,   489,
     490,   491,  2246,   495,   495,     9,  1582,   495,   458,   296,
     499,    97,   215,   499,   496,    36,   374,  2191,   340,  1595,
     164,  1597,   344,  1599,   282,   164,   280,   495,  1604,   495,
     231,   578,   414,  1609,   145,    86,   499,   482,   483,   484,
     414,   486,   487,   488,   489,   490,   491,    54,   159,    54,
     289,   598,   374,   164,    36,    88,  3002,    90,   414,    92,
     414,   261,   351,  1582,   496,   504,  2213,  1586,   457,  1645,
    1646,  1647,  2413,    55,  1650,  2527,  1595,   414,  1647,   150,
      93,   289,  1658,  1659,  1660,  1661,   497,   142,  2176,   270,
     527,   270,  1668,   495,  1555,  2656,  1672,    36,  2934,  1675,
    2247,   340,   213,   495,   495,   344,  2413,     9,    35,   412,
     412,  2418,   493,   493,   414,  1691,  1692,   414,   414,   441,
    1696,  2208,   233,   414,   106,   496,   287,  1696,   453,   499,
     495,   367,   340,    11,  1710,   374,   344,  1713,  1599,  1715,
     499,   482,   483,   484,   342,   486,   487,   488,   489,   490,
     491,   499,   494,  2460,  2461,  2243,   501,   504,   275,  1735,
     412,   495,  2521,   495,   178,  2617,   374,   403,   414,   160,
    1746,   282,   169,   496,   495,   438,  1746,    36,   213,   499,
     291,  2425,  2426,   377,   222,  1761,  2362,   286,  1746,   307,
     499,  1761,  2454,   307,   222,   496,  1765,   495,   270,   222,
    1760,  2377,   441,  1761,  1780,   283,   291,   323,   444,   450,
     450,  1760,   495,   270,    36,   197,   495,  1760,  1760,  1795,
    1796,   457,   150,  1760,   150,   457,    36,   270,   496,   285,
     496,   493,   496,   441,   478,   478,   496,  2689,  1814,   496,
     496,   285,   175,   403,   270,   481,    36,    36,   496,   494,
     169,   169,   499,   153,   496,  1831,  1832,  1833,    94,   495,
     497,   808,   496,   496,   478,   198,   248,   496,   496,   496,
     707,   496,   496,   496,   256,   496,     6,   454,   496,   496,
     496,    11,   495,   414,   495,    15,   268,  2730,   495,   495,
      20,    21,    22,    23,    24,   454,  1872,    27,   444,   846,
      30,    31,   285,   236,    34,    35,   499,   286,   480,  2650,
     484,   286,   286,   436,   499,   270,   241,   299,  1837,   430,
     414,   482,   483,   484,   495,   486,   487,   488,   489,   490,
     491,   150,  2639,  2640,   170,  1911,  2424,   884,   198,   289,
    1900,   150,  1915,  2650,   150,  1921,   277,   414,   414,   414,
     414,    81,    36,   277,   496,   495,   494,   290,    88,    89,
      90,    91,    92,  1882,   346,   342,   150,   496,   204,   283,
     285,    36,   499,   457,    36,   150,   496,   814,   527,  1898,
     150,  1957,   494,  1959,   220,   494,   368,   275,   141,   169,
      55,    11,   164,   496,   230,  1955,   496,   499,   496,   496,
     496,  1977,   169,   495,  1980,   496,   388,   454,   295,   403,
    1986,   958,   959,  1989,   961,   178,  1992,   169,   499,   481,
      84,   443,  1998,  1999,  2000,  2001,  2002,   360,   264,  2005,
    2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,  2014,   348,
    1959,   106,  2018,  2019,  2067,  1964,  2022,  1966,  2024,   285,
    1911,  1970,  1971,  2029,   487,  2031,  2521,  2900,  2034,  2984,
     496,   286,   496,   495,   495,  2034,   173,  2043,   150,   499,
    2046,   496,  2048,   425,   407,    36,   409,   496,     0,  2055,
    2056,   496,   499,  2059,  2060,   496,   495,   495,  2064,  2065,
     496,    36,   425,    79,   438,   494,  2065,   499,   431,   169,
     496,   434,   495,   495,  2080,   220,  2082,   496,   496,   499,
    2080,   496,  2082,  2082,   496,   351,   496,   495,  2094,  1980,
     496,   405,  2080,   294,  2082,   220,   495,   292,  2104,    21,
      54,   182,   197,   496,   496,   484,   496,  1998,   188,   200,
     457,   275,   275,   497,  2120,   414,   497,   484,   581,   497,
     497,   497,   497,   414,   497,   497,   993,   497,   707,   497,
    2757,   497,  2650,  2024,  2615,  2138,  2772,   497,   497,    36,
    2031,    93,   270,    36,   497,   497,     8,   497,   107,    11,
     613,   497,    74,   248,    16,    17,    18,   497,   495,   497,
    2163,   256,   497,  2934,  2055,  2171,   497,   496,    90,  2175,
    2176,  2177,   438,   268,   497,  2178,  2179,  2180,  2181,  2182,
    2183,  2184,  2185,  2186,  2187,   497,    50,   497,   497,   652,
     653,   654,   655,   145,   497,   497,   497,  2934,   457,   285,
     495,    36,   169,  2721,   299,   220,  2724,   159,   495,   495,
     495,   456,   164,    86,   131,  2205,  2820,   169,   499,   496,
     495,   334,   144,   495,   222,    81,   178,  2176,  2864,   115,
     182,    95,   154,    36,   150,   814,    73,  2243,   496,   122,
     150,  2231,    36,  2233,   166,   496,   356,   356,   304,   171,
      36,   346,  2201,   495,  2260,   496,   499,   121,  2843,   325,
    2845,   213,  1239,   495,   495,   495,   495,   443,    73,    36,
     438,   425,   187,   368,   495,   139,   198,    67,   288,   143,
      67,   233,    54,   495,   495,  2176,   499,   496,    36,  1266,
     438,   374,   484,   388,   275,  2298,   187,  2778,   246,   495,
      36,   165,  2308,  2309,   168,   425,  2933,  2313,  2314,   495,
     288,   288,  2318,  1180,  1181,  2321,  2322,  2939,   495,   183,
    2326,   243,   496,   496,   496,   247,   496,   487,  1195,   495,
     282,   491,   358,   285,   494,   268,   285,   496,     9,   291,
    2346,   341,   502,   527,  2350,   496,  2346,   200,   285,   285,
    2350,   355,  2243,   496,  1331,   217,   495,   120,  2346,   436,
      33,     9,  2350,    22,   496,   598,  2372,  1462,  2158,   529,
     530,   531,  2171,   325,  1826,  2376,  2118,  2591,  2859,  2858,
    2930,  2418,  2216,  2936,  2374,  2375,   546,  2764,   310,  3009,
    2983,  2971,   980,  2673,  1832,  1820,   348,  2933,  2981,  2175,
    2406,  2221,   324,  1817,  2931,   565,   566,   567,   568,  2415,
     570,   275,  1228,  1390,   993,  1180,  2934,  2201,  2424,   283,
    2369,   581,  1888,  2314,  1957,   287,  2521,   946,   918,  1780,
     590,  1433,   968,   967,  2832,   357,  2853,  2966,   360,  1795,
    1405,   601,  2098,  2913,  2847,  2368,   368,  2743,  2454,   371,
     970,   403,  1319,   613,  1761,  2082,  1432,  2352,  2337,  2718,
    2080,  2822,   326,   145,  2821,   928,  2839,  1280,   390,  2840,
    2587,  1280,  1280,  1280,  2916,  1357,  2917,   159,   430,  2954,
    1673,   403,   164,  1714,  1781,  1605,   438,  1501,   410,  1271,
     953,  1711,   652,   653,   654,   655,   566,   419,  2488,  2372,
    2097,  1894,   454,   425,   456,   457,  1749,  2814,  1595,  1382,
     109,   110,   952,  2503,  2119,  2521,   979,  1240,  1383,    -1,
      -1,  2527,    -1,   707,  2530,    -1,    -1,  2533,   450,   992,
      -1,   213,    -1,  2424,    -1,    -1,  2542,  2543,    -1,    -1,
    2546,   493,    -1,    -1,   496,   497,   498,    -1,  2497,    -1,
    1013,   233,    -1,  2559,    -1,  1532,    -1,    -1,    -1,  2559,
      -1,    -1,  2568,  2454,    -1,    -1,    -1,  2573,  2568,    -1,
    2576,  2559,  2521,  2573,    -1,    -1,  2576,  2583,  2584,    -1,
    2568,  1448,    -1,    -1,    -1,  2573,   185,   186,  2576,  2595,
      -1,  2597,    -1,    67,    -1,  2595,    -1,    -1,    -1,    73,
     282,  1180,  1181,    -1,    -1,    -1,    -1,  2595,    -1,   291,
      -1,  2617,    86,  2616,    -1,    -1,  1195,    -1,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
     814,    -1,    -1,    -1,    -1,    -1,    -1,  2586,    -1,  2530,
      -1,   115,    -1,   117,  2650,    -1,    -1,    -1,  2651,  2652,
      -1,   250,   251,   252,   253,   254,   255,    -1,   818,   258,
     259,    -1,    -1,    -1,    -1,    -1,    -1,  2670,    -1,    -1,
    1647,    -1,  2662,    -1,    -1,    -1,    -1,  2667,    -1,  2685,
      -1,    -1,    -1,  2689,  2690,  2685,    -1,    -1,  1555,    -1,
      -1,  1154,  1155,    -1,    -1,    -1,  2686,  2685,    -1,   173,
      -1,  2650,    -1,    -1,    -1,    -1,    -1,  2713,    -1,    -1,
      -1,  2717,    -1,    -1,    -1,  2721,    -1,  2717,  2724,  1696,
      -1,    -1,    -1,    -1,  2730,   885,    -1,    -1,   202,  2717,
       8,  2730,  1599,    11,    -1,    -1,    -1,  1714,  2744,    -1,
    1319,  2747,    -1,  2746,    -1,    -1,    -1,    -1,   430,   527,
      -1,  2757,    -1,  1730,    -1,  2761,  2762,    -1,    -1,  2650,
      -1,    -1,    -1,    41,    -1,   364,   365,    -1,   928,  1746,
      48,  2774,    -1,    -1,    -1,  1238,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1760,  1761,    -1,   946,   947,  1765,    -1,
      -1,    -1,   952,   953,   954,    73,   270,    -1,    -1,  2690,
      -1,   275,    -1,    -1,    -1,  2795,    -1,    -1,    -1,   993,
      -1,   493,    -1,    -1,   496,   497,  2822,    -1,    -1,   979,
     980,    -1,  2822,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2721,    -1,   992,  2724,  2822,    -1,    -1,  2843,  2787,  2845,
      -1,  2847,    -1,    -1,   318,  2851,    -1,    -1,     0,  1009,
      -1,    -1,  2858,  1013,    -1,    -1,    -1,    -1,  2858,    -1,
     334,    -1,    -1,    -1,  2854,   143,    -1,    -1,    -1,  1448,
    2858,    -1,    -1,  2879,   527,    -1,   475,   476,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2900,    -1,   174,  1360,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2913,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,   195,  1381,    -1,
    1383,    -1,    -1,  1900,    -1,    -1,    -1,  2933,  2934,   707,
      -1,    -1,    -1,    -1,    -1,     3,    -1,     5,    -1,    -1,
      -1,    93,    -1,    -1,  2950,    -1,    -1,  2953,  2954,    -1,
    2950,    -1,    -1,  2943,   232,    -1,    -1,   431,    -1,    -1,
      -1,    -1,  2950,    -1,   438,    -1,   527,  1430,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1555,    -1,  1955,    -1,
      -1,    -1,  2988,    -1,    -1,  2934,  1146,    -1,    -1,    -1,
      -1,    -1,    -1,   145,  1154,  1155,  1180,  1181,    -1,    -1,
      -1,    -1,    -1,    -1,  1164,    -1,    -1,   159,    -1,   287,
      -1,  1195,   164,    -1,    -1,    -1,    -1,   169,    -1,    -1,
    1599,    -1,    -1,    -1,    -1,    -1,   178,    -1,  3034,    -1,
     182,    -1,    -1,    -1,    -1,    -1,   814,  1197,    -1,    -1,
      -1,   109,   110,  2934,  1911,    -1,    -1,  1510,  1511,    -1,
      -1,    -1,    -1,    -1,   707,    -1,    -1,  2034,    -1,    -1,
      -1,   213,    -1,    -1,    -1,    -1,    -1,    -1,  1228,  1229,
      -1,  1231,  1232,    -1,  1234,  1235,    -1,    -1,  1238,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,  2065,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,   379,    -1,  2080,    -1,  2082,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1980,    33,    -1,    -1,   185,   186,    -1,
      -1,    -1,    -1,    -1,    -1,  1285,    -1,    -1,    -1,    -1,
     282,  1998,    -1,   285,    -1,  1319,  1296,    -1,    -1,   291,
      -1,    -1,    -1,    -1,    -1,    -1,   707,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2024,    -1,    -1,
      -1,   814,    -1,    -1,  2031,    -1,    -1,    -1,  1328,    -1,
      -1,    -1,    -1,   325,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   250,   251,   252,   253,   254,   255,  2055,    -1,
     258,   259,    -1,    -1,    -1,    -1,   348,    -1,    -1,  1359,
    1360,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,
     488,   489,   490,   491,    -1,   993,    -1,    -1,     0,    -1,
      -1,  1381,     8,  1383,    -1,    11,    -1,    -1,  2205,    -1,
      -1,    -1,  1392,    -1,  1394,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   403,    -1,   814,  2231,    41,  2233,    -1,    -1,    -1,
      -1,    -1,    48,    -1,  1448,    -1,    -1,    -1,    -1,    -1,
    1430,    -1,    -1,    -1,    -1,    -1,    -1,  1740,   430,  1439,
    1440,    -1,    -1,    -1,    -1,    -1,   438,    73,    -1,    -1,
    1450,  1451,  1452,  1453,    -1,  1455,   364,   365,   217,    -1,
      -1,  1461,   454,  1463,   456,   457,    -1,    -1,    -1,  2176,
      -1,    93,    -1,    -1,  1474,  1475,    -1,    -1,    -1,  1479,
    1480,    -1,    -1,    -1,  1484,  1485,  1486,  1487,    -1,  1489,
    1490,    -1,  1911,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     993,   493,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,
    1510,  1511,  1512,    -1,    -1,    -1,    -1,   143,    -1,    -1,
      -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   287,  2346,
    1530,  1555,    -1,  2350,    -1,    -1,  2243,   159,    -1,    -1,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   178,  2374,  2375,    -1,
     182,  1980,  1180,  1181,   190,    -1,    -1,   475,   476,   195,
      -1,    -1,    -1,    -1,    -1,  1599,    -1,  1195,    -1,  1998,
      -1,    -1,    -1,    -1,    -1,    -1,  1889,  1890,    -1,    -1,
      -1,   213,   993,    -1,    -1,    -1,    -1,    -1,    -1,  1902,
    1903,  1904,    -1,    -1,    -1,  2024,   232,  2314,    -1,    -1,
      -1,   233,  2031,    -1,    -1,    -1,    -1,    -1,    -1,     8,
    1923,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,  2055,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1953,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
     282,   287,    -1,   285,    -1,    -1,  1666,    -1,    -1,   291,
      -1,  2488,    -1,  1673,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,  2503,  1180,  1181,  1645,
    1646,    -1,    -1,    -1,  1650,    -1,    -1,    -1,    -1,    -1,
      -1,  1319,  1195,   325,    -1,    -1,    -1,    -1,  1708,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2424,    -1,    -1,
      -1,    -1,    -1,   482,   483,   484,   348,   486,   487,   488,
     489,   490,   491,    -1,    -1,  1691,  1692,    -1,    -1,    -1,
    1740,    -1,    -1,    -1,    -1,    -1,  1746,  2454,    -1,    -1,
      -1,  2568,    -1,   379,    -1,    -1,  2573,  2176,    -1,  2576,
      -1,  1761,    -1,     8,    -1,  1765,    11,    -1,  1768,    -1,
    1770,    -1,    -1,    -1,  2077,  2078,  2079,    -1,    -1,  1180,
    1181,   403,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1195,    -1,    41,    -1,    -1,    -1,
      -1,   190,    -1,    48,    -1,    -1,   195,    -1,   430,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   438,    -1,    -1,    -1,
      -1,    -1,  1822,  2530,  2243,    -1,  1319,    -1,    73,    -1,
    1448,    -1,   454,  2136,   456,   457,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   232,    -1,  2662,    -1,    -1,    -1,    -1,
    2667,    -1,    -1,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,  2686,
      -1,   493,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1884,    -1,    -1,  1911,    -1,  1889,
    1890,    -1,    -1,    -1,    -1,  2314,    -1,    -1,   287,    -1,
    2717,  1901,  1902,  1903,  1904,    -1,  2209,    -1,    -1,    -1,
    2213,    -1,    -1,  2730,    -1,  1915,    -1,    -1,  1319,    -1,
      -1,    -1,    -1,  1923,    -1,    -1,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,  1935,    -1,  1555,    -1,    -1,
      -1,    -1,    -1,  2650,  2247,   190,    -1,    -1,    -1,    -1,
     195,  1951,    -1,  1953,    -1,  1448,  1980,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1968,  1969,
      -1,    -1,    -1,    -1,  1998,    -1,    -1,    -1,  2795,    -1,
      -1,  1599,    -1,  2690,    -1,    -1,    -1,   232,    -1,    -1,
     379,  1991,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2024,    -1,    -1,    -1,    -1,  2424,    -1,  2031,    -1,    -1,
      -1,    -1,    -1,    -1,  2721,    -1,    -1,  2724,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2329,  2330,  2331,  2332,
      -1,  2055,    -1,    -1,    -1,  2454,    -1,  2854,    -1,    -1,
      -1,    -1,   287,  1999,  2000,  2001,  2002,  1448,    -1,  2005,
    2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,  2014,    -1,
      -1,     8,  1555,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,  2077,  2078,  2079,
    2080,    -1,  2082,  2083,    -1,    -1,    33,    -1,  2088,  2089,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,  2059,  2060,    -1,  1599,    -1,    -1,    -1,
      -1,  2530,    -1,    -1,    -1,    -1,    -1,    -1,  2118,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2943,    -1,    -1,    -1,
      -1,    36,    -1,    -1,   379,    -1,  2136,    -1,  2138,    -1,
      -1,    -1,  2142,  2143,  2144,    -1,  2146,    -1,    -1,    -1,
      55,    -1,  2176,    -1,  1555,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2163,     8,  2165,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,  2178,  2179,
    2180,  2181,  2182,  2183,  2184,  2185,  2186,  2187,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1599,    -1,
      -1,   106,   107,    -1,  2204,    -1,    -1,    -1,    -1,  2209,
     115,    -1,    -1,  2213,   565,   566,    -1,    -1,    -1,  2243,
      -1,  2221,    -1,    -1,    -1,    -1,    -1,  2934,    -1,    -1,
      -1,  2650,    -1,     0,   479,  2235,    -1,    -1,    -1,    -1,
      -1,   486,   487,   488,   489,   490,   491,  2247,    -1,    -1,
      -1,    -1,    19,    -1,  2254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    -1,    31,    32,    -1,    -1,   173,    -1,
     217,  2690,    -1,    -1,    -1,    -1,    -1,   628,   629,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,
    2314,    -1,   197,  1911,    -1,    -1,    -1,    -1,  2298,    -1,
      -1,    68,  2721,    -1,  2304,  2724,    -1,    -1,    -1,    -1,
      -1,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2624,    -1,    -1,    91,    -1,    93,  2327,    -1,  2329,
    2330,  2331,  2332,    -1,    -1,    -1,  2336,  2337,    -1,  2339,
     287,    -1,  2342,   248,   111,    -1,  2346,    -1,    -1,    -1,
    2350,   256,    -1,    -1,    -1,    -1,  2356,    -1,   125,    -1,
    2663,    -1,  1980,   268,    -1,   270,    -1,    -1,   135,    -1,
      -1,    -1,  2372,   217,   141,    -1,  2376,    -1,    -1,  2682,
    1998,  2381,   149,    -1,   151,   152,    -1,  2387,    -1,    -1,
      -1,    -1,    -1,  2393,   299,    -1,    -1,    -1,   165,  2399,
    2424,    -1,    -1,    -1,    -1,    -1,  2024,    -1,    -1,    -1,
      -1,    -1,    -1,  2031,    -1,    -1,    -1,   900,  1911,  2419,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,
    2454,    -1,    -1,    -1,    -1,    -1,    -1,  2055,    -1,    -1,
      -1,   346,   209,   287,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,  2755,    -1,    16,    17,    18,    -1,   941,    -1,
      -1,    -1,   813,   368,    -1,    -1,    -1,    -1,   235,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   830,
      -1,    -1,    -1,   388,    -1,   390,    -1,  1980,   393,  2489,
    2793,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2502,    -1,    -1,  1998,  2530,    -1,   859,    -1,
    1911,    -1,    -1,    -1,  2514,  2934,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   879,   880,
     881,  2024,    -1,   884,    -1,   482,   483,   484,  2031,   486,
     487,   488,   489,   490,   491,   312,    -1,    -1,   315,    -1,
    2550,    -1,    -1,    -1,    -1,    -1,   907,    -1,  2176,  2559,
    2560,    -1,  2055,  2563,    -1,    -1,  2566,  1050,  2568,    -1,
      -1,  2527,    -1,  2573,  1057,    -1,  2576,   344,  2578,  1980,
      -1,  2581,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,
     495,    -1,    -1,    -1,    -1,  2595,    -1,  1998,    -1,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,   960,
      -1,   378,    -1,   964,   965,  2615,  2616,    -1,    -1,    -1,
      -1,   388,    -1,  2024,  2624,  2243,  2650,    -1,    -1,    -1,
    2031,    -1,   399,    -1,    -1,    -1,   403,    -1,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    -1,
      -1,  2651,  2652,    -1,  2055,   217,    -1,    -1,    -1,    -1,
      -1,  2617,    -1,  2663,    -1,  2665,  2690,  1018,    -1,    -1,
    2670,    -1,   439,    -1,  1025,    -1,    -1,   444,    -1,    -1,
      -1,    -1,  2682,  2176,    -1,  2685,    -1,    -1,    -1,    -1,
     457,    -1,    -1,    -1,    -1,  1046,  2314,  2721,    -1,    -1,
    2724,    -1,    -1,    -1,  2704,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   481,    -1,    -1,  2717,    -1,    -1,
      -1,    -1,  2722,    -1,    -1,   287,    -1,    -1,   495,    -1,
      -1,   498,    -1,  2689,    -1,    -1,    -1,    -1,    -1,    -1,
    2740,    -1,    -1,    -1,  2744,    -1,  2746,    -1,    -1,    -1,
    2243,    -1,    -1,    -1,    -1,  2755,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2774,  2176,    -1,    -1,  2778,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1272,
      -1,    -1,    -1,  2793,    -1,    -1,    -1,    -1,    -1,    -1,
    1283,    -1,    -1,    -1,  1287,    -1,  2424,    -1,    -1,    -1,
    1293,  1294,  1295,    -1,    -1,    -1,    -1,    -1,    -1,  1302,
      -1,  2314,  2822,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2831,    -1,    -1,    -1,  2835,  2454,    -1,    -1,  2839,
      -1,    -1,  2243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,  2858,  2859,
    2860,  2861,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1358,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,  2888,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2904,    -1,    -1,    -1,    -1,    -1,
    2934,    -1,  2530,  2314,    -1,    -1,  2916,    -1,  1401,    73,
     482,   483,   484,  1274,   486,   487,   488,   489,   490,   491,
    2930,  2424,  1415,  1284,    -1,  1286,    -1,  1420,  1289,  1290,
    1291,  1292,    -1,    -1,  2944,    -1,    -1,    -1,    -1,    -1,
    2950,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2454,    -1,  1314,    -1,    -1,  2966,  2967,    -1,  1320,
    1321,  1322,  1323,  1324,    -1,    -1,    -1,    -1,  1329,  1330,
      -1,    -1,    -1,  1334,    -1,    -1,     8,  1338,    -1,    11,
    1341,  1342,  1343,  1344,  1345,  1346,  1347,  1348,  1349,    -1,
      -1,  1352,    -1,    -1,    -1,    -1,     8,    -1,  1359,    11,
      -1,  1362,    -1,    15,    16,    17,    18,    -1,    -1,    41,
     174,    -1,    -1,  2424,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    33,  2650,  1384,    -1,    -1,   190,  2530,    -1,    41,
      -1,   195,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    73,    -1,  2454,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   217,   218,  1416,  1417,    -1,    -1,    -1,
      -1,    73,  2690,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2721,    -1,    -1,  2724,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,
      -1,   143,    -1,    -1,  1607,    -1,    -1,    -1,    -1,  2530,
      -1,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1626,  1495,    -1,    -1,  1498,  1499,    -1,
    1501,    -1,   174,    -1,    -1,    -1,    -1,  2650,    -1,    -1,
    1643,    -1,  1645,  1646,    -1,  1648,    -1,  1650,   190,    -1,
      -1,  1654,   174,   195,  1657,    -1,    -1,    -1,    -1,  1662,
      -1,    -1,  1665,  1534,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,   195,  1677,    -1,    -1,  2690,  1681,  1682,
    1683,  1684,  1685,    -1,    -1,    -1,    -1,    -1,  1691,  1692,
     232,  1694,  1695,    -1,    -1,   217,   218,    -1,    -1,    -1,
      -1,    -1,    -1,  1706,    -1,   379,  1709,    -1,  2721,    -1,
     232,  2724,    -1,    -1,  1717,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  1726,    -1,    -1,  1597,    -1,    -1,  2650,
      -1,    -1,    -1,  1604,    -1,    -1,    -1,    -1,  1609,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,  1758,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   290,  2690,
      -1,    -1,    -1,    -1,    -1,    -1,  1647,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1658,    -1,  1660,
    1661,    -1,    -1,    -1,    -1,    -1,  2934,  1668,    -1,    -1,
    2721,  1672,    -1,  2724,  1675,   479,    -1,    -1,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,  1710,
      -1,    -1,  1713,    -1,  1715,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,    -1,    -1,    -1,   379,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,  1877,  1878,  1879,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1780,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2934,    -1,    73,  1795,  1796,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
      -1,    -1,    -1,  1814,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,  1976,    -1,    -1,    -1,   499,    -1,  1982,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,  1995,  1996,  1997,    -1,  1999,  2000,  2001,  2002,
      -1,  1872,  2005,  2006,  2007,  2008,  2009,  2010,  2011,  2012,
    2013,  2014,  2015,  2934,    -1,    -1,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,   174,    -1,    -1,    48,    -1,    -1,
      -1,    -1,  2035,    -1,    -1,  2038,    -1,  2040,    -1,    -1,
     190,  2044,  2045,    -1,    -1,   195,    -1,    -1,    -1,    -1,
    1921,    -1,    73,    -1,    -1,  2058,  2059,  2060,  2061,    -1,
    2063,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,  1977,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,  1986,    -1,    -1,  1989,    -1,
     270,  1992,   143,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,  2139,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,  2018,  2019,    -1,
      -1,  2022,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2034,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,  2043,    -1,   195,  2046,    -1,  2048,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2056,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2064,  2065,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,    -1,    -1,
      -1,   232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2094,    -1,    -1,    -1,    -1,    -1,   379,
      -1,  2234,    -1,  2104,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2120,
      -1,   190,    -1,    -1,    -1,    -1,   195,    -1,  2261,    -1,
      -1,    -1,  2265,  2266,    -1,  2268,   287,    -1,  2271,  2272,
    2273,  2274,    -1,    -1,    -1,  2278,  2279,  2280,  2281,  2282,
    2283,  2284,  2285,  2286,  2287,  2288,  2289,    -1,    -1,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,  2300,    -1,    -1,
      -1,    -1,    -1,    -1,  2307,    -1,    -1,  2310,    -1,  2312,
      -1,    -1,    -1,  2316,    -1,    -1,  2319,  2320,    -1,    -1,
    2323,  2324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,
      -1,    -1,   482,   483,   484,    -1,   486,   487,   488,   489,
     490,   491,    -1,    -1,     8,    -1,    -1,    11,   287,    -1,
      -1,    15,    16,    17,    18,    -1,    -1,    -1,   379,    -1,
    2363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2371,    33,
      -1,    -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,  2384,    -1,    -1,    48,    -1,    -1,    -1,    -1,  2260,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2308,  2309,    -1,
     379,    -1,  2313,    -1,    -1,    -1,    -1,  2318,    -1,    -1,
    2321,  2322,    -1,    -1,    -1,  2326,    41,    -1,   479,    -1,
      -1,    -1,    -1,    48,    -1,   486,   487,   488,   489,   490,
     491,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      -1,  2372,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
     174,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2523,    -1,    -1,    -1,  2527,    -1,   190,    -1,    -1,    -1,
      -1,   195,    -1,  2536,  2537,  2538,    -1,    73,  2541,    -1,
     479,  2544,  2545,    -1,  2415,    -1,  2549,   486,   487,   488,
     489,   490,   491,   217,   218,    -1,    -1,    -1,   143,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,   174,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,   270,    -1,    -1,   273,
     195,    -1,    33,    -1,  2617,    -1,    -1,    -1,    -1,    -1,
      41,    -1,    -1,   287,    -1,    -1,   290,    48,    -1,    -1,
      -1,    -1,    -1,  2636,   109,   110,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,    73,    -1,   190,    -1,    -1,    -1,    -1,   195,
      -1,    -1,  2533,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2542,  2543,    -1,    -1,  2546,    -1,    -1,    -1,    -1,
      -1,   217,   218,    -1,    -1,  2688,  2689,    -1,    -1,    -1,
      -1,  2694,  2695,  2696,    -1,    -1,   232,    -1,    -1,    -1,
      -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     185,   186,  2583,  2584,    -1,   379,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2597,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,  2738,  2739,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2753,   287,    -1,   174,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2765,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,   195,   250,   251,   252,   253,   254,
     255,    -1,    -1,   258,   259,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,   217,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   232,    -1,  2816,    -1,   479,    -1,    -1,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    -1,
      -1,  2834,   496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2713,   379,    -1,    -1,    -1,    -1,    -1,   270,
      -1,    -1,   273,  2856,    -1,    -1,    -1,    -1,    -1,  2730,
      -1,    -1,    -1,    -1,    -1,    -1,   287,  2870,    -1,   290,
      -1,    -1,    -1,  2744,    -1,    -1,  2747,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   364,
     365,  2762,    -1,    -1,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2918,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2941,    -1,
      -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,   379,    -1,
     496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2847,    -1,    -1,    -1,
    2851,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2991,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     475,   476,    -1,    -1,    -1,    -1,    -1,    -1,  2879,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     495,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2913,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,
      -1,   482,   483,   484,    -1,   486,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,   496,    -1,    -1,    -1,    -1,
      -1,    -1,  2953,  2954,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2988,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,  3034,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,   130,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,   488,    -1,    -1,    -1,    -1,   493,    -1,   495,   496,
      -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,   481,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,
     496,    -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,   481,    -1,    -1,    -1,
      -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,
     495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,   169,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,
      -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    34,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,   488,    -1,    -1,    -1,
      -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,   488,    -1,    -1,
      -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,
      -1,   502,   503,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,    -1,    -1,    -1,    -1,    -1,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,
     500,    -1,   502,   503,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,
      -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,
      -1,   500,    -1,   502,   503,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,
      -1,    -1,    -1,    -1,    -1,   493,    -1,   495,   496,    -1,
      -1,    -1,   500,    -1,   502,   503,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,
      -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,
     496,    -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,   169,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,
     495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,
      -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,
      -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,
      -1,   502,   503,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,
      -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,
     500,    -1,   502,   503,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,
      -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,
      -1,   500,    -1,   502,   503,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,
      -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,
      -1,    -1,   500,    -1,   502,   503,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,
      -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,
      -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,
     495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,     3,     4,     5,     6,
       7,   495,     9,    10,    -1,    -1,    -1,    -1,   502,   503,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    -1,
      -1,    -1,    -1,    -1,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,
      -1,    -1,    -1,    -1,    -1,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,    -1,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,    -1,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,     3,    -1,    -1,    -1,    -1,   493,    -1,
     495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,    -1,
      -1,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,   273,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,     3,   481,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   495,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     495,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   495,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,   285,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,     3,    -1,    -1,    -1,
      -1,    -1,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,   495,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,    -1,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,     3,   481,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,    -1,
       3,   481,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   495,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,    -1,   449,   450,   451,   452,
      -1,    -1,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,    -1,     3,   481,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   495,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,    -1,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,    -1,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   495,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
      -1,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     495,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,    -1,   495,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,    -1,    -1,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,    -1,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,   476,   477,
     478,    -1,     3,    -1,   482,   483,   484,     8,   486,   487,
     488,   489,   490,   491,    -1,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,    -1,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,    -1,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,    -1,
      -1,   482,   483,   484,    -1,   486,   487,   488,   489,   490,
     491,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    33,    15,    16,    17,
      18,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    33,    -1,    -1,    -1,     8,
      -1,    -1,    11,    41,    -1,    -1,    15,    16,    17,    18,
      48,    -1,    -1,    -1,    -1,    -1,    73,    -1,     8,    -1,
      -1,    11,    -1,    -1,    33,    15,    16,    17,    18,    -1,
      -1,    -1,    41,    -1,    -1,    73,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,   174,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,   174,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,
     217,   218,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,   217,
     218,   190,    -1,    -1,   174,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,    -1,   195,    -1,    -1,   217,   218,
      -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,   217,   218,    -1,
     287,    -1,   270,   290,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,   174,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   270,    -1,    -1,   273,    -1,    -1,   190,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,   287,    -1,
     270,   290,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   217,   218,    -1,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,   379,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,    -1,    -1,    -1,    33,    -1,   270,    -1,    -1,
     273,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    -1,   287,    -1,    -1,   290,    -1,    -1,
     379,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    -1,    -1,    -1,    73,    -1,    -1,    -1,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,    -1,    73,    -1,    -1,   496,
      -1,   479,    -1,    -1,   482,   483,   484,    -1,   486,   487,
     488,   489,   490,   491,    -1,    -1,   379,    -1,   496,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,    -1,    -1,    -1,   174,   496,    -1,   479,
      -1,    -1,   482,   483,   484,    -1,   486,   487,   488,   489,
     490,   491,   190,    -1,    -1,    -1,   496,   195,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,    -1,    -1,    -1,    -1,    33,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    41,   232,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,   190,    -1,    -1,   479,    -1,   195,   482,
     483,   484,    -1,   486,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,   496,    -1,    73,    -1,    -1,    -1,    -1,
     217,   218,   270,    -1,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,   287,
      -1,     8,   290,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    23,    23,   270,    41,    -1,   273,    29,    29,    -1,
      -1,    48,    -1,    -1,    36,    36,    -1,    -1,    -1,    -1,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    55,    55,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   106,    -1,    -1,    -1,   217,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   135,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,   287,
      -1,   479,   290,    -1,   482,   483,   484,    -1,   486,   487,
     488,   489,   490,   491,    -1,   197,   197,    -1,   496,    -1,
     217,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,    -1,   248,   248,    -1,   496,
      -1,    -1,    -1,   270,   256,   256,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   268,    -1,    -1,
     287,   379,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,   289,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   299,   299,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,   340,
      -1,    -1,   344,   344,   346,   346,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,    -1,    -1,    -1,   368,   368,    -1,    -1,
      -1,   479,   374,   374,   482,   483,   484,    -1,   486,   487,
     488,   489,   490,   491,    -1,    -1,   388,   388,   496,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   441,
     441,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   479,     3,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,    -1,    -1,   494,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,    -1,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,   285,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,     4,     5,    -1,    -1,    -1,     9,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,   285,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,     4,     5,
      -1,    -1,    -1,     9,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,   285,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,    -1,    -1,     8,    -1,    -1,    11,    -1,
     486,   487,    15,    16,    17,    18,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    33,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    41,     8,    -1,    -1,    11,    -1,    -1,    48,    15,
      16,    17,    18,    -1,    -1,     8,    -1,    -1,    11,    -1,
      73,    -1,    15,    16,    17,    18,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    41,    -1,    -1,    -1,    -1,
      33,    -1,    48,    36,    -1,    -1,    -1,    -1,    41,     8,
      -1,    -1,    11,    -1,    -1,    48,    15,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,   124,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,   174,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
      -1,    -1,    -1,    -1,   174,    -1,    -1,   190,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,    -1,   195,    -1,   163,    -1,    -1,
      -1,    -1,    -1,    -1,   217,   218,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,   232,
      -1,   174,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,
      -1,    -1,   232,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   217,   218,    -1,    -1,   174,    -1,   270,    -1,    -1,
     273,    -1,    -1,    -1,   217,   218,   232,    -1,    -1,    -1,
     270,   190,    -1,   273,   287,    -1,   195,   290,    -1,   232,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,   270,    -1,    -1,
     273,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,   287,    11,    -1,   290,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,   313,    -1,    -1,
      -1,   270,    -1,    -1,   273,    -1,    -1,    33,    -1,    -1,
      36,    -1,    -1,    -1,    -1,    41,   379,    -1,   287,    -1,
      -1,   290,    48,    -1,    -1,    -1,    -1,    -1,    -1,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   308,
      -1,     8,    -1,    -1,    11,    -1,    -1,    73,    15,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,   438,   379,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
     379,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,   482,
     483,   484,    -1,   486,   487,   488,   489,   490,   491,   479,
      -1,    -1,   482,   483,   484,    -1,   486,   487,   488,   489,
     490,   491,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   479,   190,    -1,   482,   483,   484,   195,
     486,   487,   488,   489,   490,   491,   479,    -1,    -1,   482,
     483,   484,    -1,   486,   487,   488,   489,   490,   491,    -1,
      -1,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   169,    -1,    -1,    -1,   232,   174,    -1,    -1,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,   190,    -1,    -1,    -1,     8,   195,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
     217,   218,    33,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      41,   287,    -1,    -1,   290,   232,    -1,    48,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      -1,     8,    -1,   270,    11,    41,   273,    -1,    15,    16,
      17,    18,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,    -1,   290,    -1,    -1,    33,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    73,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,   379,    -1,    15,    16,    17,    18,    -1,
      -1,     8,    -1,    -1,    11,    -1,    73,    -1,    -1,    16,
      17,    18,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,   174,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,   379,    73,   195,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   217,   218,   174,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,   232,    -1,   479,   190,    48,   482,   483,   484,   195,
     486,   487,   488,   489,   490,   491,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,   217,   218,   190,    -1,    -1,    -1,    -1,   195,   270,
      -1,    -1,   273,    -1,    -1,    -1,   232,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   290,
     217,   218,   479,    -1,   174,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,   232,    -1,   174,    -1,    -1,
     190,    -1,    -1,    -1,   270,   195,    -1,   273,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,    -1,
      -1,   287,    -1,    -1,   290,    -1,    -1,   217,   218,    -1,
      -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,
     217,   218,   232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   174,    -1,   290,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,   379,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   270,   217,   218,   273,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,
     287,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,    -1,    -1,   411,    -1,   270,    -1,    -1,
     273,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,   287,    -1,    -1,   290,   479,    -1,
      -1,   482,   483,   484,    -1,   486,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,   479,
      -1,    -1,   482,   483,   484,    -1,   486,   487,   488,   489,
     490,   491,   479,   190,    -1,   482,   483,   484,   195,   486,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     217,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,   482,
     483,   484,    -1,   486,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,     5,   479,    -1,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,    -1,   169,    -1,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,   227,   228,   229,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
      -1,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
     228,   229,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,    -1,   169,    -1,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,   227,   228,   229,    -1,   231,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,   273,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    -1,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,   273,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    -1,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,   166,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,   431,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,   166,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,   232,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,   285,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,   286,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,     4,    -1,
      -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,    -1,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,    -1,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,   155,
      -1,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,    -1,    -1,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,    -1,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,    -1,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,    -1,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,    -1,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
     476,   477,   478,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,    -1,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,    -1,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,    -1,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,    -1,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,    -1,   439,   440,   441,   442,   443,    -1,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     475,   476,   477,   478,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,    -1,   151,   152,   153,
     154,   155,    -1,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,    -1,    -1,   271,   272,   273,
     274,    -1,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,    -1,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,    -1,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
      -1,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   475,   476,   477,   478,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    -1,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,    -1,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,    -1,    -1,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,    -1,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,    -1,    -1,   271,   272,
     273,   274,    -1,    -1,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
      -1,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,    -1,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,    -1,   419,    -1,    -1,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,    -1,   439,   440,   441,   442,
     443,    -1,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   475,   476,   477,   478
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   165,   194,
     209,   235,   312,   315,   344,   353,   367,   374,   378,   388,
     399,   403,   439,   444,   457,   481,   495,   506,   507,   508,
     509,   520,   521,   524,   526,   530,   545,   546,   548,   550,
     557,   559,   606,   607,   614,   617,   618,   635,   636,   637,
     638,   639,   640,   691,   692,   836,   839,   842,   849,   850,
     851,   852,   853,   860,   864,   870,   872,   877,   881,   882,
     885,   886,   888,   889,   891,   416,   460,   558,   198,   360,
     368,   403,   450,   558,     3,    19,    20,    21,    22,    23,
      24,    25,    26,    28,    29,    30,    38,    39,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      54,    55,    56,    57,    58,    59,    62,    63,    64,    65,
      66,    68,    69,    70,    71,    72,    74,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    87,    88,    89,
      90,    91,    92,    94,    95,    96,    97,   101,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   116,   118,
     119,   120,   121,   122,   123,   125,   126,   127,   128,   129,
     132,   133,   134,   135,   136,   138,   139,   140,   142,   143,
     144,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   158,   160,   161,   162,   163,   165,   167,   168,
     170,   171,   172,   173,   174,   175,   177,   179,   180,   181,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   196,   197,   198,   199,   200,   201,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   214,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     229,   230,   231,   232,   234,   235,   236,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   271,   272,
     273,   274,   276,   277,   278,   279,   280,   281,   283,   284,
     287,   288,   289,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   319,   320,
     321,   322,   323,   324,   326,   327,   328,   329,   330,   331,
     332,   333,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   368,   369,   370,   371,   372,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   401,   402,   404,   405,   406,   407,   408,
     409,   410,   412,   413,   416,   417,   418,   419,   420,   422,
     423,   424,   425,   426,   427,   428,   429,   432,   433,   434,
     435,   436,   439,   440,   441,   442,   443,   444,   445,   447,
     448,   449,   450,   451,   452,   455,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   749,   821,   825,
     828,   894,   895,   896,   558,    50,   495,   630,   175,   236,
     290,   360,   407,   409,   425,   431,   434,   604,   848,     3,
      27,   244,   315,   396,   819,   825,   894,    21,    74,    90,
     144,   154,   166,   171,   198,   243,   247,   310,   324,   357,
     360,   368,   371,   390,   403,   410,   419,   425,   450,   608,
     609,   612,   558,   819,    93,   448,   495,   526,   617,   635,
     856,   860,   877,   891,   108,    68,   209,   108,     5,   824,
     825,   871,   871,   825,   819,    27,   412,   416,   825,   883,
     884,   887,   558,    27,   130,   647,   648,   175,   236,   360,
     372,   412,   865,   866,   887,   558,   444,   635,   640,   887,
       5,   286,   704,   816,   825,   826,   170,   495,   874,   495,
     332,   641,   642,   819,   641,   636,   637,     0,   498,   120,
     208,   436,   145,   213,   291,   430,   650,   651,   636,   638,
     639,   499,   448,   854,    27,   412,   416,   635,   887,   188,
     816,   819,   188,   816,   188,   704,   188,   816,   495,   493,
     497,   800,   802,   526,   617,   635,   838,   877,   816,   407,
     409,   407,   409,   342,   188,   825,   825,   830,   171,   243,
     247,   332,   368,   403,   450,   615,   198,    27,   819,   249,
     419,   107,   403,   403,   450,   363,     3,    44,    49,    50,
      51,    52,    64,    65,    74,    82,    94,   101,   112,   113,
     134,   162,   168,   170,   174,   188,   190,   204,   211,   212,
     214,   217,   218,   220,   230,   232,   244,   263,   264,   265,
     273,   278,   294,   296,   329,   351,   355,   375,   379,   382,
     396,   405,   412,   413,   424,   445,   448,   613,   715,   716,
     718,   720,   722,   724,   726,   727,   728,   730,   731,   732,
     734,   735,   829,   894,   897,   188,   610,   830,   188,   817,
     819,   188,   819,   495,   549,   290,   604,   856,     3,    48,
      49,    51,    52,    64,    65,    72,   112,   113,   150,   156,
     162,   179,   180,   205,   211,   212,   214,   244,   263,   265,
     269,   276,   278,   293,   297,   311,   314,   329,   355,   375,
     382,   396,   398,   412,   413,   418,   420,   424,   444,   445,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   857,   859,   860,   862,   863,   894,   898,   854,   824,
     871,   824,   484,   495,   495,   837,   478,   219,   497,   285,
       4,     6,     7,     8,     9,    10,    35,    49,    51,    52,
      60,    61,    64,    65,    72,    74,    98,    99,   100,   101,
     102,   103,   104,   112,   113,   115,   150,   156,   157,   162,
     179,   180,   211,   212,   214,   237,   238,   263,   265,   270,
     275,   276,   278,   287,   297,   311,   329,   355,   373,   382,
     398,   412,   413,   418,   420,   421,   424,   437,   445,   479,
     486,   487,   488,   493,   495,   500,   502,   503,   636,   681,
     719,   722,   725,   726,   727,   729,   730,   731,   734,   735,
     746,   748,   749,   750,   752,   766,   767,   774,   794,   799,
     806,   807,   808,   821,   822,   823,   824,   825,   805,   807,
     865,   865,   824,   865,   478,   169,   414,   484,   495,   816,
     488,   802,     3,   168,   170,   448,   860,   873,   875,   168,
     876,   746,   778,   779,   825,   641,   499,   495,   832,   496,
     496,   508,   169,   215,   704,   878,    27,   130,   646,   646,
      54,   646,   159,   164,   233,   282,   656,   658,   659,   684,
     686,   687,   688,   650,   651,   495,   816,   478,   219,   150,
      23,    29,   135,   289,   340,   344,   374,   441,   514,   517,
     518,   340,   150,    36,    55,   106,   197,   248,   256,   268,
     299,   340,   346,   368,   374,   388,   517,   551,   554,   150,
     340,   374,   517,   150,   340,   374,   517,     3,    27,    44,
      50,    74,    82,    94,   101,   130,   168,   170,   174,   190,
     204,   217,   218,   220,   230,   232,   244,   264,   273,   294,
     296,   351,   379,   396,   405,   424,   446,   448,   488,   496,
     746,   781,   782,   827,   833,   894,   899,   746,   801,     3,
      27,    31,    32,    33,    34,    35,    36,    37,    40,    53,
      60,    61,    67,    73,    75,    86,    93,    98,    99,   100,
     102,   103,   104,   115,   117,   124,   130,   131,   137,   141,
     145,   157,   159,   164,   166,   169,   176,   178,   182,   195,
     202,   213,   215,   227,   228,   233,   237,   238,   270,   275,
     282,   285,   286,   290,   291,   308,   318,   325,   334,   348,
     367,   373,   384,   400,   403,   411,   414,   415,   421,   430,
     431,   437,   438,   444,   446,   453,   454,   456,   457,   820,
     834,   894,   898,   900,   800,   496,   495,   593,   604,   270,
     840,   497,   831,    36,   450,   450,   188,   816,   188,   816,
     893,   816,   816,    82,   845,   461,    83,   127,   302,   408,
     447,   733,   733,   733,   495,   721,   721,   314,   495,   723,
     150,   495,    64,    65,   733,   721,   718,   459,   481,   495,
     736,   495,   736,    58,   347,   499,   611,   495,    35,   717,
     495,   109,   110,   185,   186,   250,   251,   252,   253,   254,
     255,   258,   259,   364,   365,   475,   476,   495,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   721,   150,   499,
     611,   150,   499,   611,   150,   285,   779,   342,   403,   496,
     499,     4,   157,   285,   421,   486,   487,   553,   556,   823,
     824,   855,   857,   858,   861,   856,   495,   625,   629,   553,
     861,   867,   869,   781,   716,   783,    36,   231,   825,   495,
     803,   493,   746,   798,   495,   495,   164,   495,   495,   636,
     495,   495,   495,   746,   495,   495,   495,   495,   495,   495,
     495,   495,   495,   746,   746,   746,   146,   809,   810,   779,
     780,   636,   746,   778,   768,   769,   770,   825,   826,     9,
     803,   802,   495,   824,   495,   823,   824,     3,     8,    11,
      15,    16,    17,    18,    33,    36,    41,    48,    73,   174,
     190,   195,   217,   218,   232,   270,   273,   287,   290,   379,
     479,   482,   483,   484,   486,   487,   488,   489,   490,   491,
     772,   773,   774,   776,   458,   753,   803,   296,   746,   499,
     215,   643,   495,   824,   803,   497,   802,   643,     3,   115,
     236,   553,   735,   824,   868,    97,   115,   869,   115,   869,
     816,   496,   499,   854,   499,   496,   642,   817,    36,   878,
     528,   816,    36,   825,   374,   638,   638,    27,   488,   652,
     653,   746,   638,   161,   267,   672,   222,   268,   328,   377,
     436,     4,     9,    27,   667,   746,   486,   487,   668,   669,
     746,   748,   684,   685,   659,   658,   656,   657,   164,   687,
     280,   689,   656,   684,   779,   832,   231,   816,    67,    75,
      86,   166,   188,   318,   431,   574,   584,   600,   825,    75,
      86,   525,    86,   525,   495,   414,   495,   572,   242,   434,
     572,    86,   499,   414,   816,   718,   553,    54,   555,   553,
     553,   106,   248,   256,    54,   414,   457,   481,   552,   261,
     360,   552,   554,   704,    86,   414,   525,   360,   816,   414,
     360,   781,   781,   782,   496,   499,   650,   651,    13,    14,
     494,   504,   414,   592,   597,   825,   457,   628,   247,   332,
     403,   450,   150,    93,   546,   559,   841,   842,   889,   820,
     497,   142,   188,   816,   893,   816,   270,   547,   551,   270,
     495,   593,    36,   593,   495,   616,   188,   587,   825,   846,
     495,   779,   823,   613,   783,   733,   733,    35,   717,   412,
     412,   823,   823,   716,   714,   825,   493,   493,   823,   823,
     414,   414,   414,   414,   610,   830,   817,   819,   819,   830,
     496,   604,   188,   893,   856,   862,     4,   823,     4,   823,
     627,   634,   834,    50,    95,   121,   139,   143,   165,   168,
     183,   275,   283,   326,   631,   499,   496,   499,   496,   499,
     838,   779,   800,   780,   453,   795,   796,   746,   779,   495,
     823,   823,     3,   737,   738,   739,   740,   741,   742,   743,
     744,   784,   785,   824,   823,   823,   746,     8,    16,    17,
      18,   482,   483,   484,   486,   487,   488,   489,   490,   491,
     772,   777,   825,   746,   786,   486,   487,   495,   747,   748,
     774,   788,   496,   779,   746,   778,   789,   746,    53,   169,
     228,   415,   746,   779,   792,   746,   495,   825,   342,   814,
     494,   496,   499,   499,   501,   504,   779,   746,   745,   745,
     716,   746,   746,   746,   746,   746,     5,   834,   835,   412,
      40,   400,   804,   830,   746,   746,   495,   636,   793,   130,
     157,   270,   275,   280,   421,   432,   746,   275,   495,   746,
     414,    48,   174,   190,   195,   232,   379,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,    27,    34,   384,
     771,   178,   160,   754,   355,   495,   767,   808,   175,   236,
     403,   407,   409,   434,   644,   816,   169,   693,   781,   488,
     693,   495,   824,   496,   816,   873,   816,   881,   746,   496,
     495,   438,   880,   115,   298,   495,   527,   635,    36,   825,
     495,   532,   541,   542,   544,   825,    37,   124,   654,   654,
     499,   438,   654,   355,   356,   486,   487,   669,   671,   748,
     377,   222,   286,   307,   307,   499,   490,     4,   670,   823,
     670,   355,   356,   671,   815,   816,   274,   381,   690,   685,
     657,   496,   340,   517,   495,   188,   584,   819,   222,   270,
     222,   438,   495,   577,   716,   819,   825,   188,   819,   188,
     825,    23,   135,   374,   513,   516,   567,   582,   834,   819,
     576,   596,   834,   819,   514,   819,   340,   374,   517,   551,
     553,   830,   819,   553,   830,   819,   553,   340,   374,   517,
     819,   819,   819,   819,   340,   374,   517,   819,   819,   650,
     650,   650,   446,   782,   189,   345,   649,   746,   746,   746,
     801,   323,   624,   496,   499,   283,   169,   414,   619,   450,
     450,   816,   893,   816,   825,   290,   604,   820,   495,   270,
      36,   495,   150,   150,   232,   574,   584,   588,   591,   601,
     603,   825,   457,   459,   579,   149,   635,   457,   847,   496,
     781,    36,   270,   285,   779,   496,   496,   611,   496,   493,
     478,   478,   496,   496,   496,   499,   716,   823,   494,   823,
     496,   496,   738,   740,   741,   742,   741,   742,   742,   611,
     611,   285,   611,   403,   270,    36,   496,   499,   488,   495,
     553,   626,   861,    36,   623,   824,   623,   270,   275,   326,
     623,   623,   867,   716,   496,   494,   746,   137,   796,   797,
      36,   496,   746,   496,   496,   496,   169,   496,   496,   499,
     496,   497,   308,   787,   496,   747,   747,   746,    11,    16,
      17,    18,   195,   217,   287,   482,   483,   484,   486,   487,
     488,   489,   490,   491,   774,   747,   496,   496,   164,   169,
     790,   791,   499,   496,    36,   792,   779,   792,   792,   169,
     496,    36,   817,   818,   495,   746,   811,   803,   746,   768,
     746,   496,   496,   478,   747,   747,   143,   779,   169,   130,
     157,   275,   280,   421,   432,   495,   143,   777,   746,   400,
     804,   746,   793,   746,   414,   495,   636,   495,   495,   153,
     755,   407,   409,   407,   409,   816,   403,   645,   645,   645,
     227,   356,   495,   636,   694,   695,   696,   697,   704,   705,
     749,   751,   752,   825,   454,   710,   650,   810,   710,   823,
     745,   832,   838,   695,   454,   879,   444,   402,   437,   536,
     531,   540,   825,   285,   533,   825,   537,   544,   499,   693,
     484,   803,   480,   655,   655,   653,   287,   772,   775,   655,
       4,   823,   671,   286,   436,   668,   499,   241,   414,   746,
     270,   600,   495,   150,   495,   577,   198,   597,   598,   560,
     289,   570,   560,    23,   135,   344,   346,   374,   510,   511,
     512,   518,   519,   150,   611,   150,   611,   567,   582,   567,
     496,   499,   563,   824,   496,   499,   484,   497,   414,   360,
      86,   414,   525,   360,   414,   414,   414,   360,   649,   649,
     649,   782,   277,   277,   496,   494,   391,   392,   633,   824,
     592,   624,   893,   816,   495,    36,   593,   840,   342,   403,
     522,   523,   824,   150,   635,   597,   816,   816,   893,   816,
     496,   499,   283,   572,   283,   285,   571,   819,   457,   892,
     572,    36,   496,   403,   746,   150,   816,   496,   717,   823,
     736,   736,   717,   825,   494,   494,   830,   150,   627,   621,
     632,   861,   824,   824,   275,   597,   488,   597,   824,   824,
     411,   746,   141,   716,   496,   746,   746,   777,   746,   790,
     716,   747,   747,   747,   747,   130,   270,   280,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   746,   746,
     791,   790,   716,   496,   496,   496,   779,   716,   499,   496,
     746,   811,   812,   813,    36,   496,   745,   746,    33,    33,
     746,   496,   746,   169,   495,   783,   746,   496,   143,   747,
     747,   143,   143,   746,   746,   651,   454,   295,   759,   645,
     645,   645,   645,   816,   816,   816,   636,   705,   169,   636,
     696,   697,    36,   698,   699,   825,   499,    94,   170,   204,
     220,   230,   264,   351,   701,   699,    36,   698,   700,   825,
     481,   709,   802,   746,   178,   673,   649,   814,   673,   496,
     496,   746,   348,   535,   443,   496,   499,   803,    84,   535,
     496,   499,   532,   879,   746,   161,   226,   495,   655,   286,
     816,   819,   496,   150,   598,   584,   598,   560,   587,   499,
     496,   117,   202,   268,   270,   583,   495,   594,   173,   115,
     187,   270,   572,   552,   107,   115,   173,   270,   390,   393,
     554,   572,   374,   512,   425,   819,   825,   516,   596,     3,
      44,    50,    74,    82,    94,   101,   168,   170,   174,   190,
     204,   217,   218,   220,   230,   232,   244,   264,   269,   273,
     287,   294,   296,   351,   375,   379,   396,   405,   424,   448,
     486,   487,   553,   561,   599,   716,   775,   824,   827,   894,
     900,   834,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   496,   496,   496,   650,   552,   633,    36,   495,
     591,   635,   847,   604,   188,   816,   496,   499,   893,   892,
     496,   547,   495,    36,   581,   579,   588,    79,   549,   107,
     268,   635,   635,   587,   438,   844,   494,   716,   611,   893,
     496,   499,   597,   746,   496,   496,   791,   169,   130,   280,
     495,   496,   496,   499,   496,   825,   746,   746,   746,   783,
     496,   746,    33,    33,   746,   746,   143,   496,   496,   746,
     495,   760,   825,   816,   816,   816,   816,   699,   700,   495,
     496,   825,   826,   405,   664,   665,   495,   696,   220,   294,
     702,   696,   702,   220,   701,   702,   220,   665,   495,   825,
     665,   495,   292,    54,   182,   682,   496,   682,   824,   806,
     635,   298,   635,   531,   285,   495,   529,   484,   544,   535,
     777,   560,   584,   496,   496,   457,   590,   118,   191,   200,
     117,   440,   567,   585,    67,    73,    86,   115,   117,   173,
     202,   270,   275,   318,   334,   431,   438,   565,   566,   578,
      30,    54,   605,   188,   275,   553,   746,   605,   275,   486,
     487,   556,   825,   716,   611,   611,   244,   396,   827,   831,
     484,   414,   414,   649,   625,   438,   620,   622,   635,   597,
     496,   892,    36,   403,   270,   495,   824,    36,   847,   591,
     149,   635,   147,   196,   571,   120,   135,   317,   892,   107,
     457,   890,   285,   825,   843,   495,    36,   632,   747,   169,
     495,   783,   811,   496,   746,   746,   746,   496,   761,   825,
     706,   707,   751,   698,   495,     4,     9,   660,   662,   663,
     825,   818,   696,   285,   438,   703,   696,   220,   696,   711,
     712,   825,   495,   711,   825,    27,    96,   179,   354,   488,
     495,   674,   675,   676,   677,   678,   679,   680,   746,   746,
     456,   756,   824,   756,   499,   536,    86,   495,   534,   543,
     751,   825,   131,   746,   496,   334,   590,   495,   580,   560,
     496,   499,   495,   830,   819,   747,   605,   118,   191,   117,
     275,   222,   816,   590,    81,   115,    36,   150,    73,   713,
     831,   490,   561,   819,   819,   496,   552,   122,   892,   496,
     579,   635,   816,   150,   635,    36,   496,   819,   892,    27,
      78,    87,   116,   187,   199,   390,   393,   575,   575,   356,
     356,    59,    67,   236,   816,   543,   747,   783,   496,   304,
     762,   496,   499,    36,   708,   818,   307,   490,   307,   356,
     490,   495,   495,   496,   746,   495,   696,   703,   496,   499,
     716,   711,   496,   495,   376,   495,   496,   499,   757,   758,
     825,   325,   683,   683,   443,   819,   746,   496,   499,    73,
     538,   538,   271,   436,   816,   560,   586,   589,   834,   567,
     746,   270,   566,    36,   590,   593,   819,   187,   830,   438,
     515,   490,   425,   625,   824,   847,   571,   890,   495,   816,
     892,   635,   579,   549,    67,   288,    67,   844,   496,   496,
      54,   650,   709,   706,   495,   496,   825,   660,   818,   712,
     713,   496,   779,   495,   779,   676,   499,    36,   746,   438,
     661,   661,   635,   496,   710,   534,   830,   539,   830,   539,
     374,   593,   496,   499,   484,   496,   187,   246,   602,   495,
     562,   746,   425,    36,   495,   890,   571,   892,   288,   288,
     495,   847,   778,   327,   356,   763,   711,   496,   499,   496,
     496,   496,   675,   496,   758,   760,   358,   538,   654,   654,
     542,   602,   589,   561,   268,   573,   562,   170,   303,   380,
     285,   568,   569,   595,   551,   635,   543,   710,    48,    97,
     427,   746,   764,   765,   764,   496,   496,     9,   341,   666,
     496,   663,   539,   655,   655,   710,   569,   200,   120,   436,
     285,   595,   285,   568,   496,   890,   496,   765,   355,   163,
     313,   163,   313,   496,   495,   654,   560,    58,   268,   347,
     374,   564,   564,   847,    33,     9,   655,    22,   115,   275,
     710,   765,   496
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 469 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 485 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 497 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 40:
#line 541 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 41:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 49:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 50:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 51:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 52:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 53:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 54:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 56:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 57:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 58:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 59:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 87:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 88:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 89:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 90:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 91:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 92:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 93:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 94:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 95:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 96:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 97:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 98:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 100:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 104:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 106:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 107:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 108:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 109:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 122:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 123:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 124:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 125:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 126:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 128:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 129:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 130:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 131:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 132:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 133:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 134:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 135:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 136:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 137:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 138:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 139:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 140:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 141:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 142:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 143:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 145:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 146:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 147:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 149:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 150:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 151:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 152:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 153:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 154:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 155:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 156:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 157:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 158:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 159:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 160:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 162:
#line 254 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 163:
#line 255 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 164:
#line 261 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 165:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 170:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 172:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 173:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 174:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 175:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 176:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 177:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 178:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 179:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 180:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 181:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 182:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 183:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 184:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 185:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 186:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 187:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 188:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 190:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 193:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 195:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 196:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 197:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 200:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 201:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 202:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 204:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 205:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 206:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 207:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 211:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 212:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 213:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 214:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 215:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 216:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 217:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 218:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 219:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 220:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 221:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 222:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 223:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 224:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 225:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 226:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 227:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 228:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 229:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 230:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 231:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 232:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 233:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 234:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 235:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 237:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 238:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 239:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 246:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 247:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 248:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 249:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 250:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 251:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 252:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 253:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 254:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 255:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 256:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 257:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 258:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 259:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 260:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 261:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 262:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 263:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 264:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 265:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 266:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 267:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 268:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 269:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 270:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 271:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 272:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 273:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 274:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 275:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 276:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 277:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 279:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 280:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 281:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 282:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 283:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 284:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 285:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 286:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 287:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 288:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 289:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 291:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 292:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 293:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 294:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 295:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 296:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 297:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 298:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 299:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 300:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 301:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 302:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 303:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 304:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 305:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 308:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 309:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 310:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 311:
#line 450 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 312:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 313:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 314:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 315:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 316:
#line 469 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 317:
#line 473 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 318:
#line 479 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 319:
#line 483 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 320:
#line 487 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 321:
#line 492 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 322:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 323:
#line 500 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 324:
#line 504 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 325:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 326:
#line 509 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 327:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 328:
#line 517 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 329:
#line 528 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 330:
#line 542 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 331:
#line 555 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 332:
#line 570 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 583 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 598 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 620 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 336:
#line 624 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 337:
#line 631 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 338:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 339:
#line 643 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 340:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 341:
#line 655 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 342:
#line 664 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 343:
#line 665 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 344:
#line 666 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 345:
#line 667 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 346:
#line 669 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 347:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 348:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 349:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 350:
#line 688 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 351:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 352:
#line 9 "third_party/libpg_query/grammar/statements/matview.y"
    {
					PGCreateMatViewStmt *ctas = makeNode(PGCreateMatViewStmt);
					ctas->query = (yyvsp[(7) - (8)].node);
					ctas->into = (yyvsp[(5) - (8)].into);
					ctas->relkind = PG_OBJECT_MATVIEW;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(5) - (8)].into)->rel->relpersistence = (yyvsp[(2) - (8)].ival);
					(yyvsp[(5) - (8)].into)->skipData = !((yyvsp[(8) - (8)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 353:
#line 22 "third_party/libpg_query/grammar/statements/matview.y"
    {
					PGCreateMatViewStmt *ctas = makeNode(PGCreateMatViewStmt);
					ctas->query = (yyvsp[(10) - (11)].node);
					ctas->into = (yyvsp[(8) - (11)].into);
					ctas->relkind = PG_OBJECT_MATVIEW;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(8) - (11)].into)->rel->relpersistence = (yyvsp[(2) - (11)].ival);
					(yyvsp[(8) - (11)].into)->skipData = !((yyvsp[(11) - (11)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 354:
#line 35 "third_party/libpg_query/grammar/statements/matview.y"
    {
					PGCreateMatViewStmt *ctas = makeNode(PGCreateMatViewStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_MATVIEW;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(4) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 355:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 356:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 357:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 358:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 359:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 360:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 361:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 362:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 363:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 364:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 365:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 366:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 367:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
    break;

  case 368:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 369:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 370:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 371:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 372:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 373:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 374:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 375:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 376:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 377:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 378:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 379:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 380:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 381:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 382:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 383:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 384:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 385:
#line 119 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 386:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 387:
#line 125 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 388:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 389:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 390:
#line 132 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 391:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 392:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 393:
#line 139 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 394:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 395:
#line 143 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 396:
#line 9 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (8)].ival);
				n->name = (yyvsp[(4) - (8)].range);
				n->params = (yyvsp[(5) - (8)].list);
				n->function = NULL;
				n->query = (yyvsp[(8) - (8)].node);
				(yyval.node) = (PGNode *)n;
				
			;}
    break;

  case 397:
#line 21 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (7)].ival);
				n->name = (yyvsp[(4) - (7)].range);
				n->params = (yyvsp[(5) - (7)].list);
				n->function = (yyvsp[(7) - (7)].node);
				n->query = NULL;
				(yyval.node) = (PGNode *)n;
                         ;}
    break;

  case 400:
#line 42 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 401:
#line 46 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 402:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 403:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 404:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 405:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 406:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 407:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 408:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 409:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 410:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 411:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 412:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 413:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 414:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 415:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 416:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 417:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 418:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 419:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 420:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 421:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 422:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 423:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 424:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 425:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 426:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 427:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 428:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 429:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 430:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 431:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 432:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 433:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 434:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 435:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 436:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 437:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 438:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 439:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 440:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 441:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 442:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 443:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 444:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 445:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 446:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 447:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 448:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 449:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 450:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 453:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 454:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 455:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 456:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 457:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 458:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 459:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 460:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 461:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 462:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 463:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 464:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 465:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 466:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 467:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 468:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 469:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 470:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 471:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 472:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 473:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 474:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 475:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 476:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 477:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 478:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 479:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 480:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 481:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 482:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 483:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 484:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 485:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 486:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 487:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 488:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 489:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 490:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 491:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 492:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 493:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 494:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 495:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 496:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 497:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 498:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 499:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 500:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 501:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 502:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 503:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 504:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 505:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 506:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 507:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 508:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 509:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 510:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 511:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 512:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 513:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 514:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 515:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 516:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 517:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 518:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 519:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 520:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 521:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 522:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 523:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 524:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 525:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 526:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 527:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 528:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 529:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 530:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 531:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 532:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 533:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 534:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 535:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 536:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 537:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 538:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 539:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 540:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 541:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 542:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 543:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 544:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 545:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 546:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 547:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 548:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 549:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 550:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 551:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 552:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 553:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 554:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 555:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 556:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 557:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 558:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 559:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 560:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 561:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 562:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 563:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 564:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 565:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 566:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 567:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 568:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 569:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 570:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 571:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 572:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 573:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 574:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 575:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 576:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 577:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 578:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 579:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 580:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 581:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 582:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 583:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 584:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 585:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 586:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 587:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 588:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 589:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 590:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 591:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 592:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 593:
#line 755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 594:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 595:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 596:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 597:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 598:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 599:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 600:
#line 769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 601:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 602:
#line 785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 603:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 604:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
    break;

  case 605:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 606:
#line 808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 607:
#line 812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 608:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 609:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 610:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 611:
#line 825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 612:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 613:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 614:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 615:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 616:
#line 865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 617:
#line 869 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 618:
#line 895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 619:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 620:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 621:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 622:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 623:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 624:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 625:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 626:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 627:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 628:
#line 992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 629:
#line 993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 630:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 631:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 632:
#line 1010 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 633:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 634:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 635:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 636:
#line 1028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 637:
#line 1029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 638:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 639:
#line 1034 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 640:
#line 1035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 641:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 642:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 643:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 644:
#line 1061 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 645:
#line 1068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 646:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 647:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 648:
#line 1118 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 649:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 650:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 651:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 652:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 653:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 654:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 655:
#line 1144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 656:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 657:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 658:
#line 1156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 659:
#line 1160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 660:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 661:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 662:
#line 1194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 663:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 664:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 667:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 668:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 669:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 670:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 671:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 672:
#line 1245 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 673:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 674:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 675:
#line 1266 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 676:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 677:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 678:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 679:
#line 1275 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 680:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 681:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 682:
#line 1278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 683:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 684:
#line 1285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 685:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 686:
#line 1305 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 687:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 688:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 689:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 690:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 691:
#line 1333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 692:
#line 1340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 693:
#line 1345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 694:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 695:
#line 1355 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 696:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 697:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 698:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 699:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 700:
#line 1381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 701:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 702:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 703:
#line 1400 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 704:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 705:
#line 1431 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 706:
#line 1435 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 707:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 708:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 709:
#line 1455 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 710:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 711:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 712:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 713:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 714:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 715:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 716:
#line 1523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 717:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 718:
#line 1535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 719:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 720:
#line 1539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 721:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 722:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 723:
#line 1547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 724:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 725:
#line 1556 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 726:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 727:
#line 1573 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 728:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 729:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 730:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 731:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 732:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 749:
#line 1631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 750:
#line 1633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 751:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 752:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 753:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 754:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 755:
#line 1643 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 756:
#line 1645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 757:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 758:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 759:
#line 1657 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 760:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 761:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 762:
#line 1675 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 763:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 764:
#line 1686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 765:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 766:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 767:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 768:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 769:
#line 1745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 770:
#line 1747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 771:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 772:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 773:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 774:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 775:
#line 1757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 776:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 778:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 779:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 782:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 1774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 1776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 785:
#line 1778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 786:
#line 1781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 789:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 790:
#line 1790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 791:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 792:
#line 1800 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 793:
#line 1807 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 794:
#line 1812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 795:
#line 1819 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 796:
#line 1824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 797:
#line 1831 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 798:
#line 1836 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 799:
#line 1844 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 800:
#line 1852 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 801:
#line 1860 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 802:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 803:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 1894 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 805:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 1910 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 807:
#line 1918 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 808:
#line 1925 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 809:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 810:
#line 1933 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 811:
#line 1938 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 812:
#line 1946 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 813:
#line 1962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 814:
#line 1970 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 815:
#line 1978 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 816:
#line 1986 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 817:
#line 1994 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 818:
#line 2002 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 819:
#line 2010 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 820:
#line 2014 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 821:
#line 2018 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 822:
#line 2022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 823:
#line 2026 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 824:
#line 2034 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 825:
#line 2042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 826:
#line 2050 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 827:
#line 2058 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 828:
#line 2078 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 829:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 830:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 831:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 832:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 833:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 834:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 835:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 836:
#line 2154 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 837:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 838:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 2174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 848:
#line 2178 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 849:
#line 2180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 850:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 851:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 852:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 853:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 854:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 855:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 856:
#line 2211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 857:
#line 2212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 858:
#line 2214 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 859:
#line 2221 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 860:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 861:
#line 2248 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 862:
#line 2260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 863:
#line 2262 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 864:
#line 2274 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 865:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 866:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 867:
#line 2320 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 868:
#line 2329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 869:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 871:
#line 2348 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 872:
#line 2356 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 873:
#line 2367 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 874:
#line 2375 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 875:
#line 2403 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 876:
#line 2439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 877:
#line 2449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 878:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 879:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 880:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 881:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 882:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 883:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 884:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 885:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 886:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 887:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 888:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 889:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 890:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 891:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 892:
#line 2512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 893:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 894:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 895:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 896:
#line 2526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 897:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 898:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 899:
#line 2541 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 900:
#line 2546 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 901:
#line 2553 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 902:
#line 2568 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 903:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 904:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 905:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 906:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 907:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 908:
#line 2604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 909:
#line 2605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 910:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 911:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 912:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 913:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 914:
#line 2622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 915:
#line 2623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 916:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 917:
#line 2629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 918:
#line 2634 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 919:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 920:
#line 2644 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 921:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 922:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 923:
#line 2687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 924:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 925:
#line 2691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 926:
#line 2692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 927:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 928:
#line 2710 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 929:
#line 2716 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 930:
#line 2726 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 931:
#line 2743 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 932:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 933:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 934:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 935:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 936:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 937:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 938:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 939:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 940:
#line 2845 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 941:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 942:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 943:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 944:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 945:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 946:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 947:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 948:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 949:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 950:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 951:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 952:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 953:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 954:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 955:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 956:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 957:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 958:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 959:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 960:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 961:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 962:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 963:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 964:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 965:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 966:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 967:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 968:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 969:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 970:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 971:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 972:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 973:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 974:
#line 2921 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 975:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 976:
#line 2937 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 977:
#line 2941 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 978:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 979:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 980:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (2)].list);
				;}
    break;

  case 981:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 982:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 983:
#line 2988 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 984:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 985:
#line 2998 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 986:
#line 3002 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 987:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 988:
#line 3021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 989:
#line 3022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 990:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 991:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 992:
#line 3037 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 993:
#line 3038 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 994:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 995:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 996:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 997:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 998:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 999:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1000:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1001:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1002:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1003:
#line 3061 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1004:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1005:
#line 3074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1006:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1007:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1008:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1009:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1010:
#line 3105 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1011:
#line 3120 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1012:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1013:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1014:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1015:
#line 3134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1016:
#line 3135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1017:
#line 3136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1018:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1019:
#line 3146 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1020:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1021:
#line 3170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1022:
#line 3171 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1023:
#line 3176 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1024:
#line 3186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1025:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1026:
#line 3190 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1027:
#line 3191 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1028:
#line 3195 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1029:
#line 3199 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1030:
#line 3206 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1031:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1032:
#line 3218 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1033:
#line 3228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1034:
#line 3229 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1035:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1036:
#line 3234 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1037:
#line 3238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1038:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1041:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1042:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1043:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1044:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1045:
#line 3263 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1046:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1047:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1048:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1049:
#line 3292 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1050:
#line 3300 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1051:
#line 3315 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1052:
#line 3332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1053:
#line 3333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1054:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1055:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1056:
#line 3340 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1057:
#line 3344 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1058:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1059:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1060:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1061:
#line 3353 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1062:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1063:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1064:
#line 3365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1065:
#line 3366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1066:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1067:
#line 3382 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1068:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1069:
#line 3411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1070:
#line 3416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1071:
#line 3417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1072:
#line 3420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1073:
#line 3422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 3433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1075:
#line 3436 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1076:
#line 3447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1077:
#line 3451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1078:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1079:
#line 3467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1080:
#line 3471 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1081:
#line 3480 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1082:
#line 3487 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1083:
#line 3525 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1084:
#line 3529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1085:
#line 3533 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1086:
#line 3537 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1087:
#line 3541 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1088:
#line 3545 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1089:
#line 3549 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1090:
#line 3554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1091:
#line 3555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1092:
#line 3571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1093:
#line 3572 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1094:
#line 3573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1095:
#line 3576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1096:
#line 3577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 3583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1098:
#line 3584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1099:
#line 3585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1100:
#line 3588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1101:
#line 3589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1102:
#line 3590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1103:
#line 3593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1104:
#line 3594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1105:
#line 3595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1106:
#line 3598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1107:
#line 3599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1108:
#line 3603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1109:
#line 3605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1110:
#line 3609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1111:
#line 3610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1113:
#line 3621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1114:
#line 3622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1115:
#line 3623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1116:
#line 3624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1117:
#line 3627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1118:
#line 3628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1119:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1120:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1121:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1126:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1127:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1128:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1129:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1134:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1135:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1136:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1137:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1138:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1139:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1140:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1141:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1142:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1143:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1144:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1145:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1146:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1147:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1148:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1149:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1150:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1151:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1152:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1153:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1154:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1155:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1156:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1157:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1158:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1159:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1160:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1161:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1162:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1163:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1164:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1165:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1171:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1173:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1174:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1175:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1176:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1177:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1178:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1179:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1180:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1181:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1182:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1183:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1184:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1185:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1186:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1187:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1188:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1189:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1190:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1191:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1192:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1193:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1194:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1195:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1196:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1197:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1198:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1199:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1200:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1201:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1202:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1203:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1204:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1205:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1206:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1207:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1208:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1209:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1210:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1211:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1212:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1213:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1214:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1215:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1216:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1217:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1218:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1219:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1220:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1221:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1222:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1223:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1224:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1225:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1226:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1227:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1228:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1229:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1230:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1231:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1232:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1233:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1234:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1235:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1236:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1237:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1238:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1239:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1240:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1241:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1242:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1243:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1244:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1245:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1246:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1247:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1248:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1249:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1250:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1251:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1252:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1253:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1254:
#line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1257:
#line 63 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1258:
#line 65 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1259:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1260:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1261:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1262:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1263:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1264:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1265:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1266:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1267:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1268:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1269:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1270:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1271:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1272:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1273:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1274:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 25302 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 83 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

