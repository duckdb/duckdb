/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXPORT_STATE = 408,
     EXTENSION = 409,
     EXTERNAL = 410,
     EXTRACT = 411,
     FALSE_P = 412,
     FAMILY = 413,
     FETCH = 414,
     FILTER = 415,
     FIRST_P = 416,
     FLOAT_P = 417,
     FOLLOWING = 418,
     FOR = 419,
     FORCE = 420,
     FOREIGN = 421,
     FORWARD = 422,
     FREEZE = 423,
     FROM = 424,
     FULL = 425,
     FUNCTION = 426,
     FUNCTIONS = 427,
     GENERATED = 428,
     GLOB = 429,
     GLOBAL = 430,
     GRANT = 431,
     GRANTED = 432,
     GROUP_P = 433,
     GROUPING = 434,
     GROUPING_ID = 435,
     HANDLER = 436,
     HAVING = 437,
     HEADER_P = 438,
     HOLD = 439,
     HOUR_P = 440,
     HOURS_P = 441,
     IDENTITY_P = 442,
     IF_P = 443,
     IGNORE_P = 444,
     ILIKE = 445,
     IMMEDIATE = 446,
     IMMUTABLE = 447,
     IMPLICIT_P = 448,
     IMPORT_P = 449,
     IN_P = 450,
     INCLUDING = 451,
     INCREMENT = 452,
     INDEX = 453,
     INDEXES = 454,
     INHERIT = 455,
     INHERITS = 456,
     INITIALLY = 457,
     INLINE_P = 458,
     INNER_P = 459,
     INOUT = 460,
     INPUT_P = 461,
     INSENSITIVE = 462,
     INSERT = 463,
     INSTALL = 464,
     INSTEAD = 465,
     INT_P = 466,
     INTEGER = 467,
     INTERSECT = 468,
     INTERVAL = 469,
     INTO = 470,
     INVOKER = 471,
     IS = 472,
     ISNULL = 473,
     ISOLATION = 474,
     JOIN = 475,
     JSON = 476,
     KEY = 477,
     LABEL = 478,
     LANGUAGE = 479,
     LARGE_P = 480,
     LAST_P = 481,
     LATERAL_P = 482,
     LEADING = 483,
     LEAKPROOF = 484,
     LEFT = 485,
     LEVEL = 486,
     LIKE = 487,
     LIMIT = 488,
     LISTEN = 489,
     LOAD = 490,
     LOCAL = 491,
     LOCALTIME = 492,
     LOCALTIMESTAMP = 493,
     LOCATION = 494,
     LOCK_P = 495,
     LOCKED = 496,
     LOGGED = 497,
     MACRO = 498,
     MAP = 499,
     MAPPING = 500,
     MATCH = 501,
     MATERIALIZED = 502,
     MAXVALUE = 503,
     METHOD = 504,
     MICROSECOND_P = 505,
     MICROSECONDS_P = 506,
     MILLISECOND_P = 507,
     MILLISECONDS_P = 508,
     MINUTE_P = 509,
     MINUTES_P = 510,
     MINVALUE = 511,
     MODE = 512,
     MONTH_P = 513,
     MONTHS_P = 514,
     MOVE = 515,
     NAME_P = 516,
     NAMES = 517,
     NATIONAL = 518,
     NATURAL = 519,
     NCHAR = 520,
     NEW = 521,
     NEXT = 522,
     NO = 523,
     NONE = 524,
     NOT = 525,
     NOTHING = 526,
     NOTIFY = 527,
     NOTNULL = 528,
     NOWAIT = 529,
     NULL_P = 530,
     NULLIF = 531,
     NULLS_P = 532,
     NUMERIC = 533,
     OBJECT_P = 534,
     OF = 535,
     OFF = 536,
     OFFSET = 537,
     OIDS = 538,
     OLD = 539,
     ON = 540,
     ONLY = 541,
     OPERATOR = 542,
     OPTION = 543,
     OPTIONS = 544,
     OR = 545,
     ORDER = 546,
     ORDINALITY = 547,
     OUT_P = 548,
     OUTER_P = 549,
     OVER = 550,
     OVERLAPS = 551,
     OVERLAY = 552,
     OVERRIDING = 553,
     OWNED = 554,
     OWNER = 555,
     PARALLEL = 556,
     PARSER = 557,
     PARTIAL = 558,
     PARTITION = 559,
     PASSING = 560,
     PASSWORD = 561,
     PERCENT = 562,
     PLACING = 563,
     PLANS = 564,
     POLICY = 565,
     POSITION = 566,
     PRAGMA_P = 567,
     PRECEDING = 568,
     PRECISION = 569,
     PREPARE = 570,
     PREPARED = 571,
     PRESERVE = 572,
     PRIMARY = 573,
     PRIOR = 574,
     PRIVILEGES = 575,
     PROCEDURAL = 576,
     PROCEDURE = 577,
     PROGRAM = 578,
     PUBLICATION = 579,
     QUALIFY = 580,
     QUOTE = 581,
     RANGE = 582,
     READ_P = 583,
     REAL = 584,
     REASSIGN = 585,
     RECHECK = 586,
     RECURSIVE = 587,
     REF = 588,
     REFERENCES = 589,
     REFERENCING = 590,
     REFRESH = 591,
     REINDEX = 592,
     RELATIVE_P = 593,
     RELEASE = 594,
     RENAME = 595,
     REPEATABLE = 596,
     REPLACE = 597,
     REPLICA = 598,
     RESET = 599,
     RESPECT_P = 600,
     RESTART = 601,
     RESTRICT = 602,
     RETURNING = 603,
     RETURNS = 604,
     REVOKE = 605,
     RIGHT = 606,
     ROLE = 607,
     ROLLBACK = 608,
     ROLLUP = 609,
     ROW = 610,
     ROWS = 611,
     RULE = 612,
     SAMPLE = 613,
     SAVEPOINT = 614,
     SCHEMA = 615,
     SCHEMAS = 616,
     SCROLL = 617,
     SEARCH = 618,
     SECOND_P = 619,
     SECONDS_P = 620,
     SECURITY = 621,
     SELECT = 622,
     SEQUENCE = 623,
     SEQUENCES = 624,
     SERIALIZABLE = 625,
     SERVER = 626,
     SESSION = 627,
     SESSION_USER = 628,
     SET = 629,
     SETOF = 630,
     SETS = 631,
     SHARE = 632,
     SHOW = 633,
     SIMILAR = 634,
     SIMPLE = 635,
     SKIP = 636,
     SMALLINT = 637,
     SNAPSHOT = 638,
     SOME = 639,
     SQL_P = 640,
     STABLE = 641,
     STANDALONE_P = 642,
     START = 643,
     STATEMENT = 644,
     STATISTICS = 645,
     STDIN = 646,
     STDOUT = 647,
     STORAGE = 648,
     STRICT_P = 649,
     STRIP_P = 650,
     STRUCT = 651,
     SUBSCRIPTION = 652,
     SUBSTRING = 653,
     SUMMARIZE = 654,
     SYMMETRIC = 655,
     SYSID = 656,
     SYSTEM_P = 657,
     TABLE = 658,
     TABLES = 659,
     TABLESAMPLE = 660,
     TABLESPACE = 661,
     TEMP = 662,
     TEMPLATE = 663,
     TEMPORARY = 664,
     TEXT_P = 665,
     THEN = 666,
     TIME = 667,
     TIMESTAMP = 668,
     TO = 669,
     TRAILING = 670,
     TRANSACTION = 671,
     TRANSFORM = 672,
     TREAT = 673,
     TRIGGER = 674,
     TRIM = 675,
     TRUE_P = 676,
     TRUNCATE = 677,
     TRUSTED = 678,
     TRY_CAST = 679,
     TYPE_P = 680,
     TYPES_P = 681,
     UNBOUNDED = 682,
     UNCOMMITTED = 683,
     UNENCRYPTED = 684,
     UNION = 685,
     UNIQUE = 686,
     UNKNOWN = 687,
     UNLISTEN = 688,
     UNLOGGED = 689,
     UNTIL = 690,
     UPDATE = 691,
     USER = 692,
     USING = 693,
     VACUUM = 694,
     VALID = 695,
     VALIDATE = 696,
     VALIDATOR = 697,
     VALUE_P = 698,
     VALUES = 699,
     VARCHAR = 700,
     VARIADIC = 701,
     VARYING = 702,
     VERBOSE = 703,
     VERSION_P = 704,
     VIEW = 705,
     VIEWS = 706,
     VOLATILE = 707,
     WHEN = 708,
     WHERE = 709,
     WHITESPACE_P = 710,
     WINDOW = 711,
     WITH = 712,
     WITHIN = 713,
     WITHOUT = 714,
     WORK = 715,
     WRAPPER = 716,
     WRITE_P = 717,
     XML_P = 718,
     XMLATTRIBUTES = 719,
     XMLCONCAT = 720,
     XMLELEMENT = 721,
     XMLEXISTS = 722,
     XMLFOREST = 723,
     XMLNAMESPACES = 724,
     XMLPARSE = 725,
     XMLPI = 726,
     XMLROOT = 727,
     XMLSERIALIZE = 728,
     XMLTABLE = 729,
     YEAR_P = 730,
     YEARS_P = 731,
     YES_P = 732,
     ZONE = 733,
     NOT_LA = 734,
     NULLS_LA = 735,
     WITH_LA = 736,
     POSTFIXOP = 737,
     UMINUS = 738
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXPORT_STATE 408
#define EXTENSION 409
#define EXTERNAL 410
#define EXTRACT 411
#define FALSE_P 412
#define FAMILY 413
#define FETCH 414
#define FILTER 415
#define FIRST_P 416
#define FLOAT_P 417
#define FOLLOWING 418
#define FOR 419
#define FORCE 420
#define FOREIGN 421
#define FORWARD 422
#define FREEZE 423
#define FROM 424
#define FULL 425
#define FUNCTION 426
#define FUNCTIONS 427
#define GENERATED 428
#define GLOB 429
#define GLOBAL 430
#define GRANT 431
#define GRANTED 432
#define GROUP_P 433
#define GROUPING 434
#define GROUPING_ID 435
#define HANDLER 436
#define HAVING 437
#define HEADER_P 438
#define HOLD 439
#define HOUR_P 440
#define HOURS_P 441
#define IDENTITY_P 442
#define IF_P 443
#define IGNORE_P 444
#define ILIKE 445
#define IMMEDIATE 446
#define IMMUTABLE 447
#define IMPLICIT_P 448
#define IMPORT_P 449
#define IN_P 450
#define INCLUDING 451
#define INCREMENT 452
#define INDEX 453
#define INDEXES 454
#define INHERIT 455
#define INHERITS 456
#define INITIALLY 457
#define INLINE_P 458
#define INNER_P 459
#define INOUT 460
#define INPUT_P 461
#define INSENSITIVE 462
#define INSERT 463
#define INSTALL 464
#define INSTEAD 465
#define INT_P 466
#define INTEGER 467
#define INTERSECT 468
#define INTERVAL 469
#define INTO 470
#define INVOKER 471
#define IS 472
#define ISNULL 473
#define ISOLATION 474
#define JOIN 475
#define JSON 476
#define KEY 477
#define LABEL 478
#define LANGUAGE 479
#define LARGE_P 480
#define LAST_P 481
#define LATERAL_P 482
#define LEADING 483
#define LEAKPROOF 484
#define LEFT 485
#define LEVEL 486
#define LIKE 487
#define LIMIT 488
#define LISTEN 489
#define LOAD 490
#define LOCAL 491
#define LOCALTIME 492
#define LOCALTIMESTAMP 493
#define LOCATION 494
#define LOCK_P 495
#define LOCKED 496
#define LOGGED 497
#define MACRO 498
#define MAP 499
#define MAPPING 500
#define MATCH 501
#define MATERIALIZED 502
#define MAXVALUE 503
#define METHOD 504
#define MICROSECOND_P 505
#define MICROSECONDS_P 506
#define MILLISECOND_P 507
#define MILLISECONDS_P 508
#define MINUTE_P 509
#define MINUTES_P 510
#define MINVALUE 511
#define MODE 512
#define MONTH_P 513
#define MONTHS_P 514
#define MOVE 515
#define NAME_P 516
#define NAMES 517
#define NATIONAL 518
#define NATURAL 519
#define NCHAR 520
#define NEW 521
#define NEXT 522
#define NO 523
#define NONE 524
#define NOT 525
#define NOTHING 526
#define NOTIFY 527
#define NOTNULL 528
#define NOWAIT 529
#define NULL_P 530
#define NULLIF 531
#define NULLS_P 532
#define NUMERIC 533
#define OBJECT_P 534
#define OF 535
#define OFF 536
#define OFFSET 537
#define OIDS 538
#define OLD 539
#define ON 540
#define ONLY 541
#define OPERATOR 542
#define OPTION 543
#define OPTIONS 544
#define OR 545
#define ORDER 546
#define ORDINALITY 547
#define OUT_P 548
#define OUTER_P 549
#define OVER 550
#define OVERLAPS 551
#define OVERLAY 552
#define OVERRIDING 553
#define OWNED 554
#define OWNER 555
#define PARALLEL 556
#define PARSER 557
#define PARTIAL 558
#define PARTITION 559
#define PASSING 560
#define PASSWORD 561
#define PERCENT 562
#define PLACING 563
#define PLANS 564
#define POLICY 565
#define POSITION 566
#define PRAGMA_P 567
#define PRECEDING 568
#define PRECISION 569
#define PREPARE 570
#define PREPARED 571
#define PRESERVE 572
#define PRIMARY 573
#define PRIOR 574
#define PRIVILEGES 575
#define PROCEDURAL 576
#define PROCEDURE 577
#define PROGRAM 578
#define PUBLICATION 579
#define QUALIFY 580
#define QUOTE 581
#define RANGE 582
#define READ_P 583
#define REAL 584
#define REASSIGN 585
#define RECHECK 586
#define RECURSIVE 587
#define REF 588
#define REFERENCES 589
#define REFERENCING 590
#define REFRESH 591
#define REINDEX 592
#define RELATIVE_P 593
#define RELEASE 594
#define RENAME 595
#define REPEATABLE 596
#define REPLACE 597
#define REPLICA 598
#define RESET 599
#define RESPECT_P 600
#define RESTART 601
#define RESTRICT 602
#define RETURNING 603
#define RETURNS 604
#define REVOKE 605
#define RIGHT 606
#define ROLE 607
#define ROLLBACK 608
#define ROLLUP 609
#define ROW 610
#define ROWS 611
#define RULE 612
#define SAMPLE 613
#define SAVEPOINT 614
#define SCHEMA 615
#define SCHEMAS 616
#define SCROLL 617
#define SEARCH 618
#define SECOND_P 619
#define SECONDS_P 620
#define SECURITY 621
#define SELECT 622
#define SEQUENCE 623
#define SEQUENCES 624
#define SERIALIZABLE 625
#define SERVER 626
#define SESSION 627
#define SESSION_USER 628
#define SET 629
#define SETOF 630
#define SETS 631
#define SHARE 632
#define SHOW 633
#define SIMILAR 634
#define SIMPLE 635
#define SKIP 636
#define SMALLINT 637
#define SNAPSHOT 638
#define SOME 639
#define SQL_P 640
#define STABLE 641
#define STANDALONE_P 642
#define START 643
#define STATEMENT 644
#define STATISTICS 645
#define STDIN 646
#define STDOUT 647
#define STORAGE 648
#define STRICT_P 649
#define STRIP_P 650
#define STRUCT 651
#define SUBSCRIPTION 652
#define SUBSTRING 653
#define SUMMARIZE 654
#define SYMMETRIC 655
#define SYSID 656
#define SYSTEM_P 657
#define TABLE 658
#define TABLES 659
#define TABLESAMPLE 660
#define TABLESPACE 661
#define TEMP 662
#define TEMPLATE 663
#define TEMPORARY 664
#define TEXT_P 665
#define THEN 666
#define TIME 667
#define TIMESTAMP 668
#define TO 669
#define TRAILING 670
#define TRANSACTION 671
#define TRANSFORM 672
#define TREAT 673
#define TRIGGER 674
#define TRIM 675
#define TRUE_P 676
#define TRUNCATE 677
#define TRUSTED 678
#define TRY_CAST 679
#define TYPE_P 680
#define TYPES_P 681
#define UNBOUNDED 682
#define UNCOMMITTED 683
#define UNENCRYPTED 684
#define UNION 685
#define UNIQUE 686
#define UNKNOWN 687
#define UNLISTEN 688
#define UNLOGGED 689
#define UNTIL 690
#define UPDATE 691
#define USER 692
#define USING 693
#define VACUUM 694
#define VALID 695
#define VALIDATE 696
#define VALIDATOR 697
#define VALUE_P 698
#define VALUES 699
#define VARCHAR 700
#define VARIADIC 701
#define VARYING 702
#define VERBOSE 703
#define VERSION_P 704
#define VIEW 705
#define VIEWS 706
#define VOLATILE 707
#define WHEN 708
#define WHERE 709
#define WHITESPACE_P 710
#define WINDOW 711
#define WITH 712
#define WITHIN 713
#define WITHOUT 714
#define WORK 715
#define WRAPPER 716
#define WRITE_P 717
#define XML_P 718
#define XMLATTRIBUTES 719
#define XMLCONCAT 720
#define XMLELEMENT 721
#define XMLEXISTS 722
#define XMLFOREST 723
#define XMLNAMESPACES 724
#define XMLPARSE 725
#define XMLPI 726
#define XMLROOT 727
#define XMLSERIALIZE 728
#define XMLTABLE 729
#define YEAR_P 730
#define YEARS_P 731
#define YES_P 732
#define ZONE 733
#define NOT_LA 734
#define NULLS_LA 735
#define WITH_LA 736
#define POSTFIXOP 737
#define UMINUS 738




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 187 of yacc.c.  */
#line 1280 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1305 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  596
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   54723

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  505
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  395
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1836
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3023

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   738

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   502,     2,   490,     2,     2,
     495,   496,   488,   486,   499,   487,   497,   489,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   504,   498,
     482,   484,   483,   503,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   493,     2,   494,   491,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   500,     2,   501,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   485,   492
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    88,    90,    93,    97,   100,   101,   104,   105,   113,
     124,   134,   137,   141,   142,   147,   157,   169,   182,   197,
     201,   206,   211,   212,   218,   222,   223,   225,   227,   229,
     231,   233,   235,   239,   243,   245,   248,   253,   258,   261,
     265,   271,   277,   279,   281,   293,   305,   307,   310,   315,
     320,   325,   328,   331,   335,   337,   341,   348,   351,   352,
     356,   360,   365,   370,   375,   380,   384,   387,   389,   391,
     392,   394,   396,   397,   399,   405,   407,   408,   411,   414,
     415,   417,   418,   422,   428,   434,   436,   440,   445,   449,
     451,   453,   454,   457,   460,   461,   464,   467,   469,   471,
     473,   474,   477,   482,   488,   493,   496,   500,   503,   506,
     509,   512,   514,   517,   521,   522,   524,   525,   531,   533,
     538,   545,   548,   550,   551,   556,   557,   559,   561,   564,
     567,   570,   572,   574,   577,   580,   582,   584,   586,   588,
     590,   592,   596,   600,   604,   605,   607,   611,   613,   616,
     618,   620,   622,   624,   626,   629,   634,   639,   645,   647,
     649,   652,   653,   656,   657,   659,   663,   665,   666,   668,
     671,   675,   678,   683,   686,   690,   693,   694,   696,   699,
     700,   705,   711,   713,   716,   719,   720,   722,   726,   728,
     731,   735,   739,   743,   747,   751,   753,   758,   762,   767,
     773,   778,   784,   789,   795,   798,   803,   805,   807,   808,
     810,   815,   821,   826,   827,   830,   833,   836,   838,   840,
     841,   846,   849,   851,   854,   857,   862,   865,   872,   875,
     877,   881,   886,   887,   890,   891,   894,   895,   897,   901,
     905,   908,   909,   912,   917,   919,   921,   924,   928,   934,
     941,   944,   948,   954,   960,   964,   969,   970,   972,   974,
     976,   978,   980,   983,   988,   990,   992,   994,   996,   999,
    1003,  1004,  1006,  1008,  1010,  1012,  1014,  1017,  1020,  1023,
    1026,  1029,  1031,  1035,  1036,  1038,  1040,  1042,  1044,  1050,
    1053,  1055,  1057,  1059,  1061,  1066,  1068,  1071,  1074,  1076,
    1080,  1084,  1087,  1089,  1090,  1096,  1099,  1105,  1108,  1110,
    1114,  1118,  1119,  1121,  1123,  1125,  1127,  1129,  1131,  1133,
    1135,  1137,  1139,  1141,  1143,  1145,  1147,  1149,  1151,  1153,
    1155,  1157,  1159,  1161,  1163,  1165,  1167,  1171,  1175,  1179,
    1183,  1187,  1191,  1195,  1196,  1198,  1202,  1206,  1212,  1215,
    1218,  1222,  1226,  1230,  1234,  1238,  1242,  1246,  1250,  1254,
    1258,  1262,  1266,  1270,  1273,  1276,  1280,  1284,  1287,  1290,
    1294,  1298,  1304,  1309,  1316,  1320,  1326,  1331,  1338,  1343,
    1350,  1356,  1364,  1368,  1371,  1376,  1380,  1383,  1385,  1389,
    1393,  1397,  1401,  1405,  1410,  1414,  1419,  1423,  1428,  1434,
    1441,  1448,  1456,  1463,  1471,  1478,  1486,  1490,  1495,  1500,
    1507,  1509,  1514,  1516,  1520,  1523,  1526,  1530,  1534,  1538,
    1542,  1546,  1550,  1554,  1558,  1562,  1566,  1570,  1574,  1578,
    1581,  1584,  1590,  1597,  1604,  1612,  1614,  1616,  1619,  1622,
    1625,  1630,  1632,  1635,  1637,  1640,  1643,  1648,  1652,  1659,
    1667,  1677,  1685,  1693,  1698,  1704,  1706,  1708,  1710,  1716,
    1718,  1720,  1725,  1727,  1732,  1734,  1739,  1741,  1746,  1748,
    1750,  1752,  1754,  1756,  1758,  1765,  1772,  1777,  1782,  1787,
    1792,  1799,  1805,  1811,  1817,  1822,  1829,  1834,  1840,  1841,
    1847,  1848,  1850,  1851,  1854,  1855,  1857,  1861,  1865,  1868,
    1871,  1872,  1879,  1881,  1882,  1886,  1887,  1890,  1893,  1894,
    1896,  1901,  1904,  1907,  1910,  1913,  1916,  1921,  1925,  1927,
    1933,  1937,  1939,  1943,  1945,  1948,  1950,  1952,  1954,  1956,
    1958,  1960,  1962,  1964,  1966,  1968,  1970,  1972,  1974,  1976,
    1978,  1980,  1982,  1984,  1989,  1991,  1996,  1998,  2003,  2005,
    2008,  2010,  2013,  2015,  2018,  2020,  2024,  2026,  2030,  2032,
    2035,  2037,  2038,  2040,  2044,  2046,  2050,  2054,  2056,  2060,
    2064,  2065,  2067,  2069,  2071,  2073,  2075,  2077,  2079,  2081,
    2083,  2085,  2090,  2094,  2097,  2101,  2102,  2106,  2110,  2113,
    2116,  2118,  2119,  2122,  2125,  2129,  2132,  2134,  2136,  2140,
    2146,  2148,  2151,  2156,  2159,  2160,  2162,  2163,  2165,  2168,
    2171,  2175,  2181,  2183,  2184,  2186,  2189,  2190,  2193,  2195,
    2196,  2198,  2199,  2201,  2205,  2207,  2210,  2214,  2217,  2219,
    2223,  2229,  2234,  2237,  2239,  2240,  2244,  2246,  2250,  2252,
    2255,  2260,  2263,  2264,  2266,  2270,  2272,  2275,  2277,  2281,
    2283,  2286,  2288,  2290,  2292,  2295,  2297,  2299,  2302,  2304,
    2306,  2309,  2317,  2320,  2326,  2330,  2334,  2336,  2338,  2340,
    2342,  2344,  2346,  2348,  2350,  2352,  2354,  2356,  2358,  2360,
    2362,  2364,  2366,  2368,  2370,  2372,  2374,  2377,  2380,  2384,
    2388,  2389,  2391,  2393,  2395,  2397,  2399,  2401,  2403,  2408,
    2414,  2420,  2425,  2432,  2434,  2436,  2438,  2440,  2442,  2444,
    2445,  2447,  2451,  2453,  2454,  2457,  2460,  2463,  2466,  2469,
    2472,  2474,  2476,  2477,  2480,  2482,  2484,  2486,  2489,  2493,
    2502,  2505,  2509,  2512,  2516,  2519,  2524,  2530,  2539,  2547,
    2549,  2551,  2554,  2558,  2563,  2570,  2575,  2582,  2587,  2594,
    2599,  2606,  2608,  2611,  2615,  2618,  2620,  2624,  2627,  2631,
    2633,  2637,  2640,  2646,  2650,  2657,  2662,  2669,  2676,  2683,
    2689,  2695,  2702,  2712,  2717,  2723,  2731,  2738,  2743,  2752,
    2757,  2760,  2765,  2769,  2776,  2781,  2784,  2787,  2790,  2793,
    2795,  2798,  2799,  2801,  2804,  2807,  2810,  2812,  2816,  2821,
    2824,  2826,  2827,  2832,  2840,  2843,  2844,  2846,  2848,  2850,
    2852,  2855,  2858,  2861,  2864,  2868,  2873,  2876,  2878,  2880,
    2882,  2884,  2888,  2898,  2911,  2923,  2924,  2927,  2929,  2931,
    2933,  2935,  2937,  2939,  2943,  2944,  2946,  2949,  2951,  2953,
    2956,  2959,  2963,  2965,  2967,  2970,  2973,  2975,  2978,  2982,
    2988,  2992,  2995,  3001,  3007,  3010,  3014,  3016,  3018,  3021,
    3024,  3025,  3030,  3031,  3035,  3040,  3045,  3046,  3050,  3053,
    3054,  3058,  3060,  3062,  3064,  3066,  3068,  3070,  3072,  3074,
    3076,  3078,  3082,  3086,  3088,  3091,  3094,  3097,  3100,  3103,
    3106,  3107,  3111,  3115,  3119,  3120,  3122,  3125,  3127,  3130,
    3133,  3136,  3139,  3144,  3146,  3150,  3152,  3156,  3158,  3160,
    3162,  3164,  3168,  3170,  3173,  3174,  3176,  3179,  3180,  3182,
    3186,  3187,  3190,  3191,  3195,  3199,  3201,  3207,  3211,  3213,
    3217,  3219,  3222,  3224,  3229,  3235,  3241,  3248,  3252,  3260,
    3265,  3277,  3279,  3283,  3286,  3289,  3292,  3293,  3297,  3299,
    3301,  3304,  3307,  3310,  3313,  3315,  3316,  3318,  3321,  3328,
    3335,  3344,  3351,  3360,  3367,  3376,  3383,  3392,  3401,  3412,
    3421,  3432,  3434,  3435,  3442,  3447,  3454,  3459,  3466,  3475,
    3480,  3487,  3489,  3491,  3493,  3495,  3498,  3500,  3503,  3505,
    3508,  3510,  3512,  3514,  3518,  3522,  3526,  3530,  3533,  3536,
    3538,  3542,  3544,  3546,  3548,  3550,  3554,  3556,  3558,  3559,
    3561,  3563,  3565,  3567,  3571,  3574,  3577,  3581,  3583,  3585,
    3593,  3595,  3600,  3605,  3613,  3616,  3618,  3622,  3627,  3631,
    3632,  3634,  3635,  3638,  3642,  3648,  3657,  3663,  3664,  3670,
    3676,  3684,  3687,  3688,  3690,  3692,  3694,  3698,  3701,  3702,
    3704,  3705,  3707,  3711,  3713,  3717,  3719,  3722,  3724,  3728,
    3731,  3735,  3745,  3758,  3762,  3763,  3766,  3771,  3776,  3780,
    3783,  3788,  3792,  3798,  3800,  3801,  3803,  3805,  3806,  3808,
    3810,  3812,  3814,  3816,  3818,  3820,  3822,  3824,  3826,  3828,
    3832,  3834,  3836,  3838,  3840,  3842,  3844,  3847,  3849,  3851,
    3857,  3866,  3868,  3869,  3874,  3881,  3883,  3886,  3888,  3890,
    3891,  3893,  3896,  3899,  3901,  3904,  3907,  3909,  3912,  3916,
    3919,  3922,  3925,  3928,  3932,  3936,  3940,  3942,  3946,  3948,
    3949,  3951,  3954,  3957,  3964,  3973,  3980,  3989,  3996,  4005,
    4014,  4016,  4017,  4019,  4023,  4026,  4030,  4034,  4038,  4040,
    4044,  4048,  4051,  4055,  4059,  4063,  4067,  4069,  4071,  4073,
    4075,  4079,  4085,  4087,  4089,  4091,  4093,  4097,  4111,  4128,
    4130,  4133,  4134,  4136,  4137,  4139,  4140,  4143,  4144,  4146,
    4147,  4150,  4152,  4155,  4167,  4177,  4179,  4181,  4185,  4186,
    4188,  4192,  4194,  4195,  4197,  4198,  4200,  4201,  4203,  4207,
    4209,  4211,  4213,  4217,  4218,  4221,  4224,  4225,  4228,  4229,
    4231,  4232,  4234,  4236,  4238,  4242,  4246,  4248,  4250,  4254,
    4258,  4262,  4266,  4271,  4275,  4278,  4280,  4282,  4284,  4286,
    4288,  4292,  4294,  4296,  4298,  4300,  4302,  4304,  4306,  4308,
    4310,  4312,  4314,  4316,  4318,  4320,  4322,  4324,  4326,  4328,
    4330,  4332,  4334,  4336,  4338,  4340,  4342,  4344,  4346,  4348,
    4350,  4352,  4354,  4356,  4358,  4360,  4362,  4364,  4366,  4368,
    4370,  4372,  4374,  4376,  4378,  4380,  4382,  4384,  4386,  4388,
    4390,  4392,  4394,  4396,  4398,  4400,  4402,  4404,  4406,  4408,
    4410,  4412,  4414,  4416,  4418,  4420,  4422,  4424,  4426,  4428,
    4430,  4432,  4434,  4436,  4438,  4440,  4442,  4444,  4446,  4448,
    4450,  4452,  4454,  4456,  4458,  4460,  4462,  4464,  4466,  4468,
    4470,  4472,  4474,  4476,  4478,  4480,  4482,  4484,  4486,  4488,
    4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,  4506,  4508,
    4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,  4526,  4528,
    4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,  4546,  4548,
    4550,  4552,  4554,  4556,  4558,  4560,  4562,  4564,  4566,  4568,
    4570,  4572,  4574,  4576,  4578,  4580,  4582,  4584,  4586,  4588,
    4590,  4592,  4594,  4596,  4598,  4600,  4602,  4604,  4606,  4608,
    4610,  4612,  4614,  4616,  4618,  4620,  4622,  4624,  4626,  4628,
    4630,  4632,  4634,  4636,  4638,  4640,  4642,  4644,  4646,  4648,
    4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,  4666,  4668,
    4670,  4672,  4674,  4676,  4678,  4680,  4682,  4684,  4686,  4688,
    4690,  4692,  4694,  4696,  4698,  4700,  4702,  4704,  4706,  4708,
    4710,  4712,  4714,  4716,  4718,  4720,  4722,  4724,  4726,  4728,
    4730,  4732,  4734,  4736,  4738,  4740,  4742,  4744,  4746,  4748,
    4750,  4752,  4754,  4756,  4758,  4760,  4762,  4764,  4766,  4768,
    4770,  4772,  4774,  4776,  4778,  4780,  4782,  4784,  4786,  4788,
    4790,  4792,  4794,  4796,  4798,  4800,  4802,  4804,  4806,  4808,
    4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,  4826,  4828,
    4830,  4832,  4834,  4836,  4838,  4840,  4842,  4844,  4846,  4848,
    4850,  4852,  4854,  4856,  4858,  4860,  4862,  4864,  4866,  4868,
    4870,  4872,  4874,  4876,  4878,  4880,  4882,  4884,  4886,  4888,
    4890,  4892,  4894,  4896,  4898,  4900,  4902,  4904,  4906,  4908,
    4910,  4912,  4914,  4916,  4918,  4920,  4922,  4924,  4926,  4928,
    4930,  4932,  4934,  4936,  4938,  4940,  4942,  4944,  4946,  4948,
    4950,  4952,  4954,  4956,  4958,  4960,  4962,  4964,  4966,  4968,
    4970,  4972,  4974,  4976,  4978,  4980,  4982,  4984,  4986,  4988,
    4990,  4992,  4994,  4996,  4998,  5000,  5002,  5004,  5006,  5008,
    5010,  5012,  5014,  5016,  5018,  5020,  5022,  5024,  5026,  5028,
    5030,  5032,  5034,  5036,  5038,  5040,  5042,  5044,  5046,  5048,
    5050,  5052,  5054,  5056,  5058,  5060,  5062,  5064,  5066,  5068,
    5070,  5072,  5074,  5076,  5078,  5080,  5082,  5084,  5086,  5088,
    5090,  5092,  5094,  5096,  5098,  5100,  5102,  5104,  5106,  5108,
    5110,  5112,  5114,  5116,  5118,  5120,  5122,  5124,  5126,  5128,
    5130,  5132,  5134,  5136,  5138,  5140,  5142,  5144,  5146,  5148,
    5150,  5152,  5154,  5156,  5158,  5160,  5162,  5164,  5166,  5168,
    5170,  5172,  5174,  5176,  5178,  5180,  5182,  5184,  5186,  5188,
    5190,  5192,  5194,  5196,  5198,  5200,  5202,  5204,  5206,  5208,
    5210,  5212,  5214,  5216,  5218,  5220,  5222,  5224,  5226,  5228,
    5230,  5232,  5234,  5236,  5238,  5240,  5242,  5244,  5246,  5248,
    5250,  5252,  5254,  5256,  5258,  5260,  5262,  5264,  5266,  5268,
    5270,  5272,  5274,  5276,  5278,  5280,  5282,  5284,  5286,  5288,
    5290,  5292,  5294,  5296,  5298,  5300,  5302,  5304,  5306,  5308,
    5310,  5312,  5314,  5316,  5318,  5320,  5322,  5324,  5326,  5328,
    5330,  5332,  5334,  5336,  5338,  5340,  5342,  5344,  5346,  5348,
    5350,  5352,  5354,  5356,  5358,  5360,  5362,  5364,  5366,  5368,
    5370,  5372,  5374,  5376,  5378,  5380,  5382,  5384,  5386,  5388,
    5390,  5392,  5394,  5396,  5398,  5400,  5402,  5404,  5406,  5408,
    5410,  5412,  5414,  5416,  5418,  5420,  5422
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     506,     0,    -1,   507,    -1,   507,   498,   508,    -1,   508,
      -1,   857,    -1,   850,    -1,   738,    -1,   834,    -1,   875,
      -1,   874,    -1,   876,    -1,   513,    -1,   858,    -1,   735,
      -1,   749,    -1,   848,    -1,   755,    -1,   733,    -1,   509,
      -1,   804,    -1,   832,    -1,   837,    -1,   835,    -1,   836,
      -1,   867,    -1,   813,    -1,   811,    -1,   734,    -1,   518,
      -1,   802,    -1,   521,    -1,   727,    -1,   732,    -1,   722,
      -1,   729,    -1,   861,    -1,   752,    -1,   516,    -1,    -1,
     817,   120,   169,   510,   512,   511,   822,    -1,   590,    -1,
     590,   711,    -1,   590,    36,   711,    -1,   454,   632,    -1,
      -1,   438,   581,    -1,    -1,    93,   800,   403,   515,    36,
     521,   514,    -1,    93,   800,   403,   188,   270,   150,   515,
      36,   521,   514,    -1,    93,   290,   342,   800,   403,   515,
      36,   521,   514,    -1,   457,   107,    -1,   457,   268,   107,
      -1,    -1,   702,   789,   775,   767,    -1,    93,   800,   450,
     702,   789,   872,    36,   521,   517,    -1,    93,   290,   342,
     800,   450,   702,   789,   872,    36,   521,   517,    -1,    93,
     800,   332,   450,   702,   495,   793,   496,   872,    36,   521,
     517,    -1,    93,   290,   342,   800,   332,   450,   702,   495,
     793,   496,   872,    36,   521,   517,    -1,   457,    67,   288,
      -1,   457,    59,    67,   288,    -1,   457,   236,    67,   288,
      -1,    -1,   315,   705,   519,    36,   520,    -1,   495,   669,
     496,    -1,    -1,   521,    -1,   813,    -1,   732,    -1,   509,
      -1,   523,    -1,   522,    -1,   495,   523,   496,    -1,   495,
     522,   496,    -1,   525,    -1,   524,   537,    -1,   524,   536,
     570,   543,    -1,   524,   536,   542,   571,    -1,   526,   524,
      -1,   526,   524,   537,    -1,   526,   524,   536,   570,   543,
      -1,   526,   524,   536,   542,   571,    -1,   525,    -1,   522,
      -1,   367,   534,   691,   529,   579,   596,   559,   568,   642,
     569,   547,    -1,   367,   533,   693,   529,   579,   596,   559,
     568,   642,   569,   547,    -1,   578,    -1,   403,   590,    -1,
     524,   430,   532,   524,    -1,   524,   213,   532,   524,    -1,
     524,   145,   532,   524,    -1,   457,   527,    -1,   481,   527,
      -1,   457,   332,   527,    -1,   528,    -1,   527,   499,   528,
      -1,   705,   718,    36,   495,   520,   496,    -1,   215,   530,
      -1,    -1,   409,   531,   702,    -1,   407,   531,   702,    -1,
     236,   409,   531,   702,    -1,   236,   407,   531,   702,    -1,
     175,   409,   531,   702,    -1,   175,   407,   531,   702,    -1,
     434,   531,   702,    -1,   403,   702,    -1,   702,    -1,   403,
      -1,    -1,    27,    -1,   130,    -1,    -1,   130,    -1,   130,
     285,   495,   665,   496,    -1,    27,    -1,    -1,   189,   277,
      -1,   345,   277,    -1,    -1,   537,    -1,    -1,   291,    54,
     538,    -1,   291,    54,    27,   540,   541,    -1,   291,    54,
     488,   540,   541,    -1,   539,    -1,   538,   499,   539,    -1,
     632,   438,   661,   541,    -1,   632,   540,   541,    -1,    37,
      -1,   124,    -1,    -1,   480,   161,    -1,   480,   226,    -1,
      -1,   544,   545,    -1,   545,   544,    -1,   544,    -1,   545,
      -1,   542,    -1,    -1,   233,   553,    -1,   233,   553,   499,
     554,    -1,   159,   558,   555,   557,   286,    -1,   159,   558,
     557,   286,    -1,   282,   554,    -1,   282,   555,   557,    -1,
       4,   490,    -1,     9,   490,    -1,     4,   307,    -1,     9,
     307,    -1,     9,    -1,     9,   356,    -1,   438,   358,   549,
      -1,    -1,   711,    -1,    -1,   548,   495,   546,   496,   552,
      -1,   546,    -1,   546,   495,   711,   496,    -1,   546,   495,
     711,   499,     9,   496,    -1,   405,   549,    -1,   550,    -1,
      -1,   341,   495,     9,   496,    -1,    -1,   632,    -1,    27,
      -1,   632,   490,    -1,     4,   307,    -1,     9,   307,    -1,
     632,    -1,   634,    -1,   486,   556,    -1,   487,   556,    -1,
     709,    -1,     4,    -1,   355,    -1,   356,    -1,   161,    -1,
     267,    -1,   178,    54,   561,    -1,   178,    54,    27,    -1,
     178,    54,   488,    -1,    -1,   562,    -1,   560,   499,   562,
      -1,   560,    -1,   560,   499,    -1,   632,    -1,   563,    -1,
     565,    -1,   564,    -1,   566,    -1,   495,   496,    -1,   354,
     495,   665,   496,    -1,    96,   495,   665,   496,    -1,   179,
     376,   495,   561,   496,    -1,   179,    -1,   180,    -1,   182,
     632,    -1,    -1,   325,   632,    -1,    -1,   572,    -1,   164,
     328,   286,    -1,   570,    -1,    -1,   573,    -1,   572,   573,
      -1,   574,   575,   576,    -1,   164,   436,    -1,   164,   268,
     222,   436,    -1,   164,   377,    -1,   164,   222,   377,    -1,
     280,   701,    -1,    -1,   274,    -1,   381,   241,    -1,    -1,
     444,   495,   665,   496,    -1,   577,   499,   495,   665,   496,
      -1,   577,    -1,   577,   499,    -1,   169,   581,    -1,    -1,
     582,    -1,   580,   499,   582,    -1,   580,    -1,   580,   499,
      -1,   590,   585,   551,    -1,   591,   586,   551,    -1,   227,
     591,   586,    -1,   522,   585,   551,    -1,   227,   522,   585,
      -1,   583,    -1,   495,   583,   496,   584,    -1,   495,   583,
     496,    -1,   582,    94,   220,   582,    -1,   582,   587,   220,
     582,   589,    -1,   582,   220,   582,   589,    -1,   582,   264,
     587,   220,   582,    -1,   582,   264,   220,   582,    -1,    36,
     711,   495,   704,   496,    -1,    36,   712,    -1,   711,   495,
     704,   496,    -1,   711,    -1,   584,    -1,    -1,   584,    -1,
      36,   495,   597,   496,    -1,    36,   711,   495,   597,   496,
      -1,   711,   495,   597,   496,    -1,    -1,   170,   588,    -1,
     230,   588,    -1,   351,   588,    -1,   204,    -1,   294,    -1,
      -1,   438,   495,   704,   496,    -1,   285,   632,    -1,   702,
      -1,   702,   488,    -1,   286,   702,    -1,   286,   495,   702,
     496,    -1,   637,   595,    -1,   356,   169,   495,   593,   496,
     595,    -1,   637,   594,    -1,   592,    -1,   593,   499,   592,
      -1,    36,   495,   597,   496,    -1,    -1,   481,   292,    -1,
      -1,   454,   632,    -1,    -1,   598,    -1,   597,   499,   598,
      -1,   711,   602,   599,    -1,    73,   716,    -1,    -1,   711,
     602,    -1,   600,   499,   711,   602,    -1,   355,    -1,   396,
      -1,   604,   603,    -1,   375,   604,   603,    -1,   604,    35,
     493,   709,   494,    -1,   375,   604,    35,   493,   709,   494,
      -1,   604,    35,    -1,   375,   604,    35,    -1,   601,   495,
     600,   496,   603,    -1,   244,   495,   669,   496,   603,    -1,
     603,   493,   494,    -1,   603,   493,   709,   494,    -1,    -1,
     606,    -1,   608,    -1,   610,    -1,   614,    -1,   620,    -1,
     621,   631,    -1,   621,   495,   709,   496,    -1,   608,    -1,
     611,    -1,   615,    -1,   620,    -1,   715,   607,    -1,   495,
     665,   496,    -1,    -1,   211,    -1,   212,    -1,   382,    -1,
      49,    -1,   329,    -1,   162,   609,    -1,   134,   314,    -1,
     113,   607,    -1,   112,   607,    -1,   278,   607,    -1,    52,
      -1,   495,   709,   496,    -1,    -1,   612,    -1,   613,    -1,
     612,    -1,   613,    -1,    51,   619,   495,   665,   496,    -1,
      51,   619,    -1,   616,    -1,   617,    -1,   616,    -1,   617,
      -1,   618,   495,   709,   496,    -1,   618,    -1,    65,   619,
      -1,    64,   619,    -1,   445,    -1,   263,    65,   619,    -1,
     263,    64,   619,    -1,   265,   619,    -1,   447,    -1,    -1,
     413,   495,   709,   496,   622,    -1,   413,   622,    -1,   412,
     495,   709,   496,   622,    -1,   412,   622,    -1,   214,    -1,
     481,   412,   478,    -1,   459,   412,   478,    -1,    -1,   475,
      -1,   476,    -1,   258,    -1,   259,    -1,   109,    -1,   110,
      -1,   185,    -1,   186,    -1,   254,    -1,   255,    -1,   364,
      -1,   365,    -1,   252,    -1,   253,    -1,   250,    -1,   251,
      -1,   623,    -1,   624,    -1,   625,    -1,   626,    -1,   627,
      -1,   628,    -1,   629,    -1,   630,    -1,   623,   414,   624,
      -1,   625,   414,   626,    -1,   625,   414,   627,    -1,   625,
     414,   628,    -1,   626,   414,   627,    -1,   626,   414,   628,
      -1,   627,   414,   628,    -1,    -1,   634,    -1,   632,    11,
     602,    -1,   632,    73,   716,    -1,   632,    41,   412,   478,
     632,    -1,   486,   632,    -1,   487,   632,    -1,   632,   486,
     632,    -1,   632,   487,   632,    -1,   632,   488,   632,    -1,
     632,   489,   632,    -1,   632,   490,   632,    -1,   632,   491,
     632,    -1,   632,   482,   632,    -1,   632,   483,   632,    -1,
     632,   484,   632,    -1,   632,    16,   632,    -1,   632,    17,
     632,    -1,   632,    18,   632,    -1,   632,   660,   632,    -1,
     660,   632,    -1,   632,   660,    -1,   632,    33,   632,    -1,
     632,   290,   632,    -1,   270,   632,    -1,   479,   632,    -1,
     632,   174,   632,    -1,   632,   232,   632,    -1,   632,   232,
     632,   143,   632,    -1,   632,   479,   232,   632,    -1,   632,
     479,   232,   632,   143,   632,    -1,   632,   190,   632,    -1,
     632,   190,   632,   143,   632,    -1,   632,   479,   190,   632,
      -1,   632,   479,   190,   632,   143,   632,    -1,   632,   379,
     414,   632,    -1,   632,   379,   414,   632,   143,   632,    -1,
     632,   479,   379,   414,   632,    -1,   632,   479,   379,   414,
     632,   143,   632,    -1,   632,   217,   275,    -1,   632,   218,
      -1,   632,   217,   270,   275,    -1,   632,   270,   275,    -1,
     632,   273,    -1,   653,    -1,   500,   656,   501,    -1,   493,
     666,   494,    -1,   632,    15,   632,    -1,   653,   296,   653,
      -1,   632,   217,   421,    -1,   632,   217,   270,   421,    -1,
     632,   217,   157,    -1,   632,   217,   270,   157,    -1,   632,
     217,   432,    -1,   632,   217,   270,   432,    -1,   632,   217,
     130,   169,   632,    -1,   632,   217,   270,   130,   169,   632,
      -1,   632,   217,   280,   495,   669,   496,    -1,   632,   217,
     270,   280,   495,   669,   496,    -1,   632,    48,   690,   633,
      33,   632,    -1,   632,   479,    48,   690,   633,    33,   632,
      -1,   632,    48,   400,   633,    33,   632,    -1,   632,   479,
      48,   400,   633,    33,   632,    -1,   632,   195,   679,    -1,
     632,   479,   195,   679,    -1,   632,   662,   657,   522,    -1,
     632,   662,   657,   495,   632,   496,    -1,   115,    -1,    35,
     493,   666,   494,    -1,   634,    -1,   633,    11,   602,    -1,
     486,   633,    -1,   487,   633,    -1,   633,   486,   633,    -1,
     633,   487,   633,    -1,   633,   488,   633,    -1,   633,   489,
     633,    -1,   633,   490,   633,    -1,   633,   491,   633,    -1,
     633,   482,   633,    -1,   633,   483,   633,    -1,   633,   484,
     633,    -1,   633,    16,   633,    -1,   633,    17,   633,    -1,
     633,    18,   633,    -1,   633,   660,   633,    -1,   660,   633,
      -1,   633,   660,    -1,   633,   217,   130,   169,   633,    -1,
     633,   217,   270,   130,   169,   633,    -1,   633,   217,   280,
     495,   669,   496,    -1,   633,   217,   270,   280,   495,   669,
     496,    -1,   685,    -1,   708,    -1,   502,     9,    -1,   503,
     689,    -1,    10,   689,    -1,   495,   632,   496,   689,    -1,
     680,    -1,   636,   689,    -1,   522,    -1,   522,   688,    -1,
     150,   522,    -1,   567,   495,   665,   496,    -1,   707,   495,
     496,    -1,   707,   495,   667,   536,   535,   496,    -1,   707,
     495,   446,   668,   536,   535,   496,    -1,   707,   495,   667,
     499,   446,   668,   536,   535,   496,    -1,   707,   495,    27,
     667,   536,   535,   496,    -1,   707,   495,   130,   667,   536,
     535,   496,    -1,   707,   495,   488,   496,    -1,   635,   639,
     640,   641,   645,    -1,   638,    -1,   635,    -1,   638,    -1,
      74,   164,   495,   632,   496,    -1,    99,    -1,   102,    -1,
     102,   495,   709,   496,    -1,   103,    -1,   103,   495,   709,
     496,    -1,   237,    -1,   237,   495,   709,   496,    -1,   238,
      -1,   238,   495,   709,   496,    -1,   100,    -1,   104,    -1,
     373,    -1,   437,    -1,    98,    -1,   101,    -1,    61,   495,
     632,    36,   602,   496,    -1,   424,   495,   632,    36,   602,
     496,    -1,   156,   495,   670,   496,    -1,   297,   495,   672,
     496,    -1,   311,   495,   674,   496,    -1,   398,   495,   675,
     496,    -1,   418,   495,   632,    36,   602,   496,    -1,   420,
     495,    53,   678,   496,    -1,   420,   495,   228,   678,   496,
      -1,   420,   495,   415,   678,   496,    -1,   420,   495,   678,
     496,    -1,   276,   495,   632,   499,   632,   496,    -1,    72,
     495,   665,   496,    -1,   458,   178,   495,   537,   496,    -1,
      -1,   160,   495,   454,   632,   496,    -1,    -1,   153,    -1,
      -1,   456,   643,    -1,    -1,   644,    -1,   643,   499,   644,
      -1,   711,    36,   646,    -1,   295,   646,    -1,   295,   711,
      -1,    -1,   495,   647,   648,   536,   649,   496,    -1,   711,
      -1,    -1,   304,    54,   664,    -1,    -1,   327,   650,    -1,
     356,   650,    -1,    -1,   651,    -1,    48,   651,    33,   651,
      -1,   427,   313,    -1,   427,   163,    -1,    97,   355,    -1,
     632,   313,    -1,   632,   163,    -1,   355,   495,   665,   496,
      -1,   355,   495,   496,    -1,   652,    -1,   495,   664,   499,
     632,   496,    -1,   712,   504,   632,    -1,   654,    -1,   655,
     499,   654,    -1,   655,    -1,   655,   499,    -1,    34,    -1,
     384,    -1,    27,    -1,     8,    -1,   659,    -1,   486,    -1,
     487,    -1,   488,    -1,   489,    -1,   490,    -1,   491,    -1,
     482,    -1,   483,    -1,   484,    -1,    16,    -1,    17,    -1,
      18,    -1,     8,    -1,   287,   495,   663,   496,    -1,   658,
      -1,   287,   495,   663,   496,    -1,   658,    -1,   287,   495,
     663,   496,    -1,   232,    -1,   479,   232,    -1,   174,    -1,
     479,   174,    -1,   190,    -1,   479,   190,    -1,   658,    -1,
     711,   497,   663,    -1,   632,    -1,   664,   499,   632,    -1,
     664,    -1,   664,   499,    -1,   665,    -1,    -1,   668,    -1,
     667,   499,   668,    -1,   632,    -1,   719,    13,   632,    -1,
     719,    14,   632,    -1,   602,    -1,   669,   499,   602,    -1,
     671,   169,   632,    -1,    -1,     3,    -1,   623,    -1,   624,
      -1,   625,    -1,   626,    -1,   627,    -1,   628,    -1,   629,
      -1,   630,    -1,   710,    -1,   632,   673,   676,   677,    -1,
     632,   673,   676,    -1,   308,   632,    -1,   633,   195,   633,
      -1,    -1,   632,   676,   677,    -1,   632,   677,   676,    -1,
     632,   676,    -1,   632,   677,    -1,   664,    -1,    -1,   169,
     632,    -1,   164,   632,    -1,   632,   169,   665,    -1,   169,
     665,    -1,   665,    -1,   522,    -1,   495,   665,   496,    -1,
      60,   684,   681,   683,   141,    -1,   682,    -1,   681,   682,
      -1,   453,   632,   411,   632,    -1,   137,   632,    -1,    -1,
     632,    -1,    -1,   711,    -1,   711,   688,    -1,   497,   706,
      -1,   493,   632,   494,    -1,   493,   687,   504,   687,   494,
      -1,   632,    -1,    -1,   686,    -1,   688,   686,    -1,    -1,
     689,   686,    -1,    40,    -1,    -1,   693,    -1,    -1,   694,
      -1,   692,   499,   694,    -1,   692,    -1,   692,   499,    -1,
     632,    36,   721,    -1,   632,     3,    -1,   632,    -1,   488,
     696,   700,    -1,   711,   497,   488,   696,   700,    -1,   146,
     495,   704,   496,    -1,   146,   711,    -1,   695,    -1,    -1,
     632,    36,   711,    -1,   697,    -1,   698,   499,   697,    -1,
     698,    -1,   698,   499,    -1,   342,   495,   699,   496,    -1,
     342,   697,    -1,    -1,   702,    -1,   701,   499,   702,    -1,
     712,    -1,   711,   688,    -1,   705,    -1,   703,   499,   705,
      -1,   703,    -1,   703,   499,    -1,   711,    -1,   720,    -1,
     714,    -1,   711,   688,    -1,   709,    -1,     4,    -1,   710,
     689,    -1,     6,    -1,     7,    -1,   707,   710,    -1,   707,
     495,   667,   536,   535,   496,   710,    -1,   605,   710,    -1,
     621,   495,   632,   496,   631,    -1,   621,   709,   631,    -1,
     621,   710,   631,    -1,   421,    -1,   157,    -1,   275,    -1,
       9,    -1,     5,    -1,     3,    -1,   893,    -1,   894,    -1,
     711,    -1,     5,    -1,     3,    -1,   893,    -1,   898,    -1,
       3,    -1,   893,    -1,   895,    -1,     3,    -1,   893,    -1,
     896,    -1,   711,    -1,   711,   717,    -1,   497,   706,    -1,
     717,   497,   706,    -1,   495,   703,   496,    -1,    -1,   713,
      -1,     3,    -1,   897,    -1,   893,    -1,   899,    -1,   720,
      -1,     5,    -1,   439,   724,   726,   838,    -1,   439,   724,
     726,   838,   702,    -1,   439,   724,   726,   838,   834,    -1,
     439,   495,   725,   496,    -1,   439,   495,   725,   496,   702,
     718,    -1,   844,    -1,   448,    -1,   168,    -1,   170,    -1,
       3,    -1,   170,    -1,    -1,   723,    -1,   725,   499,   723,
      -1,   168,    -1,    -1,    19,   728,    -1,    47,   728,    -1,
     388,   728,    -1,    79,   728,    -1,   141,   728,    -1,   353,
     728,    -1,   460,    -1,   416,    -1,    -1,   344,   731,    -1,
     754,    -1,    27,    -1,   730,    -1,   412,   478,    -1,   416,
     219,   231,    -1,   817,   436,   510,   374,   829,   579,   511,
     822,    -1,   111,   705,    -1,   111,   315,   705,    -1,   111,
      27,    -1,   111,   315,    27,    -1,   312,   711,    -1,   312,
     711,   484,   866,    -1,   312,   711,   495,   667,   496,    -1,
      93,   800,   736,   702,   737,    36,   403,   521,    -1,    93,
     800,   736,   702,   737,    36,   632,    -1,   171,    -1,   243,
      -1,   495,   496,    -1,   495,   667,   496,    -1,    29,   403,
     590,   746,    -1,    29,   403,   188,   150,   590,   746,    -1,
      29,   198,   702,   746,    -1,    29,   198,   188,   150,   702,
     746,    -1,    29,   368,   702,   746,    -1,    29,   368,   188,
     150,   702,   746,    -1,    29,   450,   702,   746,    -1,    29,
     450,   188,   150,   702,   746,    -1,   741,    -1,   739,   741,
      -1,   374,   115,   632,    -1,   135,   115,    -1,   346,    -1,
     346,   852,   853,    -1,   374,   854,    -1,   374,   173,   801,
      -1,   745,    -1,   742,   499,   745,    -1,    23,   780,    -1,
      23,   188,   270,   150,   780,    -1,    23,    75,   780,    -1,
      23,    75,   188,   270,   150,   780,    -1,    29,   803,   711,
     740,    -1,    29,   803,   711,   135,   270,   275,    -1,    29,
     803,   711,   374,   270,   275,    -1,    29,   803,   711,   374,
     390,   856,    -1,    29,   803,   711,   374,   768,    -1,    29,
     803,   711,   344,   768,    -1,    29,   803,   711,   374,   393,
     711,    -1,    29,   803,   711,    23,   173,   801,    36,   187,
     758,    -1,    29,   803,   711,   739,    -1,    29,   803,   711,
     135,   187,    -1,    29,   803,   711,   135,   187,   188,   150,
      -1,   135,   803,   188,   150,   711,   808,    -1,   135,   803,
     711,   808,    -1,    29,   803,   711,   748,   425,   602,   599,
     744,    -1,    29,   803,   711,   747,    -1,    23,   770,    -1,
      29,    86,   705,   756,    -1,   441,    86,   705,    -1,   135,
      86,   188,   150,   705,   808,    -1,   135,    86,   705,   808,
      -1,   374,   242,    -1,   374,   434,    -1,   374,   768,    -1,
     344,   768,    -1,   747,    -1,   438,   632,    -1,    -1,   763,
      -1,   374,   763,    -1,    23,   763,    -1,   135,   778,    -1,
     743,    -1,   746,   499,   743,    -1,   289,   495,   742,   496,
      -1,   374,   107,    -1,   374,    -1,    -1,    93,   360,   711,
     750,    -1,    93,   360,   188,   270,   150,   711,   750,    -1,
     750,   751,    -1,    -1,   755,    -1,   867,    -1,   848,    -1,
     516,    -1,   753,   521,    -1,   399,   521,    -1,   399,   754,
      -1,   753,   754,    -1,   753,   412,   478,    -1,   753,   416,
     219,   231,    -1,   753,    27,    -1,   753,    -1,   378,    -1,
     125,    -1,   711,    -1,   754,   497,   711,    -1,    93,   800,
     403,   702,   495,   787,   496,   775,   767,    -1,    93,   800,
     403,   188,   270,   150,   702,   495,   787,   496,   775,   767,
      -1,    93,   290,   342,   800,   403,   702,   495,   787,   496,
     775,   767,    -1,    -1,   756,   779,    -1,   795,    -1,   899,
      -1,   661,    -1,   853,    -1,   710,    -1,   269,    -1,   495,
     851,   496,    -1,    -1,   710,    -1,   268,    22,    -1,   347,
      -1,    58,    -1,   374,   275,    -1,   374,   115,    -1,    86,
     705,   762,    -1,   762,    -1,   774,    -1,    73,   716,    -1,
     270,   275,    -1,   275,    -1,   431,   786,    -1,   318,   222,
     786,    -1,    67,   495,   632,   496,   769,    -1,   438,    81,
     705,    -1,   115,   633,    -1,   173,   801,    36,   187,   758,
      -1,   334,   702,   789,   798,   765,    -1,   778,   759,    -1,
     285,   436,   760,    -1,   764,    -1,   791,    -1,   764,   791,
      -1,   791,   764,    -1,    -1,   289,   495,   781,   496,    -1,
      -1,   285,    79,   135,    -1,   285,    79,   120,   356,    -1,
     285,    79,   317,   356,    -1,    -1,   495,   772,   496,    -1,
     268,   200,    -1,    -1,    86,   705,   796,    -1,   796,    -1,
      78,    -1,    87,    -1,   116,    -1,   187,    -1,   199,    -1,
     390,    -1,   393,    -1,    27,    -1,   792,    -1,   772,   499,
     792,    -1,   438,   198,   783,    -1,   117,    -1,   270,   117,
      -1,   202,   118,    -1,   202,   191,    -1,   457,   768,    -1,
     457,   283,    -1,   459,   283,    -1,    -1,   495,   782,   496,
      -1,   777,   196,   771,    -1,   777,   147,   771,    -1,    -1,
     720,    -1,   270,   117,    -1,   117,    -1,   202,   191,    -1,
     202,   118,    -1,   270,   440,    -1,   268,   200,    -1,   711,
     602,   766,   790,    -1,   763,    -1,   781,   499,   763,    -1,
     785,    -1,   782,   499,   785,    -1,   711,    -1,   780,    -1,
     799,    -1,   770,    -1,   720,   484,   757,    -1,   720,    -1,
     457,   776,    -1,    -1,   797,    -1,   797,   499,    -1,    -1,
     711,    -1,   495,   793,   496,    -1,    -1,   790,   761,    -1,
      -1,   285,   120,   760,    -1,   720,   484,   757,    -1,   720,
      -1,   720,   497,   720,   484,   757,    -1,   720,   497,   720,
      -1,   788,    -1,   793,   499,   788,    -1,   793,    -1,   793,
     499,    -1,   602,    -1,   713,   717,   490,   425,    -1,   375,
     713,   717,   490,   425,    -1,    67,   495,   632,   496,   756,
      -1,   431,   495,   794,   496,   786,   756,    -1,   431,   773,
     756,    -1,   318,   222,   495,   794,   496,   786,   756,    -1,
     318,   222,   773,   756,    -1,   166,   222,   495,   794,   496,
     334,   702,   789,   798,   765,   756,    -1,   784,    -1,   797,
     499,   784,    -1,   246,   170,    -1,   246,   303,    -1,   246,
     380,    -1,    -1,   232,   702,   777,    -1,   409,    -1,   407,
      -1,   236,   409,    -1,   236,   407,    -1,   175,   409,    -1,
     175,   407,    -1,   434,    -1,    -1,    30,    -1,    54,   115,
      -1,    29,   360,   705,   340,   414,   705,    -1,    29,   403,
     590,   340,   414,   705,    -1,    29,   403,   188,   150,   590,
     340,   414,   705,    -1,    29,   368,   702,   340,   414,   705,
      -1,    29,   368,   188,   150,   702,   340,   414,   705,    -1,
      29,   450,   702,   340,   414,   705,    -1,    29,   450,   188,
     150,   702,   340,   414,   705,    -1,    29,   198,   702,   340,
     414,   705,    -1,    29,   198,   188,   150,   702,   340,   414,
     705,    -1,    29,   403,   590,   340,   803,   705,   414,   705,
      -1,    29,   403,   188,   150,   590,   340,   803,   705,   414,
     705,    -1,    29,   403,   590,   340,    86,   705,   414,   705,
      -1,    29,   403,   188,   150,   590,   340,    86,   705,   414,
     705,    -1,    75,    -1,    -1,   135,   805,   188,   150,   807,
     808,    -1,   135,   805,   807,   808,    -1,   135,   806,   188,
     150,   703,   808,    -1,   135,   806,   703,   808,    -1,   135,
     809,   705,   285,   716,   808,    -1,   135,   809,   188,   150,
     705,   285,   716,   808,    -1,   135,   425,   810,   808,    -1,
     135,   425,   188,   150,   810,   808,    -1,   403,    -1,   368,
      -1,   171,    -1,   243,    -1,   243,   403,    -1,   450,    -1,
     247,   450,    -1,   198,    -1,   166,   403,    -1,    74,    -1,
      90,    -1,   390,    -1,   410,   363,   302,    -1,   410,   363,
     127,    -1,   410,   363,   408,    -1,   410,   363,    83,    -1,
      21,   249,    -1,   144,   419,    -1,   154,    -1,   166,   107,
     461,    -1,   324,    -1,   360,    -1,   371,    -1,   716,    -1,
     807,   499,   716,    -1,    58,    -1,   347,    -1,    -1,   310,
      -1,   357,    -1,   419,    -1,   602,    -1,   810,   499,   602,
      -1,   235,   812,    -1,   209,   812,    -1,   165,   209,   812,
      -1,   710,    -1,   711,    -1,   817,   208,   215,   815,   814,
     820,   822,    -1,   521,    -1,   298,   823,   443,   521,    -1,
     495,   827,   496,   521,    -1,   495,   827,   496,   298,   823,
     443,   521,    -1,   115,   444,    -1,   702,    -1,   702,    36,
     711,    -1,   495,   830,   496,   596,    -1,   285,    86,   705,
      -1,    -1,   526,    -1,    -1,   711,   689,    -1,   831,   484,
     632,    -1,   495,   824,   496,   484,   632,    -1,   285,    84,
     816,   131,   436,   374,   829,   596,    -1,   285,    84,   816,
     131,   271,    -1,    -1,   711,   825,   826,   540,   541,    -1,
     637,   825,   826,   540,   541,    -1,   495,   632,   496,   825,
     826,   540,   541,    -1,   348,   692,    -1,    -1,   437,    -1,
     402,    -1,   831,    -1,   824,   499,   831,    -1,    73,   716,
      -1,    -1,   716,    -1,    -1,   818,    -1,   827,   499,   818,
      -1,   819,    -1,   828,   499,   819,    -1,   828,    -1,   828,
     499,    -1,   821,    -1,   830,   499,   821,    -1,   711,   689,
      -1,   149,   705,   833,    -1,    93,   800,   403,   515,    36,
     149,   705,   833,   514,    -1,    93,   800,   403,   188,   270,
     150,   515,    36,   149,   705,   833,   514,    -1,   495,   665,
     496,    -1,    -1,   844,   838,    -1,   844,   838,   702,   718,
      -1,   152,   108,   710,   883,    -1,   194,   108,   710,    -1,
     151,   840,    -1,   151,   844,   838,   840,    -1,   151,   448,
     840,    -1,   151,   495,   843,   496,   840,    -1,   448,    -1,
      -1,   845,    -1,   853,    -1,    -1,   521,    -1,   813,    -1,
     732,    -1,   509,    -1,   513,    -1,     3,    -1,   893,    -1,
     897,    -1,   841,    -1,   710,    -1,   846,    -1,   843,   499,
     846,    -1,    32,    -1,    31,    -1,   421,    -1,   157,    -1,
     285,    -1,   842,    -1,   847,   839,    -1,   841,    -1,   844,
      -1,    93,   800,   368,   702,   849,    -1,    93,   800,   368,
     188,   270,   150,   702,   849,    -1,   851,    -1,    -1,    29,
     368,   702,   851,    -1,    29,   368,   188,   150,   702,   851,
      -1,   854,    -1,   851,   854,    -1,   457,    -1,   481,    -1,
      -1,     4,    -1,   486,     4,    -1,   487,     4,    -1,   856,
      -1,    36,   604,    -1,    55,   853,    -1,   106,    -1,   268,
     106,    -1,   197,   855,   853,    -1,   248,   853,    -1,   256,
     853,    -1,   268,   248,    -1,   268,   256,    -1,   299,    54,
     716,    -1,   368,   261,   716,    -1,   388,   852,   853,    -1,
     346,    -1,   346,   852,   853,    -1,    54,    -1,    -1,   709,
      -1,   486,   709,    -1,   487,   709,    -1,    29,   403,   590,
     374,   360,   705,    -1,    29,   403,   188,   150,   590,   374,
     360,   705,    -1,    29,   368,   702,   374,   360,   705,    -1,
      29,   368,   188,   150,   702,   374,   360,   705,    -1,    29,
     450,   702,   374,   360,   705,    -1,    29,   450,   188,   150,
     702,   374,   360,   705,    -1,    93,   425,   716,    36,   142,
     495,   859,   496,    -1,   860,    -1,    -1,   710,    -1,   860,
     499,   710,    -1,   374,   862,    -1,   374,   236,   862,    -1,
     374,   372,   862,    -1,   374,   175,   862,    -1,   863,    -1,
     754,   169,    97,    -1,   412,   478,   865,    -1,   360,   710,
      -1,   754,   414,   866,    -1,   754,   484,   866,    -1,   754,
     414,   115,    -1,   754,   484,   115,    -1,   845,    -1,   853,
      -1,   710,    -1,     3,    -1,   621,   710,   631,    -1,   621,
     495,   709,   496,   710,    -1,   853,    -1,   115,    -1,   236,
      -1,   864,    -1,   866,   499,   864,    -1,    93,   873,   198,
     870,   871,   285,   702,   869,   495,   830,   496,   872,   596,
      -1,    93,   873,   198,   870,   188,   270,   150,   783,   285,
     702,   869,   495,   830,   496,   872,   596,    -1,   711,    -1,
     438,   868,    -1,    -1,    82,    -1,    -1,   783,    -1,    -1,
     457,   768,    -1,    -1,   431,    -1,    -1,   165,    68,    -1,
      68,    -1,    56,   635,    -1,    91,   888,   702,   789,   886,
     877,   882,   891,   878,   852,   883,    -1,    91,   495,   520,
     496,   414,   882,   891,   852,   883,    -1,   169,    -1,   414,
      -1,   880,   122,   710,    -1,    -1,   890,    -1,   879,   499,
     890,    -1,   438,    -1,    -1,    36,    -1,    -1,   323,    -1,
      -1,   887,    -1,   495,   892,   496,    -1,   845,    -1,   853,
      -1,   488,    -1,   495,   879,   496,    -1,    -1,   720,   884,
      -1,   457,   283,    -1,    -1,   887,   889,    -1,    -1,    50,
      -1,    -1,    50,    -1,   283,    -1,   168,    -1,   121,   881,
     710,    -1,   275,   881,   710,    -1,    95,    -1,   183,    -1,
     326,   881,   710,    -1,   143,   881,   710,    -1,   165,   326,
     793,    -1,   165,   326,   488,    -1,   165,   270,   275,   793,
      -1,   165,   275,   793,    -1,   139,   710,    -1,   845,    -1,
     710,    -1,   391,    -1,   392,    -1,   885,    -1,   892,   499,
     885,    -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,
      23,    -1,    24,    -1,    25,    -1,    26,    -1,    28,    -1,
      29,    -1,    30,    -1,    38,    -1,    39,    -1,    41,    -1,
      42,    -1,    43,    -1,    45,    -1,    46,    -1,    47,    -1,
      54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,    -1,
      59,    -1,    62,    -1,    63,    -1,    66,    -1,    68,    -1,
      69,    -1,    70,    -1,    71,    -1,    76,    -1,    77,    -1,
      78,    -1,    79,    -1,    80,    -1,    81,    -1,    83,    -1,
      84,    -1,    85,    -1,    87,    -1,    88,    -1,    89,    -1,
      90,    -1,    91,    -1,    92,    -1,    95,    -1,    96,    -1,
      97,    -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,
     109,    -1,   110,    -1,   111,    -1,   114,    -1,   116,    -1,
     118,    -1,   119,    -1,   120,    -1,   121,    -1,   122,    -1,
     123,    -1,   125,    -1,   126,    -1,   127,    -1,   128,    -1,
     129,    -1,   132,    -1,   133,    -1,   134,    -1,   135,    -1,
     136,    -1,   138,    -1,   139,    -1,   140,    -1,   142,    -1,
     143,    -1,   144,    -1,   146,    -1,   147,    -1,   148,    -1,
     149,    -1,   151,    -1,   152,    -1,   153,    -1,   154,    -1,
     155,    -1,   158,    -1,   160,    -1,   161,    -1,   163,    -1,
     165,    -1,   167,    -1,   171,    -1,   172,    -1,   173,    -1,
     175,    -1,   177,    -1,   181,    -1,   183,    -1,   184,    -1,
     185,    -1,   186,    -1,   187,    -1,   188,    -1,   189,    -1,
     191,    -1,   192,    -1,   193,    -1,   194,    -1,   196,    -1,
     197,    -1,   198,    -1,   199,    -1,   200,    -1,   201,    -1,
     203,    -1,   206,    -1,   207,    -1,   208,    -1,   209,    -1,
     210,    -1,   216,    -1,   219,    -1,   221,    -1,   222,    -1,
     223,    -1,   224,    -1,   225,    -1,   226,    -1,   229,    -1,
     231,    -1,   234,    -1,   235,    -1,   236,    -1,   239,    -1,
     240,    -1,   241,    -1,   242,    -1,   243,    -1,   245,    -1,
     246,    -1,   247,    -1,   248,    -1,   249,    -1,   250,    -1,
     251,    -1,   252,    -1,   253,    -1,   254,    -1,   255,    -1,
     256,    -1,   257,    -1,   258,    -1,   259,    -1,   260,    -1,
     261,    -1,   262,    -1,   266,    -1,   267,    -1,   268,    -1,
     271,    -1,   272,    -1,   274,    -1,   277,    -1,   279,    -1,
     280,    -1,   281,    -1,   283,    -1,   284,    -1,   287,    -1,
     288,    -1,   289,    -1,   292,    -1,   295,    -1,   298,    -1,
     299,    -1,   300,    -1,   301,    -1,   302,    -1,   303,    -1,
     304,    -1,   305,    -1,   306,    -1,   307,    -1,   309,    -1,
     310,    -1,   312,    -1,   313,    -1,   315,    -1,   316,    -1,
     317,    -1,   319,    -1,   320,    -1,   321,    -1,   322,    -1,
     323,    -1,   324,    -1,   326,    -1,   327,    -1,   328,    -1,
     330,    -1,   331,    -1,   332,    -1,   333,    -1,   335,    -1,
     336,    -1,   337,    -1,   338,    -1,   339,    -1,   340,    -1,
     341,    -1,   342,    -1,   343,    -1,   344,    -1,   345,    -1,
     346,    -1,   347,    -1,   349,    -1,   350,    -1,   352,    -1,
     353,    -1,   354,    -1,   356,    -1,   357,    -1,   358,    -1,
     359,    -1,   360,    -1,   361,    -1,   362,    -1,   363,    -1,
     364,    -1,   365,    -1,   366,    -1,   368,    -1,   369,    -1,
     370,    -1,   371,    -1,   372,    -1,   374,    -1,   376,    -1,
     377,    -1,   378,    -1,   380,    -1,   381,    -1,   383,    -1,
     385,    -1,   386,    -1,   387,    -1,   388,    -1,   389,    -1,
     390,    -1,   391,    -1,   392,    -1,   393,    -1,   394,    -1,
     395,    -1,   397,    -1,   399,    -1,   401,    -1,   402,    -1,
     404,    -1,   406,    -1,   407,    -1,   408,    -1,   409,    -1,
     410,    -1,   416,    -1,   417,    -1,   419,    -1,   422,    -1,
     423,    -1,   425,    -1,   426,    -1,   427,    -1,   428,    -1,
     429,    -1,   432,    -1,   433,    -1,   434,    -1,   435,    -1,
     436,    -1,   439,    -1,   440,    -1,   441,    -1,   442,    -1,
     443,    -1,   447,    -1,   449,    -1,   450,    -1,   451,    -1,
     452,    -1,   455,    -1,   458,    -1,   459,    -1,   460,    -1,
     461,    -1,   462,    -1,   463,    -1,   475,    -1,   476,    -1,
     477,    -1,   478,    -1,    48,    -1,    49,    -1,    51,    -1,
      52,    -1,    64,    -1,    65,    -1,    72,    -1,   112,    -1,
     113,    -1,   150,    -1,   156,    -1,   162,    -1,   179,    -1,
     180,    -1,   205,    -1,   211,    -1,   212,    -1,   214,    -1,
     244,    -1,   263,    -1,   265,    -1,   269,    -1,   276,    -1,
     278,    -1,   293,    -1,   297,    -1,   311,    -1,   314,    -1,
     329,    -1,   355,    -1,   375,    -1,   382,    -1,   396,    -1,
     398,    -1,   412,    -1,   413,    -1,   418,    -1,   420,    -1,
     424,    -1,   444,    -1,   445,    -1,   464,    -1,   465,    -1,
     466,    -1,   467,    -1,   468,    -1,   469,    -1,   470,    -1,
     471,    -1,   472,    -1,   473,    -1,   474,    -1,    44,    -1,
      50,    -1,    74,    -1,    82,    -1,    94,    -1,   101,    -1,
     168,    -1,   170,    -1,   174,    -1,   190,    -1,   204,    -1,
     217,    -1,   218,    -1,   220,    -1,   230,    -1,   232,    -1,
     244,    -1,   264,    -1,   273,    -1,   294,    -1,   296,    -1,
     351,    -1,   379,    -1,   396,    -1,   405,    -1,   448,    -1,
      44,    -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,
     101,    -1,   168,    -1,   170,    -1,   174,    -1,   190,    -1,
     204,    -1,   217,    -1,   218,    -1,   220,    -1,   230,    -1,
     232,    -1,   264,    -1,   273,    -1,   294,    -1,   296,    -1,
     351,    -1,   379,    -1,   405,    -1,   424,    -1,   448,    -1,
      48,    -1,    49,    -1,    51,    -1,    52,    -1,    65,    -1,
      64,    -1,    72,    -1,   112,    -1,   113,    -1,   150,    -1,
     156,    -1,   162,    -1,   179,    -1,   180,    -1,   205,    -1,
     212,    -1,   214,    -1,   211,    -1,   244,    -1,   263,    -1,
     265,    -1,   269,    -1,   276,    -1,   278,    -1,   293,    -1,
     297,    -1,   311,    -1,   314,    -1,   329,    -1,   355,    -1,
     375,    -1,   382,    -1,   396,    -1,   398,    -1,   412,    -1,
     413,    -1,   418,    -1,   420,    -1,   424,    -1,   444,    -1,
     445,    -1,   464,    -1,   465,    -1,   466,    -1,   467,    -1,
     468,    -1,   469,    -1,   470,    -1,   471,    -1,   472,    -1,
     473,    -1,   474,    -1,    44,    -1,    50,    -1,    74,    -1,
      82,    -1,    94,    -1,   101,    -1,   168,    -1,   170,    -1,
     174,    -1,   190,    -1,   204,    -1,   217,    -1,   218,    -1,
     220,    -1,   230,    -1,   232,    -1,   244,    -1,   264,    -1,
     273,    -1,   294,    -1,   296,    -1,   351,    -1,   379,    -1,
     396,    -1,   405,    -1,   424,    -1,   448,    -1,    27,    -1,
      31,    -1,    32,    -1,    33,    -1,    34,    -1,    35,    -1,
      36,    -1,    37,    -1,    40,    -1,    53,    -1,    60,    -1,
      61,    -1,    67,    -1,    73,    -1,    75,    -1,    86,    -1,
      93,    -1,    98,    -1,    99,    -1,   100,    -1,   102,    -1,
     103,    -1,   104,    -1,   115,    -1,   117,    -1,   124,    -1,
     130,    -1,   131,    -1,   137,    -1,   141,    -1,   145,    -1,
     157,    -1,   159,    -1,   164,    -1,   166,    -1,   169,    -1,
     176,    -1,   178,    -1,   182,    -1,   195,    -1,   202,    -1,
     213,    -1,   215,    -1,   227,    -1,   228,    -1,   233,    -1,
     237,    -1,   238,    -1,   270,    -1,   275,    -1,   282,    -1,
     285,    -1,   286,    -1,   290,    -1,   291,    -1,   308,    -1,
     318,    -1,   325,    -1,   334,    -1,   348,    -1,   367,    -1,
     373,    -1,   384,    -1,   400,    -1,   403,    -1,   411,    -1,
     414,    -1,   415,    -1,   421,    -1,   430,    -1,   431,    -1,
     437,    -1,   438,    -1,   446,    -1,   453,    -1,   454,    -1,
     456,    -1,   457,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   467,   467,   483,   495,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   539,
       7,    21,    25,    32,    43,    44,    50,    51,    11,    24,
      37,    54,    55,    56,    61,     8,    21,    34,    52,    74,
      75,    76,    77,     7,    18,    19,    23,    24,    25,    26,
      47,    48,    52,    53,    68,    69,    76,    84,    92,   100,
     108,   116,   127,   128,   155,   171,   188,   189,   208,   212,
     216,   233,   240,   247,   257,   258,   261,   273,   284,   292,
     297,   302,   307,   312,   320,   328,   333,   338,   345,   346,
     350,   351,   352,   359,   360,   364,   365,   369,   370,   371,
     375,   376,   380,   381,   391,   404,   405,   408,   417,   428,
     429,   430,   433,   434,   435,   439,   440,   441,   442,   446,
     447,   451,   453,   469,   471,   476,   479,   487,   491,   495,
     499,   503,   507,   514,   519,   526,   527,   531,   535,   539,
     543,   550,   557,   558,   563,   564,   568,   569,   574,   576,
     578,   583,   603,   604,   606,   611,   612,   616,   617,   620,
     621,   646,   647,   652,   657,   661,   662,   666,   667,   671,
     672,   673,   674,   675,   679,   692,   699,   706,   713,   714,
     718,   719,   723,   724,   728,   729,   733,   734,   738,   739,
     743,   754,   755,   756,   757,   761,   762,   767,   768,   769,
     778,   784,   793,   794,   807,   808,   812,   813,   817,   818,
     824,   830,   838,   846,   855,   864,   868,   894,   898,   911,
     925,   940,   952,   968,   974,   979,   985,   992,   993,  1001,
    1005,  1009,  1015,  1022,  1027,  1028,  1029,  1030,  1034,  1035,
    1047,  1048,  1053,  1060,  1067,  1074,  1106,  1117,  1130,  1135,
    1136,  1139,  1140,  1143,  1144,  1149,  1150,  1155,  1159,  1165,
    1186,  1194,  1207,  1210,  1214,  1214,  1216,  1221,  1228,  1233,
    1239,  1244,  1250,  1256,  1265,  1267,  1270,  1274,  1275,  1276,
    1277,  1278,  1279,  1284,  1304,  1305,  1306,  1307,  1318,  1332,
    1333,  1339,  1344,  1349,  1354,  1359,  1364,  1369,  1374,  1380,
    1386,  1392,  1399,  1421,  1430,  1434,  1442,  1446,  1454,  1466,
    1487,  1491,  1497,  1501,  1514,  1522,  1532,  1534,  1536,  1538,
    1540,  1542,  1547,  1548,  1555,  1564,  1572,  1581,  1592,  1600,
    1601,  1602,  1606,  1606,  1609,  1609,  1612,  1612,  1615,  1615,
    1618,  1618,  1621,  1621,  1624,  1624,  1627,  1627,  1630,  1632,
    1634,  1636,  1638,  1640,  1642,  1644,  1646,  1651,  1656,  1662,
    1669,  1674,  1680,  1686,  1717,  1719,  1721,  1729,  1744,  1746,
    1748,  1750,  1752,  1754,  1756,  1758,  1760,  1762,  1764,  1766,
    1768,  1770,  1773,  1775,  1777,  1780,  1782,  1784,  1786,  1789,
    1794,  1799,  1806,  1811,  1818,  1823,  1830,  1835,  1843,  1851,
    1859,  1867,  1885,  1893,  1901,  1909,  1917,  1925,  1929,  1933,
    1937,  1945,  1961,  1969,  1977,  1985,  1993,  2001,  2009,  2013,
    2017,  2021,  2025,  2033,  2041,  2049,  2057,  2077,  2099,  2110,
    2117,  2131,  2147,  2149,  2151,  2153,  2155,  2157,  2159,  2161,
    2163,  2165,  2167,  2169,  2171,  2173,  2175,  2177,  2179,  2181,
    2183,  2185,  2189,  2193,  2197,  2211,  2212,  2213,  2220,  2232,
    2247,  2259,  2261,  2273,  2284,  2308,  2319,  2328,  2332,  2339,
    2347,  2355,  2366,  2374,  2402,  2438,  2449,  2450,  2457,  2463,
    2467,  2471,  2475,  2479,  2483,  2487,  2491,  2495,  2499,  2503,
    2507,  2511,  2515,  2519,  2523,  2525,  2527,  2531,  2540,  2545,
    2552,  2567,  2574,  2578,  2582,  2586,  2590,  2604,  2605,  2609,
    2610,  2614,  2615,  2622,  2623,  2627,  2628,  2633,  2641,  2643,
    2657,  2660,  2687,  2688,  2691,  2692,  2703,  2709,  2716,  2725,
    2742,  2787,  2795,  2803,  2811,  2819,  2840,  2841,  2844,  2845,
    2849,  2859,  2860,  2864,  2865,  2869,  2870,  2871,  2874,  2875,
    2878,  2879,  2880,  2881,  2882,  2883,  2884,  2885,  2886,  2887,
    2888,  2889,  2892,  2894,  2899,  2901,  2906,  2908,  2910,  2912,
    2914,  2916,  2918,  2920,  2934,  2936,  2940,  2944,  2951,  2956,
    2974,  2979,  2987,  2991,  2997,  3001,  3010,  3021,  3022,  3026,
    3030,  3037,  3038,  3039,  3040,  3041,  3042,  3043,  3044,  3045,
    3046,  3056,  3060,  3067,  3074,  3075,  3091,  3095,  3100,  3104,
    3119,  3124,  3128,  3131,  3134,  3135,  3136,  3139,  3146,  3156,
    3170,  3171,  3175,  3186,  3187,  3190,  3191,  3194,  3198,  3205,
    3209,  3217,  3228,  3229,  3233,  3234,  3238,  3239,  3242,  3243,
    3253,  3254,  3258,  3259,  3263,  3264,  3267,  3283,  3291,  3299,
    3314,  3332,  3333,  3336,  3337,  3340,  3344,  3345,  3349,  3350,
    3353,  3354,  3355,  3365,  3366,  3377,  3381,  3408,  3410,  3416,
    3417,  3420,  3422,  3432,  3435,  3446,  3450,  3454,  3466,  3470,
    3479,  3486,  3524,  3528,  3532,  3536,  3540,  3544,  3548,  3554,
    3555,  3571,  3572,  3573,  3576,  3577,  3583,  3584,  3585,  3588,
    3589,  3590,  3593,  3594,  3595,  3598,  3599,  3602,  3604,  3609,
    3610,  3613,  3621,  3622,  3623,  3624,  3627,  3628,     8,    22,
      36,    48,    56,    70,    71,    72,    73,    74,    87,    88,
      93,    94,    98,    99,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     2,     7,    14,    24,    25,    32,     7,
       7,    13,    19,    25,     7,    14,    22,     8,    20,    36,
      37,    41,    45,     9,    18,    27,    36,    45,    54,    63,
      72,    85,    87,    93,    94,    99,   103,   107,   118,   126,
     130,   139,   148,   157,   166,   175,   184,   192,   200,   209,
     218,   227,   236,   253,   262,   271,   280,   290,   303,   318,
     327,   335,   350,   358,   368,   378,   385,   392,   400,   407,
     418,   419,   424,   428,   433,   438,   446,   447,   452,   456,
     457,   458,     7,    16,    34,    41,    46,    47,    48,    49,
       3,    10,    17,    24,    31,    38,    45,    52,    61,    61,
      63,    64,     7,    21,    36,    56,    57,    84,    85,    86,
      87,    88,    89,    93,    94,    99,   104,   105,   106,   107,
     108,   113,   120,   121,   122,   139,   146,   153,   163,   173,
     185,   193,   202,   211,   230,   237,   242,   244,   246,   248,
     251,   256,   257,   261,   262,   263,   264,   269,   273,   274,
     279,   286,   291,   292,   293,   294,   295,   296,   297,   298,
     304,   305,   309,   314,   321,   328,   335,   347,   348,   349,
     350,   354,   359,   360,   361,   366,   371,   372,   373,   374,
     375,   376,   381,   404,   408,   415,   416,   420,   424,   425,
     426,   430,   434,   442,   443,   448,   449,   450,   454,   462,
     463,   468,   469,   473,   478,   482,   486,   491,   499,   500,
     504,   505,   509,   510,   516,   527,   540,   554,   568,   582,
     596,   619,   623,   630,   634,   642,   647,   654,   664,   665,
     666,   667,   668,   675,   682,   683,   688,   689,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     9,    19,    29,    39,    49,    59,    69,
      79,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   113,   114,   115,
     116,   117,   118,   119,   124,   125,   130,   131,   132,   137,
     138,   139,   142,   143,     7,    14,    20,    28,    29,     8,
      21,    27,    34,    40,    47,    57,    61,    70,    79,    88,
      95,    96,   101,   113,   118,   143,   153,   163,   169,   180,
     191,   206,   207,   213,   214,   219,   220,   226,   227,   231,
     232,   237,   239,   245,   246,   250,   251,   254,   255,   260,
       7,    14,    31,    51,    52,     9,    19,     7,    20,     9,
      16,    26,    33,    44,    45,    50,    51,    52,    57,    58,
      59,    60,    61,    65,    66,    67,    72,    73,    78,    82,
      90,    91,    96,    97,    98,   104,   109,   117,   118,     9,
      19,    32,    33,     9,    17,    29,    30,    34,    35,    36,
      41,    42,    43,    48,    52,    56,    60,    64,    68,    72,
      76,    80,    84,    88,    92,    97,   101,   105,   112,   113,
     117,   118,   119,     7,    16,    25,    34,    43,    52,     7,
      17,    18,    21,    23,    10,    16,    22,    28,    38,    39,
      47,    58,    70,    78,    86,    93,   103,   105,   111,   115,
     119,   134,   141,   142,   143,   147,   148,     8,    33,    62,
      66,    67,    72,    73,    78,    79,    83,    84,    89,    90,
       5,    11,     6,     1,    30,    53,    54,    59,    63,    68,
      72,    80,    81,    85,    86,    91,    92,    96,    97,   102,
     103,   104,   105,   106,   111,   119,   123,   128,   129,   134,
     138,   143,   147,   151,   155,   159,   163,   167,   171,   175,
     179,   183,   187,   191,   195,   203,   209,   210,   211,   216,
     220,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   227,   227,   227,
     227,   227,   227,   227,   227,   227,   227,   228,   228,   228,
     228,   228,   228,   228,   228,   228,   228,   228,   228,   228,
     228,   228,   228,   228,   228,   228,   228,   228,   228,   228,
     228,   228,   228,   228,   228,   228,   228,   228,   228,   228,
     228,   228,   228,   228,   228,   228,   228,   228,   228,   228,
     228,   228,   228,   228,   228,   228,   228,   228,   228,   229,
     229,   229,   229,   229,   229,   229,   229,   229,   229,   229,
     229,   229,   229,   229,   229,   229,   229,   229,   229,   229,
     229,   229,   229,   229,   229,   230,   230,   230,   230,   230,
     230,   230,   230,   230,   230,   230,   230,   230,   230,   230,
     230,   230,   230,   230,   230,   230,   230,   230,   230,   230,
     231,   231,   231,   231,   231,   231,   231,   231,   231,   231,
     231,   231,   231,   231,   231,   231,   231,   231,   231,   231,
     231,   231,   231,   231,   231,   231,   231,   231,   231,   231,
     231,   231,   231,   231,   231,   231,   231,   231,   231,   231,
     231,   231,   231,   231,   231,   231,   231,   231,   231,   231,
     231,   231,   232,   232,   232,   232,   232,   232,   232,   232,
     232,   232,   232,   232,   232,   232,   232,   232,   232,   232,
     232,   232,   232,   232,   232,   232,   232,   232,   232,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,   233,
     233,   233,   233,   233,   233,   233,   233
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE",
  "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOB", "GLOBAL", "GRANT", "GRANTED", "GROUP_P", "GROUPING",
  "GROUPING_ID", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "HOURS_P", "IDENTITY_P", "IF_P", "IGNORE_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTALL",
  "INSTEAD", "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO",
  "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN", "JSON", "KEY", "LABEL",
  "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF",
  "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
  "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO",
  "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUALIFY", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING", "SUMMARIZE",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'{'", "'}'", "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti",
  "stmt", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "CreateAsStmt",
  "opt_with_data", "create_as_target", "ViewStmt", "opt_check_option",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "SelectStmt",
  "select_with_parens", "select_no_parens", "select_clause",
  "simple_select", "with_clause", "cte_list", "common_table_expr",
  "into_clause", "OptTempTableName", "opt_table", "all_or_distinct",
  "distinct_clause", "opt_all_clause", "opt_ignore_nulls",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_list_opt_comma", "group_by_item", "empty_grouping_set",
  "rollup_clause", "cube_clause", "grouping_sets_clause",
  "grouping_or_grouping_id", "having_clause", "qualify_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "values_clause_opt_comma",
  "from_clause", "from_list", "from_list_opt_comma", "table_ref",
  "joined_table", "alias_clause", "opt_alias_clause", "func_alias_clause",
  "join_type", "join_outer", "join_qual", "relation_expr", "func_table",
  "rowsfrom_item", "rowsfrom_list", "opt_col_def_list", "opt_ordinality",
  "where_clause", "TableFuncElementList", "TableFuncElement",
  "opt_collate_clause", "colid_type_list", "RowOrStruct", "Typename",
  "opt_array_bounds", "SimpleTypename", "ConstTypename", "GenericType",
  "opt_type_modifiers", "Numeric", "opt_float", "Bit", "ConstBit",
  "BitWithLength", "BitWithoutLength", "Character", "ConstCharacter",
  "CharacterWithLength", "CharacterWithoutLength", "character",
  "opt_varying", "ConstDatetime", "ConstInterval", "opt_timezone",
  "year_keyword", "month_keyword", "day_keyword", "hour_keyword",
  "minute_keyword", "second_keyword", "millisecond_keyword",
  "microsecond_keyword", "opt_interval", "a_expr", "b_expr", "c_expr",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "within_group_clause", "filter_clause",
  "export_clause", "window_clause", "window_definition_list",
  "window_definition", "over_clause", "window_specification",
  "opt_existing_window_name", "opt_partition_clause", "opt_frame_clause",
  "frame_extent", "frame_bound", "qualified_row", "row", "dict_arg",
  "dict_arguments", "dict_arguments_opt_comma", "sub_type", "all_Op",
  "MathOp", "qual_Op", "qual_all_Op", "subquery_Op", "any_operator",
  "expr_list", "expr_list_opt_comma", "opt_expr_list_opt_comma",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric",
  "opt_target_list_opt_comma", "target_list", "target_list_opt_comma",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "replace_list_opt_comma", "opt_replace_list",
  "qualified_name_list", "qualified_name", "name_list",
  "name_list_opt_comma", "name", "attr_name", "func_name", "AexprConst",
  "Iconst", "Sconst", "ColId", "ColIdOrString", "type_function_name",
  "function_name_token", "type_name_token", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "TransactionStmt", "opt_transaction", "VariableResetStmt",
  "generic_reset", "reset_rest", "UpdateStmt", "DeallocateStmt",
  "PragmaStmt", "CreateFunctionStmt", "macro_alias", "param_list",
  "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "VariableShowStmt", "show_or_describe", "var_name", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "columnList_opt_comma", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "RenameStmt", "opt_column", "DropStmt",
  "drop_type_any_name", "drop_type_name", "any_name_list",
  "opt_drop_behavior", "drop_type_name_on_any_name", "type_name_list",
  "LoadStmt", "file_name", "InsertStmt", "insert_rest", "insert_target",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
  "set_target_list", "opt_collate", "opt_class", "insert_column_list",
  "set_clause_list", "set_clause_list_opt_comma", "index_params",
  "set_target", "ExecuteStmt", "execute_param_clause", "AnalyzeStmt",
  "ExportStmt", "ImportStmt", "ExplainStmt", "opt_verbose",
  "explain_option_arg", "ExplainableStmt", "NonReservedWord",
  "NonReservedWord_or_Sconst", "explain_option_list", "analyze_keyword",
  "opt_boolean_or_string", "explain_option_elem", "explain_option_name",
  "CreateSeqStmt", "OptSeqOptList", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "AlterObjectSchemaStmt", "CreateEnumStmt", "opt_enum_val_list",
  "enum_val_list", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "CheckPointStmt", "CallStmt", "CopyStmt",
  "copy_from", "copy_delimiter", "copy_generic_opt_arg_list", "opt_using",
  "opt_as", "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "unreserved_keyword", "col_name_keyword",
  "func_name_keyword", "type_name_keyword", "other_keyword",
  "type_func_name_keyword", "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,    60,    62,    61,   737,    43,    45,    42,    47,
      37,    94,   738,    91,    93,    40,    41,    46,    59,    44,
     123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   505,   506,   507,   507,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     509,   510,   510,   510,   511,   511,   512,   512,   513,   513,
     513,   514,   514,   514,   515,   516,   516,   516,   516,   517,
     517,   517,   517,   518,   519,   519,   520,   520,   520,   520,
     521,   521,   522,   522,   523,   523,   523,   523,   523,   523,
     523,   523,   524,   524,   525,   525,   525,   525,   525,   525,
     525,   526,   526,   526,   527,   527,   528,   529,   529,   530,
     530,   530,   530,   530,   530,   530,   530,   530,   531,   531,
     532,   532,   532,   533,   533,   534,   534,   535,   535,   535,
     536,   536,   537,   537,   537,   538,   538,   539,   539,   540,
     540,   540,   541,   541,   541,   542,   542,   542,   542,   543,
     543,   544,   544,   544,   544,   545,   545,   546,   546,   546,
     546,   546,   546,   547,   547,   548,   548,   549,   549,   549,
     549,   550,   551,   551,   552,   552,   553,   553,   553,   553,
     553,   554,   555,   555,   555,   556,   556,   557,   557,   558,
     558,   559,   559,   559,   559,   560,   560,   561,   561,   562,
     562,   562,   562,   562,   563,   564,   565,   566,   567,   567,
     568,   568,   569,   569,   570,   570,   571,   571,   572,   572,
     573,   574,   574,   574,   574,   575,   575,   576,   576,   576,
     577,   577,   578,   578,   579,   579,   580,   580,   581,   581,
     582,   582,   582,   582,   582,   582,   582,   583,   583,   583,
     583,   583,   583,   584,   584,   584,   584,   585,   585,   586,
     586,   586,   586,   586,   587,   587,   587,   587,   588,   588,
     589,   589,   590,   590,   590,   590,   591,   591,   592,   593,
     593,   594,   594,   595,   595,   596,   596,   597,   597,   598,
     599,   599,   600,   600,   601,   601,   602,   602,   602,   602,
     602,   602,   602,   602,   603,   603,   603,   604,   604,   604,
     604,   604,   604,   604,   605,   605,   605,   605,   606,   607,
     607,   608,   608,   608,   608,   608,   608,   608,   608,   608,
     608,   608,   609,   609,   610,   610,   611,   611,   612,   613,
     614,   614,   615,   615,   616,   617,   618,   618,   618,   618,
     618,   618,   619,   619,   620,   620,   620,   620,   621,   622,
     622,   622,   623,   623,   624,   624,   625,   625,   626,   626,
     627,   627,   628,   628,   629,   629,   630,   630,   631,   631,
     631,   631,   631,   631,   631,   631,   631,   631,   631,   631,
     631,   631,   631,   631,   632,   632,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   633,   633,   633,   633,   633,   633,   633,   633,
     633,   633,   633,   633,   633,   633,   633,   633,   633,   633,
     633,   633,   633,   633,   633,   634,   634,   634,   634,   634,
     634,   634,   634,   634,   634,   634,   634,   635,   635,   635,
     635,   635,   635,   635,   636,   636,   637,   637,   638,   638,
     638,   638,   638,   638,   638,   638,   638,   638,   638,   638,
     638,   638,   638,   638,   638,   638,   638,   638,   638,   638,
     638,   638,   638,   638,   638,   638,   638,   639,   639,   640,
     640,   641,   641,   642,   642,   643,   643,   644,   645,   645,
     645,   646,   647,   647,   648,   648,   649,   649,   649,   650,
     650,   651,   651,   651,   651,   651,   652,   652,   653,   653,
     654,   655,   655,   656,   656,   657,   657,   657,   658,   658,
     659,   659,   659,   659,   659,   659,   659,   659,   659,   659,
     659,   659,   660,   660,   661,   661,   662,   662,   662,   662,
     662,   662,   662,   662,   663,   663,   664,   664,   665,   665,
     666,   666,   667,   667,   668,   668,   668,   669,   669,   670,
     670,   671,   671,   671,   671,   671,   671,   671,   671,   671,
     671,   672,   672,   673,   674,   674,   675,   675,   675,   675,
     675,   675,   676,   677,   678,   678,   678,   679,   679,   680,
     681,   681,   682,   683,   683,   684,   684,   685,   685,   686,
     686,   686,   687,   687,   688,   688,   689,   689,   690,   690,
     691,   691,   692,   692,   693,   693,   694,   694,   694,   694,
     694,   695,   695,   696,   696,   697,   698,   698,   699,   699,
     700,   700,   700,   701,   701,   702,   702,   703,   703,   704,
     704,   705,   706,   707,   707,   708,   708,   708,   708,   708,
     708,   708,   708,   708,   708,   708,   708,   708,   708,   709,
     710,   711,   711,   711,   712,   712,   713,   713,   713,   714,
     714,   714,   715,   715,   715,   716,   716,   717,   717,   718,
     718,   719,   720,   720,   720,   720,   721,   721,   722,   722,
     722,   722,   722,   723,   723,   723,   723,   723,   724,   724,
     725,   725,   726,   726,   727,   727,   727,   727,   727,   727,
     728,   728,   728,   729,   730,   730,   731,   731,   731,   732,
     733,   733,   733,   733,   734,   734,   734,   735,   735,   736,
     736,   737,   737,   738,   738,   738,   738,   738,   738,   738,
     738,   739,   739,   740,   740,   741,   741,   741,   741,   742,
     742,   743,   743,   743,   743,   743,   743,   743,   743,   743,
     743,   743,   743,   743,   743,   743,   743,   743,   743,   743,
     743,   743,   743,   743,   743,   743,   743,   743,   743,   743,
     744,   744,   745,   745,   745,   745,   746,   746,   747,   748,
     748,   748,   749,   749,   750,   750,   751,   751,   751,   751,
     752,   752,   752,   752,   752,   752,   752,   752,   753,   753,
     754,   754,   755,   755,   755,   756,   756,   757,   757,   757,
     757,   757,   757,   758,   758,   759,   760,   760,   760,   760,
     760,   761,   761,   761,   761,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   763,   764,   765,   765,   765,   765,
     765,   766,   766,   767,   767,   767,   767,   768,   769,   769,
     770,   770,   771,   771,   771,   771,   771,   771,   771,   771,
     772,   772,   773,   774,   774,   774,   774,   775,   775,   775,
     775,   776,   777,   777,   777,   778,   779,   779,   779,   779,
     779,   779,   780,   781,   781,   782,   782,   783,   784,   784,
     784,   785,   785,   786,   786,   787,   787,   787,   788,   789,
     789,   790,   790,   791,   792,   792,   792,   792,   793,   793,
     794,   794,   795,   795,   795,   796,   796,   796,   796,   796,
     796,   797,   797,   798,   798,   798,   798,   799,   800,   800,
     800,   800,   800,   800,   800,   800,   801,   801,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   803,   803,   804,   804,   804,   804,   804,   804,   804,
     804,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   806,   806,   806,
     806,   806,   806,   806,   807,   807,   808,   808,   808,   809,
     809,   809,   810,   810,   811,   811,   811,   812,   812,   813,
     814,   814,   814,   814,   814,   815,   815,   816,   816,   816,
     817,   817,   818,   819,   819,   820,   820,   820,   821,   821,
     821,   822,   822,   823,   823,   824,   824,   825,   825,   826,
     826,   827,   827,   828,   828,   829,   829,   830,   830,   831,
     832,   832,   832,   833,   833,   834,   834,   835,   836,   837,
     837,   837,   837,   838,   838,   839,   839,   839,   840,   840,
     840,   840,   840,   841,   841,   841,   842,   842,   843,   843,
     844,   844,   845,   845,   845,   845,   846,   847,   847,   848,
     848,   849,   849,   850,   850,   851,   851,   852,   852,   852,
     853,   853,   853,   853,   854,   854,   854,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   855,   855,
     856,   856,   856,   857,   857,   857,   857,   857,   857,   858,
     859,   859,   860,   860,   861,   861,   861,   861,   862,   862,
     862,   862,   863,   863,   863,   863,   864,   864,   865,   865,
     865,   865,   865,   865,   865,   866,   866,   867,   867,   868,
     869,   869,   870,   870,   871,   871,   872,   872,   873,   873,
     874,   874,   875,   876,   876,   877,   877,   878,   878,   879,
     879,   880,   880,   881,   881,   882,   882,   883,   883,   884,
     884,   884,   884,   884,   885,   886,   886,   887,   887,   888,
     888,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   890,   891,   891,   891,   892,
     892,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   893,   893,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       7,     1,     2,     3,     2,     0,     2,     0,     7,    10,
       9,     2,     3,     0,     4,     9,    11,    12,    14,     3,
       4,     4,     0,     5,     3,     0,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     2,     4,     4,     2,     3,
       5,     5,     1,     1,    11,    11,     1,     2,     4,     4,
       4,     2,     2,     3,     1,     3,     6,     2,     0,     3,
       3,     4,     4,     4,     4,     3,     2,     1,     1,     0,
       1,     1,     0,     1,     5,     1,     0,     2,     2,     0,
       1,     0,     3,     5,     5,     1,     3,     4,     3,     1,
       1,     0,     2,     2,     0,     2,     2,     1,     1,     1,
       0,     2,     4,     5,     4,     2,     3,     2,     2,     2,
       2,     1,     2,     3,     0,     1,     0,     5,     1,     4,
       6,     2,     1,     0,     4,     0,     1,     1,     2,     2,
       2,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     3,     3,     3,     0,     1,     3,     1,     2,     1,
       1,     1,     1,     1,     2,     4,     4,     5,     1,     1,
       2,     0,     2,     0,     1,     3,     1,     0,     1,     2,
       3,     2,     4,     2,     3,     2,     0,     1,     2,     0,
       4,     5,     1,     2,     2,     0,     1,     3,     1,     2,
       3,     3,     3,     3,     3,     1,     4,     3,     4,     5,
       4,     5,     4,     5,     2,     4,     1,     1,     0,     1,
       4,     5,     4,     0,     2,     2,     2,     1,     1,     0,
       4,     2,     1,     2,     2,     4,     2,     6,     2,     1,
       3,     4,     0,     2,     0,     2,     0,     1,     3,     3,
       2,     0,     2,     4,     1,     1,     2,     3,     5,     6,
       2,     3,     5,     5,     3,     4,     0,     1,     1,     1,
       1,     1,     2,     4,     1,     1,     1,     1,     2,     3,
       0,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       2,     1,     3,     0,     1,     1,     1,     1,     5,     2,
       1,     1,     1,     1,     4,     1,     2,     2,     1,     3,
       3,     2,     1,     0,     5,     2,     5,     2,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     3,     3,     3,
       3,     3,     3,     0,     1,     3,     3,     5,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     2,     3,     3,     2,     2,     3,
       3,     5,     4,     6,     3,     5,     4,     6,     4,     6,
       5,     7,     3,     2,     4,     3,     2,     1,     3,     3,
       3,     3,     3,     4,     3,     4,     3,     4,     5,     6,
       6,     7,     6,     7,     6,     7,     3,     4,     4,     6,
       1,     4,     1,     3,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     5,     6,     6,     7,     1,     1,     2,     2,     2,
       4,     1,     2,     1,     2,     2,     4,     3,     6,     7,
       9,     7,     7,     4,     5,     1,     1,     1,     5,     1,
       1,     4,     1,     4,     1,     4,     1,     4,     1,     1,
       1,     1,     1,     1,     6,     6,     4,     4,     4,     4,
       6,     5,     5,     5,     4,     6,     4,     5,     0,     5,
       0,     1,     0,     2,     0,     1,     3,     3,     2,     2,
       0,     6,     1,     0,     3,     0,     2,     2,     0,     1,
       4,     2,     2,     2,     2,     2,     4,     3,     1,     5,
       3,     1,     3,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     1,     4,     1,     4,     1,     2,
       1,     2,     1,     2,     1,     3,     1,     3,     1,     2,
       1,     0,     1,     3,     1,     3,     3,     1,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     3,     2,     3,     0,     3,     3,     2,     2,
       1,     0,     2,     2,     3,     2,     1,     1,     3,     5,
       1,     2,     4,     2,     0,     1,     0,     1,     2,     2,
       3,     5,     1,     0,     1,     2,     0,     2,     1,     0,
       1,     0,     1,     3,     1,     2,     3,     2,     1,     3,
       5,     4,     2,     1,     0,     3,     1,     3,     1,     2,
       4,     2,     0,     1,     3,     1,     2,     1,     3,     1,
       2,     1,     1,     1,     2,     1,     1,     2,     1,     1,
       2,     7,     2,     5,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     4,     5,
       5,     4,     6,     1,     1,     1,     1,     1,     1,     0,
       1,     3,     1,     0,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     2,     1,     1,     1,     2,     3,     8,
       2,     3,     2,     3,     2,     4,     5,     8,     7,     1,
       1,     2,     3,     4,     6,     4,     6,     4,     6,     4,
       6,     1,     2,     3,     2,     1,     3,     2,     3,     1,
       3,     2,     5,     3,     6,     4,     6,     6,     6,     5,
       5,     6,     9,     4,     5,     7,     6,     4,     8,     4,
       2,     4,     3,     6,     4,     2,     2,     2,     2,     1,
       2,     0,     1,     2,     2,     2,     1,     3,     4,     2,
       1,     0,     4,     7,     2,     0,     1,     1,     1,     1,
       2,     2,     2,     2,     3,     4,     2,     1,     1,     1,
       1,     3,     9,    12,    11,     0,     2,     1,     1,     1,
       1,     1,     1,     3,     0,     1,     2,     1,     1,     2,
       2,     3,     1,     1,     2,     2,     1,     2,     3,     5,
       3,     2,     5,     5,     2,     3,     1,     1,     2,     2,
       0,     4,     0,     3,     4,     4,     0,     3,     2,     0,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     3,     1,     2,     2,     2,     2,     2,     2,
       0,     3,     3,     3,     0,     1,     2,     1,     2,     2,
       2,     2,     4,     1,     3,     1,     3,     1,     1,     1,
       1,     3,     1,     2,     0,     1,     2,     0,     1,     3,
       0,     2,     0,     3,     3,     1,     5,     3,     1,     3,
       1,     2,     1,     4,     5,     5,     6,     3,     7,     4,
      11,     1,     3,     2,     2,     2,     0,     3,     1,     1,
       2,     2,     2,     2,     1,     0,     1,     2,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     6,     4,     6,     4,     6,     8,     4,
       6,     1,     1,     1,     1,     2,     1,     2,     1,     2,
       1,     1,     1,     3,     3,     3,     3,     2,     2,     1,
       3,     1,     1,     1,     1,     3,     1,     1,     0,     1,
       1,     1,     1,     3,     2,     2,     3,     1,     1,     7,
       1,     4,     4,     7,     2,     1,     3,     4,     3,     0,
       1,     0,     2,     3,     5,     8,     5,     0,     5,     5,
       7,     2,     0,     1,     1,     1,     3,     2,     0,     1,
       0,     1,     3,     1,     3,     1,     2,     1,     3,     2,
       3,     9,    12,     3,     0,     2,     4,     4,     3,     2,
       4,     3,     5,     1,     0,     1,     1,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     5,
       8,     1,     0,     4,     6,     1,     2,     1,     1,     0,
       1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
       2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
       1,     2,     2,     6,     8,     6,     8,     6,     8,     8,
       1,     0,     1,     3,     2,     3,     3,     3,     1,     3,
       3,     2,     3,     3,     3,     3,     1,     1,     1,     1,
       3,     5,     1,     1,     1,     1,     3,    13,    16,     1,
       2,     0,     1,     0,     1,     0,     2,     0,     1,     0,
       2,     1,     2,    11,     9,     1,     1,     3,     0,     1,
       3,     1,     0,     1,     0,     1,     0,     1,     3,     1,
       1,     1,     3,     0,     2,     2,     0,     2,     0,     1,
       0,     1,     1,     1,     3,     3,     1,     1,     3,     3,
       3,     3,     4,     3,     2,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1071,   762,     0,  1131,  1130,   762,     0,  1221,   762,  1250,
     995,     0,   859,     0,   762,     0,  1071,     0,     0,     0,
       0,     0,     0,     0,     0,   762,   116,     0,   858,   762,
       0,     0,   749,     0,     0,     0,     0,     0,     2,     4,
      19,    12,    38,    29,    31,    83,    70,   121,    82,  1070,
     222,    86,    34,    32,    35,    33,    18,    28,    14,     7,
      15,    37,   857,    17,    30,    20,    27,    26,     0,    21,
       8,    23,    24,    22,  1114,    16,     6,     5,    13,    36,
      25,    10,     9,    11,   761,   760,   754,     0,     0,     0,
       0,     0,   755,   711,  1271,  1272,  1273,  1274,  1275,  1276,
    1277,  1278,  1279,  1280,  1281,  1282,  1283,  1284,  1285,  1286,
    1629,  1287,  1288,  1289,  1577,  1578,  1630,  1579,  1580,  1290,
    1291,  1292,  1293,  1294,  1295,  1296,  1297,  1581,  1582,  1298,
    1299,  1300,  1301,  1302,  1583,  1631,  1303,  1304,  1305,  1306,
    1307,  1308,  1632,  1309,  1310,  1311,  1312,  1313,  1314,  1315,
    1316,  1317,  1633,  1318,  1319,  1320,  1634,  1321,  1322,  1323,
    1324,  1325,  1326,  1327,  1584,  1585,  1328,  1329,  1330,  1331,
    1332,  1333,  1334,  1335,  1336,  1337,  1338,  1339,  1340,  1341,
    1342,  1343,  1344,  1345,  1346,  1347,  1348,  1349,  1350,  1351,
    1352,  1353,  1354,  1355,  1586,  1356,  1357,  1358,  1359,  1360,
    1587,  1361,  1362,  1363,  1588,  1364,  1365,  1366,  1635,  1636,
    1367,  1368,  1369,  1637,  1370,  1371,  1589,  1590,  1372,  1373,
    1374,  1375,  1376,  1377,  1378,  1379,  1638,  1380,  1381,  1382,
    1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,  1639,  1591,
    1391,  1392,  1393,  1394,  1395,  1592,  1593,  1594,  1396,  1640,
    1641,  1397,  1642,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1643,  1405,  1644,  1406,  1407,  1408,  1409,  1410,  1411,  1412,
    1413,  1595,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  1421,
    1422,  1423,  1424,  1425,  1426,  1427,  1428,  1429,  1430,  1431,
    1596,  1646,  1597,  1432,  1433,  1434,  1598,  1435,  1436,  1647,
    1437,  1599,  1438,  1600,  1439,  1440,  1441,  1442,  1443,  1444,
    1445,  1446,  1447,  1601,  1648,  1448,  1649,  1602,  1449,  1450,
    1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,  1460,
    1603,  1461,  1462,  1604,  1463,  1464,  1465,  1466,  1467,  1468,
    1469,  1470,  1471,  1472,  1473,  1474,  1605,  1475,  1476,  1477,
    1478,  1479,  1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,
    1488,  1489,  1490,  1491,  1492,  1493,  1650,  1494,  1495,  1496,
    1606,  1497,  1498,  1499,  1500,  1501,  1502,  1503,  1504,  1505,
    1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,  1607,  1514,
    1515,  1516,  1651,  1517,  1518,  1608,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1609,  1531,
    1610,  1532,  1533,  1534,  1535,  1653,  1536,  1537,  1538,  1539,
    1540,  1611,  1612,  1541,  1542,  1613,  1543,  1614,  1544,  1545,
    1615,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,
    1555,  1556,  1557,  1558,  1559,  1560,  1616,  1617,  1561,  1654,
    1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,
    1572,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,
    1627,  1628,  1573,  1574,  1575,  1576,  1222,     0,     0,   693,
     712,   713,   721,   757,  1249,  1071,     0,     0,     0,     0,
       0,   989,   988,     0,  1218,   994,     0,     0,   711,   772,
    1595,  1463,  1609,   770,   691,   712,     0,  1030,  1031,     0,
    1039,     0,  1023,  1028,  1024,     0,  1049,  1041,  1050,  1042,
    1022,  1043,  1032,  1021,     0,  1051,     0,  1026,     0,     0,
       0,   758,  1104,   995,  1071,     0,  1121,  1122,  1118,  1120,
    1119,  1109,  1114,     0,  1220,     0,     0,   710,  1057,  1058,
    1055,  1054,   774,    65,   765,  1611,  1541,   860,   766,   763,
     764,   759,   115,   113,     0,   661,  1370,  1408,  1501,  1512,
    1611,     0,  1184,  1188,   756,  1616,   851,     0,   852,   715,
       0,    87,   262,   714,   685,   748,     0,   753,     0,  1477,
      91,    94,   730,    92,    83,     0,     1,  1071,   112,   112,
       0,   112,     0,    75,    83,    78,    82,   223,   856,  1611,
    1541,   850,   853,     0,     0,     0,  1113,  1105,  1378,     0,
       0,  1378,     0,  1378,     0,  1378,     0,     0,   653,     0,
     654,   694,    69,     0,    66,    68,    67,   960,   993,   992,
     991,   990,   995,  1378,   845,   725,     0,   779,   780,     0,
       0,     0,     0,     0,  1213,   773,   771,  1037,  1038,     0,
    1029,  1025,  1027,     0,   722,  1655,   314,  1656,   343,   321,
     343,   343,  1657,  1658,  1659,  1660,   310,   310,  1343,   323,
    1661,  1662,  1663,  1378,  1664,  1665,   311,   312,   348,  1666,
    1667,  1668,  1669,  1670,     0,     0,  1671,   343,  1672,   310,
    1673,  1674,   315,  1675,   284,     0,  1676,   313,   285,  1677,
     351,   351,  1678,   338,  1679,     0,  1052,   296,   297,   298,
     299,   324,   325,   300,   330,   331,   335,   301,   383,   310,
    1048,   723,   724,  1378,  1044,  1048,  1378,  1048,   687,  1378,
       0,     0,  1100,     0,     0,  1111,  1123,  1680,  1681,  1682,
    1683,  1685,  1684,  1686,  1687,  1688,  1689,  1690,  1691,  1692,
    1693,  1694,  1697,  1695,  1696,  1698,  1699,  1700,  1701,  1702,
    1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,
    1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1137,
       0,  1138,  1128,  1117,  1124,  1125,  1071,  1248,  1056,  1108,
       0,     0,     0,     0,   767,     0,     0,     0,   696,   698,
     699,   582,   709,   656,     0,  1578,  1579,  1580,   646,     0,
    1581,  1582,  1583,  1631,   512,   499,   508,   513,   500,   502,
     509,  1584,  1585,   450,  1586,  1587,   707,  1588,  1589,  1590,
    1592,  1593,  1594,   504,   506,  1596,  1597,     0,   708,  1599,
    1600,  1444,  1602,  1603,  1605,  1606,   510,  1608,  1610,  1611,
    1612,  1613,  1614,   706,  1615,   511,  1617,     0,     0,     0,
     674,   601,     0,     0,     0,   656,   483,     0,     0,   304,
     305,   326,   327,   306,   332,   333,   307,     0,   668,   384,
     528,   656,   495,   558,   427,     0,   481,   475,   664,    98,
     662,     0,   476,   695,   656,   647,    98,   660,  1187,  1185,
    1191,  1186,     0,     0,     0,     0,     0,   264,   263,   686,
     747,   745,   746,   744,   750,     0,   743,   752,  1114,   596,
     598,     0,   647,    93,     0,     0,     0,    73,    72,     3,
     110,   111,     0,     0,     0,     0,     0,     0,     0,     0,
     207,   137,   138,   140,   204,   208,   216,     0,    79,     0,
     854,     0,     0,     0,     0,    41,   730,     0,     0,  1012,
    1012,     0,     0,     0,     0,     0,   836,   785,   829,     0,
       0,     0,     0,  1156,  1169,     0,     0,     0,     0,     0,
    1166,     0,     0,  1149,   787,  1143,  1145,     0,  1012,     0,
     783,     0,     0,     0,   789,   711,     0,  1629,  1630,  1631,
    1632,  1633,   513,     0,  1635,  1636,  1637,  1638,  1639,  1640,
    1641,  1642,  1643,  1644,  1595,  1646,  1647,  1648,  1649,  1650,
    1651,  1609,  1653,  1615,     0,  1654,     0,   487,   604,   121,
     602,   731,     0,   712,   718,   652,     0,   732,  1759,  1760,
    1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,
    1771,  1772,  1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,
    1781,  1782,  1783,  1784,  1785,  1786,  1787,  1788,  1789,  1790,
    1791,  1792,  1793,  1794,  1795,  1796,  1797,  1798,  1799,  1800,
    1801,  1802,  1803,  1804,  1805,  1806,  1807,  1808,  1809,  1810,
    1811,  1812,  1813,  1814,  1815,  1816,  1817,  1818,  1819,  1820,
    1821,  1822,  1823,  1824,  1825,  1826,  1827,  1828,  1829,  1830,
    1831,  1719,  1832,  1833,  1834,  1835,  1836,   649,   692,   734,
     733,   735,   655,     0,     0,  1246,     0,     0,   842,     0,
     726,     0,     0,  1378,  1142,  1378,     0,   960,   960,     0,
    1212,  1215,  1040,  1036,  1034,  1033,  1035,   342,   329,   337,
     336,     0,   319,   318,   317,     0,   316,     0,     0,   343,
     343,   341,   320,   296,     0,     0,     0,   347,     0,   345,
       0,   290,   286,     0,   356,   357,   358,   359,   366,   367,
     364,   365,   360,   361,   354,   355,   362,   363,   352,   353,
       0,   368,   369,   370,   371,   372,   373,   374,   375,   302,
     308,  1046,  1047,     0,  1019,     0,     0,  1014,     0,     0,
    1016,     0,     0,     0,   995,     0,  1071,     0,  1150,  1133,
    1134,  1132,     0,     0,  1170,  1127,  1136,  1126,  1135,  1115,
    1116,  1153,  1110,     0,  1107,  1237,  1196,  1197,  1205,   775,
       0,   607,     0,  1071,   768,   861,     0,   479,   601,   645,
       0,     0,     0,     0,     0,     0,   485,   610,     0,     0,
     407,     0,     0,     0,   625,     0,   631,     0,     0,     0,
     408,   388,   389,     0,   673,   682,   600,     0,   483,   596,
       0,   561,   563,     0,   714,     0,   477,   478,   484,     0,
     702,     0,   383,   383,   667,   582,     0,     0,   579,   580,
     581,     0,     0,     0,   659,     0,   590,   592,     0,     0,
     423,   588,     0,   426,     0,     0,     0,     0,   576,   577,
     578,   570,   571,   572,   573,   574,   575,   586,   569,   404,
       0,     0,   530,   482,     0,   403,   665,     0,   225,     0,
     700,   697,     0,   648,   225,  1199,  1203,  1204,     0,  1198,
    1202,  1190,  1189,  1194,  1192,  1195,  1193,     0,   741,     0,
     738,   599,   220,    95,     0,     0,    90,    89,   131,   131,
     122,   125,   131,    88,   179,   180,     0,     0,     0,     0,
     213,   211,   696,   709,   167,   141,   166,     0,     0,   145,
       0,   171,   384,   206,    77,   135,   136,   139,    76,     0,
     209,     0,   219,   207,   140,     0,   855,    47,  1065,     0,
       0,     0,    42,  1106,     0,     0,     0,     0,     0,  1378,
       0,     0,     0,   820,   801,   911,  1011,     0,     0,     0,
       0,     0,     0,     0,   828,   825,   826,   827,     0,     0,
       0,     0,  1154,  1155,  1168,     0,  1159,  1160,  1157,  1161,
    1162,     0,     0,  1147,  1148,     0,     0,     0,     0,  1146,
       0,     0,     0,     0,     0,     0,     0,     0,   121,   121,
     121,   493,     0,   119,   120,     0,     0,   650,   653,  1236,
     958,   968,     0,     0,     0,     0,     0,     0,     0,   995,
     849,   844,   846,   848,   847,   727,     0,     0,     0,     0,
    1139,  1141,     0,     0,   957,   930,  1217,     0,     0,  1378,
     947,  1214,     0,     0,     0,     0,  1048,     0,   340,   339,
     291,   287,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1053,  1048,  1045,  1048,
     688,     0,  1048,  1103,     0,  1378,     0,   960,  1112,  1129,
    1151,  1171,  1152,  1172,  1243,  1269,     0,  1251,  1256,  1234,
       0,  1234,     0,  1253,  1257,  1234,  1252,  1234,  1247,     0,
     776,     0,    64,     0,    63,     0,   657,     0,     0,   644,
     640,     0,     0,     0,     0,     0,   611,   612,   613,   614,
     615,   616,   617,   618,   619,     0,     0,   620,     0,     0,
       0,   568,   579,   580,   581,   576,   577,   578,   570,   571,
     572,   573,   574,   575,   594,     0,     0,     0,     0,     0,
       0,     0,     0,   452,     0,     0,   557,     0,   596,   630,
       0,     0,     0,     0,     0,     0,   596,   636,     0,     0,
       0,   672,     0,   669,   429,   656,     0,   564,   428,     0,
       0,     0,   704,   705,   385,   430,   399,   400,   401,   405,
     737,   736,   666,     0,   658,     0,     0,   386,   409,   414,
       0,   637,   446,     0,   434,     0,   422,     0,   432,   436,
     410,   425,     0,   406,     0,   659,   591,   593,     0,   589,
       0,   396,   397,   398,   390,   391,   392,   393,   394,   395,
     402,   567,   565,   566,     0,     0,     0,   532,     0,     0,
     431,   663,  1370,  1408,     0,   109,   109,   109,    97,   107,
       0,   276,   121,   674,   276,     0,   383,   265,   730,   751,
     739,   740,   597,   729,  1071,   129,   130,   134,   134,     0,
       0,   134,  1606,  1497,     0,     0,     0,     0,   172,   214,
       0,   205,   169,   170,     0,   168,   696,   173,   695,   174,
     177,   178,   146,   215,   683,   217,     0,   210,    81,    80,
     221,     0,    45,     0,     0,     0,     0,  1060,  1077,     0,
     656,  1093,  1095,   225,     0,    43,     0,   786,     0,  1378,
     803,     0,     0,     0,     0,     0,     0,   865,   902,   865,
     841,  1378,  1048,  1378,  1048,  1275,  1344,  1513,   935,     0,
     799,   832,     0,  1005,   965,     0,   920,   822,   837,   998,
       0,     0,   788,  1144,  1158,  1163,  1001,  1167,  1164,  1175,
    1165,  1012,     0,   784,     0,   999,     0,  1173,     0,     0,
     790,  1003,  1177,   119,   119,   119,     0,   603,     0,     0,
       0,   605,   606,   652,     0,  1235,     0,   959,     0,  1245,
    1225,  1226,  1236,     0,     0,   960,   960,   845,     0,     0,
     728,  1181,     0,     0,     0,     0,    53,     0,   958,   950,
     948,   981,     0,   955,   949,     0,     0,   906,     0,     0,
     781,     0,     0,     0,     0,     0,   309,   322,  1020,   296,
       0,   350,   349,   351,   351,   296,     0,   282,     0,   294,
       0,   334,   303,   376,   377,   378,   379,   380,   381,   382,
    1013,  1015,     0,  1017,     0,     0,     0,  1241,     0,  1239,
    1240,  1244,  1238,     0,  1233,     0,  1264,     0,     0,     0,
       0,     0,     0,  1206,   608,   114,   451,     0,     0,   641,
       0,     0,   526,     0,   501,   503,   516,     0,   505,   507,
       0,   583,     0,     0,     0,   517,   454,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   470,   469,   518,   556,     0,
       0,   628,   629,     0,   519,     0,     0,   635,     0,     0,
       0,   524,     0,   689,     0,     0,     0,   681,   480,   597,
     562,   560,   486,   383,     0,     0,     0,     0,     0,     0,
       0,   435,   424,     0,   433,   437,     0,     0,     0,   418,
       0,     0,   416,   447,   412,     0,     0,   448,     0,     0,
     531,   540,   109,   109,   109,   109,   106,   108,     0,     0,
       0,     0,  1497,     0,   248,   228,   224,   226,   235,   248,
     253,   496,   274,   497,   714,     0,   184,   119,   682,   184,
       0,  1200,   742,     0,     0,   123,   124,   126,     0,   584,
     134,   128,   176,   175,     0,   144,   212,   142,     0,   218,
      46,     0,  1082,  1066,  1064,  1084,  1083,     0,   656,  1091,
       0,     0,  1082,     0,  1085,  1099,  1096,    45,     0,     0,
       0,     0,   910,     0,     0,     0,   865,     0,   970,     0,
     977,     0,   962,   821,     0,     0,     0,   795,   840,   813,
     805,   791,   819,     0,     0,   824,     0,   817,   834,   835,
     833,   838,     0,   875,   894,     0,     0,   907,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   121,   117,   118,   488,   651,  1267,  1268,  1266,
    1149,   969,     0,     0,     0,   957,  1217,   843,   995,     0,
    1182,     0,  1180,     0,  1142,     0,   960,  1104,     0,    48,
     934,   930,   956,   928,   927,   929,     0,    54,  1216,     0,
     782,     0,   778,     0,  1211,   328,   293,     0,   346,   344,
     292,     0,   288,   295,  1048,     0,  1265,     0,  1229,  1270,
    1254,  1259,     0,  1263,  1261,  1260,  1255,  1258,     0,   643,
     639,     0,   498,   609,     0,   595,   623,   622,   453,   465,
     466,   467,   624,     0,     0,     0,   462,   463,   464,   456,
     457,   458,   459,   460,   461,   468,   633,   632,   626,   627,
       0,   521,   522,   523,   634,     0,   690,   671,   596,   676,
     678,     0,     0,   559,   703,   387,     0,     0,   415,   638,
     438,     0,     0,     0,   411,   583,     0,     0,     0,     0,
       0,   420,     0,     0,     0,     0,   494,     0,     0,     0,
       0,   100,    99,   105,   248,   253,     0,    83,     0,   235,
       0,   247,   163,   246,   229,     0,   259,   257,     0,   259,
       0,   259,     0,   163,     0,   249,   163,   246,     0,   266,
     686,   275,     0,   201,     0,   670,   201,     0,    96,   132,
     133,     0,   127,   143,   684,    44,     0,    40,     0,  1072,
       0,     0,  1069,  1059,     0,     0,  1094,  1082,  1073,  1006,
     865,     0,     0,   802,     0,   979,   922,   971,   954,   937,
       0,     0,     0,   866,     0,   942,     0,   794,   814,     0,
     810,     0,   839,     0,     0,     0,     0,     0,   809,   797,
       0,   792,     0,  1048,  1048,   800,   722,  1655,  1656,  1657,
    1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,  1748,  1671,   872,  1672,  1444,  1673,  1674,
    1675,     0,  1676,   285,  1677,  1678,  1679,   570,   571,   972,
     869,   871,     0,   964,   867,   870,   723,   868,   967,   921,
    1002,  1176,     0,  1000,     0,  1174,  1009,  1007,  1004,  1178,
     491,   492,   489,   119,  1248,  1228,     0,    53,     0,     0,
       0,  1378,     0,  1179,     0,  1217,  1140,     0,   957,    53,
      51,     0,   987,   906,   982,     0,    62,   777,     0,     0,
       0,   289,   283,  1018,     0,  1242,     0,  1262,   642,   514,
     525,   621,     0,     0,     0,     0,   520,   515,   679,   680,
     675,   444,   442,   439,     0,   440,   419,     0,     0,   417,
     413,     0,   449,   527,     0,   543,   538,   539,   104,   103,
     102,   101,   234,   232,     0,   237,   714,   244,   156,   162,
     233,     0,   227,     0,   258,   254,     0,   255,     0,     0,
     256,     0,   230,     0,   714,   231,     0,   273,     0,     0,
     534,   488,   534,  1201,     0,  1081,  1061,     0,  1062,  1092,
       0,     0,     0,     0,  1086,   769,   975,   804,     0,   954,
       0,   865,   939,   938,   941,   936,   940,   943,     0,     0,
       0,     0,     0,   923,     0,     0,     0,   886,     0,     0,
     954,     0,   961,   882,   883,   996,     0,     0,     0,   806,
     796,   793,   798,   807,     0,     0,   808,   811,   281,   823,
     816,  1748,  1755,     0,     0,     0,     0,     0,     0,  1224,
    1231,  1149,     0,     0,    50,   930,     0,     0,     0,   957,
    1183,     0,     0,    53,     0,  1101,    52,     0,     0,   862,
       0,   903,     0,     0,    55,     0,  1209,  1210,     0,     0,
    1230,   471,     0,     0,     0,   677,   441,   445,   443,   421,
     529,   545,   542,   269,     0,   272,   236,     0,     0,   151,
     158,     0,   161,   155,     0,   238,     0,     0,   240,   242,
       0,     0,     0,   277,     0,     0,     0,   691,   182,  1319,
    1589,  1496,   183,     0,   187,   181,   185,   190,   192,   191,
     193,   189,   200,     0,   203,   701,   203,   585,     0,     0,
       0,     0,  1088,  1088,  1097,     0,     0,  1074,     0,   865,
       0,   953,   976,   901,     0,     0,   884,     0,   891,     0,
     925,   926,   924,   885,   954,   960,   887,     0,   997,     0,
     815,     0,   831,     0,     0,   966,  1010,  1008,   490,  1248,
       0,  1217,   906,    62,     0,     0,     0,  1104,    49,   930,
     919,   912,   913,   914,   915,   916,   917,   918,   933,   932,
     904,   905,     0,     0,     0,  1211,     0,   472,     0,   473,
       0,   121,   274,     0,     0,   268,     0,   149,   147,   150,
     152,   148,     0,     0,   245,   261,     0,   241,   239,   250,
       0,   281,     0,   252,     0,     0,     0,   194,   188,   533,
     535,     0,     0,   154,   154,     0,  1068,     0,     0,  1090,
    1090,   276,     0,  1076,     0,   960,   978,   952,     0,   945,
     944,     0,     0,   881,     0,   888,   986,   890,   874,   280,
       0,   818,     0,   973,  1223,  1227,     0,   864,    56,   957,
       0,    62,    53,   906,     0,    59,     0,     0,  1217,   474,
       0,   548,   267,   270,     0,   243,     0,     0,     0,   278,
     279,   251,     0,     0,     0,   186,     0,     0,   202,     0,
      85,    84,  1063,  1088,  1087,  1089,   131,   131,  1067,  1098,
       0,   986,     0,   931,     0,   909,   874,     0,   900,     0,
     812,   830,   974,     0,   957,    57,  1102,   863,    60,    61,
       0,   276,   544,     0,     0,     0,     0,   159,     0,   165,
     260,   196,     0,   195,   536,   537,   156,  1090,   134,   134,
     276,   900,   951,   946,     0,   889,   892,   983,   984,   985,
       0,   896,   893,   897,     0,    62,     0,  1207,  1577,  1320,
    1548,     0,   546,   549,   547,   541,   271,     0,     0,   157,
     197,   153,   131,  1079,  1078,  1075,   865,   908,     0,     0,
       0,   898,     0,   899,   873,    58,  1217,     0,   553,   552,
     551,   555,   554,   160,     0,   134,   980,   878,     0,   877,
       0,   963,   895,   276,     0,     0,  1080,   876,   880,   879,
    1208,   550,   164
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,   536,   974,  2112,  1792,   537,  2209,
    1884,    42,  2664,    43,   813,   633,   538,   886,    46,    47,
      48,   577,   590,   591,  1358,  1738,  2068,   952,   564,   565,
    1870,   602,  1494,  1390,  1391,  1757,  2095,  1417,  1418,   961,
     962,  2690,  2900,  2691,  2692,  2549,  2550,  2979,  1405,  1409,
    1410,  1777,  1767,  1396,  2353,  2714,  2715,  2716,  2717,  2718,
    2719,  2720,   887,  2570,  2833,  1413,  1414,   964,   965,   966,
    1422,  1787,    50,    51,  1741,  2075,  2076,  2077,  2078,  2331,
    2332,  2346,  2342,  2555,  2698,  2079,  2080,  2683,  2684,  2805,
    2349,  2086,  2702,  2703,  2762,  1546,   715,  1261,  1192,   717,
     888,   718,  1172,   889,  1176,   720,   890,   891,   892,   723,
     893,   894,   895,   726,  1168,   896,   897,  1187,  1211,  1212,
    1213,  1214,  1215,  1216,  1217,  1218,  1219,   939,  1642,   899,
     900,   901,  2082,   902,  1352,  1727,  2061,  2724,  2829,  2830,
    2316,  2536,  2681,  2801,  2935,  2972,  2973,   903,   904,  1301,
    1302,  1303,  1724,  1347,  1348,   905,  2450,  1350,  1635,   940,
    1657,  1297,  1049,  1050,  1262,  1615,  1616,  1638,  1984,  1645,
    1650,  2011,  2012,  1658,  1692,   906,  1599,  1600,  1970,  1270,
     907,   630,  1056,   631,  1267,  1686,   916,   908,   909,   910,
    1294,  1295,  2027,  2290,  2291,  1663,  1783,   582,  2023,  2694,
     738,  1137,   911,   912,   913,   914,   942,   584,  1051,   479,
     729,  2905,  1150,   946,  1052,  1828,  1682,    52,   934,   587,
     935,   938,    53,    86,    54,   558,   559,   539,    56,    57,
      58,   653,  1528,    59,  2149,  2150,  2151,  1829,   986,  2861,
    1830,   987,   988,  2153,    60,  1148,  1511,    61,    62,   571,
      63,  2140,  2453,  2920,  2164,  3011,  2612,  2613,  1831,  2961,
    2962,  2142,  2217,  1457,  2955,  1899,  2788,  1835,  1817,  2614,
    1907,  2741,  2492,  1832,  2393,  1900,  2598,  2848,  1531,  1901,
    2849,  2591,  1902,  1501,  1525,  2395,  2963,  1836,  1502,  2139,
    2454,  1445,  1903,  2918,  1904,   496,  2617,    64,  1448,    65,
     528,   529,   735,  1224,   530,   730,    66,   550,   540,  1798,
    1429,  2582,    68,  2119,  1801,  2122,  2734,  2367,  2117,  2123,
    2839,  2906,  2120,  1802,  1803,  2735,  1804,    69,   742,    70,
      71,    72,    73,   617,  1246,   541,  1247,  1248,   800,    74,
    1256,   802,   803,    75,  1520,    76,  1521,  1475,  1257,  1006,
    1465,  1251,    77,    78,  2201,  2202,    79,   572,   573,  1258,
    1371,  1259,    80,  2667,  2500,  1161,  1532,  1909,   497,    81,
      82,    83,  1882,  2641,  2237,  2642,  1955,  1876,  1254,  1951,
    1575,  1504,  1255,   486,  1588,  2238,  2190,  1576,   505,   481,
     482,   732,  1140,  1054,  1141
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2569
static const int yypact[] =
{
    3110,   -73,  1095, -2569, -2569,   -73, 34774, -2569,   -73,    73,
    2450, 39534, -2569,  6470,   -73, 46198,   749,   229,   186,   237,
   40010, 40010, 46198, 46198, 40486,   -73,   241, 46674, -2569,   -73,
   24320, 37154,    -1,  -212, 47150, 46198,   476,   388,   -93, -2569,
   -2569, -2569, -2569, -2569, -2569,   118, -2569,   653,   143,   493,
     -42, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, 23843, -2569, -2569, -2569, -2569, -2569,    63, -2569,
   -2569, -2569, -2569, -2569,    36, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, 40962, 46198, 41438,
   37630, 41914, -2569,   141, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569,   160, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,   161, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569,   236,   182, -2569,
     162, -2569, -2569, -2569, -2569,   476, 42390,   403,   447,   346,
   47626, -2569, -2569, 46198, -2569, -2569,   594,   540, -2569, -2569,
   -2569, 42866, -2569, -2569, -2569, -2569,   518, -2569, -2569,   354,
   -2569,   130, -2569, -2569,   422,   383, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569,   519, -2569, 52862, -2569, 48102, 48578,
   49054, -2569,   405,   776,    33, 23366, -2569, -2569, -2569, -2569,
   -2569, -2569,    36,   954, -2569, 40010,   954, -2569, -2569, -2569,
   -2569, -2569,   111,   477, -2569,   502,   767, -2569, -2569, -2569,
     514, -2569, -2569,   733, 10513, 10513, 49530, 49530,   954, 49530,
     568,   -33, -2569, -2569, -2569,  -212, -2569,   493,   514, -2569,
   24797, -2569,   572,   182, -2569, -2569,   126,   857, 14020, 46198,
     570, -2569,   591,   570,   595,   646, -2569,  3110,   264,   264,
    1100,   264,   974,   986, -2569,  1282, -2569,   666, -2569,   695,
     959, -2569,   514,  1019,   979, 37154, -2569, 42390,  1050,   779,
     871,  1092,  4206,  1101,   788,  1109,   795,  7006, 14020, 33346,
   -2569,   182, -2569,   778, -2569, -2569, -2569,   796, -2569, -2569,
   -2569, -2569,   680,  1025, -2569,   849,  1266, -2569, -2569,   911,
   43342, 43818, 42390, 42390,  1290, -2569, -2569, -2569, -2569,   915,
   -2569, -2569, -2569,   133, -2569, -2569, -2569, -2569,   952, -2569,
     952,   952, -2569, -2569, -2569, -2569,   949,   949,  1134,   964,
   -2569, -2569, -2569,  1317, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569,  1007,   844, -2569,   952, -2569,   949,
   -2569, -2569, -2569, -2569, -2569, 54245, -2569, -2569, -2569, -2569,
     320,   469, -2569, -2569, -2569,  1041, -2569,  1439, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569,  1052, -2569,  3855,   949,
      70, -2569, -2569,  1405, -2569,    84,  1417,    86, -2569,  1421,
    1299, 14020, -2569,  1246,  1188, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569,  -212, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
    -129, -2569, -2569, 30948, -2569, -2569,    33,  1098, -2569, -2569,
   30948, 14521, 53323,  1554, -2569,  1363, 46198,  1104, -2569, -2569,
   -2569, -2569, -2569, -2569,  1102,  1591,    92,  1596, 14020,  1107,
      92,    92,  1110,  1448, -2569, -2569, -2569,   163,  1115,  1119,
   -2569,   167,   167, -2569,  1120,  1122, -2569,   168,  1126,  1127,
    1618,  1621,   108,  1132,  1133,   844,    92, 14020, -2569,  1136,
     167,  1141,  1142,  1145,  1624,  1146, -2569,  1625,  1147,   120,
     151,  1149,  1150, -2569,  1155, -2569,   170, 14020, 14020, 14020,
    1507, 14020,  8008, 42390,  1642, -2569,   182,  1162,   954, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569,   150,  5224, -2569,
    1200, -2569, -2569, -2569,  1366, 14020, -2569, -2569,  1160,  1449,
   -2569,   171, -2569, -2569, -2569,   251,  1449, -2569, -2569, -2569,
   -2569, -2569,   194,  1568, 29996, 30472, 42390, -2569, -2569,   182,
   -2569, -2569, -2569, -2569, -2569,    50, -2569, -2569,    36, 32095,
    1167,  1171,   182,   570, 46198, 46198,  1632, -2569, -2569, -2569,
   -2569, -2569,   493,   493,  9511,   493,    97,     6, 11014, 15022,
    1511,  1395,   114,    91,  1514, -2569,  1389,   974,   986, 14020,
   -2569,  1450, 37154, 42390,  1311, 50006,   591, 42390, 35250,   827,
     860,  1192,  1274,  1194,   335,  1605, -2569,  1193, -2569,  1279,
   42390, 54245,   183, -2569,  1641,   183,   183,   461,  1643,  1285,
     211,  1435,   434,   193,  1193,  1446, -2569, 37154,    65,   547,
    1193, 42390,  1286,   561,  1193,   107, 14521,   929,   953,   312,
    1060,  1067,   134, 14521,  1116,  1224,  1250,  1294,  1304,  1314,
    1351,  1398,  1437,  1443,   140,  1467,  1470,  1474,  1486,  1491,
    1500,   147,  1503,   166, 14521,  1505,  1208, -2569, 32095,   -43,
   -2569, -2569,  1510,   157, -2569,  5878,  1203, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569,  1291, 46198,  1252,   489,  1561,  1622, 33346,
    1219,  1579, 42390,  1452,  1446,  1454,  1689,  1231,   796,  1232,
   -2569, 50482, -2569, -2569, -2569, -2569, -2569, -2569,  1233, -2569,
   -2569, 14020, -2569, -2569, -2569,  1720, -2569, 53323, 53323,   952,
     952, -2569, -2569,  1695,  1319,  1320,  1720, -2569,  1720, -2569,
   46198,  1240,  1247,  1720, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
    1720,  1325, -2569,  1327,  1328,  1329, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, 53323, -2569, 46198, 46198, -2569, 46198, 46198,
   -2569, 46198, 46198,  1248,   680, 44294,    33, 38106, -2569, -2569,
   -2569, -2569,   327,   674, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, 33346, -2569,  2440, -2569, -2569, -2569,  1249,
     625, -2569,   648,   476, -2569, -2569, 14020,   182, 14020, 32095,
    1293, 14020, 14020,  1255,  1720,  1720, -2569,  3597,  1720,  1720,
    2192, 14020, 27662, 14020, 18529, 11515, 14020, 14020,  8509, 14020,
    2192,  1736,  1736, 25751, -2569,  1409, -2569,  1258,  1944,  5099,
    1257, -2569,  1260,  1253, -2569,  1259, -2569,   182,   182, 14020,
   -2569, 14020,  4108,  4108, -2569,   159, 53323, 14020, 14020, 14020,
   14020, 14020, 32870,  1349,   101, 46198, 14020, 14020,  1270,    48,
   -2569, 14020,  1492, -2569,  1275, 14020,  1357,   272, 14020, 14020,
   14020, 14020, 14020, 14020, 14020, 14020, 14020, -2569, -2569, 20018,
     196,  1602,  1614,   182,   -94,   234, 10513, 38582,  1612,  7006,
   -2569,   182, 29044,    93,  1612, -2569, -2569, -2569,   172, -2569,
   -2569, -2569, -2569, -2569,  1249, -2569,  1249,  1288, 42390,   126,
   36678, 14020, -2569, -2569,   706,  1287,  1574, -2569,   232,   232,
    1289, -2569,  6515,  1574, -2569, -2569, 19016,  1412,  1569,  1504,
   -2569, -2569,  1487,  1488, -2569,  1297, 32378, 15523, 15523, -2569,
    1170, 32095,  1178, -2569, -2569, -2569, -2569, -2569, -2569,    12,
   -2569, 42390,   -12,  1511,    91,  1301, -2569,  1355,  1762,   723,
   26228, 46198, -2569, -2569,   932,  1305, 50958, 46198,  1577,  1531,
    1581,  -132, 53323, -2569, -2569, -2569, -2569, 46198, 46198, 51434,
   51910, 33822, 46198, 33346, -2569, -2569, -2569, -2569, 46198,  1035,
   46198,  4242, -2569, -2569, -2569,   183, -2569, -2569, -2569, -2569,
   -2569, 46198, 46198, -2569, -2569,   183, 46198, 46198,   183, -2569,
    1135, 46198, 46198, 46198, 46198,  1163, 46198, 46198,   -39,   -39,
    1513, -2569, 12016,   123, -2569, 14020, 14020, -2569, 14020,  1482,
   -2569, -2569,   713,  1523,    45,  1358, 42390, 42390, 46198,  1172,
   -2569, -2569, -2569, -2569, -2569, -2569, 33346,  1312,  1315,  1662,
   -2569,  1446,  1663,  1091, 35726,   689,  1359, 12517,  1779,  1547,
   -2569, -2569,  1533, 14020,  1326,  1330,    70,   727, -2569, -2569,
    1331,  1247,  1345,  1347,  1332,  1334,   729, 53323,  1720,    90,
    1335,  1336,  1281,   643,   686,  1201, -2569,    84, -2569,    86,
   -2569,  1542,   188, -2569,  1430,  1565,  1800,   796, -2569, -2569,
   -2569, -2569, -2569, -2569, 22889, -2569,   756, -2569, -2569,  1801,
     954,  1801,   520, -2569, -2569,  1801, -2569,  1801, -2569, 30948,
   -2569, 14521, -2569, 53323, -2569,  1342, -2569,  1348, 14020,    52,
   -2569, 31468,  1343, 14020,  1350,  1352, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569,  1354,  1672, -2569,  1356,  1367,
    4980, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569,  1374,  1362, 31481,  1375, 18529,
   18529,  8008,   270, -2569, 18529,  1376, -2569,  1383, 31421,  1381,
    1388, 31555, 13018, 14020, 13018, 13018, 31815, -2569,  1397, 31975,
   46198, -2569, 16024, -2569, -2569, -2569, 14020, 42390, -2569, 14020,
    1401,  5992, -2569, -2569, -2569,   234,  6211,  6211,  6211,  2192,
   -2569, -2569, -2569,  1373, -2569, 18529, 18529, -2569,  1387,  3464,
    8008, -2569, -2569,  1675, -2569,   704, -2569,  1396, -2569, -2569,
    3601, -2569, 27662, 32397, 14020,   142, -2569, 14020,  1270, 14020,
    1480,  6211,  6211,  6211,   238,   238,   180,   180,   180,   254,
     234, -2569, -2569, -2569,  1400,  1403,  1404,  1700,  1146, 14020,
   -2569, -2569,   780,   789, 42390,  2871,  3237,  4638, -2569, -2569,
   21458,  1408,   -43,  1507,  1408,  1720,  4108, -2569,   591, -2569,
   -2569, -2569, 32095, -2569,   476, -2569, -2569,  1420,  1420, 14020,
    1943,  1420,  1615,  1616,   865,   865,  1170,  1617, -2569, -2569,
    1468, -2569, -2569, -2569, 14020,  9010,  1187, -2569,  1204, -2569,
   -2569, -2569, -2569,  1410, -2569, -2569,  1666, -2569, -2569, -2569,
   -2569, 21458,  1456, 46198,  1464,   -99, 24320, -2569,  1626, 46198,
   -2569, -2569,  1413,  1612,  1431, -2569,  1502,  1193, 14020,  1644,
   -2569,   135,  1422,  1768,  -121,  1722, 46198, -2569,  1637, -2569,
     537,  1777,   188,  1778,   188, 33346, 33346, 33346, -2569,   762,
   -2569, -2569,   954, -2569,  -149,   791, -2569, -2569, -2569, -2569,
    1515,   567,  1193,  1446, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569,    99,   636,  1193,  1516, -2569,  1517, -2569,  1518,   885,
    1193, -2569, -2569,   123,   123,   123, 14521, -2569,  1656,  1657,
    1440, 32095, 32095, 32095,  1441, -2569,   119, -2569, 46198, -2569,
   -2569, -2569,  1482, 42390,  1901,  1444,   796, -2569,  1598,   672,
   -2569,   954, 46198, 42390, 42390, 46198,  1481, 42390, 53323, -2569,
   -2569, -2569,  1445,  1447, -2569,   -61,  1660,  1659,  1194,  1909,
   -2569,   798, 13519,  1799, 42390,  1459, -2569, -2569, -2569, -2569,
    1720, -2569, -2569,  -137,  -137, -2569, 46198, -2569,  1458, -2569,
    1462, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, 46198, -2569, 42390,  1808,   476, -2569, 36202, -2569,
   -2569, -2569, -2569, 33346, -2569,   954, -2569,   954,  1688, 46198,
   29520,   954,   954, -2569, -2569, -2569, -2569, 32041, 14020, -2569,
    1809, 53323, -2569,  6026, -2569, -2569, -2569, 14020, -2569, -2569,
   14020, -2569, 27662, 14020,  1795, -2569,  1955,  1955,  5099, 53323,
   18529, 18529, 18529, 18529,   652,  1141, 18529, 18529, 18529, 18529,
   18529, 18529, 18529, 18529, 18529, 19517,   215, -2569, -2569, 14020,
   14020,  1803,  1795, 14020, -2569, 53323,  1472, -2569,  1473,  1477,
   14020, -2569, 53323,  1471,  1485,  8008, 32060, -2569,   182, 28146,
   -2569, 32095, -2569,  4108, 14020,   545,   982, 14020,  1506, 14020,
    1813, -2569, -2569,  1493, -2569, -2569, 53323, 14020,  1509,  5367,
   18529, 18529,  5498, -2569,  5858, 14020,  8008, -2569,  1513,  1546,
   -2569,  1706,  1608,  1608,  1608,  1608, -2569, -2569, 42390, 42390,
   42390, 21935,  1843, 20981, 44770,  1519, -2569,   971, -2569, 44770,
   45246, -2569,  1532, -2569,   182, 14020,  1837,   123,  1409,  1837,
    1524, -2569, -2569,  1525,   129, -2569, -2569, -2569,  1528, -2569,
    1420, -2569, -2569, -2569,  1738, -2569, -2569, -2569, 42390, -2569,
   -2569, 14020,  1677, -2569, -2569, -2569, -2569,  1583, -2569, -2569,
     800,  1946,  1677,   805, -2569,   182, 26228,  1456, 14020, 46198,
   28165,  1877, -2569, 46198, 46198, 46198, -2569, 46198,  1535,  1536,
     787,  1540, -2569,   787,  1864,   367,  1194,   211,  3489,   -13,
   -2569, -2569, -2569,  1623, 46198, -2569, 46198, -2569, -2569, -2569,
   -2569, -2569, 33822, -2569, -2569, 27185, 33346, -2569, 33346, 46198,
   46198, 46198, 46198, 46198, 46198, 46198, 46198, 46198, 46198,  1550,
    1551,  1555,  1513, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
     193, -2569,   119,  1557,   476, 35726,  1359,  1622,   680, 45722,
   -2569,  1558,  1556,   845,  1446,  2017,  1562,   405,   136, -2569,
   -2569,   689, 35726, -2569, -2569, -2569,  1980, -2569, -2569,   476,
   -2569,   476, 32095, 46198,  1631, -2569,  1247,  1567, -2569, -2569,
    1247, 53323, -2569, -2569,   188, 42390, -2569,   846, -2569, -2569,
   -2569, -2569, 46198,  1563, -2569,  1563, -2569, -2569, 14020, 32095,
   -2569,  1575, -2569, 32095, 28194, -2569, 32095,  1803, -2569,  1702,
    1702,  1702,  2456,  1895,   178,  1578,  1702,  1702,  1702,   287,
     287,   100,   100,   100,  1955,   215, 32095, 32095, -2569, -2569,
    1576, -2569, -2569, -2569, -2569,  1580, 46198, -2569,  5963, -2569,
    1564,  1582, 46198, -2569, -2569,   289, 14020, 14020,  1387, -2569,
    5145, 14020, 53323,   852,  1387,   197, 14020,  1399,  2130, 14020,
   14020,  6396, 28213,  1584, 14020, 26705, -2569, 42390, 42390, 42390,
   42390, -2569, -2569, -2569, 44770, 45246,  1586, 20503,   971,  1587,
   42390, -2569,  1665,  1589, 21458,  1854,  1781, -2569, 21458,  1781,
    1004,  1781,  1857,  1665, 25274, -2569,  1665,  1590,  1790, -2569,
     552, 32095,  2032,  1905,  1594, -2569,  1905,   954, -2569, -2569,
   -2569, 27662, -2569, -2569, -2569, 32095, 10513, -2569,   476,   182,
    1195, 46198,   -45, -2569,  1610, 46198, -2569,  1677, 32095, -2569,
   -2569, 46198,  1599, -2569,  1600,   787, -2569, 46198,  1635, -2569,
     148,  1897,    77, -2569, 33346,  2434,   656, -2569,  1910,  1824,
   -2569,   183, -2569, 14020,   656,  1826,   106, 46198, -2569, -2569,
    2462, -2569, 53323,   188,   188, -2569,  1607,  1609,  1613,  1619,
    1620,  1628,  1629,  1630,  1633,  1634,  1636,  1638,  1639,  1646,
    1647,  1648,  1652,  1007,  1653, -2569,  1654,  1528,  1655,  1658,
    1661, 53784,  1667,  1668,  1669,  1670,  1671,   327,   674, -2569,
   -2569, -2569,   849, -2569, -2569, -2569,  1678, -2569,  1645, -2569,
   -2569, -2569,  1693, -2569,  1698, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569,   123,  1098,    78, 46198,  1481,  1606,  2073,
     850,  1844,  1674, -2569,   954,  1359, -2569,  1094, 35726,  1481,
   -2569,  2006,   158,  1659, -2569,   122,  1664, -2569,  1830, 46198,
    1679, -2569, -2569, -2569,  2083, -2569, 36202,  1563, 32095, -2569,
   -2569, -2569, 18529,  1951,  1683, 53323, -2569, -2569, 14020, -2569,
   -2569,  1387,  1387,  5145,   853, -2569,  1387, 14020, 14020,  1387,
    1387, 14020, -2569, -2569, 28280, 52386, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569, -2569, 34298, 44770,  1686, -2569, 39058, -2569,
   -2569, 46198,   971, 21458, -2569, -2569,   112, -2569, 21458,  1908,
   -2569, 21458, -2569, 46198,  1687, -2569, 46198, -2569, 10012, 14020,
    1676,   954,  1676, -2569,  1691,  1640, -2569,   -99, -2569, -2569,
    2048, 22412,  2009, 14020, -2569, -2569,   787, -2569,  1819,  1635,
    1699, -2569, -2569, -2569, -2569, -2569, -2569, -2569,   858,  1701,
   46198, 46198, 18529, -2569,   656,   175,   121, -2569,  1932, 42390,
    1635,  2102, -2569, -2569, -2569, -2569,  2080,  2161,  2051, -2569,
   -2569, 32095, -2569, -2569,  1720,  1720, -2569, -2569,  2125, -2569,
   -2569, -2569, -2569,   849,   448, 27185, 46198, 46198,  1708, -2569,
   -2569,   193,  2084,   864, -2569,   689,   476, 42390,  2057, 35726,
   -2569,  2179, 46198,  1481,  1721, -2569, -2569,   154,   154, -2569,
    1860, -2569,  1862,   301, -2569, 42390, -2569, -2569, 22412,   476,
   -2569,  3435, 18529, 53323,   870, -2569, -2569,  1387,  1387,  1387,
   -2569,  1915, -2569, -2569,   875,  2184, -2569, 46198,   -52,   326,
    1726,  1727, -2569, -2569,  1728, -2569, 14020,  1733, -2569, -2569,
   21458,   112,   882, -2569, 53323, 46198,   886, 53323, -2569,  1737,
    -120,  1739, -2569,  7507,  1724, -2569, -2569, -2569, -2569, -2569,
   -2569, 32095, 32095, 46198,  1906, -2569,  1906, -2569, 10513,  1794,
   46198, 14020,  2165,    41, -2569,   888,    -4, 32095, 42390, -2569,
   33346, -2569,   787, -2569, 33346, 14020, -2569,   640,  2456,  2203,
   -2569, -2569, -2569, -2569,  1635,   796, -2569, 46198, -2569,  2054,
   -2569, 46198,  1805,   457,  1825, -2569, -2569, -2569, -2569,  1098,
     954,  1359,  1659,  1664,  1749, 42390,   476,   405, -2569,   689,
   -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569, -2569,
   -2569, -2569,  2185,  1963,  2186,  1631,   890,  3435,   892, -2569,
    2200,  1513,  1532, 34298,  1760, -2569,  1761, -2569, -2569, -2569,
   -2569, -2569, 46198,   956, -2569, 32095, 46198, -2569, -2569, -2569,
   46198,  2125,   897, -2569, 14020,  1763, 14020, -2569, 16525,  1757,
   -2569,  2224, 14020,  1823,  1823,   476, -2569, 28515, 46198, 46198,
   46198,  1408, 22412, -2569,  1888,   796,   787,  1780,   901, -2569,
   -2569, 28566,  1988, -2569,  2081, -2569,  2021, -2569,  1774, -2569,
   14020, -2569,  1845, -2569, -2569, -2569,  2235, -2569, -2569, 35726,
    1782,  1664,  1481,  1659,  1986, -2569,  1987,  1784,  1359, -2569,
   14020,   284, -2569, -2569, 46198, -2569,   924,  1786,  1787, -2569,
   -2569, -2569,  1788, 16525,  1789, -2569, 46198,  1785, 32095,  1930,
   -2569, -2569, -2569,  2165, -2569, -2569,   232,   232, -2569, -2569,
   26228,  2021, 27185, -2569, 33346,  2025,  1774,    74,  2012,  1446,
   -2569, 32095, -2569,   476, 35726, -2569, -2569, -2569, -2569, -2569,
   22412,  1408,  1381, 17026, 17026,  1798,   930, -2569,  2289,  1961,
   -2569, -2569,  1811, -2569, -2569, -2569, 39058, 46198,  1420,  1420,
    1408,  2012, -2569, -2569,  2105, -2569, -2569, -2569, -2569, -2569,
     109,  2024, -2569,  2029,  1186,  1664,   934, -2569, 18028,  1962,
     239, 31434, -2569, -2569, -2569, -2569, -2569,  1822,  1827, -2569,
   -2569, -2569,   232, -2569, -2569, -2569, -2569, -2569,   177,   177,
    2199, -2569,  1885, -2569, -2569, -2569,  1359,  2290, -2569, -2569,
   -2569, -2569, -2569, -2569,  2316,  1420,   787, -2569,  2304, -2569,
     132, -2569, -2569,  1408, 17527,  1835, -2569, -2569, -2569, -2569,
   -2569, -2569, -2569
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2569, -2569, -2569,  1740,    10,  1364,   203, -2569,    76, -2340,
    -627, -1105, -2522, -2569, -2569, -1158,     8,  1023,   -17,    61,
      67,    21,    59,  1390,  1423, -2569, -1215,   820, -2569, -2569,
   -1777,  -602,   -41, -2569,   579, -1357, -1716,  -471,   916,  1379,
    1382,  -469,  -492, -2569,  -601, -2569, -1020, -2569, -2569,   574,
     950, -1273, -1226, -2569,   261, -2569,  -541,  -475, -2569, -2569,
   -2569, -2569, -2569,     0,  -369,  -464,   936, -2569,  1406, -2569,
   -2569, -2569, -2569, -2569, -1231, -2569,   576, -1988,   288, -1974,
   -1854,    40,    28,  -935,  -332,    19,   300,  -431, -2569, -2569,
    -429, -1704, -2403,  -445,  -444, -2569, -2569,  -459, -1126,  -692,
   -2569, -2569,   353,   190, -2569, -2569, -2569,  1894,  2089, -2569,
   -2569,  2177,  2383, -2569,  -567,  2872,  -493,  -675,  1103, -1081,
    1106, -1044,  -956,  -840,  1108,  1112, -1249,  3370, -1578,  -894,
      -5, -2569, -2354, -1691, -2569, -2569, -2569,  -191, -2569,  -512,
   -2569,  -511, -2569, -2569, -2569,  -543, -2562, -2569,  1036,   725,
   -2569, -2569, -2569, -1241, -2569,  4121,   633, -2569, -1610,  -870,
    -577,  1128,  -731,  -961, -1153, -2569, -2569, -2569, -2569, -2569,
   -2569, -1627, -1802,  -537,   687, -2569, -2569,   803, -2569, -2569,
   -2569,  -614,   896,  -556,  -830,   699, -2569,    39,  1842, -1325,
   -2569,   665, -1929, -2569, -2569,   323, -2569,  1520,  -460, -1626,
     829, -1027,    20, -2569,  3146,    81,  1834,  -853, -2112, -2569,
   -2569,  -489, -2193,  -929, -2569,  -622, -2569, -2569,  1033, -2569,
   -2569, -2569, -2569,   758, -2569, -2569, -2569,    22, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569,   266, -2569,   957, -2569,
     256,  -549,   593, -2569, -2569,   535, -2569, -2569, -2569,   815,
   -1104, -1771, -2434,  -488, -2569,  -553, -2569,  -308, -1769,  -521,
    -508, -2569, -2361,  -932, -2569,  1466,  -213, -2569,   634, -2569,
   -2120, -2569, -2569,   621, -2569,  -950, -2569, -2569, -1779,   242,
    -458, -2313, -2136, -1783,  -632, -2569,  -506,   282, -1742,  -695,
   -2569,   647, -2569,  -454, -2569,  -515, -2194, -2569,  -926, -2569,
   -2569, -2569,  1234,  -656, -2569,  1283, -2569,    72,    23, -2569,
   -2569, -2569, -2569,    95,   337, -2569,  -381, -1903,  -109, -2569,
   -2494, -2568, -2569, -2569,  -441, -2455, -1721, -2569, -2117,  1090,
   -2569, -2569, -2569,  -423, -2569,  -466,  -463, -2569, -2569,    13,
    -789,  1238, -2569, -1102,   267, -2569,  -620,  -987,  -788,  -985,
   -2569,    71, -2569, -2569, -2569, -2569, -2569,   610, -2569,   887,
   -2569,   645, -1096, -2569,  -317, -2569, -2569, -2107, -2569, -2569,
   -2569, -2569, -2569, -2569, -2569, -2569,  -544,   598, -2286, -2569,
     528, -2569, -2569, -2569, -2569,   -24,   291, -2569,    -6, -2569,
   -2569, -2569,  -526, -2569, -2105
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1759
static const yytype_int16 yytable[] =
{
     480,   476,  1005,   967,   646,  1145,   603,  1138,    44,   805,
      40,   941,  1300,  1183,  1249,  1250,  1478,  1142,   744,   595,
    1479,    49,    55,    67,  1156,  1537,   477,   929,  1444,   542,
    1305,  1731,  1758,   728,  2024,  1761,  1189,    49,   576,   734,
    2089,  1634,  2096,  1510,  1512,  2101,  1513,  1433,  2143,  2083,
     581,  1454,  1514,  2452,  1450,  1307,  2158,  1541,  2160,  2478,
    2457,  1986,  1987,  1672,  1673,  1412,  2006,   716,   745,   737,
     611,  1353,   799,  1004,  2138,  1010,    41,  1014,  2124,  1227,
    1260,  1230,  1483,  1490,  1361,  2328,  2179,  2180,  2181,  2479,
    2489,  2493,  2048,   551,   593,  2191,  2289,  -343,  -694,   822,
    2083,   548,   548,  1169,  1170,  1594,  2345,  2035,  2036,   624,
     605,  1989,  -719,  -348,  2838,   822,   606,  -348,   -71,   806,
    -716,  -716,  1515,   484,   547,  -351,   533,  1146,  1221,   930,
    1181,   960,  2659,  1744,  1370,  1779,   923,  2644,   963, -1634,
    1446,  1684,  1221,   -74,  1221, -1645,  -719, -1737, -1737,  2655,
    2203,  1481, -1652, -1748, -1748,   547,  -351,     3,     4,   822,
   -1755, -1755,  -720,  2706,  1233, -1645, -1652,  -720, -1634,   585,
    -717,  -717,  -310,  -323,  1446,  -338,   547,   547,  1693, -1757,
   -1757,  2780,  1684,   613,  1782,  2171,  -568,  1238,  2639,  1968,
    2685,  1316,   822,  -568,  2595,  1189,  1608,  1365,  1238,   547,
   -1232,  2765,  1435,   822,  1463,  1694,  2335,  1466,  1467,  2278,
    2622,   -71,   728,  2796,  1880, -1149,  1163,  2243,  2245,  2373,
   -1149,  1323,  2213,  1721,  -587,  2343,  1989,  2732,  1397,  2988,
    1722,  -587,  2781,  1610,  1397,  3007,   -74,   659,  2752,  2840,
    2580,  2782,  2660,  2490,  2957,  1316,  1221,  3018,   600,  1316,
     956,  2868,   600,  1325,   544,  2807,  2825,  2661,  1394,  2634,
    1164,  1728,  1785,  1169,  1170,  1316,  2592,  2843,   562,  1755,
    2783,   614,  2907,   956,  1398,  1323,  2739,   805,   821,  1323,
    1398,  1989,  2336,   588,   805,  1488,  1990,  1991,  1992,  1181,
    2359,   950,  1489,  2750,   931,  1323,   932,  2756,  1989,  1462,
    1316,  1438,  2822,  2115,  1296,  2657,  1815,  1325,  2513,  1366,
    2354,  1325,  1868,  2778,  2732,  1142,  2337,  1815,  1695,   728,
    1705,  1611,  1184,  1696,   958, -1734, -1734,  1325,  1697,  2633,
    1308,  1570,  2338,  2147,  1399,  2165,   822,   543,  2116,  2593,
    1252,  2784,  2339,    84,  1185,   546,  2552,   958,  2166,  2925,
    2556,  2345,  2654,  2785,  2658,  2360,  1756,  2257,  2386,  1363,
    2792,  2410,  1325,  1816,  1395,  2385,  2751,  1236,  2793,  1786,
    1237,   563,  2255,   959,  2135,  -198,  2340,  2958,  2651,  2982,
    2083,   924,  2083,  1400,  2362,  2279,  1363,    85,   596,  1400,
    1643,  2138,  1425,  2138,   951,   545,  2753,  2696,   805,   805,
      26,  1729,  2999,   -71,  2491,   597,  2997,  3019,   688,  2947,
    2749,  2867,  2259,  2260,  2261,  2262,  1649,  1222,  2266,  2267,
    2268,  2269,  2270,  2271,  2272,  2273,  2274,  2275,   -74,  1368,
    1367,  1222,  2844,  1222,  1453,  1165,    31,  1612,  2808,  2662,
    2763,  2855,  1401,  2995,  2498,  3008,  1706,  1493,  1401,  2685,
    2581,   925,  3021,  1440,  2959,  2511,  1492,   607,  2514,  1881,
    1591,  1634,  1707,  2341,   816,  1993,   -71,  1708,  1869,  1698,
    2542,  1933,  2307,  2308,  2585,  2966,  1273,    33,  2952,  1482,
    1699,  2936,  2397,  2864,   616,  1384,  1810,  1994,  2732,  1890,
      34,   -74,  1779,   634,   586,   632,  1423,  2091,   728,   615,
    2507,  1685,  1768,  1424,  1709,  1598,    49,   635,   636,  1934,
    2187,  2188,  2927,  2172,    35,  1380,  2640,  2596,   595,  2099,
     731,  2069,  2070,  2452,  3009,  2772,  1526,  1138,    36,   804,
    2457,  1867,  2926,   660,   628,  1222,  1479,  2794,   629,  1167,
    2104,  1166,  2050,  -568,  2786,  2989,  1378,  2787,   801,  1379,
    2697,  3010,  3000,   821,  2398,    49,  1989,  1995,   480,   480,
    2144,  1990,  1991,  1992,   968,  2695,  1441,  1468,   485,  1223,
    2699,  2686,  2127,  2701,   933,   -71,  2732,  1455,  2296,  1184,
    1723,  -587,   480,  1226,  1929,  1229,   628,  -343,  -694,  2675,
     629,  2004,  2624,  2625,  1534,   810,  2093,  1935,  1937,   936,
     -74,  1185,  -719,  -348,  2191,    44,   811,    40,  1566,  2586,
    1184,  2933,  1538,  1539,   -71,  1186,   -71,   808,    49,    55,
      67,  1053,   480,  1139,   807,  2597,   548,   809,  1742, -1634,
    1867,  1574,  1185,  2809,   975, -1645,  -719,  2399,   605,   -74,
    2934,   -74, -1652,  2083,   606,  1311,  1188,  2083,   943,   920,
    1473,  1710,  -720,  1596,  2584, -1645, -1652,  -720, -1634,  2873,
    2872,  1289,  1171,  1175,  2866,  -338,  1359,  1745,  1473,  1242,
    1243,  1346,  2145,    41,  1474,   628,  1455,  1844,  1572,   629,
    1242,  1243,  2810,   822,   728,   728,  2615,  1847,   642,  1595,
    1850,  1296,  1474,  1596,  1142,  1602,  2638, -1149, -1149,   731,
    1681,  1999,  2000,  2001,  2002,  2003,  2004,  2599,  1647,  1469,
    2616,   805,  2817,  1936,  1938,  1939,   719,  1470,   716,  1564,
    1341,  1342,  1343,  1344,  1345,  1346,  1343,  1344,  1345,  1346,
     728,   627,  1670,  2478,  2643,   480,   734,  1558,   654,  1596,
    1138,  1634,  1308,  1562,   628,  1643,  1643,  1596,  1362,  1142,
    1643,  2574,  1996,  1997,  1998,  2602,  1999,  2000,  2001,  2002,
    2003,  2004,  1994,    92,  1556,   647,   483,   657,  1559,  1456,
    1568,  2931,   531,   658,   799,  2001,  2002,  2003,  2004,  1184,
       3,     4,  2263,   561,  2294,  1949,  1950,   574,  2654,  1455,
    1958,  1643,  1643,  2226,  1477,  1959,  1911,   804,   598,  2230,
    2452,  1185,   978,  1455,   804,  1053,   731,  2457,   979,  1455,
     638,   978,   639,  2604,  1305,  1186,  2811,   979,   978,  2092,
    2742,  1505,   480,   728,   979,   661,   981,    49,  1196,  1197,
    1453,  1834,  1995,   662,  2040,  2028,  1687,   648,  1794,   560,
     503,  1843,   533,    26,   532,   578,  1960,  2317,  2318,  2319,
    2320,   480,   553,  2083,   640,   487,   641,  1674,  1479,  1300,
      26,  2041,  2083,   592,   592,   595,   599,  2083,  1456,  2102,
    2083,   480,   480,   480,   822,   480,   480,   612,  1455,    31,
    1918,  2146,   663,  2147,  1245,  1807,  1863,  1864,  1865,  3013,
    2083,  1245,  1506,  2303,  1138,   719,    31,  1202,  1203,   480,
     741,  1940,  1446,  1941,  2389,  2182,  1943,  1484,  1179,  1180,
    2852,  2148,  1842,  1447,   980,  2607,   488,   620,   804,   804,
      33,  1487,  2264,   980,  2099,  2173,   649,  2170,  1184,  1453,
     980,  1853,  2265,    34,  2671,  1446,  1860,    33,  2764,  1507,
    1202,  1203, -1732, -1732,   600,  1516,  1449,  2862,   480,   728,
    1185,   487,   480,   480,  1516,   978,  1915,    35,  2608,   547,
    2688,   979,   650,   480,  1188,  2689, -1733, -1733,  2846,  1310,
    2125,    36,   812,  2214,  2609,  2850,  2218,  2083,  1313,  2042,
     814,  1456,  1845,  1818,  2043,   731,   815,  1848,    36,  2390,
     821,   975,  1360,  1989,  1889,  1456,  2174,   651,  1990,  1991,
    1992,  1456,   719,  1369,   649,  1245,  1245,  1206,  1207,  2083,
    1053,   816,   488,  1386,  1387,  2297,  1393,  1053,   817,   606,
     606,  1795,   606,    45,  2748,   937,  1480,  1996,  1997,  1998,
    1173,  1999,  2000,  2001,  2002,  2003,  2004,  1957,  1053,    45,
     650,  1961,  1453,  1962,   652,   628,   922,  -694,   805,   629,
    1206,  1207,  1182,    45,   728,  2391,  1453,  2392,   978,   594,
     928,  2806,  1453,   805,   979,  2335,   743,   980,   981,   944,
    1456,  2610,   604, -1735, -1735,  2199,  2017,   981,  2611,  2806,
   -1736, -1736,  1220,   601,   981,    45,   945,   491,  1927,   492,
      26,   947,  1510,  1512,  2797,  1513,  1643,  1643,  1643,  1643,
     728,  1514,  1643,  1643,  1643,  1643,  1643,  1643,  1643,  1643,
    1643,  1643,  2083,  2038,   495,  2016,    26,  2018,  2019,   982,
    1634,  1590,   652,   983,  1591,  2044,    31,  1455,  1008, -1738,
   -1738,  1453,   983,   956,  1964,  1012,  2045,  2908,   957,   983,
    2087,  2336,   948,  1139,  1592,  -120,  1905,  1593,  1906,  2524,
    -120,  2083,    31,   984,   954,  1300,  1643,  1643,   978,  2236,
    2401,   969,  1009,  2409,   979,   480,  2155,    33,  2157,  1013,
     980,   731,   731,   970,  2336,  2337,   918,   919,   971,   921,
      34,   719,  1505,   491,  2383,   492,   978,  2062,   972,  2063,
    2888,  2338,   979,    33,   973,  1173,  2064,   534,  2065,  1994,
     977,  2339,  1753,  2474,    35,  1229,    34,   958,  2337,  1877,
     495,   989,  1878,  1182,  2400,  3006,  2408,   731,  1796,  -120,
     985,   981,   991,  1919,  2558,  1925,  1593,  2967,  1926,   985,
      35,   804,  2983,  2984,  2339,  2340,   985, -1739, -1739,  2083,
    1895,   992,   990,  2652,   535,  2178,  2985,  1139,  2228,  2229,
     801,  1007,  1952,  2647,  2196,  1953,   959,    49,  2161,  1011,
     480,  2162,   480, -1740, -1740,   480,   480,  2205,  -120,  1995,
     980,   634,  1806,   632,  1143,   480,   983,   480,   480,   480,
     480,   480,   480,   480,    49,   635,   636,  2167,  2369,  3016,
    2168,  1144,   993,    87,  2220,  1147,  2370,  1591,   980,  2371,
    1507,  2374,  1151,   480,  2375,   480,   984, -1741, -1741,  3020,
     731,   480,   480,   480,   480,   480,  1139, -1742, -1742,  1456,
     480,   480,  2341,  2562,   981,   480,  2565, -1743, -1743,   480,
     656,  1574,   480,   480,   480,   480,   480,   480,   480,   480,
     480,  2485,  2505,   480,  1878,  2506,  1149,   487,  2525,  2676,
     480,  1593,  1593,  1053,  2743,  2341,  1139,  2744,  1617,   740,
    2771,  1152,  2674,  1878, -1744, -1744,  2799,   719,   719,  1593,
   -1219,  2802,  1160,   985,  2803,   480,  1162,  2455,  2819,   983,
    1453,  2820,  2823,   994,  2841,  2820,  2878,  2842,  2879,  2842,
     480,  1593,   936,  2891,  2099,  1315,  2820,  2913,  1316,  1167,
    2914,   480,   480,  1731,  2557,   728,  2560,   821,   488,   984,
    1989, -1745, -1745,   719,  1596,  1990,  1991,  1992,   592,   953,
    2937,   955,   805,  2938,   981,  2409,  2976,   598,  1323,  2820,
    2996,  2587,  2527,  2842,   995, -1759,   731,  1797,  2382,  1818,
    2384,  -121,   996,  2284,  1171,  1139,  -121,  1139,  1174,  1746,
   -1746, -1746,   981,  2234,   997,    88, -1747, -1747,    26,  1175,
    1325,    26,  1888,    89,  1996,  1997,  1998,  1177,  1999,  2000,
    2001,  2002,  2003,  2004,  1191,  1851,   985,  2547,   728,   983,
   -1749, -1749,   991, -1750, -1750,   998,  1053, -1751, -1751,   480,
     480,  2547,   480,  2577,    31,   599,   728,    31,    90, -1752,
   -1752,   992,  1178,  1858, -1753, -1753,   719,   983,    45,  1852,
    1139,  1596,  2251, -1754, -1754,  -121, -1756, -1756, -1758, -1758,
    2798,  1053,   728,  1495,  1496,  1780,  1781,   480,  2350,   728,
    2258,  1896,  1000,  -172,  -172,    33,  1190,  1859,    33,  1204,
    1205,   731,  -176,  -176,  2458,    91,  1834,  1193,    34,  2948,
    2949,    34,   993,   728,  1001,  1225,  2280,    45,   594,  -175,
    -175, -1759,    26,  2285,  -121,  1206,  1207,  1228,   804,  1374,
    1376,  1231,    35,   600,  1003,    35,   985, -1759,  2503,   491,
    2473,   492, -1759,   804,  1232,  1053,    36,   731,  1234,    36,
    1263,  1235,   480,  1253,  1264,  1268,  -314,   480,    31,  1266,
     604,  -321,  1271,   494,   985,  1272,   495,   619,  2504,   622,
    1274,   626,  1273,  2620,  1275,    36,  1994,  1277,  1643, -1759,
      45,  -198,  -199,  -311,   595,  3005,  -312,  1278,  1279,  -315,
    -313,  1281,   719,   480,   480,   480,  1282,  1283,   480,    33,
    1284,  1285,  1286,   994,  1287,  1288,   480,   480,   480,   480,
    1289,  1306,    34,  1293,  2769,  1245,   480,  1309,  1351,  1356,
     480,  1956,  1354,   480,  1357,  1372,  1381,  1382,  1385,  1421,
    1245,  2099,   728,   595,  1334,   957,    35,   959,  1419,   480,
     480,  1426,  2994,  2480,   480,  1430,  1995,  1451,  1452,  1453,
      36,  1458,  1459,  1460,   995,  1464,  1476,  1471,   480,  1472,
    1486,   480,   996,   480,  1491,  1499,  2449,  1498,  1643,  1503,
     821,  1508,   601,  1989,   997,  1509,  1516,  2236, -1759, -1759,
   -1759,  1517,  1519,   480,  1522,  1523,  1524,  1527,  1533,   822,
    1540,  1542,  1543,  1548,   480,  2081,  1142,   719,   728,  1552,
    1549,  1553,  1554,  1555,  1563,   998,  1598,  1316,  1589,  1183,
    1603,  1662,  1664,   480,  1668,  1596,  1666,  2629,  2630,  1667,
     477,  1683,   634,  1669,   632,  1690, -1759,  1701,   480,   480,
    1702,  1704,  2502,   592,  1726,    49,   635,   636,  1643,   595,
    1725,  1740,  1754,   719,  1747,   480,  2081,   599,  1759,  1769,
    1771,  1770,  1000,  1791,  1772,  1773,  1774,  1790,  1793,  1812,
    1808,  1813,   480,  1814,   600,  1875,  1879,  1891,  1883,   728,
    1892,   477,  1893,  1894,  1001,  1912,  1908,  1913,  1914,  1139,
    1139,  1139,  1916,  1921,  1920,  1922,  1917,  1942,  1923,    45,
    1924,  1931,  1932,  1944,  1003,  1945,  1946,  1954,  1965,  1972,
     478,  1977,  1966,  1300,  2039,   504,  1974,  2455,  1975,   504,
    1976,  2034,  1978,  2060,   549,   549,   552,   504,   557,  1982,
    1053,   557,  2085,  1979,   557,   583, -1759,  1276,   504,   504,
    1981,  1985,  2007,  1341,  1342,  1343,  1344,  1345,  1346,  2008,
    2013,  1996,  1997,  1998,  2014,  1999,  2000,  2001,  2002,  2003,
    2004,  2046,   731,  2021,  2055,  2056,   557,  2032,  2058,  2059,
    2094,  -177,  -178,  2105,  2106,  1298,   480,  2109,  2114,  2108,
    2111,  2121,  2126,  2163,  2131,  2128,  2129,  2133,  2134,   728,
    2137,   583,   504,   583,   583,   583,  2141,  2154,  2156,  2169,
    2175,  2176,  2177,  2183,  2184,  2186,  2185,  2194,  2208,  2195,
    2198,  2211,   804,  2215,  2216,  2219,  2212,  1139,   728,  2223,
    2250,  1621,  2232,  2628,  1896,  2225,  2233,  2189,  2235,  1622,
    1623,  1624,   480,  2242,  2010,   731,  1989,  2009,  2281,  2282,
    2286,   480,  2200,  2283,   480,   604,   604,   480,   604,  1479,
     805,  2287,  2301,   731,   480,   480,   480,   480,  2302,  1995,
     480,   480,   480,   480,   480,   480,   480,   480,   480,   480,
    2314,  2315,  2299,   480,   480,  2305,   637,   480,   595,   731,
    2932,  2067,  2326,  2348,   480,  2352,   731,  2313,  2334,   480,
    2357,  2358,   728,  2361,  2363,  2366,  2368,  2381,   480,  1245,
    2372,   480,  2388,   480,  2387,  2394,  2240,  2396,  2241,   595,
     731,   480,  2246,  2247,   480,   480,  2470,  2471,  2412,   480,
     480,  2472,  2476,  2487,  2483,  2484,   595,  2488,  1560,  2495,
    1561,  2501,  1878,  2518,  2512,   480,  2081,   480,  2081,  2499,
    2548,  2509,  2516,  2515,  2553,  2554,  2517,  2561,  2519,   480,
    2533,  2544,  2567,  2545,  2551,  2566,  2568,  2569,   719,   -83,
    2571,   477,  2590,   477,  2583,  2588,  2589,  2594,  2618,  2619,
     927,  2623,  2645,   -83,  -716,   480, -1732,  2636,   -83,  2646,
   -1733,  2746,  2637,  2656,  2648,  2665, -1734, -1735,  2847,  2669,
    2672,  2663,   480,  2856,  2455, -1736, -1737, -1738,  2700,  2635,
   -1739, -1740,  2723, -1741,  2730, -1742, -1743,   976,   821,  2728,
    2736,  1989,   728, -1744, -1745, -1746,  1990,  1991,  1992, -1747,
   -1749, -1750, -1751,  2738,  2754, -1752,  1139,   -83, -1753,  2456,
    1139,   719,  1139,  2528, -1754, -1755, -1756, -1757, -1758,  2649,
    1154,  1157,  1158,  1159,  2668,  -717,  2449,   -83,  2673,   719,
     728,  2687,  2705,  2757, -1759, -1759, -1759,  2727,  1999,  2000,
    2001,  2002,  2003,  2004,  2740,  2758,  2745,  2759,  2761,  2881,
    1315,  2760,  2477,  1316,  2768,   719,  2770,  2775,  1318,  1319,
    1320,   728,   719,  2911,   728,  2776,  2790,  2779,  2791,  2800,
    2804,  2812,  2813,  2828,  2814,   731,   -83,  2496,  2816,  2497,
    2098,  2832,  2824,  1323,  2826,   -83,   719,  2835,  2838,  2854,
    1324,  2858,   480,  2860,  2869,  2821,  2451,  2892,  2821,  2894,
    2863,  2875,  2874,  2876,  2880,  2884,  2896,  2885,  2893,    45,
    2897,  2899,  2910,  2753,  2912,  1325,  1811,  2917,  2916,  2919,
    2922,  2923,  2859,  2189,  2928,  2929,  1819,  2924,  1822,  2930,
    2535,  1833,  2939,  2940,  2941,  2943,    45,  1837,  2946,  1839,
     480,   480,  2847,  2954,  2975,   480,   731,  2960,  2977,  2964,
     480,  1846,  2978,   480,   480,  2987,  1849,  2980,   480,  2990,
    1854,  1855,  1856,  1857,  2992,  1861,  1862,  2998,  3003,  2988,
     583,  2989,  3004,  3014,   644,  3015,  3017,   645,   480,  2081,
    2377,  3022,   480,  2081,  1383,   504,  1427,   949,  2097,  1364,
    1789,  1416,  2901,  1415,  2887,  2981,  1766,  1994,  2107,  2904,
    2356,  1691,  2942,  2895,   477,   719,  2572,  2834,   477,  1788,
     480,  2329,   645,   504,   504,  2543,  1326,  2110,  2559,  2818,
    1420,  2325,  2883,  2882,   -83,  2889,  2576,  2890,  2578,   549,
    1607,  2726,  1327,  1609,  2944,  1613,  2945,  1328,  1139,  1614,
    1730,  2974,  2030,  2100,  1874,  2053,  1597,   480,   915,   915,
     557,   557,  1969,   557,  2051,  2575,   731,   917,  2088,  1329,
    1330,  2355,  1749,  2152,   583,  2411,  1838,  1995,  2415,   728,
     721,   719,  2197,   504,  1331,  1625,  1626,  1627,  2956,  1628,
    1629,  1630,  1631,  1632,  1633,  2456,  3012,   628,  2573,  2853,
     947,   629,  2993,  2986,  1443,  2789,  1377,  2159,  2136,   583,
    2459,   583,    45,  2449,  2494,  2991,  2953,  2951,  2132,  1557,
    1536,  2909,  1332,  2376,   821,  1333,  2579,  1989,  2729,  2950,
    1751,  2486,  1990,  1991,  1992,  1569,  1963,  2626,  2877,  1334,
    2192,  2239,  2670,  2475,   583,   583,   583,   583,     0,     0,
    1577,     0,   719,  1428,     0,  2653,     0,  1434,   991,     0,
     804,  2599,     0,     0,     0,     0,   480,  2600,     0,   731,
    1461,     0,   480,     0,     0,     0,     0,   992,     0,     0,
    2601,   480,   480,     0,     0,   480,     0,     0,     0,     0,
       0,  1485,     0,     0,     0,  1578,     0,     0,   480,  2081,
       0,     0,     0,     0,     0,     0,    45,   480,  2081,  2602,
       0,  2603,   480,  2081,     0,   480,  2081,     0,     0,     0,
       0,  1579,   480,   480,   477,  2650,     0,     0,   993,     0,
       0,  1336,     0,   477,     0,   480,  2081,   480,   477,  1580,
       0,   477,     0,  1581,     0,     0,     0,  1245,     0,     0,
       0,     0,     0,     0,     0,     0,   480,     0,     0,   721,
       0,   477,   719,     0,     0,  1582,     0,  2604,  1583,     0,
       0,     0,  1996,  1997,  1998,   722,  1999,  2000,  2001,  2002,
    2003,  2004,     0,  1584,     0,   487,     0,     0,     0,  2456,
       0,   719,     0,     0,     0,  2404,  2605,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1219,     0,
    1265,     0,  2725,     0,  2773,     0,     0,     0,     0,   994,
       0,     0,   480,  2081,  1298,     0,   480,   731,     0,     0,
       0,  1337,  1518,  1994,  1338,  1339,  1340,  2653,  1341,  1342,
    1343,  1344,  1345,  1346,     0,     0,   488,     0,   477,     0,
     480,     0,     0,     0,   480,  2081,   595,     0,   731,     0,
       0,   731,     0,   724,  2606,   719,   721,   480,     0,  2607,
     995,     0,     0,  1298,     0,  1585,  2451,  1304,   996,     0,
     477,     0,   480,  1586,  2207,   480,     0,     0,     0,     0,
     997,  1691,     0,     0,  1139,     0,     0,     0,  1139,   480,
     489,     0,     0,  1995,     0,     0,     0,  2057,     0,     0,
       0,     0,  2608,     0,     0,  1567,     0,     0,     0,     0,
     583,   998,     0,  2074,     0,     0,  1587,     0,  2609,     0,
       0,     0,     0,     0,     0,     0,     0,    45,   504,   504,
       0,     0,     0,     0,  2871,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   722,     0,     0,   480,  2081,     0,
       0,     0,     0,     0,     0,     0,   583,   583,  1000,  1432,
     490,   583,  1442,     0,  2074,     0,     0,     0,   480,   594,
     480,     0,   480,   477,   583,   719,   480,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,   480,  2081,     0,     0,
       0,   583,     0,  2902,     0,   583,     0,     0,     0,     0,
    1003,  2865,     0,     0,   480,     0,     0,   491,     0,   492,
       0,     0,   477,   719,     0,  2610,     0,     0,     0,     0,
       0, -1537,  2611,     0,   480,   493,     0,  1739,     0,     0,
       0,   494,   724,     0,   495,   721,     0,   480,     0,     0,
       0,     0,     0,     0,   719,     0,     0,   719,  1748,     0,
    1750,   722,     0,     0,     0,     0,  2456,     0,  1139,   725,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   480,  2081,     0,   480,   480,     0,
       0,  2965,     0,     0,     0,     0,     0,     0,  1996,  1997,
    1998,  1784,  1999,  2000,  2001,  2002,  2003,  2004,     0,     0,
     477,     0,     0,     0,     0,     0,     0,     0,  2379,     0,
       0,     0,   480,     0, -1537,     0,     0,     0,     0,    45,
       0,     0,     0,     0,     0,     0,     0,     0,  1500,     0,
       0,     0,     0,  2413,     0,     0,   583,     0,     0,   724,
       0,     0,     0,  2451,     0,  1530,     0,     0,  2460,  2461,
    2462,  2463,  2464,  2465,  2466,  2467,  2468,  2469,   480,     0,
       0,     0,     0,     0,     0,     0, -1537,     0,     0,     0,
       0,     0,     0,     0,  1547,     0,  1885,  1886,     0,     0,
   -1537,     0,     0,     0,     0, -1537,     0,     0,     0,     0,
   -1537,     0,     0,     0,     0,     0,     0,     0,  1298, -1537,
       0,     0,     0, -1537,     0,     0,     0,     0,     0,   645,
     645,     0,   504,   504,     0,   504,   645,     0,     0,   583,
       0,   721,   721,     0,     0,     0,     0,     0,     0,  1298,
     722,     0,     0,     0, -1537,     0,     0,     0,   725,     0,
       0,     0,     0,     0,  2324,     0,  2327,     0,     0,     0,
       0,     0,   719,     0, -1537,     0,     0,     0,     0,     0,
     -39,     0,     0,     0,     0,  1560,  1636,   721,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1661,     0,     1,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     2,
       0,     3,     4,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1537,     0,     0, -1537,     5,     0,   645,
       0,     0, -1537,     0,     0,     0,     6,     0,   724,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     7,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     8,
     915,   583,     0,     0,     0,   725, -1537,     0,     0,     0,
       0,     9,     0,    10,     0,     0,     0,     0,     0,     0,
     721,     0,   583,     0,   583,     0,     0,    45,     0, -1537,
       0,    11,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    12,     0, -1539,     0,     0,
       0,     0,    45,     0,    45,    13,     0,     0,     0,     0,
       0,    14,     0,     0,  2066,   583,     0,     0,     0,    15,
       0,    16,    17,     0,  1800,  1805,   722,   722,     0,     0,
    1442,   504,     0,     0,  2067,    18,     0,     0,     0,     0,
       0,   504,  1820,   504,  1824,     0,   504,     0,     0,     0,
       0,     0,   504,     0,   504,     0,     0,     0,     0,     0,
       0, -1537,     0,     0,    19,   645,   504,     0,     0, -1537,
     645,   504,   722,     0,     0,   504,   504,   504,   504,    20,
     504,   504,     0,     0,     0, -1537,     0, -1537, -1537,     0,
   -1539,     0,     0,     0,     0,     0,   721,     0,     0,     0,
     583,   583,  1887,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,   724,   724,     0,  2074,  1898,     0,
       0,  2074,     0,     0, -1537,     0,     0, -1537, -1537, -1537,
       0,     0,     0,     0,   725,     0,     0,     0,     0,     0,
       0,     0, -1539,     0,     0,     0,     0,     0,     0,     0,
       0,    45,     0,    45,     0,     0, -1539,     0,   727,     0,
     724, -1539,     0,  2193,     0,   722, -1539,     0,     0,     0,
       0,     0,     0,  2204,  2206, -1539,     0,  2210,     0, -1539,
       0,     0,    22,     0,     0,    23,     0,     0,     0,     0,
    2747,     0,     0,     0,  2224,     0,     0,     0,     0,     0,
       0,   721,     0,   821,     0,     0,  1989,     0,     0,     0,
   -1539,  1990,  1991,  1992,    24,     0,     0,     0,     0,     0,
       0,     0,     0,    25,  1567,  2766,  2767,     0,     0,     0,
   -1539,     0,  1315,     0,     0,  1316,     0,    26,     0,     0,
       0,  2777,     0,     0,    27,     0,     0,   721,    28,     0,
       0,     0,     0,   724,   504,     0,     0,     0,    29,     0,
       0,  1304,     0,     0,     0,  1323,     0,     0,     0,    30,
      45,     0, -1759,    31,     0,     0,     0,     0,     0, -1539,
       0,     0, -1539,     0,     0,   991,     0,     0, -1539,     0,
       0,   722,     0,     0,     0,     0,  1636,  1325,     0,     0,
       0,     0,     0,     0,   992,     0,     0,     0,     0,    32,
       0,     0,     0,     0,    33,     0,     0,     0,     0,  2836,
     725,   725, -1539,     0,     0,     0,     0,    34,   583,     0,
       0,     0,     0,     0,  2084,     0,  2074,   727,     0,     0,
       0,  2074,     0,     0,  2074, -1539,  2857,     0,  2321,  2322,
    2323,    35,     0,     0,     0,   993,  2402,     0,     0,     0,
    1606,     0,   547,     0,  2403,    36,   725,  2037,   -39,  1315,
       0,     0,  1316,     0,     0,     0,     0,     0,     0,   724,
       0,     0,     0,     0,     0,  2084,     0,  2113,  2364,     0,
    2118,     0,     0,  1800,     0,     0,   722,     0, -1759,     0,
    2067,     0,  1323,     0,     0,     0,     0,     0,     0, -1759,
    1500,     0, -1759,     0, -1759,     0,     0,     0,     0, -1759,
       0,     0,  2404,     0,     0,     0,     0, -1539,     0,    45,
       0,     0,     0,     0,  1325, -1539,     0,     0,     0,     0,
       0,     0,   722,     0,   727,     0,   994,     0,     0,     0,
       0, -1539,    45, -1539, -1539,     0, -1759,     0,     0,   725,
       0,     0,     0,     0,     0,     0,  1194,  1195,     0,     0,
       0,     0,  1500,     0,     0,     0,     0,   583,     0,  2482,
       0,     0,  1995,  2074,   724,     0,  1500,   583,   583,   504,
   -1539,   583,     0, -1539, -1539, -1539,  1298,   995,     0,     0,
       0,     0,     0,     0,  2047,   996,     0,     0,   583,     0,
       0,  1334,     0,     0,     0,  1567,     0,   997,     0,  2405,
    2231,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     724,     0,     0,     0,     0, -1759,   645,     0,   583,     0,
       0,     0,  1196,  1197,     0,     0,     0,     0,   998,     0,
       0, -1759,   721,  1500,  1500,     0, -1759,     0,     0,    45,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1636,     0,     0,     0,
       0,     0,     0,     0,     0,   725,     0,     0,     0,     0,
       0,     0,     0, -1759,     0,  1000,     0,  2538,  2539,  2540,
    2541,     0,     0, -1759,     0,     0,     0,  1198,  1199,  1200,
    1201,  1202,  1203,     0,     0,  1204,  1205,  1001,    45,     0,
       0,     0,     0,   727,     0,   721,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1003,     0,  2406,
       0,     0,  2407,   721,     0,     0,     0,     0,  1334,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   583,   583,   583,   478,     0,  2084,  2333,   721,
       0,     0,     0,  2333,  2347,     0,   721,  1996,  1997,  1998,
       0,  1999,  2000,  2001,  2002,  2003,  2004,     0,     0,     0,
     725,     0,     0,     0,   898,   898,     0,     0,     0,     0,
     721,     0,   583, -1759,     0,     0,    45,     0,     0,  1244,
    1341,  1342,  1343,  1344,  1345,  1346,  1244,     0,     0,     0,
    1800,  1206,  1207,   504,  1194,  1195,     0,  1500,  1442,  1500,
       0,  1530,     0,     0,     0,     0,   725,     0,     0,     0,
   -1759,     0,     0,     0,  1453,     0,     0,   722,   504,     0,
    2414,     0,     0,     0,     0,     0,     0,  1048,  1055,     0,
       0,     0,     0,   504,   504,   504,   504,   504,   504,   504,
     504,   504,   504,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1898,
       0,     0,     0,   583,     0,     0,     0,     0,     0,     0,
    1196,  1197,     0,  1312,     0,     0,  1442,     0,     0,   727,
     727,     0,     0,     0,     0,     0,     0,  1530,     0,   721,
     722,     0,     0,     0,     0,     0,     0,     0,  1244,   583,
    1244,  1244,  1208,  1209,     0,   724,  1500,     0,   722,     0,
   -1759,     0,     0,     0,     0,     0,     0,  1341,  1342,  1343,
    1344,  1345,  1346,     0,     0,   727,     0,     0,     0,     0,
       0,     0,     0,     0,   722,  1198,  1199,  1200,  1201,  1202,
    1203,   722,     0,  1204,  1205,     0,     0,     0,     0,     0,
     504,     0,     0,     0,     0,   721,  2520,     0,     0,  2755,
       0,     0,     0,     0,     0,   722,     0,     0,  1244,     0,
       0,  1244,  1244,     0,     0,     0,     0,     0,   724,  2537,
       0,   583,   583,   583,   583,     0,     0,     0,  2333,  2347,
       0,  2333,     0,     0,  2546,     0,   724,  2774,  2084,     0,
       0,     0,  2084,     0,     0,     0,     0,     0,  2564,     0,
       0,  1048,     0,     0,     0,  2795,     0,     0,   727,     0,
       0,     0,   724,     0,     0,  1636,   721,     0,  1269,   724,
     915,     0,     0,     0,     0,  2118,     0,     0,     0,  1800,
       0,     0,     0,     0,     0,  1442,     0,  1194,  1195,  1206,
    1207,  1500,     0,   724,     0,     0,     0,  1280,     0,   978,
       0,     0,     0,     0,     0,   979,     0,     0,     0,     0,
       0,  2627,   991,     0,     0,     0,     0,  1290,  1291,  1292,
       0,     0,  1299,     0,   722,     0,     0,     0,  2845,     0,
       0,   992,     0,     0,     0,   978,     0,     0,     0,     0,
       0,   979,     0,     0,     0,  1355,     0,     0,   991,     0,
       0,   725,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1196,  1197,  2870,     0,   992,     0,     0,
       0,     0,     0,     0,     0,     0,   721,     0,     0,     0,
    1500,     0,   993,     0,   727,     0,     0,     0,     0,     0,
     722,  1535,  1898,     0,  1392,     0,     0,     0,  1406,  1411,
    1208,  1209,  1544,  2666,  1545,   721,     0,     0,     0,  1550,
       0,   980,   724,     0,     0,     0,     0,     0,   993,     0,
    1210,     0,     0,     0,   725,     0,  1551,     0,  1198,  1199,
    1200,  1201,  1202,  1203,     0,     0,  1204,  1205,     0,  2682,
       0,     0,   725,     0,     0,     0,     0,   980,   478,  2333,
       0,     0,  2693,     0,     0,   504,  1048,  2084,  1571,  1573,
       0,   722,  2084,  1048,     0,  2084,     0,  2704,   725,     0,
    2707,     0,     0,   994,     0,   725,     0,     0,   724,   721,
       0,     0,     0,     0,  1048,  2733,     0,     0,     0,   727,
    1604,  1605,     0,     0,  1618,  1619,     0,     0,     0,   725,
       0,     0,     0,     0,   645,   504,     0,     0,     0,   994,
       0,     0,     0,   583,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   995,     0,     0,     0,     0,     0,
       0,     0,   996,     0,     0,   727,     0,     0,     0,     0,
     504,   504,  1206,  1207,   997,     0,     0,     0,     0,   724,
       0,   583,     0,  1442,     0,     0,   504,     0,     0,     0,
     995,     0,     0,     0,     0,   981,     0,     0,   996,   583,
       0,   722,  2733,     0,     0,   998,     0,     0,     0,     0,
     997,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   504,     0,     0,     0,     0,     0,     0,     0,   721,
     722,   981,     0,     0,  2084,     0,     0,     0,     0,  2707,
       0,   998,     0,     0,     0,     0,   999,     0,   725,     0,
     983,     0,  1000,  1778,  1778,     0,     0,  2831,     0,     0,
       0,     0,   915,     0,   504,     0,     0,   721,     0,     0,
       0,     0,   583,     0,  1001,     0,     0,     0,     0,     0,
    1002,     0,  1840,  1208,  1209,     0,   983,     0,  1000,   724,
       0,   504,     0,     0,  1003,   645,     0,     0,   721,     0,
       0,   721,     0,     0,   722,     0,     0,     0,     0,   583,
    1001,  1244,     0,     0,   725,     0,  1841,     0,   724,     0,
       0,  1244,     0,     0,  1244,     0,     0,     0,     0,     0,
    1003,     0,     0,     0,     0,     0,     0,   478, -1553,     0,
       0,  1601,     0,     0,     0,     0,  2886,   985,     0,     0,
     504,  1620,     0,  1637,  2704,     0,  1648,  1651,  1656,  1659,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   645,   645,   645,     0,  2733,     0,     0,     0,
       0,  1671,     0,   985,     0,   725,     0,  1675,  1676,  1677,
    1678,  1679,   724,     0,  1928,  1930,  1688,  1689,     0,     0,
       0,  1700,     0,  1442,     0,  1703,     0,     0,  1711,  1712,
    1713,  1714,  1715,  1716,  1717,  1718,  1719,     0,  2704,  1720,
    1244,     0,     0,     0,   722,     0,   898,     0,     0,  1048,
    2831, -1553,     0,     0,     0,  1244,     0,     0,     0,     0,
       0,     0,     0,     0,  1800,     0,     0,     0,     0,     0,
       0,  1752,     0,     0,     0,     0,     0,     0,  1442,     0,
       0,     0,   722,     0,  2733,     0,     0,     0,     0,     0,
     727,     0,     0,     0,     0,     0,     0,  1291,  1292,     0,
    2693,   645,     0, -1553,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   722,     0,   725,   722, -1553,     0,     0,
       0,     0, -1553,     0,     0,     0,   721, -1553,     0,     0,
       0,     0,   724,     0,     0,     0, -1553,     0,     0,     0,
   -1553,     0,     0,     0,   725,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   727,     0,     0,     0,     0,     0,     0,
     724, -1553,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   727,  1048,     0,     0,  1871,  1872,     0,  1873,     0,
       0, -1553,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   724,     0,     0,   724,     0,     0,   727,     0,     0,
       0,  2090,     0,     0,   727,     0,     0,  1048,   725,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2103,  2103,     0,     0,     0,     0,     0,     0,   727,     0,
   -1553,     0,     0, -1553,     0,     0,     0,     0,     0, -1553,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1048,     0, -1553,     0,     0,     0,     0,  1967,     0,
       0,     0,     0,  1973,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1553,     0,  1315,     0,
       0,  1316,     0,     0,     0,  1317,  1318,  1319,  1320,     0,
       0,   722,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1988,     0,  1321,     0,     0,     0,     0,   725,  1349,
       0,  1323,  1656,     0,  1656,  1656,     0,     0,  1324,     0,
       0,     0,  2026,     0,     0,     0,  2029,   727,     0,  2031,
       0,  2067,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1325,     0,     0,   725,     0,     0,     0,
    1349,     0,     0,     0,     0,     0,  2227,     0, -1553,     0,
       0,     0,     0,     0,  2049,     0, -1553,  2052,     0,  2054,
       0,     0,     0,     0,     0,     0,     0,   725,     0,   724,
     725,     0, -1553,     0, -1553, -1553,     0,     0,     0,     0,
       0,     0,     0,   727,     0,     0,     0,  1315,     0,     0,
    1316,     0,     0,     0,  1317,  1318,  1319,  1320,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1392,
       0, -1553,  1321,     0, -1553, -1553, -1553,     0,     0,     0,
    1323,     0,     0,     0,  1411,  1718,     0,  1324,     0,     0,
       0,     0,     0,  1315,  1326,     0,  1316,     0,     0,     0,
       0,  1318,  1319,  1320,     0,     0,     0,     0,     0,  1349,
    1327,     0,  1325,     0,   727,  1328,  1349,     0,  2130,     0,
       0,     0,     0,     0,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,  1324,     0,     0,     0,  1329,  1330,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1331,     0,     0,     0,     0,     0,  1325,     0,
       0,     0,     0,     0,     0,     0,     0,  1314,     0,     0,
       0,     0,  1315,     0,     0,  1316,  1048,     0,     0,  1317,
    1318,  1319,  1320,     0,     0,     0,     0,     0,     0,     0,
    1332,     0,     0,  1333,     0,     0,     0,  1321,     0,     0,
    1322,     0,     0,     0,     0,  1323,     0,  1334,     0,     0,
    1335,     0,  1324,  1326,     0,     0,     0,     0,     0,     0,
       0,     0,  2222,     0,   727,     0,     0,     0,     0,  1327,
       0,     0,     0,     0,  1328,   725,     0,  1325,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1244,     0,   727,     0,     0,  1329,  1330,     0,  1326,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1331,     0,     0,     0,  1327,     0,     0,  2249,     0,
    1328,     0,     0,     0,     0,     0,     0,  2253,     0,     0,
    2254,     0,     0,  2256,     0,     0,     0,     0,     0,  1336,
       0,     0, -1759, -1759,     0,     0,     0,     0,     0,  1332,
       0,     0,  1333,     0,     0,  1315,     0,  1331,  1316,  2276,
    2277,     0,     0,  1752,     0,     0,  1334,   727,     0,  1335,
    1349,     0,     0,     0,     0,  2288,     0,     0,  1326,     0,
       0,  1349,     0,     0,  2295,  1644,     0,  2298,  1323,  2300,
       0,  1349,  1349,  1349,  1327, -1759,     0,  2304, -1759,  1328,
    1349,     0,     0,     0,     0,  2311,  2312,     0,     0,     0,
       0,     0,  1334,     0,     0,     0,     0,     0,     0,     0,
    1325,  1329,  1330,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2351,  1331,     0,     0,  1337,
       0,     0,  1338,  1339,  1340,     0,  1341,  1342,  1343,  1344,
    1345,  1346,     0,     0,     0,     0,  1349,     0,  1336,  1980,
       0,  2365,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1332,     0,     0,  1333,  2378,     0,
       0,     0,     0,     0,     0,     0,  1315,   727,     0,  1316,
    2306,  1334,     0,  1349,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1336,     0,     0,  1349,     0,     0,
       0,     0,  1349,     0,     0,     0,     0,     0,     0,  1323,
       0, -1759,     0,     0,     0,   727, -1759,  1244,     0,     0,
       0,     0,  1244,     0,     0,     0,     0, -1759,     0,     0,
       0,     0, -1759,     0,     0,     0,     0,     0,     0,     0,
       0,  1325,     0,     0,     0,     0,   727,     0,  1337,   727,
       0,  1338,  1339,  1340,     0,  1341,  1342,  1343,  1344,  1345,
    1346,     0,     0,  1571,  1573,  1665,     0,     0,     0, -1759,
       0,     0,     0,  1336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2508,     0,
       0,     0,     0,     0,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,     0,
       0,  2309,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2521,  2522,     0,     0,
       0,  2523, -1759,     0,     0,     0,  2526,     0,     0,  2529,
    2530,     0,     0,     0,  2534,     0,     0,     0, -1759,     0,
       0,     0,     0, -1759,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1337,     0,     0,  1338,  1339,  1340,     0,
    1341,  1342,  1343,  1344,  1345,  1346,     0,     0,     0,     0,
       0,     0,  1349,     0,     0,     0,     0,     0,     0,     0,
   -1759,     0,     0,     0,     0,     0,   898,     0,     0,     0,
       0,  1349,     0,     0,     0,     0, -1759,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1349,     0,
    1644,  1644,     0,  2005,     0,  1644,     0,     0,     0,  1349,
    1571,  1573,  1349,  2621,     0,     0,     0,  1349,     0,     0,
    1349,  1244,     0,     0,   727,  1334,     0,     0,     0,     0,
       0,     0,  1349,     0,     0,     0,  1349,  1349,  1349,  1349,
    1349,     0,     0,     0,     0,     0,  1644,  1644,     0,  1349,
    1349,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1349,     0,     0,  1349,     0,     0,     0,     0,     0,
       0,     0,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,     0,     0,     0,     0, -1759,     0,     0,     0,
       0,     0,     0,  1341,  1342,  1343,  1344,  1345,  1346,     0,
       0,     0,     0,     0,     0,     0,  1315,     0,     0,  1316,
       0,     0,     0,  1349,     0,     0,     0, -1759,     0,     0,
       0,     0,     0,     0,     0,     0,  1315,     0,  2026,  1316,
       0,     0,     0,  1317,  1318,  1319,  1320,  2677,  2678,  1323,
       0,  2679,     0,     0,     0,     0, -1759,     0,     0,     0,
       0,  1321,     0,     0,     0,     0,     0,     0,     0,  1323,
       0,     0,     0,     0,     0,     0,  1324,     0,     0,     0,
       0,  1325,     0,     0,     0,     0,     0,     0,  2721,  2722,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1325,     0,  2737,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1315,     0,     0,  1316,     0,     0, -1759,  1317,  1318,
    1319,  1320,     0,     0,  1341,  1342,  1343,  1344,  1345,  1346,
       0,     0,  1349,  1349,  1349,     0,  1321,     0,     0,  2292,
    1315,  2310,     0,  1316,  1323,     0,     0,  1317,  1318,  1319,
    1320,  1324,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1321,     0,     0,     0,     0,
       0,     0, -1759,  1323,  1315,     0,  1325,  1316,     0,     0,
    1324,  1317,  1318,  1319,  1320,     0,     0,     0, -1759,     0,
       0,     0,  1326, -1759,     0,     0,     0,     0,  1244,  1321,
       0,     0,     0,     0,     0,  1325,  2815,  1323,  1327,     0,
       0,     0,     0,  1328,  1324,     0,     0,     0,     0,     0,
       0,     0,     0,  1299,     0,     0,     0,     0,  1349,     0,
   -1759,     0,     0,     0,  1349,  1329,  1330,     0,   898,  1325,
       0,  2837,     0,     0,     0,     0,     0,  2005,  2005,  1349,
    1331,  1644,  1644,  1644,  1644,  2851,     0,  1644,  1644,  1644,
    1644,  1644,  1644,  1644,  1644,  1644,  1644,  2005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1326,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,  1349,  1332,     0,
    1349,  1333,  1349,  1327,     0,     0,  2005,  2005,  1328,     0,
       0,     0,     0,     0,     0,  1334,  1326,     0,  1335,     0,
    1349,  1644,  1644,  1349,     0,  1349,     0,     0,     0,     0,
    1329,  1330,  1327,     0,     0,     0,     0,  1328,     0,     0,
       0,     0,     0,     0,     0,  1331,     0,     0,  2721,     0,
    1326,     0,  2898,     0,     0,     0,     0,     0,     0,  1329,
    1330,     0,     0,     0,     0,     0,  1327,     0,     0,  1315,
       0,  1328,  1316,     0,  1331,     0,     0, -1759, -1759, -1759,
    2921,     0,     0,  1332,     0,     0,  1333, -1759,     0,     0,
       0,     0,     0,  1329,  1330,     0,     0,     0,     0,     0,
    1334,  1349,  1323,  1335,     0,     0,     0,  1336,  1331,  1324,
       0,     0,  1332,  2721,     0,  1333,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1334,
       0,     0,  1335,     0,  1325,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,  1333,
       0,     0,     0,  2971,  2971,     0,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1759,  2971,     0,
       0,     0,  1336,  1349,  1341,  1342,  1343,  1344,  1345,  1346,
       0,     0,     0,     0,     0,     0,     0,  1337,     0,     0,
    1338,  1339,  1340,     0,  1341,  1342,  1343,  1344,  1345,  1346,
    1349,  1336,  1497,     0,  1349,  1349,     0,  1349,     0,     0,
    2005,  2005,  2005,  2005,  2971,  1326,     0,  2005,  2005,  2005,
    2005,  2005,  2005,  2005,  2005,  2005,  2005,  1349,  1349,     0,
       0,  1327,     0,     0,  1315,  1336,  1328,  1316,     0,  1349,
       0,     0,     0,     0,     0,     0,  1349,     0,     0,  1349,
       0,  1349,     0,     0,     0,  1349,     0,     0,  2005,  2005,
       0,     0,  1349,  1349,     0,     0,     0,  1323,     0,     0,
       0,     0,  1337,  1331, -1759,  1338,  1339,  1340,     0,  1341,
    1342,  1343,  1344,  1345,  1346,     0,     0,     0,     0,  1665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1325,
       0,  1337,  1349,     0,  1338,  1339,  1340,     0,  1341,  1342,
    1343,  1344,  1345,  1346,     0,     0,  1349,     0,  2033,     0,
       0,   506,     0,     0,     0,     0,     0,     0,  1334,  1349,
       0,     0,     0,     0,     0,  1337,     0,     0,  1338,  1339,
    1340,     0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,
       0,     0,  2252,  1315,     0,     0,  1316,     0,     0,     0,
    1317,  1318,  1319,  1320,     0,     0,     0,     0,     0,  2531,
       0,     0,     0,     0,   507,     0,     0,     0,  1321,     0,
       0,     0,  1755,     0,     0,     0,  1323,     0,     0,     0,
     508,     0,     0,  1324,     0,     0,     0,     0,     0,     0,
   -1759,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1759,     0,  1325,     0,
    1336, -1759,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   509,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   510,     0,     0,     0, -1759,  1349,
       0,     0,     0,  1644,     0,     0,   511,     0,     0,  1756,
       0,   512,  1349,  1349,  1349,     0,     0,  1349,     0,     0,
    1349,  1349,     0,     0,     0,  1349,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   513,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,     0,     0,     0,  1326,
    1337,     0,     0, -1759, -1759, -1759,     0,  1341,  1342,  1343,
    1344,  1345,  1346,     0,     0,  1327,     0,     0,     0,     0,
    1328,     0,     0,   514,     0,     0,     0,   515,     0,     0,
       0,     0,     0,  1644,     0,     0,     0,     0,     0,     0,
       0,     0,  1329,  1330,     0,     0,     0,     0,     0,     0,
       0,     0,  1349,     0,     0,     0,     0,  1331,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1759,     0,     0,     0,     0,
     516,     0,     0,     0,     0,  1332,     0,     0,  1333,     0,
       0,     0,  2005,  1644,   517,     0,     0,     0,  1349,  1349,
    1349,     0,  1334,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   518,     0,     0,
     519,     0,     0,     0,     0,     0,     0,     0,   520,     0,
       0,   521,  1349,  1349,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1349,     0,
     522,     0,     0,     0,     0,     0,     0,     0,     0,  2005,
       0,     0,     0,   523,     0, -1759,     0,     0,     0,     0,
     524,     0,  1341,  1342,  1343,  1344,  1345,  1346,     0,   525,
       0,     0,     0,     0,  1336,   526,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2005,     0,
     527,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1349,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1760,     0,     0,     0,     0,  1349,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1349,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,  1015,
     818,   547,   819,   820,   821,   822,   823,     0,     0,  1349,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,  1016,   102,   103,   104,     0,     0,     0,
       0,   824,  1349,     0,   105,   106,     0,   107,   108,   109,
    1017,   111,   112,   113,   114,   825,  1018,   826,   827,     0,
     119,   120,   121,   122,   123,   124,   828,   829,   125,   126,
     830,   831,   129,     0,   130,   131,   132,   133,   832,     0,
    1019,     0,   136,   137,   138,   139,   140,   141,  1020,   143,
     144,   145,  1349,   146,   147,   148,   149,   150,   151,     0,
    1021,   153,   154,   155,   834,   835,   836,  1022,   838,   839,
     840,   157,   158,   159,   160,   161,   162,   163,   841,   842,
     166,   843,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,  1023,     0,   179,   180,
     678,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   844,   195,   196,   197,
     198,   199,   845,   846,   201,     0,   202,   203,   847,   205,
       0,   206,     0,   207,  1024,     0,  1025,   210,   211,   212,
    1026,   214,     0,   215,     0,   848,   849,   218,     0,   219,
     220,   221,   222,   223,   224,   225,  1027,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
    1028,   239,   240,   241,   242,   243,   244,   850,   851,     0,
     852,     0,   248,  1029,  1030,   251,  1031,   253,   254,   255,
     256,   257,   258,     0,     0,   259,  1032,   261,  1033,     0,
     263,   264,   265,   853,   854,   266,   267,   268,   269,   270,
    1034,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   855,
    1035,   856,   293,   294,   295,   296,   857,   297,   298,  1036,
     300,   858,   859,   302,   860,   304,   305,   306,     0,   307,
     308,     0,     0,   861,   310,   311,     0,     0,   312,   313,
    1037,   315,  1038,   862,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   863,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   864,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,  1039,   367,   368,
     369,   865,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,   866,
     387,   388,   389,   390,   391,  1040,   393,   394,   867,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,  1041,   409,   868,   411,     0,   412,   413,     0,
     414,  1042,   416,   417,   418,   419,   420,     0,   869,   870,
       0,     0,   423,   424,   871,   426,   872,   873,   428,   429,
    1043,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   875,     0,   441,   442,   443,   444,   445,
     446,   876,  1044,   448,  1045,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   877,     0,     0,     0,     0,
       0,     0,   878,   879,  1046,     0,     0,     0,     0,   881,
       0,   882,  1047,     0,     0,     0,   883,     0,   884,   885,
      93,   818,   547,   819,   820,   821,   822,   823,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,   154,   155,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,   262,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,   857,   297,   298,
     299,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    26,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,   392,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
      31,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   575,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,    34,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,    35,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,   882,  2827,     0,     0,     0,   883,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   824,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,   114,   825,   116,   826,
     827,     0,   119,   120,   121,   122,   123,   124,   828,   829,
     125,   126,   830,   831,   129,     0,   130,   131,   132,   133,
     832,     0,   833,     0,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,   153,   154,   155,   834,   835,   836,   837,
     838,   839,   840,   157,   158,   159,   160,   161,   162,   163,
     841,   842,   166,   843,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   678,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   844,   195,
     196,   197,   198,   199,   845,   846,   201,     0,   202,   203,
     847,   205,     0,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,   848,   849,   218,
       0,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   850,
     851,     0,   852,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,     0,   259,   260,   261,
     262,     0,   263,   264,   265,   853,   854,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   855,   291,   856,   293,   294,   295,   296,   857,   297,
     298,   299,   300,   858,   859,   302,   860,   304,   305,   306,
       0,   307,   308,     0,     0,   861,   310,   311,     0,     0,
     312,   313,   314,   315,   316,   862,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   863,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   864,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   865,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    26,   382,   383,   384,   385,
     386,   866,   387,   388,   389,   390,   391,   392,   393,   394,
     867,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   868,   411,     0,   412,
     413,    31,   414,   415,   416,   417,   418,   419,   420,     0,
     869,   870,     0,     0,   423,   424,   871,   426,   872,   873,
     428,   429,   874,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   875,     0,   441,   442,   443,
     444,   445,   575,   876,     0,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,    34,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   877,     0,    35,
       0,     0,     0,     0,   878,   879,     0,     0,     0,     0,
       0,   881,     0,   882,     0,     0,     0,     0,   883,     0,
     884,   885,    93,   818,   547,   819,   820,   821,   822,   823,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   825,   116,
     826,   827,  1652,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,   833,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   834,   835,   836,
     837,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,   843,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,   208,  1653,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,  1654,   259,   260,
     261,   262,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,   291,   856,   293,   294,   295,   296,   857,
     297,   298,   299,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   865,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,   392,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   868,   411,     0,
     412,   413,     0,   414,   415,   416,   417,   418,   419,   420,
       0,   869,   870,     0,  1655,   423,   424,   871,   426,   872,
     873,   428,   429,   874,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,     0,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,  -574,   102,   103,
     104,     0,     0,     0,  -574,   824,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   825,
     116,   826,   827,     0,   119,   120,   121,   122,   123,   124,
     828,   829,   125,   126,   830,   831,   129,     0,   130,   131,
     132,   133,   832,     0,   833,     0,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,   152,   153,   154,   155,   834,   835,
     836,   837,   838,   839,   840,   157,   158,   159,   160,   161,
     162,   163,   841,   842,   166,   843,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   678,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     844,   195,   196,   197,   198,   199,   845,   846,   201,     0,
     202,   203,   847,   205,     0,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,   848,
     849,   218,     0,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   850,   851,     0,   852,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,     0,   259,
     260,   261,   262,     0,   263,   264,   265,   853,   854,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   855,   291,   856,   293,   294,   295,   296,
     857,   297,   298,   299,   300,   858,   859,   302,   860,   304,
     305,   306,     0,   307,   308,     0,     0,   861,   310,   311,
       0,     0,   312,   313,   314,   315,   316,   862,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   863,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   864,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   865,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,   866,   387,   388,   389,   390,   391,   392,
     393,   394,   867,   396,  -574,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   868,   411,
       0,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,   869,   870,     0,     0,   423,   424,   871,   426,
     872,   873,   428,   429,   874,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   875,     0,   441,
     442,   443,   444,   445,   446,   876,     0,   448,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   877,
       0,     0,     0,     0,     0,     0,   878,   879,     0,     0,
       0,     0,     0,   881,     0,   882,     0,     0,     0,     0,
     883,     0,   884,   885,    93,   818,   547,   819,   820,   821,
     822,   823,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,  1388,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     825,   116,   826,   827,     0,   119,   120,   121,   122,   123,
     124,   828,   829,   125,   126,   830,   831,   129,     0,   130,
     131,   132,   133,   832,     0,   833,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,   153,   154,   155,   834,
     835,   836,   837,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   841,   842,   166,   843,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   844,   195,   196,   197,   198,   199,   845,   846,   201,
       0,   202,   203,   847,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
     848,   849,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   850,   851,     0,   852,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,     0,
     259,   260,   261,   262,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   855,   291,   856,   293,   294,   295,
     296,   857,   297,   298,   299,   300,   858,   859,   302,   860,
     304,   305,   306,     0,   307,   308,     0,     0,   861,   310,
     311,     0,     0,   312,   313,   314,   315,   316,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     864,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   865,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
     392,   393,   394,   867,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   868,
     411,     0,   412,   413,     0,   414,   415,   416,   417,   418,
     419,   420,     0,   869,   870,     0,     0,   423,   424,   871,
     426,   872,   873,   428,   429,   874,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   446,   876,     0,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,   878,   879,  1389,
       0,     0,     0,     0,   881,     0,   882,     0,     0,     0,
       0,   883,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,  2708,
     102,   103,   104,     0,     0,     0,     0,   824,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   825,   116,   826,   827,     0,   119,   120,   121,   122,
     123,   124,   828,   829,   125,   126,   830,   831,   129,     0,
     130,   131,   132,   133,   832,     0,   833,     0,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   152,   153,  2709,   155,
     834,   835,   836,   837,   838,   839,   840,   157,   158,   159,
     160,   161,   162,   163,   841,   842,   166,   843,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   678,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   844,   195,   196,   197,   198,   199,   845,   846,
     201,     0,   202,   203,   847,   205,     0,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,  2710,   849,   218,     0,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   850,   851,     0,   852,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
       0,   259,   260,   261,   262,     0,   263,   264,   265,   853,
     854,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   855,   291,   856,   293,   294,
     295,   296,   857,   297,   298,   299,   300,   858,   859,   302,
     860,   304,   305,   306,     0,   307,   308,     0,     0,   861,
     310,   311,     0,     0,   312,   313,   314,   315,   316,   862,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   863,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   864,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,   367,   368,  2711,   865,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,   866,   387,   388,   389,   390,
     391,   392,   393,   394,   867,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     868,   411,     0,   412,   413,     0,   414,   415,   416,   417,
     418,   419,   420,     0,   869,   870,     0,     0,   423,   424,
     871,   426,   872,   873,   428,   429,   874,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   875,
       0,   441,   442,   443,   444,   445,   446,   876,     0,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   877,     0,     0,     0,     0,     0,     0,   878,   879,
    2712,     0,     0,     0,     0,   881,     0,  2713,     0,     0,
       0,     0,   883,     0,   884,   885,    93,   818,   547,   819,
     820,   821,   822,   823,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,   843,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,   857,   297,   298,   299,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     861,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   865,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,   880,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,  1402,   547,
     819,   820,   821,  1403,   823,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,  1404,   102,   103,   104,     0,     0,     0,     0,   824,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   825,   116,   826,   827,     0,   119,   120,
     121,   122,   123,   124,   828,   829,   125,   126,   830,   831,
     129,     0,   130,   131,   132,   133,   832,     0,   833,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   834,   835,   836,   837,   838,   839,   840,   157,
     158,   159,   160,   161,   162,   163,   841,   842,   166,   843,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   678,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   844,   195,   196,   197,   198,   199,
     845,   846,   201,     0,   202,   203,   847,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   848,   849,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   850,   851,     0,   852,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   853,   854,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   855,   291,   856,
     293,   294,   295,   296,   857,   297,   298,   299,   300,   858,
     859,   302,   860,   304,   305,   306,     0,   307,   308,     0,
       0,   861,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   862,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   863,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   864,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   865,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   866,   387,   388,
     389,   390,   391,   392,   393,   394,   867,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   868,   411,     0,   412,   413,     0,   414,   415,
     416,   417,   418,   419,   420,     0,   869,   870,     0,     0,
     423,   424,   871,   426,   872,   873,   428,   429,   874,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   875,     0,   441,   442,   443,   444,   445,   446,   876,
       0,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   877,     0,     0,     0,     0,     0,     0,
     878,   879,     0,     0,     0,     0,     0,   881,     0,   882,
       0,     0,     0,     0,   883,     0,   884,   885,    93,   818,
     547,   819,   820,   821,   822,   823,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
     843,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   848,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,   857,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     865,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
       0,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
     882,  1646,     0,     0,     0,   883,     0,   884,   885,  1015,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   824,     0,     0,   105,   106,     0,   107,   108,   109,
    1017,   111,   112,   113,   114,   825,  1018,   826,   827,     0,
     119,   120,   121,   122,   123,   124,   828,   829,   125,   126,
     830,   831,   129,     0,   130,   131,   132,   133,   832,     0,
    1019,     0,   136,   137,   138,   139,   140,   141,  1020,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
    1021,   153,   154,   155,   834,   835,   836,  1022,   838,   839,
     840,   157,   158,   159,   160,   161,   162,   163,   841,   842,
     166,   843,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     678,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   844,   195,   196,   197,
     198,   199,   845,   846,   201,     0,   202,   203,   847,   205,
       0,   206,     0,   207,  1024,     0,  1025,   210,   211,   212,
    1026,   214,     0,   215,     0,   848,   849,   218,     0,   219,
     220,   221,   222,   223,   224,   225,  1027,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
    1028,   239,   240,   241,   242,   243,   244,   850,   851,     0,
     852,     0,   248,  1029,  1030,   251,  1031,   253,   254,   255,
     256,   257,   258,     0,     0,   259,  1032,   261,  1033,     0,
     263,   264,   265,   853,   854,   266,   267,   268,   269,   270,
    1034,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   855,
    1035,   856,   293,   294,   295,   296,   857,   297,   298,  1036,
     300,   858,   859,   302,   860,   304,   305,   306,     0,   307,
     308,     0,     0,   861,   310,   311,     0,     0,   312,   313,
    1037,   315,  1038,   862,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   863,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   864,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,  1039,   367,   368,
     369,   865,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,   866,
     387,   388,   389,   390,   391,  1040,   393,   394,   867,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,  1041,   409,   868,   411,     0,   412,   413,     0,
     414,  1042,   416,   417,   418,   419,   420,     0,   869,   870,
       0,     0,   423,   424,   871,   426,   872,   873,   428,   429,
    1043,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   875,     0,   441,   442,   443,   444,   445,
     446,   876,  1866,   448,  1045,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   877,     0,     0,     0,     0,
       0,     0,   878,   879,     0,     0,     0,     0,     0,   881,
       0,   882,     0,     0,     0,     0,   883,     0,   884,   885,
    1015,   818,   547,   819,   820,   821,   822,   823,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,  1017,   111,   112,   113,   114,   825,  1018,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,  1019,     0,   136,   137,   138,   139,   140,   141,  1020,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,  1021,   153,   154,   155,   834,   835,   836,  1022,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,  1024,     0,  1025,   210,   211,
     212,  1026,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,  1027,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,  1028,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,  1029,  1030,   251,  1031,   253,   254,
     255,   256,   257,   258,     0,     0,   259,  1032,   261,  1033,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,  1034,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,  1035,   856,   293,   294,   295,   296,   857,   297,   298,
    1036,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,  1037,   315,  1038,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,  1039,   367,
     368,   369,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,  1040,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,  1041,   409,   868,   411,     0,   412,   413,
       0,   414,  1042,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,  1043,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,  1045,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,   882,  1910,     0,     0,     0,   883,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   824,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,   114,   825,   116,   826,
     827,     0,   119,   120,   121,   122,   123,   124,   828,   829,
     125,   126,   830,   831,   129,     0,   130,   131,   132,   133,
     832,     0,   833,     0,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,   153,   154,   155,   834,   835,   836,   837,
     838,   839,   840,   157,   158,   159,   160,   161,   162,   163,
     841,   842,   166,   843,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   678,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   844,   195,
     196,   197,   198,   199,   845,   846,   201,     0,   202,   203,
     847,   205,     0,   206,     0,   207,   208,  1653,   209,   210,
     211,   212,   213,   214,     0,   215,     0,   848,   849,   218,
       0,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   850,
     851,     0,   852,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,     0,   259,   260,   261,
     262,     0,   263,   264,   265,   853,   854,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   855,   291,   856,   293,   294,   295,   296,   857,   297,
     298,   299,   300,   858,   859,   302,   860,   304,   305,   306,
       0,   307,   308,     0,     0,   861,   310,   311,     0,     0,
     312,   313,   314,   315,   316,   862,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   863,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   864,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   865,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,   866,   387,   388,   389,   390,   391,   392,   393,   394,
     867,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   868,   411,     0,   412,
     413,     0,   414,   415,   416,   417,   418,   419,   420,     0,
     869,   870,     0,     0,   423,   424,   871,   426,   872,   873,
     428,   429,   874,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   875,     0,   441,   442,   443,
     444,   445,   446,   876,     0,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   877,     0,     0,
       0,     0,     0,     0,   878,   879,     0,     0,     0,     0,
       0,   881,     0,   882,     0,     0,     0,     0,   883,     0,
     884,   885,    93,   818,   547,   819,   820,   821,   822,   823,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   825,   116,
     826,   827,     0,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,   833,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   834,   835,   836,
     837,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,   843,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,   291,   856,   293,   294,   295,   296,   857,
     297,   298,   299,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   865,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,   392,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   868,   411,     0,
     412,   413,  2221,   414,   415,   416,   417,   418,   419,   420,
       0,   869,   870,     0,     0,   423,   424,   871,   426,   872,
     873,   428,   429,   874,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,     0,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,   824,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   825,
     116,   826,   827,     0,   119,   120,   121,   122,   123,   124,
     828,   829,   125,   126,   830,   831,   129,     0,   130,   131,
     132,   133,   832,     0,   833,     0,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,   152,   153,   154,   155,   834,   835,
     836,   837,   838,   839,   840,   157,   158,   159,   160,   161,
     162,   163,   841,   842,   166,   843,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   678,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     844,   195,   196,   197,   198,   199,   845,   846,   201,     0,
     202,   203,   847,   205,     0,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,   848,
     849,   218,     0,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   850,   851,     0,   852,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,     0,   259,
     260,   261,   262,     0,   263,   264,   265,   853,   854,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   855,   291,   856,   293,   294,   295,   296,
     857,   297,   298,   299,   300,   858,   859,   302,   860,   304,
     305,   306,     0,   307,   308,     0,     0,   861,   310,   311,
       0,     0,   312,   313,   314,   315,   316,   862,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   863,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   864,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   865,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,   866,   387,   388,   389,   390,   391,   392,
     393,   394,   867,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   868,   411,
       0,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,   869,   870,     0,     0,   423,   424,   871,   426,
     872,   873,   428,   429,   874,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   875,     0,   441,
     442,   443,   444,   445,   446,   876,     0,   448,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   877,
       0,     0,     0,     0,     0,     0,   878,   879,     0,     0,
       0,     0,     0,   881,     0,   882,     0,     0,     0,     0,
     883,     0,   884,   885,  1015,   818,   547,   819,   820,   821,
     822,   823,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,  1017,   111,   112,   113,   114,
     825,  1018,   826,   827,     0,   119,   120,   121,   122,   123,
     124,   828,   829,   125,   126,   830,   831,   129,     0,   130,
     131,   132,   133,   832,     0,  1019,     0,   136,   137,   138,
     139,   140,   141,  1020,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,  1021,   153,   154,   155,   834,
     835,   836,  1022,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   841,   842,   166,   843,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   844,   195,   196,   197,   198,   199,   845,   846,   201,
       0,   202,   203,   847,   205,     0,   206,     0,   207,  1024,
       0,  1025,   210,   211,   212,  1026,   214,     0,   215,     0,
     848,   849,   218,     0,   219,   220,   221,   222,   223,   224,
     225,  1027,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,  1028,   239,   240,   241,   242,
     243,   244,   850,   851,     0,   852,     0,   248,  1029,  1030,
     251,  1031,   253,   254,   255,   256,   257,   258,     0,     0,
     259,  1032,   261,  1033,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,  1034,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   855,  1035,   856,   293,   294,   295,
     296,   857,   297,   298,  1036,   300,   858,   859,   302,   860,
     304,   305,   306,     0,   307,   308,     0,     0,   861,   310,
     311,     0,     0,   312,   313,  1037,   315,  1038,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     864,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,  1039,   367,   368,   369,   865,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
    1040,   393,   394,   867,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,  1041,   409,   868,
     411,     0,   412,   413,     0,   414,  1042,   416,   417,   418,
     419,   420,     0,   869,   870,     0,     0,   423,   424,   871,
     426,   872,   873,   428,   429,  1043,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   446,   876,     0,   448,  1045,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,   878,   879,     0,
       0,     0,     0,     0,   881,     0,   882,     0,     0,     0,
       0,   883,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,   824,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   825,   116,   826,   827,     0,   119,   120,   121,   122,
     123,   124,   828,   829,   125,   126,   830,   831,   129,     0,
     130,   131,   132,   133,   832,     0,   833,     0,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   152,   153,   154,   155,
     834,   835,   836,   837,   838,   839,   840,   157,   158,   159,
     160,   161,   162,   163,   841,   842,   166,   843,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   678,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   844,   195,   196,   197,   198,   199,   845,   846,
     201,     0,   202,   203,   847,   205,     0,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,   848,   849,   218,     0,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   850,   851,     0,   852,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
       0,   259,   260,   261,   262,     0,   263,   264,   265,   853,
     854,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   855,   291,   856,   293,   294,
     295,   296,   857,   297,   298,   299,   300,   858,   859,   302,
     860,   304,   305,   306,     0,   307,   308,     0,     0,   861,
     310,   311,     0,     0,   312,   313,   314,   315,   316,   862,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   863,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   864,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   865,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,   866,   387,   388,   389,   390,
     391,   392,   393,   394,   867,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     868,   411,     0,   412,   413,     0,   414,   415,   416,   417,
     418,   419,   420,     0,   869,   870,     0,     0,   423,   424,
     871,   426,   872,   873,   428,   429,   874,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   875,
       0,   441,   442,   443,   444,   445,   446,   876,     0,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   877,     0,     0,     0,     0,     0,     0,  1407,  1408,
       0,     0,     0,     0,     0,   881,     0,   882,     0,     0,
       0,     0,   883,     0,   884,   885,    93,  1776,   547,   819,
     820,   821,   822,   823,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,   843,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,   857,   297,   298,   299,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     861,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   865,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   824,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   825,   116,   826,   827,     0,   119,   120,
     121,   122,   123,   124,   828,   829,   125,   126,   830,   831,
     129,     0,   130,   131,   132,   133,   832,     0,   833,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   834,   835,   836,   837,   838,   839,   840,   157,
     158,   159,   160,   161,   162,   163,   841,   842,   166,   843,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   678,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   844,   195,   196,   197,   198,   199,
     845,   846,   201,     0,   202,   203,   847,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   848,   849,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   850,   851,     0,   852,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   853,   854,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   855,   291,   856,
     293,   294,   295,   296,   857,   297,   298,   299,   300,   858,
     859,   302,   860,   304,   305,   306,     0,   307,   308,     0,
       0,   861,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   862,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   863,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   864,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   865,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   866,   387,   388,
     389,   390,   391,   392,   393,   394,   867,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   868,   411,     0,   412,   413,     0,   414,   415,
     416,   417,   418,   419,   420,     0,   869,   870,     0,     0,
     423,   424,   871,   426,   872,   873,   428,   429,   874,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   875,     0,   441,   442,   443,   444,   445,   446,   876,
       0,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   877,     0,     0,     0,     0,     0,     0,
     878,   879,     0,     0,     0,     0,     0,   881,     0,  2025,
       0,     0,     0,     0,   883,     0,   884,   885,    93,   818,
     547,   819,   820,   821,   822,   823,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,  2709,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
     843,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,  2710,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,   857,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,  2711,
     865,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
       0,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
    2713,     0,     0,     0,     0,   883,     0,   884,   885,    93,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   824,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,  2968,   825,   116,   826,   827,     0,
     119,   120,   121,   122,   123,   124,   828,   829,   125,   126,
     830,   831,   129,     0,   130,   131,   132,   133,   832,     0,
     833,     0,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,   153,   154,  2969,   834,   835,   836,   837,   838,   839,
     840,   157,   158,   159,   160,   161,   162,   163,   841,   842,
     166,   843,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     678,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   844,   195,   196,   197,
     198,   199,   845,   846,   201,     0,   202,   203,   847,   205,
       0,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,   848,   849,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   850,   851,     0,
     852,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,     0,   259,   260,   261,   262,     0,
     263,   264,   265,   853,   854,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   855,
     291,   856,   293,   294,   295,   296,   857,   297,   298,   299,
     300,   858,   859,   302,   860,   304,   305,   306,     0,   307,
     308,     0,     0,   861,   310,   311,     0,     0,   312,   313,
     314,   315,   316,   862,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   863,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   864,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   865,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,   866,
     387,   388,   389,   390,   391,   392,   393,   394,   867,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   868,   411,     0,   412,   413,     0,
     414,   415,   416,   417,   418,   419,   420,     0,   869,   870,
       0,     0,   423,   424,   871,   426,   872,   873,   428,   429,
     874,   431,   432,  2970,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   875,     0,   441,   442,   443,   444,   445,
     446,   876,     0,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   877,     0,     0,     0,     0,
       0,     0,   878,   879,     0,     0,     0,     0,     0,   881,
       0,   882,     0,     0,     0,     0,   883,     0,   884,   885,
      93,   818,   547,   819,   820,   821,   822,   823,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,   154,  2969,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,   262,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,   857,   297,   298,
     299,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,   392,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,  2970,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,   882,     0,     0,     0,     0,   883,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   824,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113, -1759,   825,   116,   826,
     827,     0,   119,   120,   121,   122,   123,   124,   828,   829,
     125,   126,   830,   831,   129,     0,   130,   131,   132,   133,
     832,     0,   833,     0,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,   153,   154,  2969,   834,   835,   836,   837,
     838,   839,   840,   157,   158,   159,   160,   161,   162,   163,
     841,   842,   166,   843,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   678,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   844,   195,
     196,   197,   198,   199,   845,   846,   201,     0,   202,   203,
     847,   205,     0,   206,     0,   207,   208,     0,   209,   210,
     211,   212, -1759,   214,     0,   215,     0,   848,   849,   218,
       0,   219,   220,   221,   222,   223,   224,   225, -1759,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   850,
     851,     0,   852,     0,   248,     0,     0,   251,   252,   253,
     254,   255,   256,   257,   258,     0,     0,   259,   260,   261,
   -1759,     0,   263,   264,   265,   853,   854,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   855,   291,   856,   293,   294,   295,   296,     0,   297,
     298,     0,   300,   858,   859,   302,   860,   304,   305,   306,
       0,   307,   308,     0,     0,   861,   310,   311,     0,     0,
     312,   313,   314,   315,   316,   862,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   863,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   864,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   865,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,   866,   387,   388,   389,   390,   391, -1759,   393,   394,
     867,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   868,   411,     0,   412,
     413,     0,   414,   415,   416,   417,   418,   419,   420,     0,
     869,   870,     0,     0,   423,   424,   871,   426,   872,   873,
     428,   429,   874,   431,   432,  2970,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   875,     0,   441,   442,   443,
     444,   445,   446,   876,     0,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475, -1759,     0,     0,
       0,     0,     0,     0,   878,   879,     0,     0,     0,     0,
       0,   881,     0,   882,     0,     0,     0,     0,   883,     0,
     884,   885,    93,   818,   547,   819,   820,   821,   822,   823,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   825,   116,
     826,   827,     0,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,   833,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   834,   835,   836,
     837,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,   291,   856,   293,   294,   295,   296,     0,
     297,   298,   299,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,   392,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   868,   411,     0,
     412,   413,     0,   414,   415,   416,   417,   418,   419,   420,
       0,   869,   870,     0,     0,   423,   424,   871,   426,   872,
     873,   428,   429,   874,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,     0,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     0,     0,
       0,     0,     0,     0,     0,  1639,  1640,     0,     0,    93,
     818,   547,   819,   820,  1641,   822,   823,     0,     0,     0,
       0,   884,   885,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   825,   116,   826,   827,     0,
     119,   120,   121,   122,   123,   124,   828,   829,   125,   126,
     830,   831,   129,     0,   130,   131,   132,   133,   832,     0,
     833,     0,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,   153,   154,   155,   834,   835,   836,   837,   838,   839,
     840,   157,   158,   159,   160,   161,   162,   163,   841,   842,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     678,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   844,   195,   196,   197,
     198,   199,   845,   846,   201,     0,   202,   203,   847,   205,
       0,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,   848,   849,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   850,   851,     0,
     852,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,     0,   259,   260,   261,   262,     0,
     263,   264,   265,   853,   854,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   855,
     291,   856,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   858,   859,   302,   860,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
     314,   315,   316,   862,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   863,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   864,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,  1762,  1763,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,   866,
     387,   388,   389,   390,   391,   392,   393,   394,   867,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   868,   411,     0,   412,   413,     0,
     414,   415,   416,   417,   418,   419,   420,     0,   869,   870,
       0,     0,   423,   424,   871,   426,   872,   873,   428,   429,
     874,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   875,     0,   441,   442,   443,   444,   445,
     446,   876,     0,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     0,     0,     0,     0,     0,
       0,     0,  1764,  1765,     0,     0,     0,     0,     0,     0,
       0,  1641,     0,     0,     0,     0,     0,     0,   884,   885,
      93,   818,   547,   819,   820,   821,   822,   823,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,   154,   155,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,   262,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,   392,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     0,     0,     0,     0,
       0,     0,     0,  1639,  1640,     0,     0,     0,     0,     0,
       0,     0,  1641,     0,     0,     0,     0,     0,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   824,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,     0,   825,   116,   826,
     827,     0,   119,   120,   121,   122,   123,   124,   828,   829,
     125,   126,   830,   831,   129,     0,   130,   131,   132,   133,
     832,     0,   833,     0,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,   153,   154,   155,   834,   835,   836,   837,
     838,   839,   840,   157,   158,   159,   160,   161,   162,   163,
     841,   842,   166,   843,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   678,   182,   183,     0,   184,   185,   186,     0,
     187,     0,   189,     0,   190,   191,   192,   193,   844,   195,
     196,   197,   198,   199,   845,   846,   201,     0,   202,   203,
     847,   205,     0,   206,     0,   207,   208,     0,   209,   210,
     211,   212,     0,   214,     0,   215,     0,   848,   849,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   850,
     851,     0,   852,     0,   248,     0,     0,   251,   252,   253,
     254,   255,   256,   257,   258,     0,     0,   259,   260,   261,
       0,     0,   263,   264,   265,   853,   854,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   855,   291,   856,   293,   294,   295,   296,     0,   297,
     298,     0,   300,   858,   859,   302,   860,   304,   305,   306,
       0,   307,   308,     0,     0,   861,   310,   311,     0,     0,
     312,   313,   314,   315,   316,   862,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   863,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   864,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   865,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,   866,   387,   388,   389,   390,   391,     0,   393,   394,
     867,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   868,   411,     0,   412,
     413,     0,   414,   415,   416,   417,   418,   419,   420,     0,
     869,   870,     0,     0,   423,   424,   871,   426,   872,   873,
     428,   429,   874,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   875,     0,   441,   442,   443,
     444,   445,   446,   876,     0,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     0,     0,     0,
       0,     0,     0,     0,   878,   879,   498,     0,     0,     0,
       0,   881,     0,   882,     0,     0,     0,     0,   883,     0,
     884,   885,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,  2330,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,  -248,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,  -248,   210,   211,   212,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,  -248,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,  -248,   253,   254,   255,   256,   257,   258,
       0,     0,   259,  -248,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   500,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,  -248,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,  -248,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   502,
     409,   410,   411,     0,   412,   413,     0,   414,  -248,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,     0,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     0,     0,    93,     0,   579,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   947,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,   829,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   832,     0,   833,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,   153,   154,   155,   834,
     835,   836,   837,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   845,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,  2071,     0,
     259,   260,   261,   262,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   859,   302,   303,
     304,   305,   306,     0,   307,   308,     0,   580,   309,   310,
     311,     0,     0,   312,   313,   314,   315,   316,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   370,  2072,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    26,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   868,
     411,     0,   412,   413,    31,   414,   415,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   871,
     426,   872,     0,   428,   429,   874,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   575,   447,     0,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,    34,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       0,    93,    35,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2073,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,   829,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     832,     0,   833,     0,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,   153,   154,   155,   834,   835,   836,   837,
     838,   839,   840,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   845,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,  2071,     0,   259,   260,   261,
     262,     0,   263,   264,   265,   853,   854,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   859,   302,   303,   304,   305,   306,
       0,   307,   308,     0,   580,   309,   310,   311,     0,     0,
     312,   313,   314,   315,   316,   862,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   863,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,  2072,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,   866,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   868,   411,     0,   412,
     413,     0,   414,   415,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   871,   426,   872,     0,
     428,   429,   874,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   875,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     0,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2073,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,   829,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   845,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   859,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,  2072,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   421,   422,     0,
       0,   423,   424,   871,   426,   872,     0,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     447,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     0,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      36,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,   829,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   832,     0,   833,     0,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   152,   153,   154,   155,
     834,   835,   836,   837,   838,   839,   840,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   845,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
       0,   259,   260,   261,   262,     0,   263,   264,   265,   853,
     854,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,     0,   859,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,   314,   315,   316,   862,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   863,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,   866,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     868,   411,     0,   412,   413,     0,   414,   415,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     871,   426,   872,     0,   428,   429,   874,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   875,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,   746,  1238,   547,     0,     0,     0,   822,     0,
       0,     0,     0,     0,     0,     0,     0,  2731,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   747,   748,     0,
     749,   750,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   751,   752,   129,     0,   130,   131,   132,
     133,   753,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   754,   755,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   756,
     195,   196,   197,   198,   199,   757,  1239,   201,     0,   202,
     203,   758,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   212,     0,   214,     0,   215,     0,   759,   760,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   761,   240,   241,   242,   243,   244,
     762,   763,     0,   764,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   765,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   766,     0,   767,   293,   294,   295,   768,     0,
     297,   298,     0,   300,     0,   769,   302,   770,   304,   305,
     306,     0,   307,   308,  1240,     0,   309,   310,   311,     0,
       0,   312,   771,     0,   315,     0,   772,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     773,   331,   332,   774,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   775,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   776,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   777,   389,   390,   391,     0,   393,
     394,   778,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   779,   409,   780,   411,     0,
     412,   413,     0,   414,     0,   416,   417,   418,   419,   420,
       0,   781,   782,     0,     0,   423,   424,   783,   426,   784,
    1241,   428,   429,   785,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,     0,     0,   441,   442,
     443,   444,   445,  1131,   787,     0,   448,     0,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   472,   473,   474,   475,     0,   746,
       0,     0,     0,     0,     0,  1242,  1243,  1947,     0,     0,
       0,     0,     0,     0,  1948,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     3,     4,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   747,   748,     0,   749,   750,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     751,   752,   129,     0,   130,   131,   132,   133,   753,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   754,   755,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   756,   195,   196,   197,
     198,   199,   757,     0,   201,     0,   202,   203,   758,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   759,   760,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   761,   240,   241,   242,   243,   244,   762,   763,     0,
     764,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     765,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   766,
       0,   767,   293,   294,   295,   768,     0,   297,   298,     0,
     300,     0,   769,   302,   770,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   771,
       0,   315,     0,   772,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   773,   331,   332,
     774,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   775,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   776,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    26,   382,   383,   384,   385,   386,     0,
     387,   777,   389,   390,   391,     0,   393,   394,   778,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   779,   409,   780,   411,     0,   412,   413,    31,
     414,     0,   416,   417,   418,   419,   420,     0,   781,   782,
       0,     0,   423,   424,   783,   426,   784,     0,   428,   429,
     785,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     786,   787,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,    34,   455,   456,   457,   458,   459,   460,
     788,   789,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   472,   473,   474,   475,     0,   498,    35,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    36,    94,    95,    96,    97,    98,    99,   100,   101,
     608,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   212,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   500,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      26,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   502,
     409,   410,   411,     0,   412,   413,    31,   414,     0,   416,
     417,   418,   419,   420,     0,   609,   422,     0,     0,   610,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   575,   447,     0,
     448,     0,   450,   451,   452,   453,     0,     0,   454,     0,
      34,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     0,   498,    35,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    36,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    26,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,    31,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   575,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,    34,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     0,
     498,    35,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    36,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,     0,   201,     0,   202,   203,   204,
     205,     0,   206,     0,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   239,   240,   241,   242,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,     0,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   500,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   292,   293,   294,   295,   296,     0,   297,   298,
       0,   300,     0,   301,   302,   303,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     313,     0,   315,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,     0,   393,   394,   395,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   502,   409,   410,   411,     0,   412,   413,
       0,   414,     0,   416,   417,   418,   419,   420,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     0,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   926,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     0,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2563,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   136,   137,   138,
     139,   140,   141,     0,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,     0,
       0,     0,   210,   211,   212,     0,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
     251,     0,   253,   254,   255,   256,   257,   258,     0,     0,
     259,     0,   261,     0,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   500,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   300,     0,   301,   302,   303,
     304,   305,   306,     0,   307,   308,     0,     0,   309,   310,
     311,     0,     0,   312,   313,     0,   315,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,     0,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
       0,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   502,   409,   410,
     411,     0,   412,   413,     0,   414,     0,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,     0,   448,     0,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       0,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1660,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     0,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1799,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   212,     0,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   500,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     292,   293,   294,   295,   296,     0,   297,   298,     0,   300,
       0,   301,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,     0,
     315,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,     0,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   502,   409,   410,   411,     0,   412,   413,     0,   414,
       0,   416,   417,   418,   419,   420,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,     0,   448,     0,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     0,     0,     0,     0,  2416,  1238,
     547,     0,     0,  1621,   822,     0,     0,     0,     0,     0,
    2535,  1622,  1623,  1624,    94,    95,    96,    97,    98,    99,
     100,   101,  1058,   102,   103,   104,  1059,  1060,  1061,  1062,
    1063,  1064,  1065,   105,   106,  1066,   107,   108,   109,  2417,
     111,   112,   113,     0,   666,  2418,   668,   669,  1067,   119,
     120,   121,   122,   123,   124,  1068,  1069,   125,   126,   670,
     671,   129,  1070,   130,   131,   132,   133,     0,  1071,  2419,
    1072,   136,   137,   138,   139,   140,   141,  2420,   143,   144,
     145,  1073,   146,   147,   148,   149,   150,   151,  1074,  2421,
     153,   154,   155,  1075,  1076,  1077,  2422,  1078,  1079,  1080,
     157,   158,   159,   160,   161,   162,   163,   676,   677,   166,
    1081,   167,  1082,   168,   169,   170,   171,   172,   173,  1083,
     174,   175,   176,   177,   178,  1084,  1085,   179,   180,   678,
     182,   183,  1086,   184,   185,   186,  1087,   187,   188,   189,
    1088,   190,   191,   192,   193,     0,   195,   196,   197,   198,
     199,     0,  1089,   201,  1090,   202,   203,   679,   205,  1091,
     206,  1092,   207,  2423,  1093,  2424,   210,   211,   212,  2425,
     214,  1094,   215,  1095,     0,     0,   218,  1096,   219,   220,
     221,   222,   223,   224,   225,  2426,   227,   228,   229,   230,
    1097,   231,   232,   233,   234,   235,   236,  1098,   237,  2427,
       0,   240,   241,   242,   243,   244,   686,   687,  1099,   688,
    1100,   248,  2428,  2429,   251,  2430,   253,   254,   255,   256,
     257,   258,  1101,  1102,   259,  2431,   261,  2432,  1103,   263,
     264,   265,  1104,  1105,   266,   267,   268,   269,   270,  2433,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   695,  2434,
     697,   293,   294,   295,  2435,  1106,   297,   298,  2436,   300,
    1107,     0,   302,   699,   304,   305,   306,  1108,   307,   308,
    1109,  1110,  2437,   310,   311,  1111,  1112,   312,     0,  2438,
     315,  2439,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,  1113,   328,   329,     0,   331,   332,     0,
     334,   335,   336,  1114,   337,   338,   339,   340,   341,   342,
    1115,   343,   344,   345,   702,   347,   348,   349,   350,  1116,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,  1117,   364,   365,  2440,   367,   368,   369,
     704,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,  1118,   382,   383,   384,   385,   386,  1119,   387,
    2441,   389,   390,   391,  2442,   393,   394,   707,   396,  1120,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,  2443,   409,     0,   411,  1121,   412,   413,  1122,   414,
    2444,   416,   417,   418,   419,   420,  1123,   710,   711,  1124,
    1125,   423,   424,     0,   426,     0,  1126,   428,   429,  2445,
     431,   432,   433,   434,   435,  1127,  1128,   436,   437,   438,
     439,   440,  1129,  1130,   441,   442,   443,   444,   445,     0,
     713,  1132,   448,  2446,   450,   451,   452,   453,  1133,  1134,
     454,  1135,  1136,   455,   456,   457,   458,   459,   460,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     472,   473,   474,   475,     0,   498,     0,  1625,  1626,  1627,
    1621,  2447,  2448,  1630,  1631,  1632,  1633,     0,  1622,  1623,
    1624,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,     0,     0,  1625,  1626,  1627,     0,  1628,  1629,
    1630,  1631,  1632,  1633,  1315,     0,     0,  1316,     0,     0,
       0,  1317,  1318,  1319,  1320,     0,     0,     0,     0,     0,
       0,     0,     0,  1315,     0,     0,  1316,     0,     0,  1321,
    1317,  1318,  1319,  1320,     0,     0,     0,  1323,     0,     0,
       0,     0,     0,     0,  1324,     0,     0,     0,  1321,     0,
       0,     0,  1315,     0,     0,  1316,  1323,     0,     0,  1317,
    1318,  1319,  1320,  1324,     0,     0,     0,     0,     0,  1325,
       0,  1315,     0,     0,  1316,     0,     0,  1321,  1317,  1318,
    1319,  1320,     0,     0,     0,  1323,     0,     0,  1325,     0,
       0,     0,  1324,     0,     0,     0,  1321,     0,     0,     0,
       0,     0,     0,     0,  1323,     0,     0,     0,     0,     0,
       0,  1324,     0,     0,     0,     0,     0,  1325,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1325,     0,  1315,     0,
       0,  1316,     0,     0,     0,  1317,  1318,  1319,  1320,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1321,     0,     0,     0,     0,     0,     0,
    1326,  1323,     0,     0,     0,     0,     0,     0,  1324,     0,
       0,     0,     0,     0,     0,     0,  1327,     0,     0,  1326,
       0,  1328,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1325,     0,  1327,     0,     0,     0,     0,
    1328,     0,     0,  1329,  1330,     0,     0,     0,  1326,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1331,     0,
       0,     0,  1329,  1330,  1327,     0,     0,  1326,     0,  1328,
       0,     0,     0,     0,     0,     0,     0,  1331,     0,     0,
       0,     0,     0,  1327,     0,     0,     0,     0,  1328,     0,
       0,  1329,  1330,     0,     0,     0,  1332,     0,     0,  1333,
       0,     0,     0,     0,     0,     0,  1331,     0,     0,     0,
    1329,  1330,     0,  1334,     0,  1332,  1335,     0,  1333,     0,
       0,     0,     0,     0,     0,  1331,     0,     0,     0,     0,
       0,     0,  1334,     0,  1326,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,  1332,     0,     0,  1333,     0,     0,
    1327,     0,     0,     0,     0,  1328,     0,     0,     0,     0,
       0,  1334,     0,  1332,  1335,     0,  1333,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1329,  1330,     0,
    1334,     0,     0,  1335,     0,     0,     0,     0,     0,     0,
       0,     0,  1331,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1315,     0,  1336,  1316,     0,     0,     0,
    1317,  1318,  1319,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1336,     0,     0,     0,  1321,     0,
    1332,     0,     0,  1333,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,  1324,     0,     0,     0,  1334,     0,     0,
    1335,     0,     0,  1336,  1315,     0,     0,  1316,     0,     0,
       0,  1317,  1318,  1319,  1320,     0,     0,     0,  1325,     0,
       0,     0,  1336,     0,     0,     0,     0,     0,     0,  1321,
       0,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
       0,     0,     0,     0,  1324,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1337,     0,     0,  1338,  1339,
    1340,     0,  1341,  1342,  1343,  1344,  1345,  1346,     0,  1325,
       0,     0,  2293,     0,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,  1336,
       0,  2380,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1337,     0,     0,  1338,  1339,  1340,     0,
    1341,  1342,  1343,  1344,  1345,  1346,     0,     0,     0,  1326,
    2510,     0,  1337,     0,     0,  1338,  1339,  1340,     0,  1341,
    1342,  1343,  1344,  1345,  1346,  1327,     0,     0,     0,  2532,
    1328,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1329,  1330,     0,     0,     0,     0,     0,     0,
    1326,     0,     0,     0,     0,     0,     0,  1331,     0,     0,
       0,     0,     0,     0,     0,     0,  1327,     0,     0,  1337,
       0,  1328,  1338,  1339,  1340,     0,  1341,  1342,  1343,  1344,
    1345,  1346,     0,     0,     0,     0,  2680,     0,     0,     0,
       0,     0,     0,  1329,  1330,  1332,     0,     0,  1333,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1331,     0,
       0,     0,  1334,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,  1333,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,     0,
       0,  2903,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1337,     0,  1057,  1338,  1339,
    1340,     0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,
       0,     0,  2915,    94,    95,    96,    97,    98,    99,   100,
     101,  1058,   102,   103,   104,  1059,  1060,  1061,  1062,  1063,
    1064,  1065,   105,   106,  1066,   107,   108,   109,     0,   111,
     112,   113,   747,   748,     0,   749,   750,  1067,   119,   120,
     121,   122,   123,   124,  1068,  1069,   125,   126,   751,   752,
     129,  1070,   130,   131,   132,   133,   753,  1071,     0,  1072,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
    1073,   146,   147,   148,   149,   150,   151,  1074,     0,   153,
     154,   155,  1075,  1076,  1077,     0,  1078,  1079,  1080,   157,
     158,   159,   160,   161,   162,   163,   754,   755,   166,  1081,
     167,  1082,   168,   169,   170,   171,   172,   173,  1083,   174,
     175,   176,   177,   178,  1084,  1085,   179,   180,   181,   182,
     183,  1086,   184,   185,   186,  1087,   187,   188,   189,  1088,
     190,   191,   192,   193,   756,   195,   196,   197,   198,   199,
     757,  1089,   201,  1090,   202,   203,   758,   205,  1091,   206,
    1092,   207,     0,  1093,     0,   210,   211,   212,     0,   214,
    1094,   215,  1095,   759,   760,   218,  1096,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,  1097,
     231,   232,   233,   234,   235,   236,  1098,   237,     0,   761,
     240,   241,   242,   243,   244,   762,   763,  1099,   764,  1100,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,  1101,  1102,   259,     0,   261,     0,  1103,   263,   264,
     265,  1104,  1105,   266,   267,   268,   269,   270,   765,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   766,     0,   767,
     293,   294,   295,   768,  1106,   297,   298,     0,   300,  1107,
     769,   302,   770,   304,   305,   306,  1108,   307,   308,  1109,
    1110,   309,   310,   311,  1111,  1112,   312,   771,     0,   315,
       0,   772,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,  1113,   328,   329,   773,   331,   332,   774,   334,
     335,   336,  1114,   337,   338,   339,   340,   341,   342,  1115,
     343,   344,   345,   775,   347,   348,   349,   350,  1116,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,  1117,   364,   365,     0,   367,   368,   369,   776,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,  1118,   382,   383,   384,   385,   386,  1119,   387,   777,
     389,   390,   391,     0,   393,   394,   778,   396,  1120,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     779,   409,   780,   411,  1121,   412,   413,  1122,   414,     0,
     416,   417,   418,   419,   420,  1123,   781,   782,  1124,  1125,
     423,   424,   783,   426,   784,  1126,   428,   429,   785,   431,
     432,   433,   434,   435,  1127,  1128,   436,   437,   438,   439,
     440,  1129,  1130,   441,   442,   443,   444,   445,  1131,   787,
    1132,   448,     0,   450,   451,   452,   453,  1133,  1134,   454,
    1135,  1136,   455,   456,   457,   458,   459,   460,   788,   789,
     790,   791,   792,   793,   794,   795,   796,   797,   798,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,  1743,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   746,
    1238,   547,     0,     0,     0,   822,     0,     0,  2244,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   747,   748,     0,   749,   750,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     751,   752,   129,     0,   130,   131,   132,   133,   753,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   754,   755,
     166,  1373,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   756,   195,   196,   197,
     198,   199,   757,  1239,   201,     0,   202,   203,   758,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   759,   760,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   761,   240,   241,   242,   243,   244,   762,   763,     0,
     764,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     765,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   766,
       0,   767,   293,   294,   295,   768,     0,   297,   298,     0,
     300,     0,   769,   302,   770,   304,   305,   306,     0,   307,
     308,  1240,     0,   309,   310,   311,     0,     0,   312,   771,
       0,   315,     0,   772,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   773,   331,   332,
     774,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   775,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   776,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   777,   389,   390,   391,     0,   393,   394,   778,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   779,   409,   780,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   781,   782,
       0,     0,   423,   424,   783,   426,   784,  1241,   428,   429,
     785,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
    1131,   787,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     788,   789,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   472,   473,   474,   475,   746,  1238,   547,     0,     0,
       0,   822,  1242,  1243,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     747,   748,     0,   749,   750,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   751,   752,   129,     0,
     130,   131,   132,   133,   753,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   754,   755,   166,  1375,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   756,   195,   196,   197,   198,   199,   757,  1239,
     201,     0,   202,   203,   758,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   759,   760,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   761,   240,   241,
     242,   243,   244,   762,   763,     0,   764,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   765,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   766,     0,   767,   293,   294,
     295,   768,     0,   297,   298,     0,   300,     0,   769,   302,
     770,   304,   305,   306,     0,   307,   308,  1240,     0,   309,
     310,   311,     0,     0,   312,   771,     0,   315,     0,   772,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   773,   331,   332,   774,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   775,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   776,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   777,   389,   390,
     391,     0,   393,   394,   778,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   779,   409,
     780,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   781,   782,     0,     0,   423,   424,
     783,   426,   784,  1241,   428,   429,   785,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,  1131,   787,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   788,   789,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   472,   473,   474,
     475,   746,  1238,   547,     0,     0,     0,   822,  1242,  1243,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   747,   748,     0,   749,
     750,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   751,   752,   129,     0,   130,   131,   132,   133,
     753,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     754,   755,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   756,   195,
     196,   197,   198,   199,   757,  1239,   201,     0,   202,   203,
     758,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   759,   760,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   761,   240,   241,   242,   243,   244,   762,
     763,     0,   764,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   765,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   766,     0,   767,   293,   294,   295,   768,     0,   297,
     298,     0,   300,     0,   769,   302,   770,   304,   305,   306,
       0,   307,   308,  1240,     0,   309,   310,   311,     0,     0,
     312,   771,     0,   315,     0,   772,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   773,
     331,   332,   774,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   775,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   776,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   777,   389,   390,   391,     0,   393,   394,
     778,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   779,   409,   780,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     781,   782,     0,     0,   423,   424,   783,   426,   784,  1241,
     428,   429,   785,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,  1131,   787,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   472,   473,   474,   475,     0,     0,  1315,
       0,     0,  1316,     0,  1242,  1243,  1317,  1318,  1319,  1320,
       0,     0,  1315,     0,     0,  1316,     0,     0,     0,  1317,
    1318,  1319,  1320,     0,  1321,     0,     0,     0,     0,     0,
       0,     0,  1323,     0,     0,     0,     0,  1321,     0,  1324,
       0,     0,     0,     0,     0,  1323,  1315,     0,     0,  1316,
       0,     0,  1324,  1317,  1318,  1319,  1320,     0,     0,  1315,
       0,     0,  1316,     0,  1325,     0,  1317,  1318,  1319,  1320,
       0,  1321,     0,     0,  1971,     0,     0,  1325,     0,  1323,
       0,     0,     0,     0,  1321,     0,  1324,     0,     0,     0,
       0,     0,  1323,     0,     0,     0,     0,     0,     0,  1324,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1325,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1325,     0,     0,     0,     0,     0,
       0,     0,     0,  1315,     0,     0,  1316,     0,     0,     0,
    1317,  1318,  1319,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2009,     0,     0,  1321,     0,
    2010,  2015,     0,     0,     0,  1326,  1323,  3001,     0,     0,
       0,     0,     0,  1324,     0,     0,     0,     0,  1326,     0,
       0,  1327,     0,     0,     0,     0,  1328,     0,     0,     0,
       0,     0,     0,     0,  1327,     0,     0,     0,  1325,  1328,
       0,     0,     0,     0,     0,     0,     0,     0,  1329,  1330,
       0,     0,  1326,     0,     0,     0,     0,     0,     0,     0,
       0,  1329,  1330,  1331,     0,  1326,     0,     0,  1327,     0,
       0,     0,     0,  1328,     0,     0,  1331,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,  1328,     0,     0,     0,
       0,     0,     0,     0,     0,  1329,  1330,     0,     0,     0,
       0,  1332,     0,     0,  1333,     0,     0,     0,  1329,  1330,
    1331,     0,     0,     0,  1332,     0,     0,  1333,  1334,     0,
       0,  1335,     0,  1331,     0,     0,     0,     0,     0,     0,
       0,  1334,     0,     0,  1335,     0,     0,     0,     0,  1326,
       0,     0,     0,     0,     0,     0,     0,     0,  1332,     0,
       0,  1333,     0,     0,     0,  1327,     0,  3002,     0,     0,
    1328,  1332,     0,     0,  1333,  1334,     0,     0,  1335,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1334,     0,
       0,  1335,  1329,  1330,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1331,     0,  1983,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1315,     0,  1332,  1316,     0,  1333,     0,
    1317,  1318,  1319,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,  1335,     0,  1336,  1321,     0,
       0,     0,     0,     0,     0,     0,  1323,     0,     0,     0,
    1336,     0,     0,  1324,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1325,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1337,     0,     0,  1338,  1339,  1340,     0,  1341,  1342,  1343,
    1344,  1345,  1346,  1337,     0,     0,  1338,  1339,  1340,     0,
    1341,  1342,  1343,  1344,  1345,  1346,     0,     0,     0,     0,
       0,     0,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1337,     0,     0,
    1338,  1339,  1340,     0,  1341,  1342,  1343,  1344,  1345,  1346,
    1337,     0,     0,  1338,  1339,  1340,     0,  1341,  1342,  1343,
    1344,  1345,  1346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1315,  2020,     0,  1316,     0,     0,  1326,
    1317,  1318,  1319,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,  1321,     0,
    1328,  2022,     0,     0,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,  1324,     0,     0,     0,     0,     0,     0,
       0,     0,  1329,  1330,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,  1331,  1325,  1315,
       0,     0,  1316,     0,     0,     0,  1317,  1318,  1319,  1320,
       0,     0,     0,     0,     0,     0,     0,     0,  1315,     0,
       0,  1316,     0,     0,  1321,  1317,  1318,  1319,  1320,     0,
       0,     0,  1323,     0,     0,  1332,     0,     0,  1333,  1324,
       0,     0,     0,  1321,     0,     0,  2292,     0,     0,     0,
       0,  1323,  1334,  1315,     0,  1335,  1316,     0,  1324,     0,
    1317,  1318,  1319,  1320,  1325,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1321,     0,
       0,     0,     0,  1325,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,  1324,     0,     0,     0,     0,     0,  1326,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,  1325,     0,
    1328,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1329,  1330,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1331,     0,     0,
       0,     0,     0,     0,     0,  1326,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,  1326,     0,  1328,     0,     0,     0,
       0,     0,     0,     0,     0,  1332,     0,     0,  1333,     0,
    1327,     0,     0,     0,     0,  1328,     0,     0,  1329,  1330,
       0,     0,  1334,     0,     0,  1335,     0,     0,     0,  1326,
       0,     0,     0,  1331,     0,     0,     0,  1329,  1330,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,     0,     0,
    1328,     0,  1331,     0,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,     0,
       0,  1332,  1329,  1330,  1333,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1331,  1334,     0,
    1332,  1335,     0,  1333,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1334,     0,     0,
    1335,     0,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1332,     0,     0,  1333,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,  1335,  1315,     0,     0,  1316,
       0,     0,     0,  1317,  1318,  1319,  1320,     0,     0,     0,
       0,     0,     0,     0,     0,  1315,     0,     0,  1316,     0,
       0,  1321,     0,  1318,  1319,  1320,     0,     0,     0,  1323,
    1336,     0,     0,     0,     0,     0,  1324,     0,     0,     0,
    1321,     0,     0,     0,     0,     0,     0,     0,  1323,  1336,
       0,     0,     0,     0,     0,  1324,     0,     0,     0,     0,
       0,  1325,  2248,     0,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,     0,     0,     0,
    1325,     0,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1337,     0,     0,  1338,  1339,  1340,     0,  1341,  1342,  1343,
    1344,  1345,  1346,     0,     0,     0,     0,     0,     0,  1337,
       0,     0,  1338,  1339,  1340,     0,  1341,  1342,  1343,  1344,
    1345,  1346,  1326,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,  1326,     0,  1328,  1337,     0,     0,  1338,  1339,  1340,
       0,  1341,  1342,  1343,  1344,  1345,  1346,  1327,     0,     0,
       0,     0,  1328,     0,     0,  1329,  1330,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1331,     0,     0,     0,  1329,  1330,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1331,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1332,     0,
       0,  1333,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,  1332,  1335,     0,
    1333,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1337,     0,     0,
    1338,  1339,  1340,     0,  1341,  1342,  1343,  1344,  1775,  1346,
       0,     0,     0,  1057,     0,  1680,  1337,     0,     0,  1338,
    1339,  1340,     0,  1341,  1342,  1343,  1344,  1345,  1346,    94,
      95,    96,    97,    98,    99,   100,   101,  1058,   102,   103,
     104,  1059,  1060,  1061,  1062,  1063,  1064,  1065,   105,   106,
    1066,   107,   108,   109,     0,   111,   112,   113,   747,   748,
       0,   749,   750,  1067,   119,   120,   121,   122,   123,   124,
    1068,  1069,   125,   126,   751,   752,   129,  1070,   130,   131,
     132,   133,   753,  1071,     0,  1072,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,  1073,   146,   147,   148,
     149,   150,   151,  1074,     0,   153,   154,   155,  1075,  1076,
    1077,     0,  1078,  1079,  1080,   157,   158,   159,   160,   161,
     162,   163,   754,   755,   166,  1081,   167,  1082,   168,   169,
     170,   171,   172,   173,  1083,   174,   175,   176,   177,   178,
    1084,  1085,   179,   180,   181,   182,   183,  1086,   184,   185,
     186,  1087,   187,   188,   189,  1088,   190,   191,   192,   193,
     756,   195,   196,   197,   198,   199,   757,  1089,   201,  1090,
     202,   203,   758,   205,  1091,   206,  1092,   207,     0,  1093,
       0,   210,   211,   212,     0,   214,  1094,   215,  1095,   759,
     760,   218,  1096,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,  1097,   231,   232,   233,   234,
     235,   236,  1098,   237,     0,   761,   240,   241,   242,   243,
     244,   762,   763,  1099,   764,  1100,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,  1101,  1102,   259,
       0,   261,     0,  1103,   263,   264,   265,  1104,  1105,   266,
     267,   268,   269,   270,   765,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   766,     0,   767,   293,   294,   295,   768,
    1106,   297,   298,     0,   300,  1107,   769,   302,   770,   304,
     305,   306,  1108,   307,   308,  1109,  1110,   309,   310,   311,
    1111,  1112,   312,   771,     0,   315,     0,   772,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,  1113,   328,
     329,   773,   331,   332,   774,   334,   335,   336,  1114,   337,
     338,   339,   340,   341,   342,  1115,   343,   344,   345,   775,
     347,   348,   349,   350,  1116,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,  1117,   364,
     365,     0,   367,   368,   369,   776,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,  1118,   382,   383,
     384,   385,   386,  1119,   387,   777,   389,   390,   391,     0,
     393,   394,   778,   396,  1120,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   779,   409,   780,   411,
    1121,   412,   413,  1122,   414,     0,   416,   417,   418,   419,
     420,  1123,   781,   782,  1124,  1125,   423,   424,   783,   426,
     784,  1126,   428,   429,   785,   431,   432,   433,   434,   435,
    1127,  1128,   436,   437,   438,   439,   440,  1129,  1130,   441,
     442,   443,   444,   445,  1131,   787,  1132,   448,     0,   450,
     451,   452,   453,  1133,  1134,   454,  1135,  1136,   455,   456,
     457,   458,   459,   460,   788,   789,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   472,   473,   474,   475,  1057,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,  1058,   102,   103,   104,  1059,  1060,  1061,
    1062,  1063,  1064,  1065,   105,   106,  1066,   107,   108,   109,
       0,   111,   112,   113,   747,   748,     0,   749,   750,  1067,
     119,   120,   121,   122,   123,   124,  1068,  1069,   125,   126,
     751,   752,   129,  1070,   130,   131,   132,   133,   753,  1071,
       0,  1072,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,  1073,   146,   147,   148,   149,   150,   151,  1074,
       0,   153,   154,   155,  1075,  1076,  1077,     0,  1078,  1079,
    1080,   157,   158,   159,   160,   161,   162,   163,   754,   755,
     166,  1081,   167,  1082,   168,   169,   170,   171,   172,   173,
    1083,   174,   175,   176,   177,   178,  1084,  1085,   179,   180,
     181,   182,   183,  1086,   184,   185,   186,  1087,   187,   188,
     189,  1088,   190,   191,   192,   193,   756,   195,   196,   197,
     198,   199,   757,  1089,   201,  1090,   202,   203,   758,   205,
    1091,   206,  1092,   207,     0,  1093,     0,   210,   211,   212,
       0,   214,  1094,   215,  1095,   759,   760,   218,  1096,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,  1097,   231,   232,   233,   234,   235,   236,  1098,   237,
       0,   761,   240,   241,   242,   243,   244,   762,   763,  1099,
     764,  1100,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,  1101,  1102,   259,     0,   261,     0,  1103,
     263,   264,   265,  1104,  1105,   266,   267,   268,   269,   270,
     765,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   766,
       0,   767,   293,   294,   295,   768,  1106,   297,   298,     0,
     300,  1107,   769,   302,   770,   304,   305,   306,  1108,   307,
     308,  1109,  1110,   309,   310,   311,  1111,  1112,   312,   771,
       0,   315,     0,   772,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,  1113,   328,   329,   773,   331,   332,
     774,   334,   335,   336,  1114,   337,   338,   339,   340,   341,
     342,  1115,   343,   344,   345,   775,   347,   348,   349,   350,
    1116,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,  1117,   364,   365,     0,   367,   368,
     369,   776,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,  1118,   382,   383,   384,   385,   386,  1119,
     387,   777,   389,   390,   391,     0,   393,   394,   778,   396,
    1120,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   779,   409,   780,   411,  1121,   412,   413,  1122,
     414,     0,   416,   417,   418,   419,   420,  1123,   781,   782,
    1124,  1125,   423,   424,   783,   426,   784,  1126,   428,   429,
     785,   431,   432,   433,   434,   435,  1127,  1128,   436,   437,
     438,   439,   440,  1129,  1130,   441,   442,   443,   444,   445,
    1131,   787,  1132,   448,     0,   450,   451,   452,   453,  1133,
    1134,   454,  1135,  1136,   455,   456,   457,   458,   459,   460,
     788,   789,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   472,   473,   474,   475,  1057,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,  1825,    99,   100,   101,  1058,
     102,   103,   104,  1059,  1060,  1061,  1062,  1063,  1064,  1065,
     105,   106,  1066,   107,   108,   109,     0,   111,   112,   113,
     747,   748,     0,   749,   750,  1067,   119,   120,   121,   122,
     123,   124,  1068,  1069,   125,   126,   751,   752,   129,  1070,
     130,   131,   132,   133,   753,  1071,     0,  1072,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,  1073,   146,
     147,   148,   149,   150,   151,  1074,     0,   153,   154,   155,
    1075,  1076,  1077,     0,  1078,  1079,  1080,   157,   158,   159,
     160,   161,   162,   163,   754,   755,   166,  1081,   167,  1082,
     168,   169,   170,   171,   172,   173,  1083,   174,   175,   176,
     177,   178,  1084,  1085,   179,   180,   181,  1826,   183,  1086,
     184,   185,   186,  1087,   187,   188,   189,  1088,   190,   191,
     192,   193,   756,   195,   196,   197,   198,   199,   757,  1089,
     201,  1090,   202,   203,   758,   205,  1091,   206,  1092,   207,
       0,  1093,     0,   210,   211,   212,     0,   214,  1094,   215,
    1095,   759,   760,   218,  1096,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,  1097,   231,   232,
     233,   234,   235,   236,  1098,   237,     0,   761,   240,   241,
     242,   243,   244,   762,   763,  1099,   764,  1100,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,  1101,
    1102,   259,     0,   261,     0,  1103,   263,   264,   265,  1104,
    1105,   266,   267,   268,   269,   270,   765,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   766,     0,   767,   293,   294,
     295,   768,  1106,   297,   298,     0,   300,  1107,   769,   302,
     770,   304,   305,   306,  1108,   307,   308,  1109,  1110,   309,
     310,   311,  1111,  1112,   312,   771,     0,   315,     0,   772,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
    1113,   328,   329,   773,   331,   332,   774,   334,   335,   336,
    1114,   337,   338,   339,   340,   341,   342,  1115,   343,   344,
     345,   775,   347,   348,   349,   350,  1116,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
    1117,   364,   365,     0,   367,   368,   369,   776,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,  1118,
     382,   383,   384,   385,   386,  1119,  1827,   777,   389,   390,
     391,     0,   393,   394,   778,   396,  1120,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   779,   409,
     780,   411,  1121,   412,   413,  1122,   414,     0,   416,   417,
     418,   419,   420,  1123,   781,   782,  1124,  1125,   423,   424,
     783,   426,   784,  1126,   428,   429,   785,   431,   432,   433,
     434,   435,  1127,  1128,   436,   437,   438,   439,   440,  1129,
    1130,   441,   442,   443,   444,   445,  1131,   787,  1132,   448,
       0,   450,   451,   452,   453,  1133,  1134,   454,  1135,  1136,
     455,   456,   457,   458,   459,   460,   788,   789,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   472,   473,   474,
     475,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,   829,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     832,     0,   833,     0,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,   153,   154,   155,   834,   835,   836,   837,
     838,   839,   840,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   845,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,     0,   259,   260,   261,
     262,     0,   263,   264,   265,   853,   854,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   859,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,   314,   315,   316,   862,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   863,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,   866,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   868,   411,     0,   412,
     413,     0,   414,   415,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   871,   426,   872,     0,
     428,   429,   874,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   875,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,     0,     0,     0,   156,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,     0,   414,   415,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,  1435,   130,   131,
     132,   133,   134,     0,     0,  1436,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,  1437,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,  1438,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,  1439,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,  1440,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,  1441,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,  1435,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,  1437,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,  1438,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,  1897,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,  1440,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,  1441,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   746,     0,   547,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     747,   748,     0,   749,   750,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   751,   752,   129,     0,
     130,   131,   132,   133,   753,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   754,   755,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   756,   195,   196,   197,   198,   199,   757,  1239,
     201,     0,   202,   203,   758,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   759,   760,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   761,   240,   241,
     242,   243,   244,   762,   763,     0,   764,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   765,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   766,     0,   767,   293,   294,
     295,   768,     0,   297,   298,     0,   300,     0,   769,   302,
     770,   304,   305,   306,     0,   307,   308,  1240,     0,   309,
     310,   311,     0,     0,   312,   771,     0,   315,     0,   772,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   773,   331,   332,   774,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   775,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   776,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   777,   389,   390,
     391,     0,   393,   394,   778,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   779,   409,
     780,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   781,   782,     0,     0,   423,   424,
     783,   426,   784,  1241,   428,   429,   785,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,  1131,   787,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   788,   789,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   472,   473,   474,
     475,   498,     0,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     3,
       4,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
     580,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,   579,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   623,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,   580,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   746,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     3,     4,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   747,   748,     0,   749,   750,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     751,   752,   129,     0,   130,   131,   132,   133,   753,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   754,   755,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   756,   195,   196,   197,
     198,   199,   757,     0,   201,     0,   202,   203,   758,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   759,   760,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   761,   240,   241,   242,   243,   244,   762,   763,     0,
     764,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     765,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   766,
       0,   767,   293,   294,   295,   768,     0,   297,   298,     0,
     300,     0,   769,   302,   770,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   771,
       0,   315,     0,   772,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   773,   331,   332,
     774,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   775,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   776,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   777,   389,   390,   391,     0,   393,   394,   778,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   779,   409,   780,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   781,   782,
       0,     0,   423,   424,   783,   426,   784,     0,   428,   429,
     785,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
    1131,   787,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     788,   789,   790,   791,   792,   793,   794,   795,   796,   797,
     798,   472,   473,   474,   475,   498,     0,   579,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,  1732,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,  1733,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,  1734,   414,     0,   416,  1735,
     418,  1736,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,  1737,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,  2688,     0,     0,     0,     0,  2689,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,   499,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   501,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,   547,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   554,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   555,   422,
       0,     0,   556,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,   579,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     618,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   621,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   625,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,   579,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   655,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,   579,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
    1153,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,  1155,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,  1565,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,  2330,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,  2344,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,   579,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
    2481,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   566,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     567,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   568,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   569,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   570,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   589,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   643,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     733,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   736,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   739,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     568,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   570,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,  1431,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
       0,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
    1529,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,  1809,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,  1821,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,  1823,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
       0,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,     0,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,     0,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   664,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,   665,   111,   112,   113,
       0,   666,   667,   668,   669,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   670,   671,   129,     0,
     130,   131,   132,   133,     0,     0,   672,     0,   136,   137,
     138,   139,   140,   141,   673,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   674,   153,   154,   155,
       0,     0,     0,   675,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   676,   677,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   678,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,     0,   195,   196,   197,   198,   199,     0,     0,
     201,     0,   202,   203,   679,   205,     0,   206,     0,   207,
     680,     0,   681,   210,   211,   212,   682,   214,     0,   215,
       0,     0,     0,   218,     0,   219,   220,   221,   222,   223,
     683,   225,   684,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   685,     0,   240,   241,
     242,   243,   244,   686,   687,     0,   688,     0,   248,   689,
     690,   251,   691,   253,   254,   255,   256,   257,   258,     0,
       0,   259,   692,   261,   693,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   694,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   695,   696,   697,   293,   294,
     295,     0,     0,   297,   298,   698,   300,     0,     0,   302,
     699,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,     0,   700,   315,   701,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,     0,   331,   332,     0,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   702,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   703,   367,   368,   369,   704,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   705,   389,   390,
     391,   706,   393,   394,   707,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   708,   409,
       0,   411,     0,   412,   413,     0,   414,   709,   416,   417,
     418,   419,   420,     0,   710,   711,     0,     0,   423,   424,
       0,   426,     0,     0,   428,   429,   712,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   713,     0,   448,
     714,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   664,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   472,   473,   474,
     475,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,   665,   111,   112,
     113,     0,   666,   667,   668,   669,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   670,   671,   129,
       0,   130,   131,   132,   133,     0,     0,   672,     0,   136,
     137,   138,   139,   140,   141,   673,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   674,   153,   154,
     155,     0,     0,     0,   675,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   676,   677,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,     0,   195,   196,   197,   198,   199,     0,
       0,   201,     0,   202,   203,   679,   205,     0,   206,     0,
     207,   680,     0,   681,   210,   211,   212,   682,   214,     0,
     215,     0,     0,     0,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   684,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   685,     0,   240,
     241,   242,   243,   244,   686,   687,     0,   688,     0,   248,
     689,   690,   251,   691,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   692,   261,   693,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   694,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   695,   696,   697,   293,
     294,   295,     0,     0,   297,   298,   698,   300,     0,     0,
     302,   699,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,     0,   700,   315,   701,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,     0,   331,   332,     0,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   702,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   703,   367,   368,   369,   704,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   705,   389,
     390,   391,   706,   393,   394,   707,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   708,
     409,     0,   411,     0,   412,   413,     0,   414,   709,   416,
     417,   418,   419,   420,     0,   710,   711,     0,     0,   423,
     424,     0,   426,     0,     0,   428,   429,   712,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   713,     0,
     448,   714,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,  2416,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   472,   473,
     474,   475,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,  2417,   111,
     112,   113,     0,   666,  2418,   668,   669,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   670,   671,
     129,     0,   130,   131,   132,   133,     0,     0,  2419,     0,
     136,   137,   138,   139,   140,   141,  2420,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,  2421,   153,
     154,   155,     0,     0,     0,  2422,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   676,   677,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   678,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,     0,   195,   196,   197,   198,   199,
       0,     0,   201,     0,   202,   203,   679,   205,     0,   206,
       0,   207,  2423,     0,  2424,   210,   211,   212,  2425,   214,
       0,   215,     0,     0,     0,   218,     0,   219,   220,   221,
     222,   223,   224,   225,  2426,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,  2427,     0,
     240,   241,   242,   243,   244,   686,   687,     0,   688,     0,
     248,  2428,  2429,   251,  2430,   253,   254,   255,   256,   257,
     258,     0,     0,   259,  2431,   261,  2432,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,  2631,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   695,  2434,   697,
     293,   294,   295,     0,     0,   297,   298,  2436,   300,     0,
       0,   302,   699,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,     0,  2438,   315,
    2439,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,     0,   331,   332,     0,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   702,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,  2440,   367,   368,   369,     0,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,     0,
     389,   390,   391,  2442,   393,   394,   707,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
    2632,   409,     0,   411,     0,   412,   413,     0,   414,  2444,
     416,   417,   418,   419,   420,     0,   710,   711,     0,     0,
     423,   424,     0,   426,     0,     0,   428,   429,  2445,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   713,
       0,   448,  2446,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   664,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   472,
     473,   474,   475,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   665,
     111,   112,   113,     0,   666,   667,   668,   669,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   670,
     671,   129,     0,   130,   131,   132,   133,     0,     0,   672,
       0,   136,   137,   138,   139,   140,   141,   673,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   674,
     153,   154,   155,     0,     0,     0,   675,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   676,   677,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,     0,   195,   196,   197,   198,
     199,     0,     0,   201,     0,   202,   203,   679,   205,     0,
     206,     0,   207,   680,     0,   681,   210,   211,   212,   682,
     214,     0,   215,     0,     0,     0,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   684,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   685,
       0,   240,   241,   242,   243,   244,   686,   687,     0,   688,
       0,   248,   689,   690,   251,   691,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   692,   261,   693,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,     0,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   695,   696,
     697,   293,   294,   295,     0,     0,   297,   298,   698,   300,
       0,     0,   302,   699,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,     0,   700,
     315,   701,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,     0,   331,   332,     0,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   702,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   703,   367,   368,   369,
       0,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
       0,   389,   390,   391,   706,   393,   394,   707,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,     0,   409,     0,   411,     0,   412,   413,     0,   414,
     709,   416,   417,   418,   419,   420,     0,   710,   711,     0,
       0,   423,   424,     0,   426,     0,     0,   428,   429,   712,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     713,     0,   448,   714,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     472,   473,   474,   475
};

static const yytype_int16 yycheck[] =
{
       6,     6,   622,   605,   493,   637,    47,   629,     0,   535,
       0,   588,   882,   705,   803,   803,  1003,   631,   533,    36,
    1005,     0,     0,     0,   651,  1178,     6,   583,   978,    16,
     883,  1356,  1389,   526,  1660,  1392,   711,    16,    30,   528,
    1744,  1282,  1758,  1148,  1148,  1761,  1148,   976,  1819,  1740,
      31,   983,  1148,  2165,   980,   885,  1825,  1183,  1827,  2195,
    2165,  1639,  1640,  1312,  1313,   959,  1644,   526,   534,   529,
      62,   901,   535,   622,  1816,   624,     0,   626,  1799,   735,
     811,   737,  1008,  1044,   914,  2073,  1863,  1864,  1865,  2196,
    2207,  2211,  1702,    21,    35,  1878,  2025,     5,     5,     9,
    1791,    20,    21,   670,   671,  1263,  2080,  1685,  1686,    90,
      49,    11,     5,     5,    73,     9,    49,     9,     0,   542,
      13,    14,  1149,    50,     5,     5,    93,   642,    58,     3,
     697,   602,  2493,  1364,   922,  1408,   169,  2477,   602,     5,
      75,    40,    58,     0,    58,     5,     5,    13,    14,  2489,
    1892,    86,     5,    13,    14,     5,     5,    31,    32,     9,
      13,    14,     5,  2566,   741,     5,     5,     5,     5,   170,
      13,    14,     5,     5,    75,     5,     5,     5,   130,    13,
      14,    27,    40,   120,  1410,    86,    27,     4,  2474,   137,
    2544,    11,     9,    34,   117,   870,  1277,     3,     4,     5,
     122,  2635,    67,     9,   992,   157,    94,   995,   996,  2011,
    2404,    93,   705,  2668,   169,     4,    83,  1959,  1960,  2122,
       9,    41,   283,    27,    27,  2079,    11,  2581,   222,   120,
      34,    34,    78,  1277,   222,    58,    93,   107,   117,  2733,
     285,    87,   120,   107,   170,    11,    58,   115,   291,    11,
     159,  2773,   291,    73,    68,   307,   376,   135,   161,  2452,
     127,   355,   274,   830,   831,    11,   118,   271,    27,    37,
     116,   208,  2840,   159,   268,    41,  2589,   803,     8,    41,
     268,    11,   170,   495,   810,  1016,    16,    17,    18,   856,
     161,    27,  1023,   118,   168,    41,   170,  2610,    11,   991,
      11,   166,  2705,   402,   881,   147,   438,    73,   130,   115,
    2087,    73,   189,  2653,  2668,   929,   204,   438,   270,   812,
      48,  1277,   459,   275,   233,    13,    14,    73,   280,  2441,
     886,     4,   220,   346,   328,   484,     9,   108,   437,   191,
     806,   187,   230,   416,   481,   108,  2334,   233,   497,  2871,
    2338,  2325,  2488,   199,   196,   226,   124,  1984,  2137,   915,
      59,   374,    73,   495,   267,  2136,   191,   496,    67,   381,
     499,   130,  1982,   282,   495,   495,   264,   303,  2485,  2947,
    2071,   414,  2073,   377,  2100,  2012,   942,   460,     0,   377,
    1284,  2133,   969,  2135,   130,   209,   275,   285,   924,   925,
     367,   495,   163,   285,   268,   498,  2968,   275,   214,  2903,
    2604,  2772,  1990,  1991,  1992,  1993,  1286,   347,  1996,  1997,
    1998,  1999,  2000,  2001,  2002,  2003,  2004,  2005,   285,   922,
     236,   347,   436,   347,   495,   302,   403,  1277,   490,   317,
    2633,  2754,   436,  2965,  2223,   268,   174,  1049,   436,  2803,
     495,   484,  3014,   318,   380,  2257,   499,   499,   280,   414,
     499,  1702,   190,   351,   497,   195,   348,   195,   345,   421,
    2324,  1552,  2050,  2051,  2377,  2930,   164,   444,  2912,   414,
     432,  2884,   115,  2769,   448,   945,  1436,   217,  2842,  1516,
     457,   348,  1765,   485,   495,   485,   967,  1746,   991,   436,
    2242,   400,  1396,   967,   232,   453,   485,   485,   485,  1553,
     391,   392,  2873,   414,   481,   938,   438,   440,   535,  1760,
     526,  1736,  1737,  2635,   347,  2645,  1158,  1149,   495,   535,
    2635,  1492,  2872,   403,   493,   347,  1521,   236,   497,   447,
    1766,   408,   400,   384,   390,   436,   496,   393,   535,   499,
     438,   374,   313,     8,   187,   534,    11,   287,   564,   565,
      23,    16,    17,    18,   605,  2553,   431,   106,   495,   499,
    2558,  2545,  1803,  2561,   448,   457,  2930,   242,    33,   459,
     384,   384,   588,   499,   494,   499,   493,   495,   495,  2518,
     497,   491,   486,   487,  1171,   484,  1754,  1553,  1554,   586,
     457,   481,   495,   495,  2387,   597,   495,   597,  1235,  2380,
     459,   327,  1179,  1180,   496,   495,   498,   545,   597,   597,
     597,   627,   628,   629,   543,  2394,   545,   546,  1359,   495,
    1591,  1253,   481,   307,   615,   495,   495,   270,   577,   496,
     356,   498,   495,  2334,   577,   495,   495,  2338,   589,   568,
     457,   379,   495,  1267,  2375,   495,   495,   495,   495,  2779,
    2777,   495,   495,   495,  2771,   495,   495,   495,   457,   486,
     487,   491,   135,   597,   481,   493,   242,  1465,     4,   497,
     486,   487,   356,     9,  1177,  1178,    30,  1475,   342,  1266,
    1478,  1268,   481,  1307,  1308,  1272,  2473,   486,   487,   705,
    1322,   486,   487,   488,   489,   490,   491,    67,  1285,   248,
      54,  1237,  2700,  1553,  1554,  1555,   526,   256,  1177,  1234,
     486,   487,   488,   489,   490,   491,   488,   489,   490,   491,
    1223,   495,  1309,  2869,  2476,   741,  1225,  1226,   198,  1353,
    1362,  1982,  1298,  1232,   493,  1639,  1640,  1361,   497,  1363,
    1644,  2361,   482,   483,   484,   115,   486,   487,   488,   489,
     490,   491,   217,     5,  1223,   171,     8,   249,  1228,   434,
    1236,  2878,    14,   419,  1237,   488,   489,   490,   491,   459,
      31,    32,   130,    25,  2033,  1574,  1574,    29,  2924,   242,
     270,  1685,  1686,  1919,   360,   275,  1527,   803,   145,  1925,
    2912,   481,    23,   242,   810,   811,   812,  2912,    29,   242,
     407,    23,   409,   173,  1667,   495,   490,    29,    23,  1748,
    2591,   332,   828,  1316,    29,   403,   289,   806,   185,   186,
     495,  1453,   287,   450,   130,  1665,  1325,   243,   115,    24,
      11,  1461,    93,   367,    15,    30,   326,  2062,  2063,  2064,
    2065,   857,    23,  2544,   407,   175,   409,  1316,  1843,  1729,
     367,   157,  2553,    34,    35,   882,   213,  2558,   434,     4,
    2561,   877,   878,   879,     9,   881,   882,    62,   242,   403,
    1536,   344,   363,   346,   803,  1434,  1488,  1489,  1490,  2996,
    2581,   810,   403,  2046,  1516,   705,   403,   254,   255,   905,
     495,  1557,    75,  1559,   117,  1866,  1562,   360,    64,    65,
     270,   374,  1461,    86,   135,   275,   236,    88,   924,   925,
     444,   360,   270,   135,  2165,  1851,   332,   360,   459,   495,
     135,  1480,   280,   457,  2512,    75,  1485,   444,   490,   450,
     254,   255,    13,    14,   291,   497,    86,   490,   954,  1442,
     481,   175,   958,   959,   497,    23,  1533,   481,   318,     5,
       4,    29,   368,   969,   495,     9,    13,    14,  2739,   888,
    1800,   495,   495,  1905,   334,  2744,  1908,  2668,   897,   275,
     478,   434,  1471,  1442,   280,   991,   219,  1476,   495,   202,
       8,   972,   911,    11,  1509,   434,   360,   403,    16,    17,
      18,   434,   812,   922,   332,   924,   925,   364,   365,  2700,
    1016,   497,   236,   952,   953,    33,   955,  1023,   285,   952,
     953,   298,   955,     0,  2602,   168,  1007,   482,   483,   484,
     677,   486,   487,   488,   489,   490,   491,  1581,  1044,    16,
     368,  1585,   495,  1587,   450,   493,   478,   495,  1574,   497,
     364,   365,   699,    30,  1547,   268,   495,   270,    23,    36,
     488,  2687,   495,  1589,    29,    94,   290,   135,   289,   499,
     434,   431,    49,    13,    14,   403,  1653,   289,   438,  2705,
      13,    14,   729,   430,   289,    62,   495,   407,  1547,   409,
     367,   496,  2197,  2197,  2672,  2197,  1990,  1991,  1992,  1993,
    1593,  2197,  1996,  1997,  1998,  1999,  2000,  2001,  2002,  2003,
    2004,  2005,  2803,  1690,   434,  1652,   367,  1654,  1655,   340,
    2361,   496,   450,   344,   499,   421,   403,   242,   340,    13,
      14,   495,   344,   159,  1593,   340,   432,  2841,   164,   344,
    1742,   170,   496,  1149,   496,   159,   457,   499,   459,  2302,
     164,  2842,   403,   374,    54,  2025,  2050,  2051,    23,  1948,
    2147,   495,   374,  2148,    29,  1171,  1822,   444,  1824,   374,
     135,  1177,  1178,   478,   170,   204,   566,   567,   219,   569,
     457,   991,   332,   407,  2134,   409,    23,   407,   169,   409,
    2816,   220,    29,   444,   215,   842,   407,   448,   409,   217,
     150,   230,   496,  2190,   481,   499,   457,   233,   204,   496,
     434,   340,   499,   860,  2146,  2986,  2148,  1223,   495,   233,
     441,   289,    36,   496,   220,   496,   499,  2931,   499,   441,
     481,  1237,  2948,  2949,   230,   264,   441,    13,    14,  2930,
     149,    55,   150,   149,   495,   360,  2950,  1253,  1923,  1924,
    1237,   150,   496,   403,  1886,   499,   282,  1236,   496,   150,
    1266,   499,  1268,    13,    14,  1271,  1272,  1894,   282,   287,
     135,  1263,   340,  1263,   496,  1281,   344,  1283,  1284,  1285,
    1286,  1287,  1288,  1289,  1263,  1263,  1263,   496,  2118,  3005,
     499,   495,   106,   198,   496,   270,   496,   499,   135,   499,
     450,   496,    36,  1309,   499,  1311,   374,    13,    14,  3013,
    1316,  1317,  1318,  1319,  1320,  1321,  1322,    13,    14,   434,
    1326,  1327,   351,  2343,   289,  1331,  2346,    13,    14,  1335,
     501,  1953,  1338,  1339,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,   496,   496,  1349,   499,   499,   497,   175,   496,   496,
    1356,   499,   499,  1359,   496,   351,  1362,   499,  1277,   530,
     496,   450,  2515,   499,    13,    14,   496,  1177,  1178,   499,
     198,   496,    82,   441,   499,  1381,   461,  2165,   496,   344,
     495,   499,   496,   197,   496,   499,   496,   499,   496,   499,
    1396,   499,  1379,   496,  2635,     8,   499,   496,    11,   447,
     499,  1407,  1408,  2728,  2339,  1898,  2341,     8,   236,   374,
      11,    13,    14,  1223,  2028,    16,    17,    18,   589,   599,
     496,   601,  1948,   499,   289,  2410,   496,   145,    41,   499,
     496,  2381,    33,   499,   248,    48,  1442,  1429,  2133,  1898,
    2135,   159,   256,  2020,   495,  1451,   164,  1453,   314,  1368,
      13,    14,   289,  1942,   268,   360,    13,    14,   367,   495,
      73,   367,   290,   368,   482,   483,   484,   150,   486,   487,
     488,   489,   490,   491,    35,   340,   441,  2330,  1971,   344,
      13,    14,    36,    13,    14,   299,  1492,    13,    14,  1495,
    1496,  2344,  1498,   298,   403,   213,  1989,   403,   403,    13,
      14,    55,   495,   340,    13,    14,  1316,   344,   485,   374,
    1516,  2125,  1971,    13,    14,   233,    13,    14,    13,    14,
    2673,  1527,  2015,    13,    14,   355,   356,  1533,  2084,  2022,
    1989,  1523,   346,   355,   356,   444,   495,   374,   444,   258,
     259,  1547,   355,   356,  2166,   450,  2168,   495,   457,  2906,
    2907,   457,   106,  2046,   368,   150,  2015,   534,   535,   355,
     356,   174,   367,  2022,   282,   364,   365,   150,  1574,   924,
     925,   150,   481,   291,   388,   481,   441,   190,  2234,   407,
    2182,   409,   195,  1589,   285,  1591,   495,  1593,   342,   495,
      36,   403,  1598,   495,   231,   493,     5,  1603,   403,   495,
     577,     5,   495,   431,   441,   495,   434,    87,  2235,    89,
     495,    91,   164,  2401,   495,   495,   217,   495,  2512,   232,
     597,   495,   495,     5,  1641,  2982,     5,   495,   495,     5,
       5,   495,  1442,  1639,  1640,  1641,   495,   495,  1644,   444,
     495,   495,   495,   197,   495,   495,  1652,  1653,  1654,  1655,
     495,     9,   457,   146,  2641,  1574,  1662,   495,   458,   499,
    1666,  1580,   296,  1669,   215,    97,   499,   496,    36,   280,
    1589,  2912,  2165,  1690,   287,   164,   481,   282,   164,  1685,
    1686,   231,   496,  2198,  1690,   374,   287,   495,   414,   495,
     495,    86,   499,   414,   248,    54,   261,    54,  1704,   414,
     414,  1707,   256,  1709,   496,   414,  2165,   504,  2602,   457,
       8,   150,   430,    11,   268,    93,   497,  2506,    16,    17,
      18,   142,   270,  1729,   270,    36,   495,   495,   495,     9,
      35,   412,   412,   493,  1740,  1740,  2350,  1547,  2231,   414,
     493,   414,   414,   414,   496,   299,   453,    11,   499,  2441,
     495,   342,   494,  1759,   501,  2369,   499,  2413,  2414,   499,
    1740,   412,  1754,   504,  1754,   495,   379,   275,  1774,  1775,
     495,   414,  2231,   944,   160,  1754,  1754,  1754,  2672,  1796,
     178,   169,   495,  1593,   496,  1791,  1791,   213,   499,   377,
     286,   222,   346,   438,   307,   307,   499,   496,    36,   222,
     495,   270,  1808,   222,   291,   323,   283,   495,   450,  2302,
     495,  1791,   150,   150,   368,    36,   457,   270,   285,  1825,
    1826,  1827,   496,   478,   493,   478,   496,   285,   496,   806,
     496,   496,   496,   403,   388,   270,    36,    36,   496,   496,
       6,   169,   494,  2713,   169,    11,   496,  2635,   496,    15,
     496,   478,   496,   153,    20,    21,    22,    23,    24,   497,
    1866,    27,   454,   496,    30,    31,   479,   844,    34,    35,
     496,   496,   496,   486,   487,   488,   489,   490,   491,   496,
     499,   482,   483,   484,   496,   486,   487,   488,   489,   490,
     491,   495,  1898,   496,   414,   495,    62,   496,   495,   495,
     480,   286,   286,   286,   436,   882,  1912,   241,   444,   499,
     454,   285,   499,  1832,   270,   484,   414,   495,   150,  2412,
     198,    87,    88,    89,    90,    91,   289,   150,   150,   414,
     414,   414,   414,   277,   277,   494,   496,    36,   457,   495,
     342,   496,  1948,   283,   285,    36,   499,  1953,  2441,   150,
     141,     8,   494,  2412,  1946,   496,   494,  1876,   150,    16,
      17,    18,  1968,   275,   169,  1971,    11,   164,   496,   496,
     499,  1977,  1891,   496,  1980,   952,   953,  1983,   955,  2964,
    2506,   496,   169,  1989,  1990,  1991,  1992,  1993,   495,   287,
    1996,  1997,  1998,  1999,  2000,  2001,  2002,  2003,  2004,  2005,
     454,   295,   496,  2009,  2010,   496,   486,  2013,  2025,  2015,
    2880,   403,   169,   481,  2020,   178,  2022,  2058,   499,  2025,
     496,   496,  2515,   495,   286,   348,   443,   150,  2034,  1948,
      84,  2037,   496,  2039,   499,   495,  1955,   173,  1957,  2056,
    2046,  2047,  1961,  1962,  2050,  2051,   496,   496,   425,  2055,
    2056,   496,   495,    36,   496,   499,  2073,   495,  1229,    79,
    1231,   494,   499,   499,   169,  2071,  2071,  2073,  2073,   438,
     405,   496,   496,   495,   220,   294,   496,   220,   496,  2085,
     496,   495,   292,   496,   495,   495,    54,   182,  1898,   145,
     496,  2071,   457,  2073,   484,   496,   496,   200,   188,   275,
     580,   275,   496,   159,   497,  2111,   497,   414,   164,    36,
     497,  2600,   414,   107,   270,   285,   497,   497,  2740,    36,
     169,   457,  2128,  2755,  2912,   497,   497,   497,   220,   484,
     497,   497,   456,   497,    86,   497,   497,   617,     8,   499,
     131,    11,  2635,   497,   497,   497,    16,    17,    18,   497,
     497,   497,   497,   334,   222,   497,  2162,   213,   497,  2165,
    2166,  1971,  2168,    33,   497,   497,   497,   497,   497,   495,
     650,   651,   652,   653,   495,   497,  2635,   233,   495,  1989,
    2673,   495,   495,    81,   482,   483,   484,   496,   486,   487,
     488,   489,   490,   491,   495,   115,   495,    36,    73,  2801,
       8,   150,  2194,    11,   496,  2015,   122,   150,    16,    17,
      18,  2704,  2022,  2845,  2707,    36,   356,   496,   356,   304,
      36,   495,   495,   499,   496,  2231,   282,  2219,   495,  2221,
     287,   325,   495,    41,   495,   291,  2046,   443,    73,    36,
      48,   187,  2248,   438,   495,  2704,  2165,  2824,  2707,  2826,
     425,   288,    67,    67,    54,   495,   499,   496,   495,  1236,
      36,   438,   374,   275,   484,    73,  1437,   246,   187,   495,
     425,    36,  2761,  2192,   288,   288,  1447,   495,  1449,   495,
     495,  1452,   496,   496,   496,   496,  1263,  1458,   358,  1460,
    2296,  2297,  2914,   268,   496,  2301,  2302,   285,     9,  2919,
    2306,  1472,   341,  2309,  2310,   200,  1477,   496,  2314,   285,
    1481,  1482,  1483,  1484,   285,  1486,  1487,   355,   496,   120,
     486,   436,   495,    33,   490,     9,    22,   493,  2334,  2334,
    2127,   496,  2338,  2338,   944,   501,   972,   597,  1759,   916,
    1424,   962,  2834,   961,  2813,  2946,  1396,   217,  1774,  2838,
    2089,  1328,  2893,  2828,  2334,  2165,  2356,  2726,  2338,  1423,
    2366,  2073,   528,   529,   530,  2325,   174,  1791,  2340,  2701,
     964,  2071,  2803,  2802,   430,  2820,  2368,  2821,  2370,   545,
    1277,  2572,   190,  1277,  2896,  1277,  2897,   195,  2394,  1277,
    1354,  2934,  1667,  1760,  1498,  1708,  1268,  2403,   564,   565,
     566,   567,  1599,   569,  1705,  2366,  2412,   565,  1743,   217,
     218,  2088,  1379,  1820,   580,  2149,  1459,   287,  2162,  2912,
     526,  2231,  1887,   589,   232,   482,   483,   484,  2916,   486,
     487,   488,   489,   490,   491,  2441,  2989,   493,  2357,  2747,
     496,   497,  2963,  2951,   978,  2658,   926,  1826,  1814,   615,
    2168,   617,  1429,  2912,  2212,  2961,  2914,  2911,  1811,  1225,
    1177,  2842,   270,  2126,     8,   273,  2371,    11,  2577,  2910,
    1380,  2204,    16,    17,    18,  1237,  1589,  2406,  2795,   287,
    1882,  1953,  2506,  2192,   650,   651,   652,   653,    -1,    -1,
      50,    -1,  2302,   973,    -1,  2487,    -1,   977,    36,    -1,
    2506,    67,    -1,    -1,    -1,    -1,  2512,    73,    -1,  2515,
     990,    -1,  2518,    -1,    -1,    -1,    -1,    55,    -1,    -1,
      86,  2527,  2528,    -1,    -1,  2531,    -1,    -1,    -1,    -1,
      -1,  1011,    -1,    -1,    -1,    95,    -1,    -1,  2544,  2544,
      -1,    -1,    -1,    -1,    -1,    -1,  1523,  2553,  2553,   115,
      -1,   117,  2558,  2558,    -1,  2561,  2561,    -1,    -1,    -1,
      -1,   121,  2568,  2569,  2544,  2484,    -1,    -1,   106,    -1,
      -1,   379,    -1,  2553,    -1,  2581,  2581,  2583,  2558,   139,
      -1,  2561,    -1,   143,    -1,    -1,    -1,  2506,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2602,    -1,    -1,   705,
      -1,  2581,  2412,    -1,    -1,   165,    -1,   173,   168,    -1,
      -1,    -1,   482,   483,   484,   526,   486,   487,   488,   489,
     490,   491,    -1,   183,    -1,   175,    -1,    -1,    -1,  2635,
      -1,  2441,    -1,    -1,    -1,   173,   202,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   198,    -1,
     816,    -1,  2571,    -1,  2646,    -1,    -1,    -1,    -1,   197,
      -1,    -1,  2668,  2668,  1641,    -1,  2672,  2673,    -1,    -1,
      -1,   479,  1152,   217,   482,   483,   484,  2669,   486,   487,
     488,   489,   490,   491,    -1,    -1,   236,    -1,  2668,    -1,
    2696,    -1,    -1,    -1,  2700,  2700,  2713,    -1,  2704,    -1,
      -1,  2707,    -1,   526,   270,  2515,   812,  2713,    -1,   275,
     248,    -1,    -1,  1690,    -1,   275,  2635,   883,   256,    -1,
    2700,    -1,  2728,   283,  1895,  2731,    -1,    -1,    -1,    -1,
     268,  1708,    -1,    -1,  2740,    -1,    -1,    -1,  2744,  2745,
     290,    -1,    -1,   287,    -1,    -1,    -1,  1724,    -1,    -1,
      -1,    -1,   318,    -1,    -1,  1235,    -1,    -1,    -1,    -1,
     926,   299,    -1,  1740,    -1,    -1,   326,    -1,   334,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1754,   944,   945,
      -1,    -1,    -1,    -1,  2776,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   705,    -1,    -1,  2803,  2803,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   972,   973,   346,   975,
     360,   977,   978,    -1,  1791,    -1,    -1,    -1,  2824,  1796,
    2826,    -1,  2828,  2803,   990,  2635,  2832,    -1,    -1,    -1,
     368,    -1,    -1,    -1,    -1,    -1,  2842,  2842,    -1,    -1,
      -1,  1007,    -1,  2835,    -1,  1011,    -1,    -1,    -1,    -1,
     388,  2770,    -1,    -1,  2860,    -1,    -1,   407,    -1,   409,
      -1,    -1,  2842,  2673,    -1,   431,    -1,    -1,    -1,    -1,
      -1,     0,   438,    -1,  2880,   425,    -1,  1357,    -1,    -1,
      -1,   431,   705,    -1,   434,   991,    -1,  2893,    -1,    -1,
      -1,    -1,    -1,    -1,  2704,    -1,    -1,  2707,  1378,    -1,
    1380,   812,    -1,    -1,    -1,    -1,  2912,    -1,  2914,   526,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2930,  2930,    -1,  2933,  2934,    -1,
      -1,  2923,    -1,    -1,    -1,    -1,    -1,    -1,   482,   483,
     484,  1421,   486,   487,   488,   489,   490,   491,    -1,    -1,
    2930,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2129,    -1,
      -1,    -1,  2968,    -1,    93,    -1,    -1,    -1,    -1,  1946,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1144,    -1,
      -1,    -1,    -1,  2154,    -1,    -1,  1152,    -1,    -1,   812,
      -1,    -1,    -1,  2912,    -1,  1161,    -1,    -1,  2169,  2170,
    2171,  2172,  2173,  2174,  2175,  2176,  2177,  2178,  3014,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1190,    -1,  1506,  1507,    -1,    -1,
     159,    -1,    -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2025,   178,
      -1,    -1,    -1,   182,    -1,    -1,    -1,    -1,    -1,  1225,
    1226,    -1,  1228,  1229,    -1,  1231,  1232,    -1,    -1,  1235,
      -1,  1177,  1178,    -1,    -1,    -1,    -1,    -1,    -1,  2056,
     991,    -1,    -1,    -1,   213,    -1,    -1,    -1,   705,    -1,
      -1,    -1,    -1,    -1,  2071,    -1,  2073,    -1,    -1,    -1,
      -1,    -1,  2912,    -1,   233,    -1,    -1,    -1,    -1,    -1,
       0,    -1,    -1,    -1,    -1,  2286,  1282,  1223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1293,    -1,    19,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      -1,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,    -1,   285,    47,    -1,  1325,
      -1,    -1,   291,    -1,    -1,    -1,    56,    -1,   991,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    79,
    1356,  1357,    -1,    -1,    -1,   812,   325,    -1,    -1,    -1,
      -1,    91,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,
    1316,    -1,  1378,    -1,  1380,    -1,    -1,  2194,    -1,   348,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,    -1,     0,    -1,    -1,
      -1,    -1,  2219,    -1,  2221,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,  1734,  1421,    -1,    -1,    -1,   149,
      -1,   151,   152,    -1,  1430,  1431,  1177,  1178,    -1,    -1,
    1436,  1437,    -1,    -1,   403,   165,    -1,    -1,    -1,    -1,
      -1,  1447,  1448,  1449,  1450,    -1,  1452,    -1,    -1,    -1,
      -1,    -1,  1458,    -1,  1460,    -1,    -1,    -1,    -1,    -1,
      -1,   430,    -1,    -1,   194,  1471,  1472,    -1,    -1,   438,
    1476,  1477,  1223,    -1,    -1,  1481,  1482,  1483,  1484,   209,
    1486,  1487,    -1,    -1,    -1,   454,    -1,   456,   457,    -1,
      93,    -1,    -1,    -1,    -1,    -1,  1442,    -1,    -1,    -1,
    1506,  1507,  1508,    -1,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1177,  1178,    -1,  2334,  1524,    -1,
      -1,  2338,    -1,    -1,   493,    -1,    -1,   496,   497,   498,
      -1,    -1,    -1,    -1,   991,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2368,    -1,  2370,    -1,    -1,   159,    -1,   526,    -1,
    1223,   164,    -1,  1883,    -1,  1316,   169,    -1,    -1,    -1,
      -1,    -1,    -1,  1893,  1894,   178,    -1,  1897,    -1,   182,
      -1,    -1,   312,    -1,    -1,   315,    -1,    -1,    -1,    -1,
    2601,    -1,    -1,    -1,  1914,    -1,    -1,    -1,    -1,    -1,
      -1,  1547,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
     213,    16,    17,    18,   344,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   353,  1944,  2636,  2637,    -1,    -1,    -1,
     233,    -1,     8,    -1,    -1,    11,    -1,   367,    -1,    -1,
      -1,  2652,    -1,    -1,   374,    -1,    -1,  1593,   378,    -1,
      -1,    -1,    -1,  1316,  1660,    -1,    -1,    -1,   388,    -1,
      -1,  1667,    -1,    -1,    -1,    41,    -1,    -1,    -1,   399,
    2487,    -1,    48,   403,    -1,    -1,    -1,    -1,    -1,   282,
      -1,    -1,   285,    -1,    -1,    36,    -1,    -1,   291,    -1,
      -1,  1442,    -1,    -1,    -1,    -1,  1702,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,   439,
      -1,    -1,    -1,    -1,   444,    -1,    -1,    -1,    -1,  2730,
    1177,  1178,   325,    -1,    -1,    -1,    -1,   457,  1734,    -1,
      -1,    -1,    -1,    -1,  1740,    -1,  2553,   705,    -1,    -1,
      -1,  2558,    -1,    -1,  2561,   348,  2757,    -1,  2068,  2069,
    2070,   481,    -1,    -1,    -1,   106,   107,    -1,    -1,    -1,
       3,    -1,     5,    -1,   115,   495,  1223,   143,   498,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,  1442,
      -1,    -1,    -1,    -1,    -1,  1791,    -1,  1793,  2108,    -1,
    1796,    -1,    -1,  1799,    -1,    -1,  1547,    -1,   174,    -1,
     403,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
    1816,    -1,   217,    -1,   190,    -1,    -1,    -1,    -1,   195,
      -1,    -1,   173,    -1,    -1,    -1,    -1,   430,    -1,  2646,
      -1,    -1,    -1,    -1,    73,   438,    -1,    -1,    -1,    -1,
      -1,    -1,  1593,    -1,   812,    -1,   197,    -1,    -1,    -1,
      -1,   454,  2669,   456,   457,    -1,   232,    -1,    -1,  1316,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,  1878,    -1,    -1,    -1,    -1,  1883,    -1,  2199,
      -1,    -1,   287,  2700,  1547,    -1,  1892,  1893,  1894,  1895,
     493,  1897,    -1,   496,   497,   498,  2713,   248,    -1,    -1,
      -1,    -1,    -1,    -1,   143,   256,    -1,    -1,  1914,    -1,
      -1,   287,    -1,    -1,    -1,  2235,    -1,   268,    -1,   270,
    1926,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1593,    -1,    -1,    -1,    -1,   174,  1942,    -1,  1944,    -1,
      -1,    -1,   185,   186,    -1,    -1,    -1,    -1,   299,    -1,
      -1,   190,  1898,  1959,  1960,    -1,   195,    -1,    -1,  2776,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1982,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1442,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   232,    -1,   346,    -1,  2317,  2318,  2319,
    2320,    -1,    -1,   379,    -1,    -1,    -1,   250,   251,   252,
     253,   254,   255,    -1,    -1,   258,   259,   368,  2835,    -1,
      -1,    -1,    -1,   991,    -1,  1971,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   388,    -1,   390,
      -1,    -1,   393,  1989,    -1,    -1,    -1,    -1,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2068,  2069,  2070,  2071,    -1,  2073,  2074,  2015,
      -1,    -1,    -1,  2079,  2080,    -1,  2022,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
    1547,    -1,    -1,    -1,   564,   565,    -1,    -1,    -1,    -1,
    2046,    -1,  2108,   479,    -1,    -1,  2923,    -1,    -1,   803,
     486,   487,   488,   489,   490,   491,   810,    -1,    -1,    -1,
    2126,   364,   365,  2129,   109,   110,    -1,  2133,  2134,  2135,
      -1,  2137,    -1,    -1,    -1,    -1,  1593,    -1,    -1,    -1,
     379,    -1,    -1,    -1,   495,    -1,    -1,  1898,  2154,    -1,
    2156,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
      -1,    -1,    -1,  2169,  2170,  2171,  2172,  2173,  2174,  2175,
    2176,  2177,  2178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2195,
      -1,    -1,    -1,  2199,    -1,    -1,    -1,    -1,    -1,    -1,
     185,   186,    -1,   897,    -1,    -1,  2212,    -1,    -1,  1177,
    1178,    -1,    -1,    -1,    -1,    -1,    -1,  2223,    -1,  2165,
    1971,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   922,  2235,
     924,   925,   475,   476,    -1,  1898,  2242,    -1,  1989,    -1,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,   488,
     489,   490,   491,    -1,    -1,  1223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2015,   250,   251,   252,   253,   254,
     255,  2022,    -1,   258,   259,    -1,    -1,    -1,    -1,    -1,
    2286,    -1,    -1,    -1,    -1,  2231,  2292,    -1,    -1,  2609,
      -1,    -1,    -1,    -1,    -1,  2046,    -1,    -1,   992,    -1,
      -1,   995,   996,    -1,    -1,    -1,    -1,    -1,  1971,  2315,
      -1,  2317,  2318,  2319,  2320,    -1,    -1,    -1,  2324,  2325,
      -1,  2327,    -1,    -1,  2330,    -1,  1989,  2647,  2334,    -1,
      -1,    -1,  2338,    -1,    -1,    -1,    -1,    -1,  2344,    -1,
      -1,   811,    -1,    -1,    -1,  2665,    -1,    -1,  1316,    -1,
      -1,    -1,  2015,    -1,    -1,  2361,  2302,    -1,   828,  2022,
    2366,    -1,    -1,    -1,    -1,  2371,    -1,    -1,    -1,  2375,
      -1,    -1,    -1,    -1,    -1,  2381,    -1,   109,   110,   364,
     365,  2387,    -1,  2046,    -1,    -1,    -1,   857,    -1,    23,
      -1,    -1,    -1,    -1,    -1,    29,    -1,    -1,    -1,    -1,
      -1,  2407,    36,    -1,    -1,    -1,    -1,   877,   878,   879,
      -1,    -1,   882,    -1,  2165,    -1,    -1,    -1,  2738,    -1,
      -1,    55,    -1,    -1,    -1,    23,    -1,    -1,    -1,    -1,
      -1,    29,    -1,    -1,    -1,   905,    -1,    -1,    36,    -1,
      -1,  1898,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   185,   186,  2775,    -1,    55,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2412,    -1,    -1,    -1,
    2476,    -1,   106,    -1,  1442,    -1,    -1,    -1,    -1,    -1,
    2231,  1175,  2488,    -1,   954,    -1,    -1,    -1,   958,   959,
     475,   476,  1186,  2499,  1188,  2441,    -1,    -1,    -1,  1193,
      -1,   135,  2165,    -1,    -1,    -1,    -1,    -1,   106,    -1,
     495,    -1,    -1,    -1,  1971,    -1,  1210,    -1,   250,   251,
     252,   253,   254,   255,    -1,    -1,   258,   259,    -1,  2535,
      -1,    -1,  1989,    -1,    -1,    -1,    -1,   135,  2544,  2545,
      -1,    -1,  2548,    -1,    -1,  2551,  1016,  2553,  1242,  1243,
      -1,  2302,  2558,  1023,    -1,  2561,    -1,  2563,  2015,    -1,
    2566,    -1,    -1,   197,    -1,  2022,    -1,    -1,  2231,  2515,
      -1,    -1,    -1,    -1,  1044,  2581,    -1,    -1,    -1,  1547,
    1274,  1275,    -1,    -1,  1278,  1279,    -1,    -1,    -1,  2046,
      -1,    -1,    -1,    -1,  2600,  2601,    -1,    -1,    -1,   197,
      -1,    -1,    -1,  2609,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   256,    -1,    -1,  1593,    -1,    -1,    -1,    -1,
    2636,  2637,   364,   365,   268,    -1,    -1,    -1,    -1,  2302,
      -1,  2647,    -1,  2649,    -1,    -1,  2652,    -1,    -1,    -1,
     248,    -1,    -1,    -1,    -1,   289,    -1,    -1,   256,  2665,
      -1,  2412,  2668,    -1,    -1,   299,    -1,    -1,    -1,    -1,
     268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2687,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2635,
    2441,   289,    -1,    -1,  2700,    -1,    -1,    -1,    -1,  2705,
      -1,   299,    -1,    -1,    -1,    -1,   340,    -1,  2165,    -1,
     344,    -1,   346,  1407,  1408,    -1,    -1,  2723,    -1,    -1,
      -1,    -1,  2728,    -1,  2730,    -1,    -1,  2673,    -1,    -1,
      -1,    -1,  2738,    -1,   368,    -1,    -1,    -1,    -1,    -1,
     374,    -1,   340,   475,   476,    -1,   344,    -1,   346,  2412,
      -1,  2757,    -1,    -1,   388,  2761,    -1,    -1,  2704,    -1,
      -1,  2707,    -1,    -1,  2515,    -1,    -1,    -1,    -1,  2775,
     368,  1465,    -1,    -1,  2231,    -1,   374,    -1,  2441,    -1,
      -1,  1475,    -1,    -1,  1478,    -1,    -1,    -1,    -1,    -1,
     388,    -1,    -1,    -1,    -1,    -1,    -1,  2803,     0,    -1,
      -1,  1271,    -1,    -1,    -1,    -1,  2812,   441,    -1,    -1,
    2816,  1281,    -1,  1283,  2820,    -1,  1286,  1287,  1288,  1289,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2838,  2839,  2840,    -1,  2842,    -1,    -1,    -1,
      -1,  1311,    -1,   441,    -1,  2302,    -1,  1317,  1318,  1319,
    1320,  1321,  2515,    -1,  1548,  1549,  1326,  1327,    -1,    -1,
      -1,  1331,    -1,  2869,    -1,  1335,    -1,    -1,  1338,  1339,
    1340,  1341,  1342,  1343,  1344,  1345,  1346,    -1,  2884,  1349,
    1574,    -1,    -1,    -1,  2635,    -1,  1356,    -1,    -1,  1359,
    2896,    93,    -1,    -1,    -1,  1589,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2910,    -1,    -1,    -1,    -1,    -1,
      -1,  1381,    -1,    -1,    -1,    -1,    -1,    -1,  2924,    -1,
      -1,    -1,  2673,    -1,  2930,    -1,    -1,    -1,    -1,    -1,
    1898,    -1,    -1,    -1,    -1,    -1,    -1,  1407,  1408,    -1,
    2946,  2947,    -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2704,    -1,  2412,  2707,   159,    -1,    -1,
      -1,    -1,   164,    -1,    -1,    -1,  2912,   169,    -1,    -1,
      -1,    -1,  2635,    -1,    -1,    -1,   178,    -1,    -1,    -1,
     182,    -1,    -1,    -1,  2441,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1971,    -1,    -1,    -1,    -1,    -1,    -1,
    2673,   213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1989,  1492,    -1,    -1,  1495,  1496,    -1,  1498,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2704,    -1,    -1,  2707,    -1,    -1,  2015,    -1,    -1,
      -1,  1745,    -1,    -1,  2022,    -1,    -1,  1527,  2515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1764,  1765,    -1,    -1,    -1,    -1,    -1,    -1,  2046,    -1,
     282,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,   291,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1591,    -1,   325,    -1,    -1,    -1,    -1,  1598,    -1,
      -1,    -1,    -1,  1603,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   348,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,
      -1,  2912,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1641,    -1,    33,    -1,    -1,    -1,    -1,  2635,   898,
      -1,    41,  1652,    -1,  1654,  1655,    -1,    -1,    48,    -1,
      -1,    -1,  1662,    -1,    -1,    -1,  1666,  2165,    -1,  1669,
      -1,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,  2673,    -1,    -1,    -1,
     939,    -1,    -1,    -1,    -1,    -1,  1920,    -1,   430,    -1,
      -1,    -1,    -1,    -1,  1704,    -1,   438,  1707,    -1,  1709,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2704,    -1,  2912,
    2707,    -1,   454,    -1,   456,   457,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2231,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1759,
      -1,   493,    33,    -1,   496,   497,   498,    -1,    -1,    -1,
      41,    -1,    -1,    -1,  1774,  1775,    -1,    48,    -1,    -1,
      -1,    -1,    -1,     8,   174,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,  1048,
     190,    -1,    73,    -1,  2302,   195,  1055,    -1,  1808,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,   217,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,  1866,    -1,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,    -1,   273,    -1,    -1,    -1,    33,    -1,    -1,
      36,    -1,    -1,    -1,    -1,    41,    -1,   287,    -1,    -1,
     290,    -1,    48,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1912,    -1,  2412,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,   195,  2912,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2165,    -1,  2441,    -1,    -1,   217,   218,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   232,    -1,    -1,    -1,   190,    -1,    -1,  1968,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,  1977,    -1,    -1,
    1980,    -1,    -1,  1983,    -1,    -1,    -1,    -1,    -1,   379,
      -1,    -1,   217,   218,    -1,    -1,    -1,    -1,    -1,   270,
      -1,    -1,   273,    -1,    -1,     8,    -1,   232,    11,  2009,
    2010,    -1,    -1,  2013,    -1,    -1,   287,  2515,    -1,   290,
    1269,    -1,    -1,    -1,    -1,  2025,    -1,    -1,   174,    -1,
      -1,  1280,    -1,    -1,  2034,  1284,    -1,  2037,    41,  2039,
      -1,  1290,  1291,  1292,   190,    48,    -1,  2047,   273,   195,
    1299,    -1,    -1,    -1,    -1,  2055,  2056,    -1,    -1,    -1,
      -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2085,   232,    -1,    -1,   479,
      -1,    -1,   482,   483,   484,    -1,   486,   487,   488,   489,
     490,   491,    -1,    -1,    -1,    -1,  1355,    -1,   379,   499,
      -1,  2111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,  2128,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,  2635,    -1,    11,
     143,   287,    -1,  1392,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,    -1,  1406,    -1,    -1,
      -1,    -1,  1411,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,   174,    -1,    -1,    -1,  2673,    48,  2401,    -1,    -1,
      -1,    -1,  2406,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,  2704,    -1,   479,  2707,
      -1,   482,   483,   484,    -1,   486,   487,   488,   489,   490,
     491,    -1,    -1,  2447,  2448,   496,    -1,    -1,    -1,   232,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2248,    -1,
      -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2296,  2297,    -1,    -1,
      -1,  2301,   174,    -1,    -1,    -1,  2306,    -1,    -1,  2309,
    2310,    -1,    -1,    -1,  2314,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,  1601,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,    -1,  2366,    -1,    -1,    -1,
      -1,  1620,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1637,    -1,
    1639,  1640,    -1,  1642,    -1,  1644,    -1,    -1,    -1,  1648,
    2624,  2625,  1651,  2403,    -1,    -1,    -1,  1656,    -1,    -1,
    1659,  2635,    -1,    -1,  2912,   287,    -1,    -1,    -1,    -1,
      -1,    -1,  1671,    -1,    -1,    -1,  1675,  1676,  1677,  1678,
    1679,    -1,    -1,    -1,    -1,    -1,  1685,  1686,    -1,  1688,
    1689,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1700,    -1,    -1,  1703,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,
    1719,  1720,    -1,    -1,    -1,    -1,   479,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,  1752,    -1,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,  2518,    11,
      -1,    -1,    -1,    15,    16,    17,    18,  2527,  2528,    41,
      -1,  2531,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,  2568,  2569,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,  2583,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,   479,    15,    16,
      17,    18,    -1,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,  1871,  1872,  1873,    -1,    33,    -1,    -1,    36,
       8,   143,    -1,    11,    41,    -1,    -1,    15,    16,    17,
      18,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    -1,   174,    41,     8,    -1,    73,    11,    -1,    -1,
      48,    15,    16,    17,    18,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   174,   195,    -1,    -1,    -1,    -1,  2912,    33,
      -1,    -1,    -1,    -1,    -1,    73,  2696,    41,   190,    -1,
      -1,    -1,    -1,   195,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2713,    -1,    -1,    -1,    -1,  1967,    -1,
     232,    -1,    -1,    -1,  1973,   217,   218,    -1,  2728,    73,
      -1,  2731,    -1,    -1,    -1,    -1,    -1,  1986,  1987,  1988,
     232,  1990,  1991,  1992,  1993,  2745,    -1,  1996,  1997,  1998,
    1999,  2000,  2001,  2002,  2003,  2004,  2005,  2006,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,  2026,   270,    -1,
    2029,   273,  2031,   190,    -1,    -1,  2035,  2036,   195,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   174,    -1,   290,    -1,
    2049,  2050,  2051,  2052,    -1,  2054,    -1,    -1,    -1,    -1,
     217,   218,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,  2828,    -1,
     174,    -1,  2832,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,     8,
      -1,   195,    11,    -1,   232,    -1,    -1,    16,    17,    18,
    2860,    -1,    -1,   270,    -1,    -1,   273,   379,    -1,    -1,
      -1,    -1,    -1,   217,   218,    -1,    -1,    -1,    -1,    -1,
     287,  2130,    41,   290,    -1,    -1,    -1,   379,   232,    48,
      -1,    -1,   270,  2893,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,    -1,   290,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,  2933,  2934,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,  2968,    -1,
      -1,    -1,   379,  2222,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
    2249,   379,   494,    -1,  2253,  2254,    -1,  2256,    -1,    -1,
    2259,  2260,  2261,  2262,  3014,   174,    -1,  2266,  2267,  2268,
    2269,  2270,  2271,  2272,  2273,  2274,  2275,  2276,  2277,    -1,
      -1,   190,    -1,    -1,     8,   379,   195,    11,    -1,  2288,
      -1,    -1,    -1,    -1,    -1,    -1,  2295,    -1,    -1,  2298,
      -1,  2300,    -1,    -1,    -1,  2304,    -1,    -1,  2307,  2308,
      -1,    -1,  2311,  2312,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,   479,   232,    48,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,   496,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,   479,  2351,    -1,   482,   483,   484,    -1,   486,   487,
     488,   489,   490,   491,    -1,    -1,  2365,    -1,   496,    -1,
      -1,    21,    -1,    -1,    -1,    -1,    -1,    -1,   287,  2378,
      -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    -1,
      -1,    -1,   496,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,   143,
      -1,    -1,    -1,    -1,    74,    -1,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      90,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    73,    -1,
     379,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   154,    -1,    -1,    -1,   232,  2508,
      -1,    -1,    -1,  2512,    -1,    -1,   166,    -1,    -1,   124,
      -1,   171,  2521,  2522,  2523,    -1,    -1,  2526,    -1,    -1,
    2529,  2530,    -1,    -1,    -1,  2534,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   198,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,   174,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,    -1,    -1,   190,    -1,    -1,    -1,    -1,
     195,    -1,    -1,   243,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,  2602,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2621,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,
     310,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,
      -1,    -1,  2671,  2672,   324,    -1,    -1,    -1,  2677,  2678,
    2679,    -1,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,
     360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
      -1,   371,  2721,  2722,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2737,    -1,
     390,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2748,
      -1,    -1,    -1,   403,    -1,   479,    -1,    -1,    -1,    -1,
     410,    -1,   486,   487,   488,   489,   490,   491,    -1,   419,
      -1,    -1,    -1,    -1,   379,   425,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2797,    -1,
     450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2815,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   438,    -1,    -1,    -1,    -1,  2837,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2851,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,  2898,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,  2921,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,  2971,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,   130,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,   488,    -1,    -1,    -1,    -1,   493,
      -1,   495,   496,    -1,    -1,    -1,   500,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,   481,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,   495,   496,    -1,    -1,    -1,   500,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,   481,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,   169,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,
      -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,
      -1,   502,   503,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    34,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,
      -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,
     500,    -1,   502,   503,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,   488,
      -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,
      -1,   500,    -1,   502,   503,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,
      -1,    -1,   500,    -1,   502,   503,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,   488,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,
      -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,
      -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,
     495,   496,    -1,    -1,    -1,   500,    -1,   502,   503,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,
      -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,   495,   496,    -1,    -1,    -1,   500,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,   169,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,
      -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,
      -1,   502,   503,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,
      -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,
     500,    -1,   502,   503,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,
      -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,
      -1,   500,    -1,   502,   503,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,
      -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,
      -1,    -1,   500,    -1,   502,   503,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,
      -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,
      -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,
     495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,
      -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,     3,
       4,     5,     6,     7,   495,     9,    10,    -1,    -1,    -1,
      -1,   502,   503,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   495,    -1,    -1,    -1,    -1,    -1,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   495,    -1,    -1,    -1,    -1,    -1,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,    -1,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
      -1,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,     3,    -1,    -1,    -1,
      -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,
     502,   503,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,    -1,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,   273,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,     3,   481,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,   273,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   495,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     495,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,    -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,   285,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,    -1,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,    -1,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,     3,
      -1,    -1,    -1,    -1,    -1,   486,   487,   488,    -1,    -1,
      -1,    -1,    -1,    -1,   495,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,     3,   481,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   495,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,    -1,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,     3,   481,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,    -1,
       3,   481,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   495,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,    -1,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,    -1,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   495,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,    -1,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   495,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
      -1,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,    -1,    -1,    -1,     3,     4,
       5,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,    -1,
     495,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    -1,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,    -1,    -1,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,    -1,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     475,   476,   477,   478,    -1,     3,    -1,   482,   483,   484,
       8,   486,   487,   488,   489,   490,   491,    -1,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,    -1,    -1,    -1,   482,   483,   484,    -1,   486,   487,
     488,   489,   490,   491,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    33,
      15,    16,    17,    18,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    33,    -1,
      -1,    -1,     8,    -1,    -1,    11,    41,    -1,    -1,    15,
      16,    17,    18,    48,    -1,    -1,    -1,    -1,    -1,    73,
      -1,     8,    -1,    -1,    11,    -1,    -1,    33,    15,    16,
      17,    18,    -1,    -1,    -1,    41,    -1,    -1,    73,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,   174,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,   190,    -1,    -1,    -1,    -1,
     195,    -1,    -1,   217,   218,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,    -1,   217,   218,   190,    -1,    -1,   174,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,    -1,
      -1,   217,   218,    -1,    -1,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,
     217,   218,    -1,   287,    -1,   270,   290,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,   174,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
     190,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   270,   290,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,    -1,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,   379,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    33,    -1,
     270,    -1,    -1,   273,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,   287,    -1,    -1,
     290,    -1,    -1,   379,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    18,    -1,    -1,    -1,    73,    -1,
      -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    73,
      -1,    -1,   496,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,   379,
      -1,   496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,   174,
     496,    -1,   479,    -1,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,   190,    -1,    -1,    -1,   496,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,   479,
      -1,   195,   482,   483,   484,    -1,   486,   487,   488,   489,
     490,   491,    -1,    -1,    -1,    -1,   496,    -1,    -1,    -1,
      -1,    -1,    -1,   217,   218,   270,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,    -1,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,   496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   479,    -1,     3,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    -1,
      -1,    -1,   496,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,    -1,   169,    -1,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,   227,   228,   229,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   488,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,   285,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,     4,     5,    -1,    -1,
      -1,     9,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,   285,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,     4,     5,    -1,    -1,    -1,     9,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,   285,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,    -1,     8,
      -1,    -1,    11,    -1,   486,   487,    15,    16,    17,    18,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    33,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    41,     8,    -1,    -1,    11,
      -1,    -1,    48,    15,    16,    17,    18,    -1,    -1,     8,
      -1,    -1,    11,    -1,    73,    -1,    15,    16,    17,    18,
      -1,    33,    -1,    -1,    36,    -1,    -1,    73,    -1,    41,
      -1,    -1,    -1,    -1,    33,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   164,    -1,    -1,    33,    -1,
     169,    36,    -1,    -1,    -1,   174,    41,   163,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,   174,    -1,
      -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    73,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   217,   218,   232,    -1,   174,    -1,    -1,   190,    -1,
      -1,    -1,    -1,   195,    -1,    -1,   232,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   217,   218,    -1,    -1,    -1,
      -1,   270,    -1,    -1,   273,    -1,    -1,    -1,   217,   218,
     232,    -1,    -1,    -1,   270,    -1,    -1,   273,   287,    -1,
      -1,   290,    -1,   232,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,   190,    -1,   313,    -1,    -1,
     195,   270,    -1,    -1,   273,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
      -1,   290,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,   308,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,   270,    11,    -1,   273,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,    -1,   290,    -1,   379,    33,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
     379,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,   479,    -1,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,   169,    -1,    11,    -1,    -1,   174,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    33,    -1,
     195,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,   232,    73,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    33,    15,    16,    17,    18,    -1,
      -1,    -1,    41,    -1,    -1,   270,    -1,    -1,   273,    48,
      -1,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,   287,     8,    -1,   290,    11,    -1,    48,    -1,
      15,    16,    17,    18,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    73,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,   174,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,
     190,    -1,    -1,    -1,    -1,   195,    -1,    -1,   217,   218,
      -1,    -1,   287,    -1,    -1,   290,    -1,    -1,    -1,   174,
      -1,    -1,    -1,   232,    -1,    -1,    -1,   217,   218,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
     195,    -1,   232,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,   270,   217,   218,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,   287,    -1,
     270,   290,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,
     290,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,    -1,   290,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    33,    -1,    16,    17,    18,    -1,    -1,    -1,    41,
     379,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,   379,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    73,   411,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      73,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,   479,
      -1,    -1,   482,   483,   484,    -1,   486,   487,   488,   489,
     490,   491,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,   174,    -1,   195,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,   190,    -1,    -1,
      -1,    -1,   195,    -1,    -1,   217,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,   217,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,   270,   290,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,     3,    -1,     5,   479,    -1,    -1,   482,
     483,   484,    -1,   486,   487,   488,   489,   490,   491,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,    -1,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,    -1,   169,    -1,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,   227,   228,   229,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
      -1,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,   227,
     228,   229,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,   273,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,   273,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    -1,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,   166,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,   166,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,   232,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,   431,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,   285,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
     286,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,   286,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,     4,    -1,    -1,    -1,    -1,     9,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,    -1,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,    -1,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,    -1,    -1,   271,   272,   273,   274,    -1,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,    -1,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,    -1,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
      -1,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,    -1,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,   476,   477,
     478,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,    -1,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,    -1,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,    -1,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,    -1,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,    -1,   419,    -1,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,    -1,   439,   440,   441,   442,   443,    -1,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,   476,
     477,   478,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,   155,
      -1,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,    -1,    -1,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,    -1,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,    -1,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,    -1,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,    -1,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
     476,   477,   478,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,    -1,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,    -1,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,    -1,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,    -1,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,    -1,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,    -1,   439,   440,   441,   442,   443,    -1,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     475,   476,   477,   478
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   165,   194,
     209,   235,   312,   315,   344,   353,   367,   374,   378,   388,
     399,   403,   439,   444,   457,   481,   495,   506,   507,   508,
     509,   513,   516,   518,   521,   522,   523,   524,   525,   526,
     577,   578,   722,   727,   729,   732,   733,   734,   735,   738,
     749,   752,   753,   755,   802,   804,   811,   813,   817,   832,
     834,   835,   836,   837,   844,   848,   850,   857,   858,   861,
     867,   874,   875,   876,   416,   460,   728,   198,   360,   368,
     403,   450,   728,     3,    19,    20,    21,    22,    23,    24,
      25,    26,    28,    29,    30,    38,    39,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    54,
      55,    56,    57,    58,    59,    62,    63,    64,    65,    66,
      68,    69,    70,    71,    72,    74,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    87,    88,    89,    90,
      91,    92,    94,    95,    96,    97,   101,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   116,   118,   119,
     120,   121,   122,   123,   125,   126,   127,   128,   129,   132,
     133,   134,   135,   136,   138,   139,   140,   142,   143,   144,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   158,   160,   161,   162,   163,   165,   167,   168,   170,
     171,   172,   173,   174,   175,   177,   179,   180,   181,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   196,   197,   198,   199,   200,   201,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   214,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   229,
     230,   231,   232,   234,   235,   236,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   271,   272,   273,
     274,   276,   277,   278,   279,   280,   281,   283,   284,   287,
     288,   289,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   319,   320,   321,
     322,   323,   324,   326,   327,   328,   329,   330,   331,   332,
     333,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   368,   369,   370,   371,   372,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   401,   402,   404,   405,   406,   407,   408,   409,
     410,   412,   413,   416,   417,   418,   419,   420,   422,   423,
     424,   425,   426,   427,   428,   429,   432,   433,   434,   435,
     436,   439,   440,   441,   442,   443,   444,   445,   447,   448,
     449,   450,   451,   452,   455,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   635,   707,   711,   714,
     893,   894,   895,   728,    50,   495,   888,   175,   236,   290,
     360,   407,   409,   425,   431,   434,   800,   873,     3,    27,
     244,   315,   396,   705,   711,   893,    21,    74,    90,   144,
     154,   166,   171,   198,   243,   247,   310,   324,   357,   360,
     368,   371,   390,   403,   410,   419,   425,   450,   805,   806,
     809,   728,   705,    93,   448,   495,   509,   513,   521,   732,
     813,   840,   844,   108,    68,   209,   108,     5,   710,   711,
     812,   812,   711,   705,    27,   412,   416,   711,   730,   731,
     754,   728,    27,   130,   533,   534,   175,   236,   360,   372,
     412,   754,   862,   863,   728,   444,   521,   526,   754,     5,
     286,   590,   702,   711,   712,   170,   495,   724,   495,   332,
     527,   528,   705,   527,   522,   523,     0,   498,   145,   213,
     291,   430,   536,   537,   522,   524,   525,   499,    27,   412,
     416,   521,   754,   120,   208,   436,   448,   838,   188,   702,
     705,   188,   702,   188,   590,   188,   702,   495,   493,   497,
     686,   688,   509,   520,   521,   732,   813,   702,   407,   409,
     407,   409,   342,   188,   711,   711,   716,   171,   243,   332,
     368,   403,   450,   736,   198,    27,   705,   249,   419,   107,
     403,   403,   450,   363,     3,    44,    49,    50,    51,    52,
      64,    65,    74,    82,    94,   101,   112,   113,   134,   162,
     168,   170,   174,   188,   190,   204,   211,   212,   214,   217,
     218,   220,   230,   232,   244,   263,   264,   265,   273,   278,
     294,   296,   329,   351,   355,   375,   379,   382,   396,   405,
     412,   413,   424,   445,   448,   601,   602,   604,   606,   608,
     610,   612,   613,   614,   616,   617,   618,   620,   621,   715,
     810,   893,   896,   188,   716,   807,   188,   703,   705,   188,
     705,   495,   833,   290,   800,   840,     3,    48,    49,    51,
      52,    64,    65,    72,   112,   113,   150,   156,   162,   179,
     180,   205,   211,   212,   214,   244,   263,   265,   269,   276,
     278,   293,   297,   311,   314,   329,   355,   375,   382,   396,
     398,   412,   413,   418,   420,   424,   444,   445,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   841,
     843,   844,   846,   847,   893,   897,   838,   710,   812,   710,
     484,   495,   495,   519,   478,   219,   497,   285,     4,     6,
       7,     8,     9,    10,    35,    49,    51,    52,    60,    61,
      64,    65,    72,    74,    98,    99,   100,   101,   102,   103,
     104,   112,   113,   115,   150,   156,   157,   162,   179,   180,
     211,   212,   214,   237,   238,   263,   265,   270,   275,   276,
     278,   287,   297,   311,   329,   355,   373,   382,   398,   412,
     413,   418,   420,   421,   424,   437,   445,   479,   486,   487,
     488,   493,   495,   500,   502,   503,   522,   567,   605,   608,
     611,   612,   613,   615,   616,   617,   620,   621,   632,   634,
     635,   636,   638,   652,   653,   660,   680,   685,   692,   693,
     694,   707,   708,   709,   710,   711,   691,   693,   862,   862,
     710,   862,   478,   169,   414,   484,   495,   702,   488,   688,
       3,   168,   170,   448,   723,   725,   844,   168,   726,   632,
     664,   665,   711,   527,   499,   495,   718,   496,   496,   508,
      27,   130,   532,   532,    54,   532,   159,   164,   233,   282,
     542,   544,   545,   570,   572,   573,   574,   536,   537,   495,
     478,   219,   169,   215,   510,   590,   702,   150,    23,    29,
     135,   289,   340,   344,   374,   441,   743,   746,   747,   340,
     150,    36,    55,   106,   197,   248,   256,   268,   299,   340,
     346,   368,   374,   388,   746,   851,   854,   150,   340,   374,
     746,   150,   340,   374,   746,     3,    27,    44,    50,    74,
      82,    94,   101,   130,   168,   170,   174,   190,   204,   217,
     218,   220,   230,   232,   244,   264,   273,   294,   296,   351,
     379,   396,   405,   424,   446,   448,   488,   496,   632,   667,
     668,   713,   719,   893,   898,   632,   687,     3,    27,    31,
      32,    33,    34,    35,    36,    37,    40,    53,    60,    61,
      67,    73,    75,    86,    93,    98,    99,   100,   102,   103,
     104,   115,   117,   124,   130,   131,   137,   141,   145,   157,
     159,   164,   166,   169,   176,   178,   182,   195,   202,   213,
     215,   227,   228,   233,   237,   238,   270,   275,   282,   285,
     286,   290,   291,   308,   318,   325,   334,   348,   367,   373,
     384,   400,   403,   411,   414,   415,   421,   430,   431,   437,
     438,   444,   446,   453,   454,   456,   457,   706,   720,   893,
     897,   899,   686,   496,   495,   789,   800,   270,   750,   497,
     717,    36,   450,   188,   702,   188,   515,   702,   702,   702,
      82,   870,   461,    83,   127,   302,   408,   447,   619,   619,
     619,   495,   607,   607,   314,   495,   609,   150,   495,    64,
      65,   619,   607,   604,   459,   481,   495,   622,   495,   622,
     495,    35,   603,   495,   109,   110,   185,   186,   250,   251,
     252,   253,   254,   255,   258,   259,   364,   365,   475,   476,
     495,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     607,    58,   347,   499,   808,   150,   499,   808,   150,   499,
     808,   150,   285,   665,   342,   403,   496,   499,     4,   157,
     285,   421,   486,   487,   709,   710,   839,   841,   842,   845,
     853,   856,   840,   495,   883,   887,   845,   853,   864,   866,
     667,   602,   669,    36,   231,   711,   495,   689,   493,   632,
     684,   495,   495,   164,   495,   495,   522,   495,   495,   495,
     632,   495,   495,   495,   495,   495,   495,   495,   495,   495,
     632,   632,   632,   146,   695,   696,   665,   666,   522,   632,
     664,   654,   655,   656,   711,   712,     9,   689,   688,   495,
     710,   495,   709,   710,     3,     8,    11,    15,    16,    17,
      18,    33,    36,    41,    48,    73,   174,   190,   195,   217,
     218,   232,   270,   273,   287,   290,   379,   479,   482,   483,
     484,   486,   487,   488,   489,   490,   491,   658,   659,   660,
     662,   458,   639,   689,   296,   632,   499,   215,   529,   495,
     710,   689,   497,   688,   529,     3,   115,   236,   621,   710,
     853,   865,    97,   115,   866,   115,   866,   702,   496,   499,
     838,   499,   496,   528,   703,    36,   524,   524,    27,   488,
     538,   539,   632,   524,   161,   267,   558,   222,   268,   328,
     377,   436,     4,     9,    27,   553,   632,   486,   487,   554,
     555,   632,   634,   570,   571,   545,   544,   542,   543,   164,
     573,   280,   575,   542,   570,   665,   231,   510,   702,   815,
     374,    36,   711,   718,   702,    67,    75,    86,   166,   188,
     318,   431,   711,   770,   780,   796,    75,    86,   803,    86,
     803,   495,   414,   495,   768,   242,   434,   768,    86,   499,
     414,   702,   604,   853,    54,   855,   853,   853,   106,   248,
     256,    54,   414,   457,   481,   852,   261,   360,   852,   854,
     590,    86,   414,   803,   360,   702,   414,   360,   667,   667,
     668,   496,   499,   536,   537,    13,    14,   494,   504,   414,
     711,   788,   793,   457,   886,   332,   403,   450,   150,    93,
     516,   751,   755,   848,   867,   706,   497,   142,   702,   270,
     849,   851,   270,    36,   495,   789,   789,   495,   737,   188,
     711,   783,   871,   495,   665,   709,   810,   669,   619,   619,
      35,   603,   412,   412,   709,   709,   600,   711,   493,   493,
     709,   709,   414,   414,   414,   414,   602,   807,   716,   703,
     705,   705,   716,   496,   800,   188,   515,   702,   840,   846,
       4,   709,     4,   709,   720,   885,   892,    50,    95,   121,
     139,   143,   165,   168,   183,   275,   283,   326,   889,   499,
     496,   499,   496,   499,   520,   665,   686,   666,   453,   681,
     682,   632,   665,   495,   709,   709,     3,   623,   624,   625,
     626,   627,   628,   629,   630,   670,   671,   710,   709,   709,
     632,     8,    16,    17,    18,   482,   483,   484,   486,   487,
     488,   489,   490,   491,   658,   663,   711,   632,   672,   486,
     487,   495,   633,   634,   660,   674,   496,   665,   632,   664,
     675,   632,    53,   169,   228,   415,   632,   665,   678,   632,
     495,   711,   342,   700,   494,   496,   499,   499,   501,   504,
     665,   632,   631,   631,   602,   632,   632,   632,   632,   632,
       5,   720,   721,   412,    40,   400,   690,   716,   632,   632,
     495,   522,   679,   130,   157,   270,   275,   280,   421,   432,
     632,   275,   495,   632,   414,    48,   174,   190,   195,   232,
     379,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,    27,    34,   384,   657,   178,   160,   640,   355,   495,
     653,   694,   175,   236,   403,   407,   409,   434,   530,   702,
     169,   579,   667,   488,   579,   495,   710,   496,   702,   723,
     702,   834,   632,   496,   495,    37,   124,   540,   540,   499,
     438,   540,   355,   356,   486,   487,   555,   557,   634,   377,
     222,   286,   307,   307,   499,   490,     4,   556,   709,   556,
     355,   356,   557,   701,   702,   274,   381,   576,   571,   543,
     496,   438,   512,    36,   115,   298,   495,   521,   814,   495,
     711,   819,   828,   829,   831,   711,   340,   746,   495,   188,
     780,   705,   222,   270,   222,   438,   495,   773,   602,   705,
     711,   188,   705,   188,   711,    23,   135,   374,   720,   742,
     745,   763,   778,   705,   720,   772,   792,   705,   743,   705,
     340,   374,   746,   851,   853,   716,   705,   853,   716,   705,
     853,   340,   374,   746,   705,   705,   705,   705,   340,   374,
     746,   705,   705,   536,   536,   536,   446,   668,   189,   345,
     535,   632,   632,   632,   687,   323,   882,   496,   499,   283,
     169,   414,   877,   450,   515,   702,   702,   711,   290,   800,
     706,   495,   495,   150,   150,   149,   521,   232,   711,   770,
     780,   784,   787,   797,   799,   457,   459,   775,   457,   872,
     496,   667,    36,   270,   285,   665,   496,   496,   808,   496,
     493,   478,   478,   496,   496,   496,   499,   602,   709,   494,
     709,   496,   496,   624,   626,   627,   628,   627,   628,   628,
     808,   808,   285,   808,   403,   270,    36,   488,   495,   845,
     853,   884,   496,   499,    36,   881,   710,   881,   270,   275,
     326,   881,   881,   864,   602,   496,   494,   632,   137,   682,
     683,    36,   496,   632,   496,   496,   496,   169,   496,   496,
     499,   496,   497,   308,   673,   496,   633,   633,   632,    11,
      16,    17,    18,   195,   217,   287,   482,   483,   484,   486,
     487,   488,   489,   490,   491,   660,   633,   496,   496,   164,
     169,   676,   677,   499,   496,    36,   678,   665,   678,   678,
     169,   496,    36,   703,   704,   495,   632,   697,   689,   632,
     654,   632,   496,   496,   478,   633,   633,   143,   665,   169,
     130,   157,   275,   280,   421,   432,   495,   143,   663,   632,
     400,   690,   632,   679,   632,   414,   495,   522,   495,   495,
     153,   641,   407,   409,   407,   409,   702,   403,   531,   531,
     531,   227,   356,   495,   522,   580,   581,   582,   583,   590,
     591,   635,   637,   638,   711,   454,   596,   536,   696,   596,
     709,   631,   718,   520,   480,   541,   541,   539,   287,   658,
     661,   541,     4,   709,   557,   286,   436,   554,   499,   241,
     581,   454,   511,   711,   444,   402,   437,   823,   711,   818,
     827,   285,   820,   824,   831,   689,   499,   579,   484,   414,
     632,   270,   796,   495,   150,   495,   773,   198,   793,   794,
     756,   289,   766,   756,    23,   135,   344,   346,   374,   739,
     740,   741,   747,   748,   150,   808,   150,   808,   763,   778,
     763,   496,   499,   710,   759,   484,   497,   496,   499,   414,
     360,    86,   414,   803,   360,   414,   414,   414,   360,   535,
     535,   535,   668,   277,   277,   496,   494,   391,   392,   710,
     891,   788,   882,   702,    36,   495,   789,   750,   342,   403,
     710,   859,   860,   793,   702,   515,   702,   705,   457,   514,
     702,   496,   499,   283,   768,   283,   285,   767,   768,    36,
     496,   403,   632,   150,   702,   496,   603,   709,   622,   622,
     603,   711,   494,   494,   716,   150,   845,   879,   890,   885,
     710,   710,   275,   793,   488,   793,   710,   710,   411,   632,
     141,   602,   496,   632,   632,   663,   632,   676,   602,   633,
     633,   633,   633,   130,   270,   280,   633,   633,   633,   633,
     633,   633,   633,   633,   633,   633,   632,   632,   677,   676,
     602,   496,   496,   496,   665,   602,   499,   496,   632,   697,
     698,   699,    36,   496,   631,   632,    33,    33,   632,   496,
     632,   169,   495,   669,   632,   496,   143,   633,   633,   143,
     143,   632,   632,   537,   454,   295,   645,   531,   531,   531,
     531,   702,   702,   702,   522,   591,   169,   522,   582,   583,
      36,   584,   585,   711,   499,    94,   170,   204,   220,   230,
     264,   351,   587,   585,    36,   584,   586,   711,   481,   595,
     688,   632,   178,   559,   535,   700,   559,   496,   496,   161,
     226,   495,   541,   286,   702,   632,   348,   822,   443,   689,
     496,   499,    84,   822,   496,   499,   819,   511,   632,   705,
     496,   150,   794,   780,   794,   756,   783,   499,   496,   117,
     202,   268,   270,   779,   495,   790,   173,   115,   187,   270,
     768,   852,   107,   115,   173,   270,   390,   393,   768,   854,
     374,   741,   425,   705,   711,   745,     3,    44,    50,    74,
      82,    94,   101,   168,   170,   174,   190,   204,   217,   218,
     220,   230,   232,   244,   264,   269,   273,   287,   294,   296,
     351,   375,   379,   396,   405,   424,   448,   486,   487,   602,
     661,   710,   713,   757,   795,   853,   893,   899,   720,   792,
     705,   705,   705,   705,   705,   705,   705,   705,   705,   705,
     496,   496,   496,   536,   852,   891,   495,   521,   787,   872,
     800,   188,   702,   496,   499,   496,   849,    36,   495,   833,
     107,   268,   777,   775,   784,    79,   521,   521,   783,   438,
     869,   494,   602,   808,   515,   496,   499,   793,   632,   496,
     496,   677,   169,   130,   280,   495,   496,   496,   499,   496,
     711,   632,   632,   632,   669,   496,   632,    33,    33,   632,
     632,   143,   496,   496,   632,   495,   646,   711,   702,   702,
     702,   702,   585,   586,   495,   496,   711,   712,   405,   550,
     551,   495,   582,   220,   294,   588,   582,   588,   220,   587,
     588,   220,   551,   495,   711,   551,   495,   292,    54,   182,
     568,   496,   568,   710,   663,   692,   521,   298,   521,   818,
     285,   495,   816,   484,   831,   822,   756,   780,   496,   496,
     457,   786,   118,   191,   200,   117,   440,   763,   781,    67,
      73,    86,   115,   117,   173,   202,   270,   275,   318,   334,
     431,   438,   761,   762,   774,    30,    54,   801,   188,   275,
     853,   632,   801,   275,   486,   487,   856,   711,   602,   808,
     808,   244,   396,   713,   717,   484,   414,   414,   535,   883,
     438,   878,   880,   793,   514,   496,    36,   403,   270,   495,
     710,   872,   149,   521,   787,   514,   107,   147,   196,   767,
     120,   135,   317,   457,   517,   285,   711,   868,   495,    36,
     890,   633,   169,   495,   669,   697,   496,   632,   632,   632,
     496,   647,   711,   592,   593,   637,   584,   495,     4,     9,
     546,   548,   549,   711,   704,   582,   285,   438,   589,   582,
     220,   582,   597,   598,   711,   495,   597,   711,    27,    96,
     179,   354,   488,   495,   560,   561,   562,   563,   564,   565,
     566,   632,   632,   456,   642,   710,   642,   496,   499,   823,
      86,   495,   637,   711,   821,   830,   131,   632,   334,   786,
     495,   776,   756,   496,   499,   495,   716,   705,   633,   801,
     118,   191,   117,   275,   222,   702,   786,    81,   115,    36,
     150,    73,   599,   717,   490,   757,   705,   705,   496,   852,
     122,   496,   775,   521,   702,   150,    36,   705,   514,   496,
      27,    78,    87,   116,   187,   199,   390,   393,   771,   771,
     356,   356,    59,    67,   236,   702,   830,   633,   669,   496,
     304,   648,   496,   499,    36,   594,   704,   307,   490,   307,
     356,   490,   495,   495,   496,   632,   495,   582,   589,   496,
     499,   602,   597,   496,   495,   376,   495,   496,   499,   643,
     644,   711,   325,   569,   569,   443,   705,   632,    73,   825,
     825,   496,   499,   271,   436,   702,   756,   720,   782,   785,
     763,   632,   270,   762,    36,   786,   789,   705,   187,   716,
     438,   744,   490,   425,   883,   710,   872,   767,   517,   495,
     702,   521,   833,   775,    67,   288,    67,   869,   496,   496,
      54,   536,   595,   592,   495,   496,   711,   546,   704,   598,
     599,   496,   665,   495,   665,   562,   499,    36,   632,   438,
     547,   547,   521,   496,   716,   716,   826,   826,   596,   821,
     374,   789,   484,   496,   499,   496,   187,   246,   798,   495,
     758,   632,   425,    36,   495,   517,   514,   767,   288,   288,
     495,   872,   664,   327,   356,   649,   597,   496,   499,   496,
     496,   496,   561,   496,   644,   646,   358,   825,   540,   540,
     829,   798,   757,   785,   268,   769,   758,   170,   303,   380,
     285,   764,   765,   791,   851,   521,   830,   596,    48,    97,
     427,   632,   650,   651,   650,   496,   496,     9,   341,   552,
     496,   549,   826,   541,   541,   596,   765,   200,   120,   436,
     285,   791,   285,   764,   496,   517,   496,   651,   355,   163,
     313,   163,   313,   496,   495,   540,   756,    58,   268,   347,
     374,   760,   760,   872,    33,     9,   541,    22,   115,   275,
     596,   651,   496
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 484 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 496 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 539 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 42:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 43:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 44:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 45:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 46:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 47:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 48:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 49:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 50:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 51:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 52:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 53:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 54:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;

  case 55:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 56:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 57:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 58:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 59:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 60:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 61:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 62:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 63:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 64:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 65:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 72:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 73:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 74:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 75:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 76:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 77:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 78:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 79:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 80:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 81:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 82:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 83:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 84:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 87:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 88:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 89:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 90:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 91:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 92:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 93:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 94:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 95:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 96:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 97:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 98:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 99:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 100:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 101:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 102:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 103:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 104:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 105:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 106:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 107:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 108:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 109:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 110:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 111:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 112:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 113:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 114:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 115:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 116:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 117:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 118:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 119:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 120:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 121:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 122:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 123:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 124:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 125:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 126:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 127:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 128:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 129:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 130:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 131:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 132:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 133:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 134:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 135:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 136:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 137:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 138:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 139:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 140:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 141:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 142:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 143:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 144:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 145:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 146:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 147:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 148:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 149:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 150:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 151:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 152:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 153:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 154:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 155:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 156:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 157:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 158:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 159:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 160:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 161:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 162:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 163:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 164:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 165:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 166:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 167:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 168:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 169:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 170:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 171:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 172:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 173:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 174:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 175:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 176:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 177:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 178:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 179:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 180:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 181:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 182:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 183:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 184:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 185:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 186:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 187:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 188:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 189:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 190:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 191:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 192:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 193:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 194:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 195:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 196:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 197:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 198:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 199:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 200:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 201:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 202:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 203:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 204:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 205:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 206:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 207:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 208:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 209:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 210:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 211:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 212:
#line 755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 213:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 214:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 215:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 216:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 217:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 218:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 219:
#line 769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 220:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 221:
#line 785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 222:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 223:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
    break;

  case 224:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 225:
#line 808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 226:
#line 812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 227:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 228:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 229:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 230:
#line 825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 231:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 232:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 233:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 234:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 235:
#line 865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 236:
#line 869 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 237:
#line 895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 238:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 239:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 240:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 241:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 242:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 243:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 244:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 245:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 246:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 247:
#line 992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 248:
#line 993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 249:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 250:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 251:
#line 1010 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 252:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 253:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 254:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 255:
#line 1028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 256:
#line 1029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 257:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 258:
#line 1034 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 259:
#line 1035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 260:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 261:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 262:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 263:
#line 1061 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 264:
#line 1068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 265:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 266:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 267:
#line 1118 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 268:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 269:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 270:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 271:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 272:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 274:
#line 1144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 275:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 276:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 277:
#line 1156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 278:
#line 1160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 279:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 280:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 281:
#line 1194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 282:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 283:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 286:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 287:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 288:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 289:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 290:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 291:
#line 1245 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 292:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 293:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 294:
#line 1266 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 295:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 296:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 297:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 298:
#line 1275 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 299:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 300:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 301:
#line 1278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 302:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 303:
#line 1285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 304:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 305:
#line 1305 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 306:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 307:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 308:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 309:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 310:
#line 1333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 311:
#line 1340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 312:
#line 1345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 313:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 314:
#line 1355 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 315:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 316:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 317:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 318:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 319:
#line 1381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 320:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 321:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 322:
#line 1400 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 323:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 324:
#line 1431 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 325:
#line 1435 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 326:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 327:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 328:
#line 1455 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 329:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 330:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 331:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 332:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 333:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 334:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 335:
#line 1523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 336:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 337:
#line 1535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 338:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 339:
#line 1539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 340:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 341:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 342:
#line 1547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 343:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 344:
#line 1556 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 345:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 346:
#line 1573 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 347:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 348:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 349:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 350:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 351:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 368:
#line 1631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 369:
#line 1633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 370:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 371:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 372:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 373:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 374:
#line 1643 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 375:
#line 1645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 376:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 377:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 378:
#line 1657 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 379:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 380:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 381:
#line 1675 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 382:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 383:
#line 1686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 384:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 385:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 386:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 387:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 388:
#line 1745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 389:
#line 1747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 390:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 391:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 392:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 393:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 394:
#line 1757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 395:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 396:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 397:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 398:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 399:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 400:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 401:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 402:
#line 1774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 403:
#line 1776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 404:
#line 1778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 405:
#line 1781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 406:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 407:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 408:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 409:
#line 1790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 410:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 411:
#line 1800 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 412:
#line 1807 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 413:
#line 1812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 414:
#line 1819 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 415:
#line 1824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 416:
#line 1831 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 417:
#line 1836 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 418:
#line 1844 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 419:
#line 1852 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 420:
#line 1860 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 421:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 422:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 423:
#line 1894 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 424:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 425:
#line 1910 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 426:
#line 1918 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 427:
#line 1925 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 428:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 429:
#line 1933 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 430:
#line 1938 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 431:
#line 1946 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 432:
#line 1962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 433:
#line 1970 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 434:
#line 1978 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 435:
#line 1986 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 436:
#line 1994 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 437:
#line 2002 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 438:
#line 2010 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 439:
#line 2014 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 440:
#line 2018 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 441:
#line 2022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 442:
#line 2026 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 443:
#line 2034 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 444:
#line 2042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 445:
#line 2050 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 446:
#line 2058 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 447:
#line 2078 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 448:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 449:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 450:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 451:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 452:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 454:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 455:
#line 2154 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 456:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 457:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 458:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 459:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 460:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 461:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 462:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 463:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 464:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 465:
#line 2174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 466:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 467:
#line 2178 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 468:
#line 2180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 469:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 470:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 471:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 472:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 473:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 474:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 475:
#line 2211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 476:
#line 2212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 477:
#line 2214 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 478:
#line 2221 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 479:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 480:
#line 2248 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 481:
#line 2260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 482:
#line 2262 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 483:
#line 2274 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 484:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 485:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 486:
#line 2320 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 487:
#line 2329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 488:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 489:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 490:
#line 2348 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 491:
#line 2356 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 492:
#line 2367 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 493:
#line 2375 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 494:
#line 2403 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 495:
#line 2439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 496:
#line 2449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 497:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 498:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 499:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 500:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 501:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 502:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 503:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 504:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 505:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 506:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 507:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 508:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 509:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 510:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 511:
#line 2512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 512:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 513:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 514:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 515:
#line 2526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 516:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 517:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 518:
#line 2541 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 519:
#line 2546 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 520:
#line 2553 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 521:
#line 2568 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 522:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 523:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 524:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 525:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 526:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 527:
#line 2604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 528:
#line 2605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 529:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 530:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 531:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 532:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 533:
#line 2622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 534:
#line 2623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 535:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 536:
#line 2629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 537:
#line 2634 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 538:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 539:
#line 2644 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 540:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 541:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 542:
#line 2687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 543:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 544:
#line 2691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 545:
#line 2692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 546:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 547:
#line 2710 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 548:
#line 2716 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 549:
#line 2726 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 550:
#line 2743 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 551:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 552:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 553:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 554:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 555:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 556:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 557:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 558:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 559:
#line 2845 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 560:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 561:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 562:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 563:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 564:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 565:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 566:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 567:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 568:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 569:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 570:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 571:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 572:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 573:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 574:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 575:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 576:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 577:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 578:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 579:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 580:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 581:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 582:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 583:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 584:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 585:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 586:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 587:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 588:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 589:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 590:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 591:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 592:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 593:
#line 2921 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 594:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 595:
#line 2937 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 596:
#line 2941 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 597:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 598:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 599:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (2)].list);
				;}
    break;

  case 600:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 601:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 602:
#line 2988 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 603:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 604:
#line 2998 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 605:
#line 3002 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 606:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 607:
#line 3021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 608:
#line 3022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 609:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 611:
#line 3037 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 612:
#line 3038 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 613:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 614:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 615:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 616:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 617:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 618:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 619:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 620:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 621:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 622:
#line 3061 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 623:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 624:
#line 3074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 625:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 626:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 627:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 628:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 629:
#line 3105 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 630:
#line 3120 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 631:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 632:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 633:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 634:
#line 3134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 635:
#line 3135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 636:
#line 3136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 637:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 638:
#line 3146 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 639:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 640:
#line 3170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 641:
#line 3171 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 642:
#line 3176 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 643:
#line 3186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 644:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 645:
#line 3190 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 646:
#line 3191 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 647:
#line 3195 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 648:
#line 3199 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 649:
#line 3206 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 650:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 651:
#line 3218 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 652:
#line 3228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 653:
#line 3229 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 654:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 655:
#line 3234 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 656:
#line 3238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 657:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 660:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 661:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 662:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 663:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 664:
#line 3263 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 665:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 666:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 667:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 668:
#line 3292 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 669:
#line 3300 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 670:
#line 3315 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 671:
#line 3332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 672:
#line 3333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 673:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 674:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 675:
#line 3340 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 676:
#line 3344 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 677:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 678:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 679:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 680:
#line 3353 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 681:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 682:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 683:
#line 3365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 684:
#line 3366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 685:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 686:
#line 3382 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 687:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 688:
#line 3411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 689:
#line 3416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 690:
#line 3417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 691:
#line 3420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 692:
#line 3422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 693:
#line 3433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 694:
#line 3436 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 695:
#line 3447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 696:
#line 3451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 697:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 698:
#line 3467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 699:
#line 3471 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 700:
#line 3480 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 701:
#line 3487 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 702:
#line 3525 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 703:
#line 3529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 704:
#line 3533 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 705:
#line 3537 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 706:
#line 3541 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 707:
#line 3545 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 708:
#line 3549 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 709:
#line 3554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 710:
#line 3555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 711:
#line 3571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 712:
#line 3572 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 713:
#line 3573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 714:
#line 3576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 715:
#line 3577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 716:
#line 3583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 717:
#line 3584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 718:
#line 3585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 719:
#line 3588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 720:
#line 3589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 721:
#line 3590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 722:
#line 3593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 723:
#line 3594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 724:
#line 3595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 725:
#line 3598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 726:
#line 3599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 727:
#line 3603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 728:
#line 3605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 729:
#line 3609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 730:
#line 3610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 732:
#line 3621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 733:
#line 3622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 734:
#line 3623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 735:
#line 3624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 736:
#line 3627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 737:
#line 3628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 738:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 739:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 740:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 741:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 742:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 743:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 744:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 745:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 746:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 747:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 748:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 749:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 750:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 751:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 752:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 753:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 754:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 755:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 757:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 758:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 759:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 760:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 761:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 762:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 763:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 764:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 765:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 766:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 767:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 768:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 769:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 771:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 772:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 773:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 774:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 775:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 776:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 777:
#line 9 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (8)].ival);
				n->name = (yyvsp[(4) - (8)].range);
				n->params = (yyvsp[(5) - (8)].list);
				n->function = NULL;
				n->query = (yyvsp[(8) - (8)].node);
				(yyval.node) = (PGNode *)n;
				
			;}
    break;

  case 778:
#line 21 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (7)].ival);
				n->name = (yyvsp[(4) - (7)].range);
				n->params = (yyvsp[(5) - (7)].list);
				n->function = (yyvsp[(7) - (7)].node);
				n->query = NULL;
				(yyval.node) = (PGNode *)n;
                         ;}
    break;

  case 781:
#line 42 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 782:
#line 46 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 783:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 784:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 785:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 786:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 787:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 788:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 789:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 790:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 791:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 792:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 793:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 794:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 795:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 796:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 797:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 798:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 799:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 800:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 801:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 802:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 803:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 805:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 807:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 808:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 809:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 810:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 811:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 812:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 813:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 814:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 815:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 816:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 817:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 818:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 819:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 820:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 821:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 822:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 823:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 824:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 825:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 826:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 827:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 828:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 829:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 830:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 831:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 832:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 833:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 834:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 835:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 836:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 837:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 838:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 839:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 840:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 841:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 842:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 843:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 844:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 845:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 850:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 851:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 852:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 853:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 854:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 855:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 856:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 857:
#line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 860:
#line 63 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 861:
#line 65 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 862:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 863:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 864:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 865:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 866:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 867:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 868:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 869:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 870:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 871:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 872:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 873:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 874:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 875:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 876:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 877:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 878:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 879:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 880:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 881:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 882:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 883:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 884:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 885:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 886:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 887:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 888:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 889:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 890:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 891:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 892:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 893:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 894:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 895:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 896:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 897:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 898:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 899:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 900:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 901:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 902:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 903:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 904:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 905:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 906:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 907:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 908:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 909:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 910:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 911:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 912:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 913:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 914:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 915:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 916:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 917:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 918:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 919:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 920:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 921:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 922:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 923:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 924:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 925:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 926:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 927:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 928:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 929:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 930:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 931:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 932:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 933:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 934:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 935:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 936:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 937:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 938:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 939:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 940:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 941:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 942:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 943:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 944:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 945:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 946:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 947:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 948:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 949:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 950:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 951:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 952:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 954:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 955:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 956:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 957:
#line 450 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 958:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 959:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 960:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 961:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 962:
#line 469 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 963:
#line 473 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 964:
#line 479 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 965:
#line 483 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 966:
#line 487 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 967:
#line 492 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 968:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 969:
#line 500 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 970:
#line 504 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 971:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 972:
#line 509 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 973:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 974:
#line 517 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 975:
#line 528 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 976:
#line 542 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 977:
#line 555 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 978:
#line 570 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 979:
#line 583 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 980:
#line 598 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 981:
#line 620 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 982:
#line 624 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 983:
#line 631 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 984:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 985:
#line 643 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 986:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 987:
#line 655 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 988:
#line 664 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 989:
#line 665 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 990:
#line 666 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 991:
#line 667 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 992:
#line 669 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 993:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 994:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 995:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 996:
#line 688 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 997:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 998:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 999:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1000:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1001:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1002:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1003:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1004:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1005:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1006:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1007:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1008:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1009:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1010:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1011:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 1012:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 1013:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1014:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1015:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1016:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1017:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1018:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1019:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1020:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1021:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 1022:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 1023:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1024:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1025:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
    break;

  case 1026:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 1027:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 1028:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 1029:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 1030:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 1031:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 1032:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 1033:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 1034:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 1035:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 1036:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 1037:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 1038:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 1039:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 1040:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 1041:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 1042:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 1043:
#line 119 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 1044:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1045:
#line 125 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1046:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 1047:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 1048:
#line 132 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 1049:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 1050:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 1051:
#line 139 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 1052:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 1053:
#line 143 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 1054:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1055:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1056:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1057:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1058:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1059:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 1060:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 1061:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 1062:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 1063:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 1064:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 1065:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1066:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1067:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 1068:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1069:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 1070:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 1071:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 1072:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1073:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 1074:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 1075:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 1076:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1077:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 1078:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 1079:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 1080:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 1081:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1082:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1083:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 1084:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 1085:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1086:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 1087:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1088:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1089:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1090:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1091:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1092:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1093:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1094:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 1095:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1096:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1097:
#line 254 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 1098:
#line 255 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 1099:
#line 261 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1100:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1101:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1102:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1103:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1104:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1105:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1106:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1107:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1108:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1109:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1110:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1111:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1112:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1113:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1114:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1115:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1116:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1117:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1123:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1124:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1125:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1126:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1127:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1128:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1129:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1130:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1131:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1132:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1133:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1134:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1135:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1136:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1137:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1138:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1139:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1140:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1141:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1142:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1143:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1144:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1145:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 1146:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 1147:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 1148:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 1149:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 1150:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1151:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 1152:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 1153:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 1154:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 1155:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 1156:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 1157:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 1158:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 1159:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 1160:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 1161:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 1162:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 1163:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 1164:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 1165:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 1166:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 1167:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 1168:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 1169:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 1170:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1171:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 1172:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 1173:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1174:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1175:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1176:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1177:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1178:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1179:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1180:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1181:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1182:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1183:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1184:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1185:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1186:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1187:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1188:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1189:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1190:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1191:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1192:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1193:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1194:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1195:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1196:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1197:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1198:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1199:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1200:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1201:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1202:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1203:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1204:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1205:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1206:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1207:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1208:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1209:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1210:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1211:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1212:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1213:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1214:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1215:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1216:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1217:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1218:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1219:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1220:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1221:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1222:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1223:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1224:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1225:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1226:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1227:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 1228:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 1229:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 1230:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1231:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 1232:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 1233:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 1234:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 1235:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1236:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1237:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1238:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1239:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1240:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1241:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 1242:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 1243:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1244:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1245:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 1246:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 1247:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 1248:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1249:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 1250:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 1251:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 1252:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 1253:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 1254:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 1255:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 1256:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 1257:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 1258:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 1259:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 1260:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 1261:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 1262:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 1263:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 1264:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 1265:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1266:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1267:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1268:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1269:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1270:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 25198 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 236 "third_party/libpg_query/grammar/statements/copy.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

