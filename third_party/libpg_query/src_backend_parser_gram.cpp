/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXTENSION = 408,
     EXTERNAL = 409,
     EXTRACT = 410,
     FALSE_P = 411,
     FAMILY = 412,
     FETCH = 413,
     FILTER = 414,
     FIRST_P = 415,
     FLOAT_P = 416,
     FOLLOWING = 417,
     FOR = 418,
     FORCE = 419,
     FOREIGN = 420,
     FORWARD = 421,
     FREEZE = 422,
     FROM = 423,
     FULL = 424,
     FUNCTION = 425,
     FUNCTIONS = 426,
     GENERATED = 427,
     GLOB = 428,
     GLOBAL = 429,
     GRANT = 430,
     GRANTED = 431,
     GROUP_P = 432,
     GROUPING = 433,
     GROUPING_ID = 434,
     HANDLER = 435,
     HAVING = 436,
     HEADER_P = 437,
     HOLD = 438,
     HOUR_P = 439,
     HOURS_P = 440,
     IDENTITY_P = 441,
     IF_P = 442,
     IGNORE_P = 443,
     ILIKE = 444,
     IMMEDIATE = 445,
     IMMUTABLE = 446,
     IMPLICIT_P = 447,
     IMPORT_P = 448,
     IN_P = 449,
     INCLUDING = 450,
     INCREMENT = 451,
     INDEX = 452,
     INDEXES = 453,
     INHERIT = 454,
     INHERITS = 455,
     INITIALLY = 456,
     INLINE_P = 457,
     INNER_P = 458,
     INOUT = 459,
     INPUT_P = 460,
     INSENSITIVE = 461,
     INSERT = 462,
     INSTEAD = 463,
     INT_P = 464,
     INTEGER = 465,
     INTERSECT = 466,
     INTERVAL = 467,
     INTO = 468,
     INVOKER = 469,
     IS = 470,
     ISNULL = 471,
     ISOLATION = 472,
     JOIN = 473,
     KEY = 474,
     LABEL = 475,
     LANGUAGE = 476,
     LARGE_P = 477,
     LAST_P = 478,
     LATERAL_P = 479,
     LEADING = 480,
     LEAKPROOF = 481,
     LEFT = 482,
     LEVEL = 483,
     LIKE = 484,
     LIMIT = 485,
     LISTEN = 486,
     LOAD = 487,
     LOCAL = 488,
     LOCALTIME = 489,
     LOCALTIMESTAMP = 490,
     LOCATION = 491,
     LOCK_P = 492,
     LOCKED = 493,
     LOGGED = 494,
     MACRO = 495,
     MAP = 496,
     MAPPING = 497,
     MATCH = 498,
     MATERIALIZED = 499,
     MAXVALUE = 500,
     METHOD = 501,
     MICROSECOND_P = 502,
     MICROSECONDS_P = 503,
     MILLISECOND_P = 504,
     MILLISECONDS_P = 505,
     MINUTE_P = 506,
     MINUTES_P = 507,
     MINVALUE = 508,
     MODE = 509,
     MONTH_P = 510,
     MONTHS_P = 511,
     MOVE = 512,
     NAME_P = 513,
     NAMES = 514,
     NATIONAL = 515,
     NATURAL = 516,
     NCHAR = 517,
     NEW = 518,
     NEXT = 519,
     NO = 520,
     NONE = 521,
     NOT = 522,
     NOTHING = 523,
     NOTIFY = 524,
     NOTNULL = 525,
     NOWAIT = 526,
     NULL_P = 527,
     NULLIF = 528,
     NULLS_P = 529,
     NUMERIC = 530,
     OBJECT_P = 531,
     OF = 532,
     OFF = 533,
     OFFSET = 534,
     OIDS = 535,
     OLD = 536,
     ON = 537,
     ONLY = 538,
     OPERATOR = 539,
     OPTION = 540,
     OPTIONS = 541,
     OR = 542,
     ORDER = 543,
     ORDINALITY = 544,
     OUT_P = 545,
     OUTER_P = 546,
     OVER = 547,
     OVERLAPS = 548,
     OVERLAY = 549,
     OVERRIDING = 550,
     OWNED = 551,
     OWNER = 552,
     PARALLEL = 553,
     PARSER = 554,
     PARTIAL = 555,
     PARTITION = 556,
     PASSING = 557,
     PASSWORD = 558,
     PERCENT = 559,
     PLACING = 560,
     PLANS = 561,
     POLICY = 562,
     POSITION = 563,
     PRAGMA_P = 564,
     PRECEDING = 565,
     PRECISION = 566,
     PREPARE = 567,
     PREPARED = 568,
     PRESERVE = 569,
     PRIMARY = 570,
     PRIOR = 571,
     PRIVILEGES = 572,
     PROCEDURAL = 573,
     PROCEDURE = 574,
     PROGRAM = 575,
     PUBLICATION = 576,
     QUOTE = 577,
     RANGE = 578,
     READ_P = 579,
     REAL = 580,
     REASSIGN = 581,
     RECHECK = 582,
     RECURSIVE = 583,
     REF = 584,
     REFERENCES = 585,
     REFERENCING = 586,
     REFRESH = 587,
     REINDEX = 588,
     RELATIVE_P = 589,
     RELEASE = 590,
     RENAME = 591,
     REPEATABLE = 592,
     REPLACE = 593,
     REPLICA = 594,
     RESET = 595,
     RESPECT_P = 596,
     RESTART = 597,
     RESTRICT = 598,
     RETURNING = 599,
     RETURNS = 600,
     REVOKE = 601,
     RIGHT = 602,
     ROLE = 603,
     ROLLBACK = 604,
     ROLLUP = 605,
     ROW = 606,
     ROWS = 607,
     RULE = 608,
     SAMPLE = 609,
     SAVEPOINT = 610,
     SCHEMA = 611,
     SCHEMAS = 612,
     SCROLL = 613,
     SEARCH = 614,
     SECOND_P = 615,
     SECONDS_P = 616,
     SECURITY = 617,
     SELECT = 618,
     SEQUENCE = 619,
     SEQUENCES = 620,
     SERIALIZABLE = 621,
     SERVER = 622,
     SESSION = 623,
     SESSION_USER = 624,
     SET = 625,
     SETOF = 626,
     SETS = 627,
     SHARE = 628,
     SHOW = 629,
     SIMILAR = 630,
     SIMPLE = 631,
     SKIP = 632,
     SMALLINT = 633,
     SNAPSHOT = 634,
     SOME = 635,
     SQL_P = 636,
     STABLE = 637,
     STANDALONE_P = 638,
     START = 639,
     STATEMENT = 640,
     STATISTICS = 641,
     STDIN = 642,
     STDOUT = 643,
     STORAGE = 644,
     STRICT_P = 645,
     STRIP_P = 646,
     STRUCT = 647,
     SUBSCRIPTION = 648,
     SUBSTRING = 649,
     SUMMARIZE = 650,
     SYMMETRIC = 651,
     SYSID = 652,
     SYSTEM_P = 653,
     TABLE = 654,
     TABLES = 655,
     TABLESAMPLE = 656,
     TABLESPACE = 657,
     TEMP = 658,
     TEMPLATE = 659,
     TEMPORARY = 660,
     TEXT_P = 661,
     THEN = 662,
     TIME = 663,
     TIMESTAMP = 664,
     TO = 665,
     TRAILING = 666,
     TRANSACTION = 667,
     TRANSFORM = 668,
     TREAT = 669,
     TRIGGER = 670,
     TRIM = 671,
     TRUE_P = 672,
     TRUNCATE = 673,
     TRUSTED = 674,
     TRY_CAST = 675,
     TYPE_P = 676,
     TYPES_P = 677,
     UNBOUNDED = 678,
     UNCOMMITTED = 679,
     UNENCRYPTED = 680,
     UNION = 681,
     UNIQUE = 682,
     UNKNOWN = 683,
     UNLISTEN = 684,
     UNLOGGED = 685,
     UNTIL = 686,
     UPDATE = 687,
     USER = 688,
     USING = 689,
     VACUUM = 690,
     VALID = 691,
     VALIDATE = 692,
     VALIDATOR = 693,
     VALUE_P = 694,
     VALUES = 695,
     VARCHAR = 696,
     VARIADIC = 697,
     VARYING = 698,
     VERBOSE = 699,
     VERSION_P = 700,
     VIEW = 701,
     VIEWS = 702,
     VOLATILE = 703,
     WHEN = 704,
     WHERE = 705,
     WHITESPACE_P = 706,
     WINDOW = 707,
     WITH = 708,
     WITHIN = 709,
     WITHOUT = 710,
     WORK = 711,
     WRAPPER = 712,
     WRITE_P = 713,
     XML_P = 714,
     XMLATTRIBUTES = 715,
     XMLCONCAT = 716,
     XMLELEMENT = 717,
     XMLEXISTS = 718,
     XMLFOREST = 719,
     XMLNAMESPACES = 720,
     XMLPARSE = 721,
     XMLPI = 722,
     XMLROOT = 723,
     XMLSERIALIZE = 724,
     XMLTABLE = 725,
     YEAR_P = 726,
     YEARS_P = 727,
     YES_P = 728,
     ZONE = 729,
     NOT_LA = 730,
     NULLS_LA = 731,
     WITH_LA = 732,
     POSTFIXOP = 733,
     UMINUS = 734
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXTENSION 408
#define EXTERNAL 409
#define EXTRACT 410
#define FALSE_P 411
#define FAMILY 412
#define FETCH 413
#define FILTER 414
#define FIRST_P 415
#define FLOAT_P 416
#define FOLLOWING 417
#define FOR 418
#define FORCE 419
#define FOREIGN 420
#define FORWARD 421
#define FREEZE 422
#define FROM 423
#define FULL 424
#define FUNCTION 425
#define FUNCTIONS 426
#define GENERATED 427
#define GLOB 428
#define GLOBAL 429
#define GRANT 430
#define GRANTED 431
#define GROUP_P 432
#define GROUPING 433
#define GROUPING_ID 434
#define HANDLER 435
#define HAVING 436
#define HEADER_P 437
#define HOLD 438
#define HOUR_P 439
#define HOURS_P 440
#define IDENTITY_P 441
#define IF_P 442
#define IGNORE_P 443
#define ILIKE 444
#define IMMEDIATE 445
#define IMMUTABLE 446
#define IMPLICIT_P 447
#define IMPORT_P 448
#define IN_P 449
#define INCLUDING 450
#define INCREMENT 451
#define INDEX 452
#define INDEXES 453
#define INHERIT 454
#define INHERITS 455
#define INITIALLY 456
#define INLINE_P 457
#define INNER_P 458
#define INOUT 459
#define INPUT_P 460
#define INSENSITIVE 461
#define INSERT 462
#define INSTEAD 463
#define INT_P 464
#define INTEGER 465
#define INTERSECT 466
#define INTERVAL 467
#define INTO 468
#define INVOKER 469
#define IS 470
#define ISNULL 471
#define ISOLATION 472
#define JOIN 473
#define KEY 474
#define LABEL 475
#define LANGUAGE 476
#define LARGE_P 477
#define LAST_P 478
#define LATERAL_P 479
#define LEADING 480
#define LEAKPROOF 481
#define LEFT 482
#define LEVEL 483
#define LIKE 484
#define LIMIT 485
#define LISTEN 486
#define LOAD 487
#define LOCAL 488
#define LOCALTIME 489
#define LOCALTIMESTAMP 490
#define LOCATION 491
#define LOCK_P 492
#define LOCKED 493
#define LOGGED 494
#define MACRO 495
#define MAP 496
#define MAPPING 497
#define MATCH 498
#define MATERIALIZED 499
#define MAXVALUE 500
#define METHOD 501
#define MICROSECOND_P 502
#define MICROSECONDS_P 503
#define MILLISECOND_P 504
#define MILLISECONDS_P 505
#define MINUTE_P 506
#define MINUTES_P 507
#define MINVALUE 508
#define MODE 509
#define MONTH_P 510
#define MONTHS_P 511
#define MOVE 512
#define NAME_P 513
#define NAMES 514
#define NATIONAL 515
#define NATURAL 516
#define NCHAR 517
#define NEW 518
#define NEXT 519
#define NO 520
#define NONE 521
#define NOT 522
#define NOTHING 523
#define NOTIFY 524
#define NOTNULL 525
#define NOWAIT 526
#define NULL_P 527
#define NULLIF 528
#define NULLS_P 529
#define NUMERIC 530
#define OBJECT_P 531
#define OF 532
#define OFF 533
#define OFFSET 534
#define OIDS 535
#define OLD 536
#define ON 537
#define ONLY 538
#define OPERATOR 539
#define OPTION 540
#define OPTIONS 541
#define OR 542
#define ORDER 543
#define ORDINALITY 544
#define OUT_P 545
#define OUTER_P 546
#define OVER 547
#define OVERLAPS 548
#define OVERLAY 549
#define OVERRIDING 550
#define OWNED 551
#define OWNER 552
#define PARALLEL 553
#define PARSER 554
#define PARTIAL 555
#define PARTITION 556
#define PASSING 557
#define PASSWORD 558
#define PERCENT 559
#define PLACING 560
#define PLANS 561
#define POLICY 562
#define POSITION 563
#define PRAGMA_P 564
#define PRECEDING 565
#define PRECISION 566
#define PREPARE 567
#define PREPARED 568
#define PRESERVE 569
#define PRIMARY 570
#define PRIOR 571
#define PRIVILEGES 572
#define PROCEDURAL 573
#define PROCEDURE 574
#define PROGRAM 575
#define PUBLICATION 576
#define QUOTE 577
#define RANGE 578
#define READ_P 579
#define REAL 580
#define REASSIGN 581
#define RECHECK 582
#define RECURSIVE 583
#define REF 584
#define REFERENCES 585
#define REFERENCING 586
#define REFRESH 587
#define REINDEX 588
#define RELATIVE_P 589
#define RELEASE 590
#define RENAME 591
#define REPEATABLE 592
#define REPLACE 593
#define REPLICA 594
#define RESET 595
#define RESPECT_P 596
#define RESTART 597
#define RESTRICT 598
#define RETURNING 599
#define RETURNS 600
#define REVOKE 601
#define RIGHT 602
#define ROLE 603
#define ROLLBACK 604
#define ROLLUP 605
#define ROW 606
#define ROWS 607
#define RULE 608
#define SAMPLE 609
#define SAVEPOINT 610
#define SCHEMA 611
#define SCHEMAS 612
#define SCROLL 613
#define SEARCH 614
#define SECOND_P 615
#define SECONDS_P 616
#define SECURITY 617
#define SELECT 618
#define SEQUENCE 619
#define SEQUENCES 620
#define SERIALIZABLE 621
#define SERVER 622
#define SESSION 623
#define SESSION_USER 624
#define SET 625
#define SETOF 626
#define SETS 627
#define SHARE 628
#define SHOW 629
#define SIMILAR 630
#define SIMPLE 631
#define SKIP 632
#define SMALLINT 633
#define SNAPSHOT 634
#define SOME 635
#define SQL_P 636
#define STABLE 637
#define STANDALONE_P 638
#define START 639
#define STATEMENT 640
#define STATISTICS 641
#define STDIN 642
#define STDOUT 643
#define STORAGE 644
#define STRICT_P 645
#define STRIP_P 646
#define STRUCT 647
#define SUBSCRIPTION 648
#define SUBSTRING 649
#define SUMMARIZE 650
#define SYMMETRIC 651
#define SYSID 652
#define SYSTEM_P 653
#define TABLE 654
#define TABLES 655
#define TABLESAMPLE 656
#define TABLESPACE 657
#define TEMP 658
#define TEMPLATE 659
#define TEMPORARY 660
#define TEXT_P 661
#define THEN 662
#define TIME 663
#define TIMESTAMP 664
#define TO 665
#define TRAILING 666
#define TRANSACTION 667
#define TRANSFORM 668
#define TREAT 669
#define TRIGGER 670
#define TRIM 671
#define TRUE_P 672
#define TRUNCATE 673
#define TRUSTED 674
#define TRY_CAST 675
#define TYPE_P 676
#define TYPES_P 677
#define UNBOUNDED 678
#define UNCOMMITTED 679
#define UNENCRYPTED 680
#define UNION 681
#define UNIQUE 682
#define UNKNOWN 683
#define UNLISTEN 684
#define UNLOGGED 685
#define UNTIL 686
#define UPDATE 687
#define USER 688
#define USING 689
#define VACUUM 690
#define VALID 691
#define VALIDATE 692
#define VALIDATOR 693
#define VALUE_P 694
#define VALUES 695
#define VARCHAR 696
#define VARIADIC 697
#define VARYING 698
#define VERBOSE 699
#define VERSION_P 700
#define VIEW 701
#define VIEWS 702
#define VOLATILE 703
#define WHEN 704
#define WHERE 705
#define WHITESPACE_P 706
#define WINDOW 707
#define WITH 708
#define WITHIN 709
#define WITHOUT 710
#define WORK 711
#define WRAPPER 712
#define WRITE_P 713
#define XML_P 714
#define XMLATTRIBUTES 715
#define XMLCONCAT 716
#define XMLELEMENT 717
#define XMLEXISTS 718
#define XMLFOREST 719
#define XMLNAMESPACES 720
#define XMLPARSE 721
#define XMLPI 722
#define XMLROOT 723
#define XMLSERIALIZE 724
#define XMLTABLE 725
#define YEAR_P 726
#define YEARS_P 727
#define YES_P 728
#define ZONE 729
#define NOT_LA 730
#define NULLS_LA 731
#define WITH_LA 732
#define POSTFIXOP 733
#define UMINUS 734




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 187 of yacc.c.  */
#line 1272 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1297 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  591
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   52063

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  501
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  383
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1797
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2972

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   734

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   498,     2,   486,     2,     2,
     491,   492,   484,   482,   495,   483,   493,   485,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   500,   494,
     478,   480,   479,   499,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   489,     2,   490,   487,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   496,     2,   497,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   481,   488
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     354,   358,   361,   366,   372,   379,   388,   395,   404,   411,
     420,   423,   428,   432,   438,   440,   441,   443,   445,   446,
     448,   450,   452,   454,   456,   458,   460,   462,   464,   466,
     468,   472,   474,   476,   478,   480,   482,   484,   487,   489,
     491,   494,   496,   499,   504,   512,   514,   519,   524,   532,
     535,   537,   541,   546,   550,   551,   553,   554,   557,   561,
     567,   576,   582,   583,   589,   595,   603,   606,   607,   609,
     611,   613,   617,   620,   621,   623,   624,   626,   630,   632,
     636,   638,   642,   645,   652,   659,   668,   675,   684,   691,
     700,   707,   716,   725,   736,   745,   756,   758,   759,   764,
     771,   773,   776,   778,   780,   781,   783,   786,   789,   791,
     794,   797,   799,   802,   806,   809,   812,   815,   818,   822,
     826,   830,   832,   836,   838,   839,   841,   844,   847,   857,
     870,   882,   883,   886,   888,   890,   892,   894,   896,   898,
     902,   903,   905,   908,   910,   912,   915,   918,   922,   924,
     926,   929,   932,   934,   937,   941,   947,   951,   954,   960,
     966,   969,   973,   975,   977,   980,   983,   984,   989,   990,
     994,   999,  1004,  1005,  1009,  1012,  1013,  1017,  1019,  1021,
    1023,  1025,  1027,  1029,  1031,  1033,  1035,  1037,  1041,  1045,
    1047,  1050,  1053,  1056,  1059,  1062,  1065,  1066,  1070,  1074,
    1078,  1079,  1081,  1084,  1086,  1089,  1092,  1095,  1098,  1103,
    1105,  1109,  1111,  1115,  1117,  1119,  1121,  1123,  1127,  1129,
    1132,  1133,  1135,  1136,  1138,  1142,  1143,  1146,  1147,  1151,
    1155,  1157,  1163,  1167,  1169,  1173,  1175,  1180,  1186,  1192,
    1199,  1203,  1211,  1216,  1228,  1230,  1234,  1237,  1240,  1243,
    1244,  1248,  1250,  1252,  1255,  1258,  1261,  1264,  1266,  1267,
    1269,  1272,  1278,  1287,  1289,  1290,  1293,  1296,  1299,  1302,
    1306,  1311,  1314,  1316,  1318,  1320,  1324,  1327,  1329,  1331,
    1333,  1336,  1340,  1354,  1371,  1373,  1376,  1377,  1379,  1380,
    1382,  1383,  1386,  1387,  1389,  1390,  1398,  1409,  1412,  1416,
    1417,  1422,  1425,  1429,  1432,  1436,  1439,  1442,  1445,  1448,
    1451,  1454,  1456,  1458,  1459,  1469,  1481,  1494,  1509,  1513,
    1518,  1523,  1524,  1529,  1535,  1541,  1546,  1553,  1555,  1557,
    1559,  1561,  1563,  1565,  1566,  1568,  1572,  1574,  1575,  1578,
    1581,  1585,  1589,  1593,  1595,  1599,  1603,  1606,  1610,  1614,
    1618,  1622,  1624,  1626,  1628,  1630,  1634,  1640,  1642,  1644,
    1646,  1648,  1652,  1664,  1674,  1676,  1678,  1682,  1683,  1685,
    1689,  1691,  1692,  1694,  1695,  1697,  1698,  1700,  1704,  1706,
    1708,  1710,  1714,  1715,  1718,  1721,  1722,  1725,  1726,  1728,
    1729,  1731,  1733,  1735,  1739,  1743,  1745,  1747,  1751,  1755,
    1759,  1763,  1768,  1772,  1775,  1777,  1779,  1781,  1783,  1785,
    1789,  1796,  1798,  1800,  1803,  1807,  1810,  1812,  1818,  1822,
    1823,  1825,  1827,  1829,  1831,  1840,  1842,  1844,  1848,  1852,
    1854,  1857,  1862,  1867,  1870,  1874,  1880,  1886,  1888,  1890,
    1901,  1912,  1914,  1917,  1922,  1927,  1932,  1935,  1938,  1942,
    1944,  1948,  1955,  1958,  1959,  1963,  1967,  1972,  1977,  1982,
    1987,  1991,  1994,  1996,  1998,  1999,  2001,  2003,  2004,  2006,
    2012,  2014,  2015,  2018,  2021,  2022,  2024,  2025,  2029,  2031,
    2035,  2040,  2044,  2046,  2048,  2049,  2052,  2055,  2056,  2059,
    2062,  2064,  2066,  2068,  2069,  2072,  2077,  2083,  2088,  2091,
    2095,  2098,  2101,  2104,  2107,  2109,  2112,  2116,  2117,  2119,
    2120,  2126,  2128,  2133,  2140,  2143,  2145,  2146,  2151,  2152,
    2154,  2156,  2159,  2162,  2165,  2167,  2169,  2172,  2175,  2177,
    2179,  2181,  2183,  2185,  2187,  2191,  2192,  2194,  2198,  2200,
    2202,  2204,  2206,  2208,  2211,  2216,  2221,  2227,  2229,  2231,
    2234,  2235,  2237,  2241,  2243,  2244,  2246,  2249,  2253,  2256,
    2261,  2264,  2268,  2271,  2272,  2274,  2277,  2278,  2283,  2289,
    2292,  2293,  2295,  2299,  2303,  2307,  2311,  2315,  2319,  2321,
    2326,  2330,  2335,  2341,  2346,  2352,  2357,  2363,  2366,  2371,
    2373,  2375,  2376,  2378,  2383,  2389,  2394,  2395,  2398,  2401,
    2404,  2406,  2408,  2409,  2414,  2417,  2419,  2422,  2425,  2430,
    2433,  2440,  2443,  2445,  2449,  2454,  2455,  2458,  2459,  2462,
    2463,  2465,  2469,  2473,  2476,  2477,  2480,  2485,  2487,  2489,
    2492,  2496,  2502,  2509,  2512,  2516,  2522,  2528,  2532,  2537,
    2538,  2540,  2542,  2544,  2546,  2548,  2551,  2556,  2558,  2560,
    2562,  2564,  2567,  2571,  2572,  2574,  2576,  2578,  2580,  2582,
    2585,  2588,  2591,  2594,  2597,  2599,  2603,  2604,  2606,  2608,
    2610,  2612,  2618,  2621,  2623,  2625,  2627,  2629,  2634,  2636,
    2639,  2642,  2644,  2648,  2652,  2655,  2657,  2658,  2664,  2667,
    2673,  2676,  2678,  2682,  2686,  2687,  2689,  2691,  2693,  2695,
    2697,  2699,  2701,  2703,  2705,  2707,  2709,  2711,  2713,  2715,
    2717,  2719,  2721,  2723,  2725,  2727,  2729,  2731,  2733,  2735,
    2739,  2743,  2747,  2751,  2755,  2759,  2763,  2764,  2766,  2770,
    2774,  2780,  2783,  2786,  2790,  2794,  2798,  2802,  2806,  2810,
    2814,  2818,  2822,  2826,  2830,  2834,  2838,  2841,  2844,  2848,
    2852,  2855,  2858,  2862,  2866,  2872,  2877,  2884,  2888,  2894,
    2899,  2906,  2911,  2918,  2924,  2932,  2936,  2939,  2944,  2948,
    2951,  2953,  2957,  2961,  2965,  2969,  2973,  2977,  2982,  2986,
    2991,  2995,  3000,  3006,  3013,  3020,  3028,  3035,  3043,  3050,
    3058,  3062,  3067,  3072,  3079,  3081,  3086,  3088,  3092,  3095,
    3098,  3102,  3106,  3110,  3114,  3118,  3122,  3126,  3130,  3134,
    3138,  3142,  3146,  3150,  3153,  3156,  3162,  3169,  3176,  3184,
    3186,  3188,  3191,  3194,  3197,  3202,  3204,  3207,  3209,  3212,
    3215,  3220,  3224,  3231,  3239,  3249,  3257,  3265,  3270,  3275,
    3277,  3279,  3281,  3287,  3289,  3291,  3296,  3298,  3303,  3305,
    3310,  3312,  3317,  3319,  3321,  3323,  3325,  3327,  3329,  3336,
    3343,  3348,  3353,  3358,  3363,  3370,  3376,  3382,  3388,  3393,
    3400,  3405,  3411,  3412,  3418,  3419,  3422,  3423,  3425,  3429,
    3433,  3436,  3439,  3440,  3447,  3449,  3450,  3454,  3455,  3458,
    3461,  3462,  3464,  3469,  3472,  3475,  3478,  3481,  3484,  3489,
    3493,  3495,  3501,  3505,  3507,  3511,  3513,  3515,  3517,  3519,
    3521,  3523,  3525,  3527,  3529,  3531,  3533,  3535,  3537,  3539,
    3541,  3543,  3545,  3547,  3552,  3554,  3559,  3561,  3566,  3568,
    3571,  3573,  3576,  3578,  3581,  3583,  3587,  3589,  3593,  3595,
    3596,  3598,  3602,  3604,  3608,  3612,  3614,  3618,  3622,  3623,
    3625,  3627,  3629,  3631,  3633,  3635,  3637,  3639,  3641,  3643,
    3648,  3652,  3655,  3659,  3660,  3664,  3668,  3671,  3674,  3676,
    3677,  3680,  3683,  3687,  3690,  3692,  3694,  3698,  3704,  3706,
    3709,  3714,  3717,  3718,  3720,  3721,  3723,  3726,  3729,  3733,
    3739,  3741,  3742,  3744,  3747,  3748,  3751,  3753,  3754,  3756,
    3757,  3759,  3763,  3767,  3770,  3772,  3776,  3782,  3787,  3790,
    3792,  3793,  3797,  3799,  3803,  3808,  3811,  3812,  3814,  3818,
    3820,  3823,  3825,  3829,  3831,  3833,  3835,  3838,  3840,  3842,
    3845,  3847,  3849,  3852,  3860,  3863,  3869,  3873,  3877,  3879,
    3881,  3883,  3885,  3887,  3889,  3891,  3893,  3895,  3897,  3899,
    3901,  3903,  3905,  3907,  3909,  3911,  3913,  3915,  3917,  3920,
    3923,  3927,  3931,  3932,  3934,  3936,  3938,  3940,  3942,  3944,
    3946,  3954,  3956,  3959,  3963,  3966,  3967,  3970,  3971,  3976,
    3984,  3987,  3988,  3990,  3992,  3994,  3996,  4003,  4008,  4015,
    4020,  4027,  4036,  4041,  4048,  4050,  4052,  4054,  4056,  4058,
    4061,  4063,  4066,  4068,  4070,  4072,  4076,  4080,  4084,  4088,
    4091,  4094,  4096,  4100,  4102,  4104,  4106,  4108,  4112,  4114,
    4116,  4117,  4119,  4121,  4123,  4125,  4129,  4138,  4140,  4141,
    4143,  4147,  4151,  4161,  4174,  4178,  4179,  4181,  4183,  4185,
    4187,  4189,  4191,  4193,  4195,  4197,  4199,  4201,  4203,  4205,
    4207,  4209,  4211,  4213,  4215,  4217,  4219,  4221,  4223,  4225,
    4227,  4229,  4231,  4233,  4235,  4237,  4239,  4241,  4243,  4245,
    4247,  4249,  4251,  4253,  4255,  4257,  4259,  4261,  4263,  4265,
    4267,  4269,  4271,  4273,  4275,  4277,  4279,  4281,  4283,  4285,
    4287,  4289,  4291,  4293,  4295,  4297,  4299,  4301,  4303,  4305,
    4307,  4309,  4311,  4313,  4315,  4317,  4319,  4321,  4323,  4325,
    4327,  4329,  4331,  4333,  4335,  4337,  4339,  4341,  4343,  4345,
    4347,  4349,  4351,  4353,  4355,  4357,  4359,  4361,  4363,  4365,
    4367,  4369,  4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,
    4387,  4389,  4391,  4393,  4395,  4397,  4399,  4401,  4403,  4405,
    4407,  4409,  4411,  4413,  4415,  4417,  4419,  4421,  4423,  4425,
    4427,  4429,  4431,  4433,  4435,  4437,  4439,  4441,  4443,  4445,
    4447,  4449,  4451,  4453,  4455,  4457,  4459,  4461,  4463,  4465,
    4467,  4469,  4471,  4473,  4475,  4477,  4479,  4481,  4483,  4485,
    4487,  4489,  4491,  4493,  4495,  4497,  4499,  4501,  4503,  4505,
    4507,  4509,  4511,  4513,  4515,  4517,  4519,  4521,  4523,  4525,
    4527,  4529,  4531,  4533,  4535,  4537,  4539,  4541,  4543,  4545,
    4547,  4549,  4551,  4553,  4555,  4557,  4559,  4561,  4563,  4565,
    4567,  4569,  4571,  4573,  4575,  4577,  4579,  4581,  4583,  4585,
    4587,  4589,  4591,  4593,  4595,  4597,  4599,  4601,  4603,  4605,
    4607,  4609,  4611,  4613,  4615,  4617,  4619,  4621,  4623,  4625,
    4627,  4629,  4631,  4633,  4635,  4637,  4639,  4641,  4643,  4645,
    4647,  4649,  4651,  4653,  4655,  4657,  4659,  4661,  4663,  4665,
    4667,  4669,  4671,  4673,  4675,  4677,  4679,  4681,  4683,  4685,
    4687,  4689,  4691,  4693,  4695,  4697,  4699,  4701,  4703,  4705,
    4707,  4709,  4711,  4713,  4715,  4717,  4719,  4721,  4723,  4725,
    4727,  4729,  4731,  4733,  4735,  4737,  4739,  4741,  4743,  4745,
    4747,  4749,  4751,  4753,  4755,  4757,  4759,  4761,  4763,  4765,
    4767,  4769,  4771,  4773,  4775,  4777,  4779,  4781,  4783,  4785,
    4787,  4789,  4791,  4793,  4795,  4797,  4799,  4801,  4803,  4805,
    4807,  4809,  4811,  4813,  4815,  4817,  4819,  4821,  4823,  4825,
    4827,  4829,  4831,  4833,  4835,  4837,  4839,  4841,  4843,  4845,
    4847,  4849,  4851,  4853,  4855,  4857,  4859,  4861,  4863,  4865,
    4867,  4869,  4871,  4873,  4875,  4877,  4879,  4881,  4883,  4885,
    4887,  4889,  4891,  4893,  4895,  4897,  4899,  4901,  4903,  4905,
    4907,  4909,  4911,  4913,  4915,  4917,  4919,  4921,  4923,  4925,
    4927,  4929,  4931,  4933,  4935,  4937,  4939,  4941,  4943,  4945,
    4947,  4949,  4951,  4953,  4955,  4957,  4959,  4961,  4963,  4965,
    4967,  4969,  4971,  4973,  4975,  4977,  4979,  4981,  4983,  4985,
    4987,  4989,  4991,  4993,  4995,  4997,  4999,  5001,  5003,  5005,
    5007,  5009,  5011,  5013,  5015,  5017,  5019,  5021,  5023,  5025,
    5027,  5029,  5031,  5033,  5035,  5037,  5039,  5041,  5043,  5045,
    5047,  5049,  5051,  5053,  5055,  5057,  5059,  5061,  5063,  5065,
    5067,  5069,  5071,  5073,  5075,  5077,  5079,  5081,  5083,  5085,
    5087,  5089,  5091,  5093,  5095,  5097,  5099,  5101,  5103,  5105,
    5107,  5109,  5111,  5113,  5115,  5117,  5119,  5121,  5123,  5125,
    5127,  5129,  5131,  5133,  5135,  5137,  5139,  5141,  5143,  5145,
    5147,  5149,  5151,  5153,  5155,  5157,  5159,  5161,  5163,  5165,
    5167,  5169,  5171,  5173,  5175,  5177,  5179,  5181,  5183,  5185,
    5187,  5189,  5191,  5193,  5195,  5197,  5199,  5201,  5203,  5205,
    5207,  5209,  5211,  5213,  5215,  5217,  5219,  5221,  5223,  5225,
    5227,  5229,  5231,  5233,  5235,  5237,  5239,  5241,  5243,  5245,
    5247,  5249,  5251,  5253,  5255,  5257,  5259,  5261,  5263,  5265,
    5267,  5269,  5271,  5273,  5275,  5277,  5279,  5281,  5283,  5285,
    5287,  5289,  5291,  5293,  5295,  5297,  5299,  5301
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     502,     0,    -1,   503,    -1,   503,   494,   504,    -1,   504,
      -1,   519,    -1,   554,    -1,   505,    -1,   533,    -1,   635,
      -1,   662,    -1,   642,    -1,   622,    -1,   872,    -1,   659,
      -1,   862,    -1,   607,    -1,   561,    -1,   625,    -1,   858,
      -1,   865,    -1,   875,    -1,   520,    -1,   516,    -1,   517,
      -1,   615,    -1,   534,    -1,   531,    -1,   518,    -1,   663,
      -1,   552,    -1,   667,    -1,   626,    -1,   666,    -1,   630,
      -1,   612,    -1,   636,    -1,   609,    -1,   628,    -1,    -1,
      29,   399,   732,   513,    -1,    29,   399,   187,   150,   732,
     513,    -1,    29,   197,   839,   513,    -1,    29,   197,   187,
     150,   839,   513,    -1,    29,   364,   839,   513,    -1,    29,
     364,   187,   150,   839,   513,    -1,    29,   446,   839,   513,
      -1,    29,   446,   187,   150,   839,   513,    -1,   508,    -1,
     506,   508,    -1,   370,   115,   774,    -1,   135,   115,    -1,
     342,    -1,   342,   556,   557,    -1,   370,   558,    -1,   370,
     172,   606,    -1,   512,    -1,   509,   495,   512,    -1,    23,
     586,    -1,    23,   187,   267,   150,   586,    -1,    23,    75,
     586,    -1,    23,    75,   187,   267,   150,   586,    -1,    29,
     553,   847,   507,    -1,    29,   553,   847,   135,   267,   272,
      -1,    29,   553,   847,   370,   267,   272,    -1,    29,   553,
     847,   370,   386,   560,    -1,    29,   553,   847,   370,   574,
      -1,    29,   553,   847,   340,   574,    -1,    29,   553,   847,
     370,   389,   847,    -1,    29,   553,   847,    23,   172,   606,
      36,   186,   564,    -1,    29,   553,   847,   506,    -1,    29,
     553,   847,   135,   186,    -1,    29,   553,   847,   135,   186,
     187,   150,    -1,   135,   553,   187,   150,   847,   869,    -1,
     135,   553,   847,   869,    -1,    29,   553,   847,   515,   421,
     744,   741,   511,    -1,    29,   553,   847,   514,    -1,    23,
     576,    -1,    29,    86,   841,   562,    -1,   437,    86,   841,
      -1,   135,    86,   187,   150,   841,   869,    -1,   135,    86,
     841,   869,    -1,   370,   239,    -1,   370,   430,    -1,   370,
     574,    -1,   340,   574,    -1,   514,    -1,   434,   774,    -1,
      -1,   569,    -1,   370,   569,    -1,    23,   569,    -1,   135,
     584,    -1,   510,    -1,   513,   495,   510,    -1,   286,   491,
     509,   492,    -1,   370,   107,    -1,   370,    -1,    -1,   152,
     108,   846,   649,    -1,   193,   108,   846,    -1,   309,   847,
      -1,   309,   847,   480,   641,    -1,   309,   847,   491,   806,
     492,    -1,    29,   399,   732,   370,   356,   841,    -1,    29,
     399,   187,   150,   732,   370,   356,   841,    -1,    29,   364,
     839,   370,   356,   841,    -1,    29,   364,   187,   150,   839,
     370,   356,   841,    -1,    29,   446,   839,   370,   356,   841,
      -1,    29,   446,   187,   150,   839,   370,   356,   841,    -1,
     151,   523,    -1,   151,   527,   521,   523,    -1,   151,   444,
     523,    -1,   151,   491,   526,   492,   523,    -1,   444,    -1,
      -1,   528,    -1,   557,    -1,    -1,   667,    -1,   534,    -1,
     666,    -1,   858,    -1,   622,    -1,     3,    -1,   877,    -1,
     881,    -1,   524,    -1,   846,    -1,   529,    -1,   526,   495,
     529,    -1,    32,    -1,    31,    -1,   417,    -1,   156,    -1,
     282,    -1,   525,    -1,   530,   522,    -1,   524,    -1,   527,
      -1,   232,   532,    -1,   846,    -1,   527,   521,    -1,   527,
     521,   839,   854,    -1,   538,   207,   213,   536,   535,   541,
     543,    -1,   667,    -1,   295,   544,   439,   667,    -1,   491,
     548,   492,   667,    -1,   491,   548,   492,   295,   544,   439,
     667,    -1,   115,   440,    -1,   839,    -1,   839,    36,   847,
      -1,   491,   550,   492,   738,    -1,   282,    86,   841,    -1,
      -1,   672,    -1,    -1,   847,   828,    -1,   551,   480,   774,
      -1,   491,   545,   492,   480,   774,    -1,   282,    84,   537,
     131,   432,   370,   549,   738,    -1,   282,    84,   537,   131,
     268,    -1,    -1,   847,   546,   547,   686,   687,    -1,   779,
     546,   547,   686,   687,    -1,   491,   774,   492,   546,   547,
     686,   687,    -1,   344,   831,    -1,    -1,   433,    -1,   398,
      -1,   551,    -1,   545,   495,   551,    -1,    73,   852,    -1,
      -1,   852,    -1,    -1,   539,    -1,   548,   495,   539,    -1,
     540,    -1,   549,   495,   540,    -1,   542,    -1,   550,   495,
     542,    -1,   847,   828,    -1,    29,   356,   841,   336,   410,
     841,    -1,    29,   399,   732,   336,   410,   841,    -1,    29,
     399,   187,   150,   732,   336,   410,   841,    -1,    29,   364,
     839,   336,   410,   841,    -1,    29,   364,   187,   150,   839,
     336,   410,   841,    -1,    29,   446,   839,   336,   410,   841,
      -1,    29,   446,   187,   150,   839,   336,   410,   841,    -1,
      29,   197,   839,   336,   410,   841,    -1,    29,   197,   187,
     150,   839,   336,   410,   841,    -1,    29,   399,   732,   336,
     553,   841,   410,   841,    -1,    29,   399,   187,   150,   732,
     336,   553,   841,   410,   841,    -1,    29,   399,   732,   336,
      86,   841,   410,   841,    -1,    29,   399,   187,   150,   732,
     336,    86,   841,   410,   841,    -1,    75,    -1,    -1,    29,
     364,   839,   555,    -1,    29,   364,   187,   150,   839,   555,
      -1,   558,    -1,   555,   558,    -1,   453,    -1,   477,    -1,
      -1,     4,    -1,   482,     4,    -1,   483,     4,    -1,   560,
      -1,    36,   746,    -1,    55,   557,    -1,   106,    -1,   265,
     106,    -1,   196,   559,   557,    -1,   245,   557,    -1,   253,
     557,    -1,   265,   245,    -1,   265,   253,    -1,   296,    54,
     852,    -1,   364,   258,   852,    -1,   384,   556,   557,    -1,
     342,    -1,   342,   556,   557,    -1,    54,    -1,    -1,   845,
      -1,   482,   845,    -1,   483,   845,    -1,    93,   605,   399,
     839,   491,   593,   492,   581,   573,    -1,    93,   605,   399,
     187,   267,   150,   839,   491,   593,   492,   581,   573,    -1,
      93,   287,   338,   605,   399,   839,   491,   593,   492,   581,
     573,    -1,    -1,   562,   585,    -1,   600,    -1,   883,    -1,
     801,    -1,   557,    -1,   846,    -1,   266,    -1,   491,   555,
     492,    -1,    -1,   846,    -1,   265,    22,    -1,   343,    -1,
      58,    -1,   370,   272,    -1,   370,   115,    -1,    86,   841,
     568,    -1,   568,    -1,   580,    -1,    73,   852,    -1,   267,
     272,    -1,   272,    -1,   427,   592,    -1,   315,   219,   592,
      -1,    67,   491,   774,   492,   575,    -1,   434,    81,   841,
      -1,   115,   775,    -1,   172,   606,    36,   186,   564,    -1,
     330,   839,   595,   603,   571,    -1,   584,   565,    -1,   282,
     432,   566,    -1,   570,    -1,   597,    -1,   570,   597,    -1,
     597,   570,    -1,    -1,   286,   491,   587,   492,    -1,    -1,
     282,    79,   135,    -1,   282,    79,   120,   352,    -1,   282,
      79,   314,   352,    -1,    -1,   491,   578,   492,    -1,   265,
     199,    -1,    -1,    86,   841,   601,    -1,   601,    -1,    78,
      -1,    87,    -1,   116,    -1,   186,    -1,   198,    -1,   386,
      -1,   389,    -1,    27,    -1,   598,    -1,   578,   495,   598,
      -1,   434,   197,   589,    -1,   117,    -1,   267,   117,    -1,
     201,   118,    -1,   201,   190,    -1,   453,   574,    -1,   453,
     280,    -1,   455,   280,    -1,    -1,   491,   588,   492,    -1,
     583,   195,   577,    -1,   583,   147,   577,    -1,    -1,   856,
      -1,   267,   117,    -1,   117,    -1,   201,   190,    -1,   201,
     118,    -1,   267,   436,    -1,   265,   199,    -1,   847,   744,
     572,   596,    -1,   569,    -1,   587,   495,   569,    -1,   591,
      -1,   588,   495,   591,    -1,   847,    -1,   586,    -1,   604,
      -1,   576,    -1,   856,   480,   563,    -1,   856,    -1,   453,
     582,    -1,    -1,   602,    -1,    -1,   847,    -1,   491,   599,
     492,    -1,    -1,   596,   567,    -1,    -1,   282,   120,   566,
      -1,   856,   480,   563,    -1,   856,    -1,   856,   493,   856,
     480,   563,    -1,   856,   493,   856,    -1,   594,    -1,   599,
     495,   594,    -1,   744,    -1,   849,   853,   486,   421,    -1,
     371,   849,   853,   486,   421,    -1,    67,   491,   774,   492,
     562,    -1,   427,   491,   599,   492,   592,   562,    -1,   427,
     579,   562,    -1,   315,   219,   491,   599,   492,   592,   562,
      -1,   315,   219,   579,   562,    -1,   165,   219,   491,   599,
     492,   330,   839,   595,   603,   571,   562,    -1,   590,    -1,
     602,   495,   590,    -1,   243,   169,    -1,   243,   300,    -1,
     243,   376,    -1,    -1,   229,   839,   583,    -1,   405,    -1,
     403,    -1,   233,   405,    -1,   233,   403,    -1,   174,   405,
      -1,   174,   403,    -1,   430,    -1,    -1,    30,    -1,    54,
     115,    -1,    93,   605,   364,   839,   608,    -1,    93,   605,
     364,   187,   267,   150,   839,   608,    -1,   555,    -1,    -1,
     610,   667,    -1,   395,   667,    -1,   395,   611,    -1,   610,
     611,    -1,   610,   408,   474,    -1,   610,   412,   217,   228,
      -1,   610,    27,    -1,   374,    -1,   125,    -1,   847,    -1,
     611,   493,   847,    -1,   340,   614,    -1,   611,    -1,    27,
      -1,   613,    -1,   408,   474,    -1,   412,   217,   228,    -1,
      93,   621,   197,   618,   619,   282,   839,   617,   491,   550,
     492,   620,   738,    -1,    93,   621,   197,   618,   187,   267,
     150,   589,   282,   839,   617,   491,   550,   492,   620,   738,
      -1,   847,    -1,   434,   616,    -1,    -1,    82,    -1,    -1,
     589,    -1,    -1,   453,   574,    -1,    -1,   427,    -1,    -1,
      93,   605,   399,   624,    36,   667,   623,    -1,    93,   605,
     399,   187,   267,   150,   624,    36,   667,   623,    -1,   453,
     107,    -1,   453,   265,   107,    -1,    -1,   839,   595,   581,
     573,    -1,   111,   841,    -1,   111,   312,   841,    -1,   111,
      27,    -1,   111,   312,    27,    -1,    19,   627,    -1,    47,
     627,    -1,   384,   627,    -1,    79,   627,    -1,   141,   627,
      -1,   349,   627,    -1,   456,    -1,   412,    -1,    -1,    93,
     605,   446,   839,   595,   620,    36,   667,   629,    -1,    93,
     287,   338,   605,   446,   839,   595,   620,    36,   667,   629,
      -1,    93,   605,   328,   446,   839,   491,   599,   492,   620,
      36,   667,   629,    -1,    93,   287,   338,   605,   328,   446,
     839,   491,   599,   492,   620,    36,   667,   629,    -1,   453,
      67,   285,    -1,   453,    59,    67,   285,    -1,   453,   233,
      67,   285,    -1,    -1,   435,   632,   634,   521,    -1,   435,
     632,   634,   521,   839,    -1,   435,   632,   634,   521,   533,
      -1,   435,   491,   633,   492,    -1,   435,   491,   633,   492,
     839,   854,    -1,   527,    -1,   444,    -1,   167,    -1,   169,
      -1,     3,    -1,   169,    -1,    -1,   631,    -1,   633,   495,
     631,    -1,   167,    -1,    -1,    56,   777,    -1,   370,   637,
      -1,   370,   233,   637,    -1,   370,   368,   637,    -1,   370,
     174,   637,    -1,   638,    -1,   611,   168,    97,    -1,   408,
     474,   640,    -1,   356,   846,    -1,   611,   410,   641,    -1,
     611,   480,   641,    -1,   611,   410,   115,    -1,   611,   480,
     115,    -1,   528,    -1,   557,    -1,   846,    -1,     3,    -1,
     763,   846,   773,    -1,   763,   491,   845,   492,   846,    -1,
     557,    -1,   115,    -1,   233,    -1,   639,    -1,   641,   495,
     639,    -1,    91,   654,   839,   595,   652,   643,   648,   657,
     644,   556,   649,    -1,    91,   491,   665,   492,   410,   648,
     657,   556,   649,    -1,   168,    -1,   410,    -1,   646,   122,
     846,    -1,    -1,   656,    -1,   645,   495,   656,    -1,   434,
      -1,    -1,    36,    -1,    -1,   320,    -1,    -1,   653,    -1,
     491,   658,   492,    -1,   528,    -1,   557,    -1,   484,    -1,
     491,   645,   492,    -1,    -1,   856,   650,    -1,   453,   280,
      -1,    -1,   653,   655,    -1,    -1,    50,    -1,    -1,    50,
      -1,   280,    -1,   167,    -1,   121,   647,   846,    -1,   272,
     647,   846,    -1,    95,    -1,   182,    -1,   322,   647,   846,
      -1,   143,   647,   846,    -1,   164,   322,   599,    -1,   164,
     322,   484,    -1,   164,   267,   272,   599,    -1,   164,   272,
     599,    -1,   139,   846,    -1,   528,    -1,   846,    -1,   387,
      -1,   388,    -1,   651,    -1,   658,   495,   651,    -1,    93,
     660,   839,   661,    36,   774,    -1,   170,    -1,   240,    -1,
     491,   492,    -1,   491,   806,   492,    -1,   164,    68,    -1,
      68,    -1,   312,   841,   664,    36,   665,    -1,   491,   808,
     492,    -1,    -1,   667,    -1,   534,    -1,   666,    -1,   858,
      -1,   538,   432,   859,   370,   549,   722,   860,   543,    -1,
     669,    -1,   668,    -1,   491,   669,   492,    -1,   491,   668,
     492,    -1,   671,    -1,   670,   683,    -1,   670,   682,   714,
     689,    -1,   670,   682,   688,   715,    -1,   672,   670,    -1,
     672,   670,   683,    -1,   672,   670,   682,   714,   689,    -1,
     672,   670,   682,   688,   715,    -1,   671,    -1,   668,    -1,
     363,   680,   830,   675,   722,   738,   705,   713,   783,   693,
      -1,   363,   679,   831,   675,   722,   738,   705,   713,   783,
     693,    -1,   721,    -1,   399,   732,    -1,   670,   426,   678,
     670,    -1,   670,   211,   678,   670,    -1,   670,   145,   678,
     670,    -1,   453,   673,    -1,   477,   673,    -1,   453,   328,
     673,    -1,   674,    -1,   673,   495,   674,    -1,   841,   854,
      36,   491,   665,   492,    -1,   213,   676,    -1,    -1,   405,
     677,   839,    -1,   403,   677,   839,    -1,   233,   405,   677,
     839,    -1,   233,   403,   677,   839,    -1,   174,   405,   677,
     839,    -1,   174,   403,   677,   839,    -1,   430,   677,   839,
      -1,   399,   839,    -1,   839,    -1,   399,    -1,    -1,    27,
      -1,   130,    -1,    -1,   130,    -1,   130,   282,   491,   804,
     492,    -1,    27,    -1,    -1,   188,   274,    -1,   341,   274,
      -1,    -1,   683,    -1,    -1,   288,    54,   684,    -1,   685,
      -1,   684,   495,   685,    -1,   774,   434,   801,   687,    -1,
     774,   686,   687,    -1,    37,    -1,   124,    -1,    -1,   476,
     160,    -1,   476,   223,    -1,    -1,   690,   691,    -1,   691,
     690,    -1,   690,    -1,   691,    -1,   688,    -1,    -1,   230,
     699,    -1,   230,   699,   495,   700,    -1,   158,   704,   701,
     703,   283,    -1,   158,   704,   703,   283,    -1,   279,   700,
      -1,   279,   701,   703,    -1,     4,   486,    -1,     9,   486,
      -1,     4,   304,    -1,     9,   304,    -1,     9,    -1,     9,
     352,    -1,   434,   354,   695,    -1,    -1,   847,    -1,    -1,
     694,   491,   692,   492,   698,    -1,   692,    -1,   692,   491,
     847,   492,    -1,   692,   491,   847,   495,     9,   492,    -1,
     401,   695,    -1,   696,    -1,    -1,   337,   491,     9,   492,
      -1,    -1,   774,    -1,    27,    -1,   774,   486,    -1,     4,
     304,    -1,     9,   304,    -1,   774,    -1,   776,    -1,   482,
     702,    -1,   483,   702,    -1,   845,    -1,     4,    -1,   351,
      -1,   352,    -1,   160,    -1,   264,    -1,   177,    54,   706,
      -1,    -1,   707,    -1,   706,   495,   707,    -1,   774,    -1,
     708,    -1,   710,    -1,   709,    -1,   711,    -1,   491,   492,
      -1,   350,   491,   804,   492,    -1,    96,   491,   804,   492,
      -1,   178,   372,   491,   706,   492,    -1,   178,    -1,   179,
      -1,   181,   774,    -1,    -1,   716,    -1,   163,   324,   283,
      -1,   714,    -1,    -1,   717,    -1,   716,   717,    -1,   718,
     719,   720,    -1,   163,   432,    -1,   163,   265,   219,   432,
      -1,   163,   373,    -1,   163,   219,   373,    -1,   277,   838,
      -1,    -1,   271,    -1,   377,   238,    -1,    -1,   440,   491,
     804,   492,    -1,   721,   495,   491,   804,   492,    -1,   168,
     723,    -1,    -1,   724,    -1,   723,   495,   724,    -1,   732,
     727,   697,    -1,   733,   728,   697,    -1,   224,   733,   728,
      -1,   668,   727,   697,    -1,   224,   668,   727,    -1,   725,
      -1,   491,   725,   492,   726,    -1,   491,   725,   492,    -1,
     724,    94,   218,   724,    -1,   724,   729,   218,   724,   731,
      -1,   724,   218,   724,   731,    -1,   724,   261,   729,   218,
     724,    -1,   724,   261,   218,   724,    -1,    36,   847,   491,
     840,   492,    -1,    36,   848,    -1,   847,   491,   840,   492,
      -1,   847,    -1,   726,    -1,    -1,   726,    -1,    36,   491,
     739,   492,    -1,    36,   847,   491,   739,   492,    -1,   847,
     491,   739,   492,    -1,    -1,   169,   730,    -1,   227,   730,
      -1,   347,   730,    -1,   203,    -1,   291,    -1,    -1,   434,
     491,   840,   492,    -1,   282,   774,    -1,   839,    -1,   839,
     484,    -1,   283,   839,    -1,   283,   491,   839,   492,    -1,
     779,   737,    -1,   352,   168,   491,   735,   492,   737,    -1,
     779,   736,    -1,   734,    -1,   735,   495,   734,    -1,    36,
     491,   739,   492,    -1,    -1,   477,   289,    -1,    -1,   450,
     774,    -1,    -1,   740,    -1,   739,   495,   740,    -1,   847,
     744,   741,    -1,    73,   852,    -1,    -1,   847,   744,    -1,
     742,   495,   847,   744,    -1,   351,    -1,   392,    -1,   746,
     745,    -1,   371,   746,   745,    -1,   746,    35,   489,   845,
     490,    -1,   371,   746,    35,   489,   845,   490,    -1,   746,
      35,    -1,   371,   746,    35,    -1,   743,   491,   742,   492,
     745,    -1,   241,   491,   808,   492,   745,    -1,   745,   489,
     490,    -1,   745,   489,   845,   490,    -1,    -1,   748,    -1,
     750,    -1,   752,    -1,   756,    -1,   762,    -1,   763,   773,
      -1,   763,   491,   845,   492,    -1,   750,    -1,   753,    -1,
     757,    -1,   762,    -1,   851,   749,    -1,   491,   804,   492,
      -1,    -1,   209,    -1,   210,    -1,   378,    -1,    49,    -1,
     325,    -1,   161,   751,    -1,   134,   311,    -1,   113,   749,
      -1,   112,   749,    -1,   275,   749,    -1,    52,    -1,   491,
     845,   492,    -1,    -1,   754,    -1,   755,    -1,   754,    -1,
     755,    -1,    51,   761,   491,   804,   492,    -1,    51,   761,
      -1,   758,    -1,   759,    -1,   758,    -1,   759,    -1,   760,
     491,   845,   492,    -1,   760,    -1,    65,   761,    -1,    64,
     761,    -1,   441,    -1,   260,    65,   761,    -1,   260,    64,
     761,    -1,   262,   761,    -1,   443,    -1,    -1,   409,   491,
     845,   492,   764,    -1,   409,   764,    -1,   408,   491,   845,
     492,   764,    -1,   408,   764,    -1,   212,    -1,   477,   408,
     474,    -1,   455,   408,   474,    -1,    -1,   471,    -1,   472,
      -1,   255,    -1,   256,    -1,   109,    -1,   110,    -1,   184,
      -1,   185,    -1,   251,    -1,   252,    -1,   360,    -1,   361,
      -1,   249,    -1,   250,    -1,   247,    -1,   248,    -1,   765,
      -1,   766,    -1,   767,    -1,   768,    -1,   769,    -1,   770,
      -1,   771,    -1,   772,    -1,   765,   410,   766,    -1,   767,
     410,   768,    -1,   767,   410,   769,    -1,   767,   410,   770,
      -1,   768,   410,   769,    -1,   768,   410,   770,    -1,   769,
     410,   770,    -1,    -1,   776,    -1,   774,    11,   744,    -1,
     774,    73,   852,    -1,   774,    41,   408,   474,   774,    -1,
     482,   774,    -1,   483,   774,    -1,   774,   482,   774,    -1,
     774,   483,   774,    -1,   774,   484,   774,    -1,   774,   485,
     774,    -1,   774,   486,   774,    -1,   774,   487,   774,    -1,
     774,   478,   774,    -1,   774,   479,   774,    -1,   774,   480,
     774,    -1,   774,    16,   774,    -1,   774,    17,   774,    -1,
     774,    18,   774,    -1,   774,   800,   774,    -1,   800,   774,
      -1,   774,   800,    -1,   774,    33,   774,    -1,   774,   287,
     774,    -1,   267,   774,    -1,   475,   774,    -1,   774,   173,
     774,    -1,   774,   229,   774,    -1,   774,   229,   774,   143,
     774,    -1,   774,   475,   229,   774,    -1,   774,   475,   229,
     774,   143,   774,    -1,   774,   189,   774,    -1,   774,   189,
     774,   143,   774,    -1,   774,   475,   189,   774,    -1,   774,
     475,   189,   774,   143,   774,    -1,   774,   375,   410,   774,
      -1,   774,   375,   410,   774,   143,   774,    -1,   774,   475,
     375,   410,   774,    -1,   774,   475,   375,   410,   774,   143,
     774,    -1,   774,   215,   272,    -1,   774,   216,    -1,   774,
     215,   267,   272,    -1,   774,   267,   272,    -1,   774,   270,
      -1,   794,    -1,   496,   796,   497,    -1,   489,   805,   490,
      -1,   794,    15,   774,    -1,   824,    15,   774,    -1,   794,
     293,   794,    -1,   774,   215,   417,    -1,   774,   215,   267,
     417,    -1,   774,   215,   156,    -1,   774,   215,   267,   156,
      -1,   774,   215,   428,    -1,   774,   215,   267,   428,    -1,
     774,   215,   130,   168,   774,    -1,   774,   215,   267,   130,
     168,   774,    -1,   774,   215,   277,   491,   808,   492,    -1,
     774,   215,   267,   277,   491,   808,   492,    -1,   774,    48,
     829,   775,    33,   774,    -1,   774,   475,    48,   829,   775,
      33,   774,    -1,   774,    48,   396,   775,    33,   774,    -1,
     774,   475,    48,   396,   775,    33,   774,    -1,   774,   194,
     818,    -1,   774,   475,   194,   818,    -1,   774,   802,   797,
     668,    -1,   774,   802,   797,   491,   774,   492,    -1,   115,
      -1,    35,   489,   805,   490,    -1,   776,    -1,   775,    11,
     744,    -1,   482,   775,    -1,   483,   775,    -1,   775,   482,
     775,    -1,   775,   483,   775,    -1,   775,   484,   775,    -1,
     775,   485,   775,    -1,   775,   486,   775,    -1,   775,   487,
     775,    -1,   775,   478,   775,    -1,   775,   479,   775,    -1,
     775,   480,   775,    -1,   775,    16,   775,    -1,   775,    17,
     775,    -1,   775,    18,   775,    -1,   775,   800,   775,    -1,
     800,   775,    -1,   775,   800,    -1,   775,   215,   130,   168,
     775,    -1,   775,   215,   267,   130,   168,   775,    -1,   775,
     215,   277,   491,   808,   492,    -1,   775,   215,   267,   277,
     491,   808,   492,    -1,   824,    -1,   844,    -1,   498,     9,
      -1,   499,   828,    -1,    10,   828,    -1,   491,   774,   492,
     828,    -1,   819,    -1,   778,   828,    -1,   668,    -1,   668,
     827,    -1,   150,   668,    -1,   712,   491,   804,   492,    -1,
     843,   491,   492,    -1,   843,   491,   806,   682,   681,   492,
      -1,   843,   491,   442,   807,   682,   681,   492,    -1,   843,
     491,   806,   495,   442,   807,   682,   681,   492,    -1,   843,
     491,    27,   806,   682,   681,   492,    -1,   843,   491,   130,
     806,   682,   681,   492,    -1,   843,   491,   484,   492,    -1,
     777,   781,   782,   786,    -1,   780,    -1,   777,    -1,   780,
      -1,    74,   163,   491,   774,   492,    -1,    99,    -1,   102,
      -1,   102,   491,   845,   492,    -1,   103,    -1,   103,   491,
     845,   492,    -1,   234,    -1,   234,   491,   845,   492,    -1,
     235,    -1,   235,   491,   845,   492,    -1,   100,    -1,   104,
      -1,   369,    -1,   433,    -1,    98,    -1,   101,    -1,    61,
     491,   774,    36,   744,   492,    -1,   420,   491,   774,    36,
     744,   492,    -1,   155,   491,   809,   492,    -1,   294,   491,
     811,   492,    -1,   308,   491,   813,   492,    -1,   394,   491,
     814,   492,    -1,   414,   491,   774,    36,   744,   492,    -1,
     416,   491,    53,   817,   492,    -1,   416,   491,   225,   817,
     492,    -1,   416,   491,   411,   817,   492,    -1,   416,   491,
     817,   492,    -1,   273,   491,   774,   495,   774,   492,    -1,
      72,   491,   804,   492,    -1,   454,   177,   491,   683,   492,
      -1,    -1,   159,   491,   450,   774,   492,    -1,    -1,   452,
     784,    -1,    -1,   785,    -1,   784,   495,   785,    -1,   847,
      36,   787,    -1,   292,   787,    -1,   292,   847,    -1,    -1,
     491,   788,   789,   682,   790,   492,    -1,   847,    -1,    -1,
     301,    54,   804,    -1,    -1,   323,   791,    -1,   352,   791,
      -1,    -1,   792,    -1,    48,   792,    33,   792,    -1,   423,
     310,    -1,   423,   162,    -1,    97,   351,    -1,   774,   310,
      -1,   774,   162,    -1,   351,   491,   804,   492,    -1,   351,
     491,   492,    -1,   793,    -1,   491,   804,   495,   774,   492,
      -1,   848,   500,   774,    -1,   795,    -1,   796,   495,   795,
      -1,    34,    -1,   380,    -1,    27,    -1,     8,    -1,   799,
      -1,   482,    -1,   483,    -1,   484,    -1,   485,    -1,   486,
      -1,   487,    -1,   478,    -1,   479,    -1,   480,    -1,    16,
      -1,    17,    -1,    18,    -1,     8,    -1,   284,   491,   803,
     492,    -1,   798,    -1,   284,   491,   803,   492,    -1,   798,
      -1,   284,   491,   803,   492,    -1,   229,    -1,   475,   229,
      -1,   173,    -1,   475,   173,    -1,   189,    -1,   475,   189,
      -1,   798,    -1,   847,   493,   803,    -1,   774,    -1,   804,
     495,   774,    -1,   804,    -1,    -1,   807,    -1,   806,   495,
     807,    -1,   774,    -1,   855,    13,   774,    -1,   855,    14,
     774,    -1,   744,    -1,   808,   495,   744,    -1,   810,   168,
     774,    -1,    -1,     3,    -1,   765,    -1,   766,    -1,   767,
      -1,   768,    -1,   769,    -1,   770,    -1,   771,    -1,   772,
      -1,   846,    -1,   774,   812,   815,   816,    -1,   774,   812,
     815,    -1,   305,   774,    -1,   775,   194,   775,    -1,    -1,
     774,   815,   816,    -1,   774,   816,   815,    -1,   774,   815,
      -1,   774,   816,    -1,   804,    -1,    -1,   168,   774,    -1,
     163,   774,    -1,   774,   168,   804,    -1,   168,   804,    -1,
     804,    -1,   668,    -1,   491,   804,   492,    -1,    60,   823,
     820,   822,   141,    -1,   821,    -1,   820,   821,    -1,   449,
     774,   407,   774,    -1,   137,   774,    -1,    -1,   774,    -1,
      -1,   847,    -1,   847,   827,    -1,   493,   842,    -1,   489,
     774,   490,    -1,   489,   826,   500,   826,   490,    -1,   774,
      -1,    -1,   825,    -1,   827,   825,    -1,    -1,   828,   825,
      -1,    40,    -1,    -1,   831,    -1,    -1,   832,    -1,   831,
     495,   832,    -1,   774,    36,   857,    -1,   774,     3,    -1,
     774,    -1,   484,   834,   837,    -1,   847,   493,   484,   834,
     837,    -1,   146,   491,   840,   492,    -1,   146,   847,    -1,
     833,    -1,    -1,   774,    36,   847,    -1,   835,    -1,   836,
     495,   835,    -1,   338,   491,   836,   492,    -1,   338,   835,
      -1,    -1,   839,    -1,   838,   495,   839,    -1,   848,    -1,
     847,   827,    -1,   841,    -1,   840,   495,   841,    -1,   847,
      -1,   856,    -1,   850,    -1,   847,   827,    -1,   845,    -1,
       4,    -1,   846,   828,    -1,     6,    -1,     7,    -1,   843,
     846,    -1,   843,   491,   806,   682,   681,   492,   846,    -1,
     747,   846,    -1,   763,   491,   774,   492,   773,    -1,   763,
     845,   773,    -1,   763,   846,   773,    -1,   417,    -1,   156,
      -1,   272,    -1,     9,    -1,     5,    -1,     3,    -1,   877,
      -1,   878,    -1,   847,    -1,     5,    -1,     3,    -1,   877,
      -1,   882,    -1,     3,    -1,   877,    -1,   879,    -1,     3,
      -1,   877,    -1,   880,    -1,   847,    -1,   847,   853,    -1,
     493,   842,    -1,   853,   493,   842,    -1,   491,   840,   492,
      -1,    -1,   849,    -1,     3,    -1,   881,    -1,   877,    -1,
     883,    -1,   856,    -1,     5,    -1,   538,   120,   168,   859,
     861,   860,   543,    -1,   732,    -1,   732,   847,    -1,   732,
      36,   847,    -1,   450,   774,    -1,    -1,   434,   723,    -1,
      -1,    93,   356,   847,   863,    -1,    93,   356,   187,   267,
     150,   847,   863,    -1,   863,   864,    -1,    -1,   561,    -1,
     615,    -1,   607,    -1,   628,    -1,   135,   866,   187,   150,
     868,   869,    -1,   135,   866,   868,   869,    -1,   135,   867,
     187,   150,   840,   869,    -1,   135,   867,   840,   869,    -1,
     135,   870,   841,   282,   852,   869,    -1,   135,   870,   187,
     150,   841,   282,   852,   869,    -1,   135,   421,   871,   869,
      -1,   135,   421,   187,   150,   871,   869,    -1,   399,    -1,
     364,    -1,   170,    -1,   240,    -1,   446,    -1,   244,   446,
      -1,   197,    -1,   165,   399,    -1,    74,    -1,    90,    -1,
     386,    -1,   406,   359,   299,    -1,   406,   359,   127,    -1,
     406,   359,   404,    -1,   406,   359,    83,    -1,    21,   246,
      -1,   144,   415,    -1,   153,    -1,   165,   107,   457,    -1,
     321,    -1,   356,    -1,   367,    -1,   852,    -1,   868,   495,
     852,    -1,    58,    -1,   343,    -1,    -1,   307,    -1,   353,
      -1,   415,    -1,   744,    -1,   871,   495,   744,    -1,    93,
     421,   852,    36,   142,   491,   873,   492,    -1,   874,    -1,
      -1,   846,    -1,   874,   495,   846,    -1,   149,   841,   876,
      -1,    93,   605,   399,   624,    36,   149,   841,   876,   623,
      -1,    93,   605,   399,   187,   267,   150,   624,    36,   149,
     841,   876,   623,    -1,   491,   804,   492,    -1,    -1,    19,
      -1,    20,    -1,    21,    -1,    22,    -1,    23,    -1,    24,
      -1,    25,    -1,    26,    -1,    28,    -1,    29,    -1,    30,
      -1,    38,    -1,    39,    -1,    41,    -1,    42,    -1,    43,
      -1,    45,    -1,    46,    -1,    47,    -1,    54,    -1,    55,
      -1,    56,    -1,    57,    -1,    58,    -1,    59,    -1,    62,
      -1,    63,    -1,    66,    -1,    68,    -1,    69,    -1,    70,
      -1,    71,    -1,    76,    -1,    77,    -1,    78,    -1,    79,
      -1,    80,    -1,    81,    -1,    83,    -1,    84,    -1,    85,
      -1,    87,    -1,    88,    -1,    89,    -1,    90,    -1,    91,
      -1,    92,    -1,    95,    -1,    96,    -1,    97,    -1,   105,
      -1,   106,    -1,   107,    -1,   108,    -1,   109,    -1,   110,
      -1,   111,    -1,   114,    -1,   116,    -1,   118,    -1,   119,
      -1,   120,    -1,   121,    -1,   122,    -1,   123,    -1,   125,
      -1,   126,    -1,   127,    -1,   128,    -1,   129,    -1,   132,
      -1,   133,    -1,   134,    -1,   135,    -1,   136,    -1,   138,
      -1,   139,    -1,   140,    -1,   142,    -1,   143,    -1,   144,
      -1,   146,    -1,   147,    -1,   148,    -1,   149,    -1,   151,
      -1,   152,    -1,   153,    -1,   154,    -1,   157,    -1,   159,
      -1,   160,    -1,   162,    -1,   164,    -1,   166,    -1,   170,
      -1,   171,    -1,   172,    -1,   174,    -1,   176,    -1,   180,
      -1,   182,    -1,   183,    -1,   184,    -1,   185,    -1,   186,
      -1,   187,    -1,   188,    -1,   190,    -1,   191,    -1,   192,
      -1,   193,    -1,   195,    -1,   196,    -1,   197,    -1,   198,
      -1,   199,    -1,   200,    -1,   202,    -1,   205,    -1,   206,
      -1,   207,    -1,   208,    -1,   214,    -1,   217,    -1,   219,
      -1,   220,    -1,   221,    -1,   222,    -1,   223,    -1,   226,
      -1,   228,    -1,   231,    -1,   232,    -1,   233,    -1,   236,
      -1,   237,    -1,   238,    -1,   239,    -1,   240,    -1,   242,
      -1,   243,    -1,   244,    -1,   245,    -1,   246,    -1,   247,
      -1,   248,    -1,   249,    -1,   250,    -1,   251,    -1,   252,
      -1,   253,    -1,   254,    -1,   255,    -1,   256,    -1,   257,
      -1,   258,    -1,   259,    -1,   263,    -1,   264,    -1,   265,
      -1,   268,    -1,   269,    -1,   271,    -1,   274,    -1,   276,
      -1,   277,    -1,   278,    -1,   280,    -1,   281,    -1,   284,
      -1,   285,    -1,   286,    -1,   289,    -1,   292,    -1,   295,
      -1,   296,    -1,   297,    -1,   298,    -1,   299,    -1,   300,
      -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,   306,
      -1,   307,    -1,   309,    -1,   310,    -1,   312,    -1,   313,
      -1,   314,    -1,   316,    -1,   317,    -1,   318,    -1,   319,
      -1,   320,    -1,   321,    -1,   322,    -1,   323,    -1,   324,
      -1,   326,    -1,   327,    -1,   328,    -1,   329,    -1,   331,
      -1,   332,    -1,   333,    -1,   334,    -1,   335,    -1,   336,
      -1,   337,    -1,   338,    -1,   339,    -1,   340,    -1,   341,
      -1,   342,    -1,   343,    -1,   345,    -1,   346,    -1,   348,
      -1,   349,    -1,   350,    -1,   352,    -1,   353,    -1,   354,
      -1,   355,    -1,   356,    -1,   357,    -1,   358,    -1,   359,
      -1,   360,    -1,   361,    -1,   362,    -1,   364,    -1,   365,
      -1,   366,    -1,   367,    -1,   368,    -1,   370,    -1,   372,
      -1,   373,    -1,   374,    -1,   376,    -1,   377,    -1,   379,
      -1,   381,    -1,   382,    -1,   383,    -1,   384,    -1,   385,
      -1,   386,    -1,   387,    -1,   388,    -1,   389,    -1,   390,
      -1,   391,    -1,   393,    -1,   395,    -1,   397,    -1,   398,
      -1,   400,    -1,   402,    -1,   403,    -1,   404,    -1,   405,
      -1,   406,    -1,   412,    -1,   413,    -1,   415,    -1,   418,
      -1,   419,    -1,   421,    -1,   422,    -1,   423,    -1,   424,
      -1,   425,    -1,   428,    -1,   429,    -1,   430,    -1,   431,
      -1,   432,    -1,   435,    -1,   436,    -1,   437,    -1,   438,
      -1,   439,    -1,   443,    -1,   445,    -1,   446,    -1,   447,
      -1,   448,    -1,   451,    -1,   454,    -1,   455,    -1,   456,
      -1,   457,    -1,   458,    -1,   459,    -1,   471,    -1,   472,
      -1,   473,    -1,   474,    -1,    48,    -1,    49,    -1,    51,
      -1,    52,    -1,    64,    -1,    65,    -1,    72,    -1,   112,
      -1,   113,    -1,   150,    -1,   155,    -1,   161,    -1,   178,
      -1,   179,    -1,   204,    -1,   209,    -1,   210,    -1,   212,
      -1,   241,    -1,   260,    -1,   262,    -1,   266,    -1,   273,
      -1,   275,    -1,   290,    -1,   294,    -1,   308,    -1,   311,
      -1,   325,    -1,   351,    -1,   371,    -1,   378,    -1,   392,
      -1,   394,    -1,   408,    -1,   409,    -1,   414,    -1,   416,
      -1,   420,    -1,   440,    -1,   441,    -1,   460,    -1,   461,
      -1,   462,    -1,   463,    -1,   464,    -1,   465,    -1,   466,
      -1,   467,    -1,   468,    -1,   469,    -1,   470,    -1,    44,
      -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,   101,
      -1,   167,    -1,   169,    -1,   173,    -1,   189,    -1,   203,
      -1,   215,    -1,   216,    -1,   218,    -1,   227,    -1,   229,
      -1,   241,    -1,   261,    -1,   270,    -1,   291,    -1,   293,
      -1,   347,    -1,   375,    -1,   392,    -1,   401,    -1,   444,
      -1,    44,    -1,    50,    -1,    74,    -1,    82,    -1,    94,
      -1,   101,    -1,   167,    -1,   169,    -1,   173,    -1,   189,
      -1,   203,    -1,   215,    -1,   216,    -1,   218,    -1,   227,
      -1,   229,    -1,   261,    -1,   270,    -1,   291,    -1,   293,
      -1,   347,    -1,   375,    -1,   401,    -1,   420,    -1,   444,
      -1,    48,    -1,    49,    -1,    51,    -1,    52,    -1,    65,
      -1,    64,    -1,    72,    -1,   112,    -1,   113,    -1,   150,
      -1,   155,    -1,   161,    -1,   178,    -1,   179,    -1,   204,
      -1,   210,    -1,   212,    -1,   209,    -1,   241,    -1,   260,
      -1,   262,    -1,   266,    -1,   273,    -1,   275,    -1,   290,
      -1,   294,    -1,   308,    -1,   311,    -1,   325,    -1,   351,
      -1,   371,    -1,   378,    -1,   392,    -1,   394,    -1,   408,
      -1,   409,    -1,   414,    -1,   416,    -1,   420,    -1,   440,
      -1,   441,    -1,   460,    -1,   461,    -1,   462,    -1,   463,
      -1,   464,    -1,   465,    -1,   466,    -1,   467,    -1,   468,
      -1,   469,    -1,   470,    -1,    44,    -1,    50,    -1,    74,
      -1,    82,    -1,    94,    -1,   101,    -1,   167,    -1,   169,
      -1,   173,    -1,   189,    -1,   203,    -1,   215,    -1,   216,
      -1,   218,    -1,   227,    -1,   229,    -1,   241,    -1,   261,
      -1,   270,    -1,   291,    -1,   293,    -1,   347,    -1,   375,
      -1,   392,    -1,   401,    -1,   420,    -1,   444,    -1,    27,
      -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,    35,
      -1,    36,    -1,    37,    -1,    40,    -1,    53,    -1,    60,
      -1,    61,    -1,    67,    -1,    73,    -1,    75,    -1,    86,
      -1,    93,    -1,    98,    -1,    99,    -1,   100,    -1,   102,
      -1,   103,    -1,   104,    -1,   115,    -1,   117,    -1,   124,
      -1,   130,    -1,   131,    -1,   137,    -1,   141,    -1,   145,
      -1,   156,    -1,   158,    -1,   163,    -1,   165,    -1,   168,
      -1,   175,    -1,   177,    -1,   181,    -1,   194,    -1,   201,
      -1,   211,    -1,   213,    -1,   224,    -1,   225,    -1,   230,
      -1,   234,    -1,   235,    -1,   267,    -1,   272,    -1,   279,
      -1,   282,    -1,   283,    -1,   287,    -1,   288,    -1,   305,
      -1,   315,    -1,   330,    -1,   344,    -1,   363,    -1,   369,
      -1,   380,    -1,   396,    -1,   399,    -1,   407,    -1,   410,
      -1,   411,    -1,   417,    -1,   426,    -1,   427,    -1,   433,
      -1,   434,    -1,   442,    -1,   449,    -1,   450,    -1,   452,
      -1,   453,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   465,   465,   481,   493,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   537,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      20,     7,    14,    22,     7,    16,    25,    34,    43,    52,
       9,    16,    26,    33,    44,    45,    50,    51,    52,    57,
      58,    59,    60,    61,    65,    66,    67,    72,    73,    78,
      82,    90,    91,    96,    97,    98,   104,   109,   117,   118,
       7,    16,     9,    19,     8,    21,    27,    34,    40,    47,
      57,    61,    70,    79,    88,    95,    96,   101,   113,   118,
     143,   153,   163,   169,   180,   191,   206,   207,   213,   214,
     219,   220,   226,   227,   231,   232,   237,   239,   245,   246,
     250,   251,   256,     6,    15,    25,    35,    45,    55,    65,
      75,    85,    95,   106,   117,   127,   140,   141,     9,    17,
      29,    30,    34,    35,    36,    41,    42,    43,    48,    52,
      56,    60,    64,    68,    72,    76,    80,    84,    88,    92,
      97,   101,   105,   112,   113,   117,   118,   119,     7,    21,
      36,    56,    57,    84,    85,    86,    87,    88,    89,    93,
      94,    99,   104,   105,   106,   107,   108,   113,   120,   121,
     122,   139,   146,   153,   163,   173,   185,   193,   202,   211,
     230,   237,   242,   244,   246,   248,   251,   256,   257,   261,
     262,   263,   264,   269,   273,   274,   279,   286,   291,   292,
     293,   294,   295,   296,   297,   298,   304,   305,   309,   314,
     321,   328,   335,   347,   348,   349,   350,   354,   359,   360,
     361,   366,   371,   372,   373,   374,   375,   376,   381,   404,
     408,   415,   416,   420,   424,   425,   426,   430,   434,   442,
     443,   448,   449,   453,   461,   462,   467,   468,   472,   477,
     481,   485,   490,   498,   499,   503,   504,   510,   521,   534,
     548,   562,   576,   590,   613,   617,   624,   628,   636,   641,
     648,   658,   659,   660,   661,   662,   669,   676,   677,   682,
     683,     9,    19,    32,    33,     3,    10,    17,    24,    31,
      38,    45,    55,    55,    57,    58,     2,     7,    14,    24,
      25,    32,     8,    33,    62,    66,    67,    72,    73,    78,
      79,    83,    84,    89,    90,    11,    24,    41,    42,    43,
      48,     7,    13,    19,    25,     2,     9,    15,    21,    28,
      35,    45,    46,    47,     8,    21,    34,    52,    74,    75,
      76,    77,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     6,    10,
      16,    22,    28,    38,    39,    47,    58,    70,    78,    86,
      93,   103,   105,   111,   115,   119,   134,   141,   142,   143,
     147,   148,     1,    30,    53,    54,    59,    63,    68,    72,
      80,    81,    85,    86,    91,    92,    96,    97,   102,   103,
     104,   105,   106,   111,   119,   123,   128,   129,   134,   138,
     143,   147,   151,   155,   159,   163,   167,   171,   175,   179,
     183,   187,   191,   195,   203,   209,   210,   211,   216,   220,
       7,    18,    19,    23,    27,     5,    11,     7,    18,    19,
      23,    24,    25,    26,     7,    47,    48,    52,    53,    68,
      69,    76,    84,    92,   100,   108,   116,   127,   128,   155,
     170,   186,   187,   206,   210,   214,   231,   238,   245,   255,
     256,   259,   271,   282,   290,   295,   300,   305,   310,   318,
     326,   331,   336,   343,   344,   348,   349,   350,   357,   358,
     362,   363,   367,   368,   369,   373,   374,   378,   382,   383,
     386,   395,   406,   407,   408,   411,   412,   413,   417,   418,
     419,   420,   424,   425,   429,   431,   447,   449,   454,   457,
     465,   469,   473,   477,   481,   485,   492,   497,   504,   505,
     509,   513,   517,   521,   528,   535,   536,   541,   542,   546,
     547,   552,   554,   556,   561,   581,   582,   584,   589,   590,
     594,   595,   598,   599,   624,   625,   629,   630,   634,   635,
     636,   637,   638,   642,   655,   662,   669,   676,   677,   681,
     682,   686,   687,   691,   692,   696,   697,   701,   712,   713,
     714,   715,   719,   720,   725,   726,   727,   736,   742,   760,
     761,   765,   766,   772,   778,   786,   794,   803,   812,   816,
     842,   846,   859,   873,   888,   900,   916,   922,   927,   933,
     940,   941,   949,   953,   957,   963,   970,   975,   976,   977,
     978,   982,   983,   995,   996,  1001,  1008,  1015,  1022,  1054,
    1065,  1078,  1083,  1084,  1087,  1088,  1091,  1092,  1097,  1098,
    1103,  1107,  1113,  1134,  1142,  1155,  1158,  1162,  1162,  1164,
    1169,  1176,  1181,  1187,  1192,  1198,  1204,  1213,  1215,  1218,
    1222,  1223,  1224,  1225,  1226,  1227,  1232,  1252,  1253,  1254,
    1255,  1266,  1280,  1281,  1287,  1292,  1297,  1302,  1307,  1312,
    1317,  1322,  1328,  1334,  1340,  1347,  1369,  1378,  1382,  1390,
    1394,  1402,  1414,  1435,  1439,  1445,  1449,  1462,  1470,  1480,
    1482,  1484,  1486,  1488,  1490,  1495,  1496,  1503,  1512,  1520,
    1529,  1540,  1548,  1549,  1550,  1554,  1554,  1557,  1557,  1560,
    1560,  1563,  1563,  1566,  1566,  1569,  1569,  1572,  1572,  1575,
    1575,  1578,  1580,  1582,  1584,  1586,  1588,  1590,  1592,  1594,
    1599,  1604,  1610,  1617,  1622,  1628,  1634,  1665,  1667,  1669,
    1677,  1692,  1694,  1696,  1698,  1700,  1702,  1704,  1706,  1708,
    1710,  1712,  1714,  1716,  1718,  1721,  1723,  1725,  1728,  1730,
    1732,  1734,  1737,  1742,  1747,  1754,  1759,  1766,  1771,  1779,
    1784,  1793,  1801,  1809,  1817,  1835,  1843,  1851,  1859,  1867,
    1875,  1879,  1883,  1887,  1895,  1903,  1919,  1927,  1935,  1943,
    1951,  1959,  1967,  1971,  1975,  1979,  1983,  1991,  1999,  2007,
    2015,  2035,  2057,  2068,  2075,  2089,  2105,  2107,  2109,  2111,
    2113,  2115,  2117,  2119,  2121,  2123,  2125,  2127,  2129,  2131,
    2133,  2135,  2137,  2139,  2141,  2143,  2147,  2151,  2155,  2169,
    2170,  2171,  2178,  2190,  2205,  2217,  2219,  2231,  2242,  2266,
    2277,  2286,  2290,  2297,  2305,  2313,  2324,  2332,  2360,  2395,
    2406,  2407,  2414,  2420,  2424,  2428,  2432,  2436,  2440,  2444,
    2448,  2452,  2456,  2460,  2464,  2468,  2472,  2476,  2480,  2482,
    2484,  2488,  2497,  2502,  2509,  2524,  2531,  2535,  2539,  2543,
    2547,  2561,  2562,  2566,  2567,  2575,  2576,  2580,  2581,  2586,
    2594,  2596,  2610,  2613,  2640,  2641,  2644,  2645,  2656,  2662,
    2669,  2678,  2695,  2740,  2748,  2756,  2764,  2772,  2793,  2794,
    2797,  2798,  2802,  2812,  2813,  2815,  2816,  2817,  2820,  2821,
    2824,  2825,  2826,  2827,  2828,  2829,  2830,  2831,  2832,  2833,
    2834,  2835,  2838,  2840,  2845,  2847,  2852,  2854,  2856,  2858,
    2860,  2862,  2864,  2866,  2880,  2882,  2886,  2890,  2897,  2902,
    2909,  2913,  2919,  2923,  2932,  2943,  2944,  2948,  2952,  2959,
    2960,  2961,  2962,  2963,  2964,  2965,  2966,  2967,  2968,  2978,
    2982,  2989,  2996,  2997,  3013,  3017,  3022,  3026,  3041,  3046,
    3050,  3053,  3056,  3057,  3058,  3061,  3068,  3078,  3092,  3093,
    3097,  3108,  3109,  3112,  3113,  3116,  3120,  3127,  3131,  3139,
    3150,  3151,  3155,  3156,  3160,  3161,  3164,  3165,  3175,  3176,
    3180,  3181,  3184,  3200,  3208,  3216,  3231,  3249,  3250,  3253,
    3254,  3257,  3261,  3262,  3265,  3266,  3267,  3277,  3278,  3289,
    3293,  3320,  3322,  3327,  3329,  3339,  3342,  3353,  3357,  3361,
    3373,  3377,  3386,  3393,  3431,  3435,  3439,  3443,  3447,  3451,
    3455,  3461,  3462,  3478,  3479,  3480,  3483,  3484,  3490,  3491,
    3492,  3495,  3496,  3497,  3500,  3501,  3502,  3505,  3506,  3509,
    3511,  3516,  3517,  3520,  3528,  3529,  3530,  3531,  3534,  3535,
       7,    21,    25,    32,    43,    44,    50,    51,     7,    16,
      34,    41,    46,    47,    48,    49,     9,    19,    29,    39,
      49,    59,    69,    79,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   112,
     113,   114,   115,   116,   117,   118,   123,   124,   129,   130,
     131,   136,   137,   138,   141,   142,     7,    17,    18,    21,
      23,     7,    14,    31,    51,    52,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    58,    58,    58,    58,    58,    58,    58,    58,    58,
      58,    58,    58,    58,    58,    58,    58,    58,    58,    58,
      58,    58,    58,    58,    58,    58,    58,    59,    59,    59,
      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
      59,    59,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL",
  "GRANT", "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER",
  "HAVING", "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
  "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
  "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING",
  "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL",
  "LOCALTIME", "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED",
  "MACRO", "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESPECT_P", "RESTART",
  "RESTRICT", "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE",
  "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT",
  "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P",
  "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER",
  "SESSION", "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW",
  "SIMILAR", "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION",
  "SUBSTRING", "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE",
  "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY",
  "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "ExportStmt", "ImportStmt", "PragmaStmt", "AlterObjectSchemaStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "LoadStmt", "file_name", "AnalyzeStmt",
  "InsertStmt", "insert_rest", "insert_target", "opt_conf_expr",
  "opt_with_clause", "insert_column_item", "set_clause", "opt_on_conflict",
  "index_elem", "returning_clause", "override_kind", "set_target_list",
  "opt_collate", "opt_class", "insert_column_list", "set_clause_list",
  "index_params", "set_target", "RenameStmt", "opt_column", "AlterSeqStmt",
  "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem", "opt_by",
  "SignedIconst", "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "CreateSeqStmt", "OptSeqOptList",
  "VariableShowStmt", "show_or_describe", "var_name", "VariableResetStmt",
  "generic_reset", "reset_rest", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "CreateAsStmt", "opt_with_data",
  "create_as_target", "DeallocateStmt", "TransactionStmt",
  "opt_transaction", "ViewStmt", "opt_check_option", "VacuumStmt",
  "vacuum_option_elem", "opt_full", "vacuum_option_list", "opt_freeze",
  "CallStmt", "VariableSetStmt", "set_rest", "generic_set", "var_value",
  "zone_value", "var_list", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "CreateFunctionStmt", "macro_alias",
  "param_list", "CheckPointStmt", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "UpdateStmt", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_item", "empty_grouping_set", "rollup_clause",
  "cube_clause", "grouping_sets_clause", "grouping_or_grouping_id",
  "having_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause", "from_clause",
  "from_list", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name", "attr_name", "func_name",
  "AexprConst", "Iconst", "Sconst", "ColId", "ColIdOrString",
  "type_function_name", "function_name_token", "type_name_token",
  "any_name", "attrs", "opt_name_list", "param_name", "ColLabel",
  "ColLabelOrString", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateEnumStmt",
  "opt_enum_val_list", "enum_val_list", "ExecuteStmt",
  "execute_param_clause", "unreserved_keyword", "col_name_keyword",
  "func_name_keyword", "type_name_keyword", "other_keyword",
  "type_func_name_keyword", "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    60,    62,
      61,   733,    43,    45,    42,    47,    37,    94,   734,    91,
      93,    40,    41,    46,    59,    44,   123,   125,    35,    63,
      58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   501,   502,   503,   503,   504,   504,   504,   504,   504,
     504,   504,   504,   504,   504,   504,   504,   504,   504,   504,
     504,   504,   504,   504,   504,   504,   504,   504,   504,   504,
     504,   504,   504,   504,   504,   504,   504,   504,   504,   504,
     505,   505,   505,   505,   505,   505,   505,   505,   506,   506,
     507,   507,   508,   508,   508,   508,   509,   509,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   511,   511,   512,
     512,   512,   512,   513,   513,   514,   515,   515,   515,   516,
     517,   518,   518,   518,   519,   519,   519,   519,   519,   519,
     520,   520,   520,   520,   521,   521,   522,   522,   522,   523,
     523,   523,   523,   523,   524,   524,   524,   525,   525,   526,
     526,   527,   527,   528,   528,   528,   528,   529,   530,   530,
     531,   532,   533,   533,   534,   535,   535,   535,   535,   535,
     536,   536,   537,   537,   537,   538,   538,   539,   540,   540,
     541,   541,   541,   542,   542,   542,   543,   543,   544,   544,
     545,   545,   546,   546,   547,   547,   548,   548,   549,   549,
     550,   550,   551,   552,   552,   552,   552,   552,   552,   552,
     552,   552,   552,   552,   552,   552,   553,   553,   554,   554,
     555,   555,   556,   556,   556,   557,   557,   557,   557,   558,
     558,   558,   558,   558,   558,   558,   558,   558,   558,   558,
     558,   558,   558,   559,   559,   560,   560,   560,   561,   561,
     561,   562,   562,   563,   563,   563,   563,   563,   563,   564,
     564,   565,   566,   566,   566,   566,   566,   567,   567,   567,
     567,   568,   568,   568,   568,   568,   568,   568,   568,   568,
     569,   570,   571,   571,   571,   571,   571,   572,   572,   573,
     573,   573,   573,   574,   575,   575,   576,   576,   577,   577,
     577,   577,   577,   577,   577,   577,   578,   578,   579,   580,
     580,   580,   580,   581,   581,   581,   581,   582,   583,   583,
     583,   584,   585,   585,   585,   585,   585,   585,   586,   587,
     587,   588,   588,   589,   590,   590,   590,   591,   591,   592,
     592,   593,   593,   594,   595,   595,   596,   596,   597,   598,
     598,   598,   598,   599,   599,   600,   600,   600,   601,   601,
     601,   601,   601,   601,   602,   602,   603,   603,   603,   603,
     604,   605,   605,   605,   605,   605,   605,   605,   605,   606,
     606,   607,   607,   608,   608,   609,   609,   609,   609,   609,
     609,   609,   610,   610,   611,   611,   612,   613,   613,   614,
     614,   614,   615,   615,   616,   617,   617,   618,   618,   619,
     619,   620,   620,   621,   621,   622,   622,   623,   623,   623,
     624,   625,   625,   625,   625,   626,   626,   626,   626,   626,
     626,   627,   627,   627,   628,   628,   628,   628,   629,   629,
     629,   629,   630,   630,   630,   630,   630,   631,   631,   631,
     631,   631,   632,   632,   633,   633,   634,   634,   635,   636,
     636,   636,   636,   637,   637,   637,   637,   638,   638,   638,
     638,   639,   639,   640,   640,   640,   640,   640,   640,   640,
     641,   641,   642,   642,   643,   643,   644,   644,   645,   645,
     646,   646,   647,   647,   648,   648,   649,   649,   650,   650,
     650,   650,   650,   651,   652,   652,   653,   653,   654,   654,
     655,   655,   655,   655,   655,   655,   655,   655,   655,   655,
     655,   655,   655,   655,   656,   657,   657,   657,   658,   658,
     659,   660,   660,   661,   661,   662,   662,   663,   664,   664,
     665,   665,   665,   665,   666,   667,   667,   668,   668,   669,
     669,   669,   669,   669,   669,   669,   669,   670,   670,   671,
     671,   671,   671,   671,   671,   671,   672,   672,   672,   673,
     673,   674,   675,   675,   676,   676,   676,   676,   676,   676,
     676,   676,   676,   677,   677,   678,   678,   678,   679,   679,
     680,   680,   681,   681,   681,   682,   682,   683,   684,   684,
     685,   685,   686,   686,   686,   687,   687,   687,   688,   688,
     688,   688,   689,   689,   690,   690,   690,   690,   691,   691,
     692,   692,   692,   692,   692,   692,   693,   693,   694,   694,
     695,   695,   695,   695,   696,   697,   697,   698,   698,   699,
     699,   699,   699,   699,   700,   701,   701,   701,   702,   702,
     703,   703,   704,   704,   705,   705,   706,   706,   707,   707,
     707,   707,   707,   708,   709,   710,   711,   712,   712,   713,
     713,   714,   714,   715,   715,   716,   716,   717,   718,   718,
     718,   718,   719,   719,   720,   720,   720,   721,   721,   722,
     722,   723,   723,   724,   724,   724,   724,   724,   724,   724,
     725,   725,   725,   725,   725,   725,   726,   726,   726,   726,
     727,   727,   728,   728,   728,   728,   728,   729,   729,   729,
     729,   730,   730,   731,   731,   732,   732,   732,   732,   733,
     733,   734,   735,   735,   736,   736,   737,   737,   738,   738,
     739,   739,   740,   741,   741,   742,   742,   743,   743,   744,
     744,   744,   744,   744,   744,   744,   744,   745,   745,   745,
     746,   746,   746,   746,   746,   746,   746,   747,   747,   747,
     747,   748,   749,   749,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   751,   751,   752,   752,   753,
     753,   754,   755,   756,   756,   757,   757,   758,   759,   760,
     760,   760,   760,   760,   760,   761,   761,   762,   762,   762,
     762,   763,   764,   764,   764,   765,   765,   766,   766,   767,
     767,   768,   768,   769,   769,   770,   770,   771,   771,   772,
     772,   773,   773,   773,   773,   773,   773,   773,   773,   773,
     773,   773,   773,   773,   773,   773,   773,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   777,   777,   777,   777,   777,   777,   777,   778,   778,
     779,   779,   780,   780,   780,   780,   780,   780,   780,   780,
     780,   780,   780,   780,   780,   780,   780,   780,   780,   780,
     780,   780,   780,   780,   780,   780,   780,   780,   780,   780,
     780,   781,   781,   782,   782,   783,   783,   784,   784,   785,
     786,   786,   786,   787,   788,   788,   789,   789,   790,   790,
     790,   791,   791,   792,   792,   792,   792,   792,   793,   793,
     794,   794,   795,   796,   796,   797,   797,   797,   798,   798,
     799,   799,   799,   799,   799,   799,   799,   799,   799,   799,
     799,   799,   800,   800,   801,   801,   802,   802,   802,   802,
     802,   802,   802,   802,   803,   803,   804,   804,   805,   805,
     806,   806,   807,   807,   807,   808,   808,   809,   809,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   811,
     811,   812,   813,   813,   814,   814,   814,   814,   814,   814,
     815,   816,   817,   817,   817,   818,   818,   819,   820,   820,
     821,   822,   822,   823,   823,   824,   824,   825,   825,   825,
     826,   826,   827,   827,   828,   828,   829,   829,   830,   830,
     831,   831,   832,   832,   832,   832,   832,   833,   833,   834,
     834,   835,   836,   836,   837,   837,   837,   838,   838,   839,
     839,   840,   840,   841,   842,   843,   843,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   845,   846,   847,   847,   847,   848,   848,   849,   849,
     849,   850,   850,   850,   851,   851,   851,   852,   852,   853,
     853,   854,   854,   855,   856,   856,   856,   856,   857,   857,
     858,   859,   859,   859,   860,   860,   861,   861,   862,   862,
     863,   863,   864,   864,   864,   864,   865,   865,   865,   865,
     865,   865,   865,   865,   866,   866,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   866,   866,   867,
     867,   867,   867,   867,   867,   867,   868,   868,   869,   869,
     869,   870,   870,   870,   871,   871,   872,   873,   873,   874,
     874,   875,   875,   875,   876,   876,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   877,   877,   877,   877,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     4,
       3,     2,     4,     5,     6,     8,     6,     8,     6,     8,
       2,     4,     3,     5,     1,     0,     1,     1,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     1,     2,     4,     7,     1,     4,     4,     7,     2,
       1,     3,     4,     3,     0,     1,     0,     2,     3,     5,
       8,     5,     0,     5,     5,     7,     2,     0,     1,     1,
       1,     3,     2,     0,     1,     0,     1,     3,     1,     3,
       1,     3,     2,     6,     6,     8,     6,     8,     6,     8,
       6,     8,     8,    10,     8,    10,     1,     0,     4,     6,
       1,     2,     1,     1,     0,     1,     2,     2,     1,     2,
       2,     1,     2,     3,     2,     2,     2,     2,     3,     3,
       3,     1,     3,     1,     0,     1,     2,     2,     9,    12,
      11,     0,     2,     1,     1,     1,     1,     1,     1,     3,
       0,     1,     2,     1,     1,     2,     2,     3,     1,     1,
       2,     2,     1,     2,     3,     5,     3,     2,     5,     5,
       2,     3,     1,     1,     2,     2,     0,     4,     0,     3,
       4,     4,     0,     3,     2,     0,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     1,
       2,     2,     2,     2,     2,     2,     0,     3,     3,     3,
       0,     1,     2,     1,     2,     2,     2,     2,     4,     1,
       3,     1,     3,     1,     1,     1,     1,     3,     1,     2,
       0,     1,     0,     1,     3,     0,     2,     0,     3,     3,
       1,     5,     3,     1,     3,     1,     4,     5,     5,     6,
       3,     7,     4,    11,     1,     3,     2,     2,     2,     0,
       3,     1,     1,     2,     2,     2,     2,     1,     0,     1,
       2,     5,     8,     1,     0,     2,     2,     2,     2,     3,
       4,     2,     1,     1,     1,     3,     2,     1,     1,     1,
       2,     3,    13,    16,     1,     2,     0,     1,     0,     1,
       0,     2,     0,     1,     0,     7,    10,     2,     3,     0,
       4,     2,     3,     2,     3,     2,     2,     2,     2,     2,
       2,     1,     1,     0,     9,    11,    12,    14,     3,     4,
       4,     0,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     2,     2,
       3,     3,     3,     1,     3,     3,     2,     3,     3,     3,
       3,     1,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,    11,     9,     1,     1,     3,     0,     1,     3,
       1,     0,     1,     0,     1,     0,     1,     3,     1,     1,
       1,     3,     0,     2,     2,     0,     2,     0,     1,     0,
       1,     1,     1,     3,     3,     1,     1,     3,     3,     3,
       3,     4,     3,     2,     1,     1,     1,     1,     1,     3,
       6,     1,     1,     2,     3,     2,     1,     5,     3,     0,
       1,     1,     1,     1,     8,     1,     1,     3,     3,     1,
       2,     4,     4,     2,     3,     5,     5,     1,     1,    10,
      10,     1,     2,     4,     4,     4,     2,     2,     3,     1,
       3,     6,     2,     0,     3,     3,     4,     4,     4,     4,
       3,     2,     1,     1,     0,     1,     1,     0,     1,     5,
       1,     0,     2,     2,     0,     1,     0,     3,     1,     3,
       4,     3,     1,     1,     0,     2,     2,     0,     2,     2,
       1,     1,     1,     0,     2,     4,     5,     4,     2,     3,
       2,     2,     2,     2,     1,     2,     3,     0,     1,     0,
       5,     1,     4,     6,     2,     1,     0,     4,     0,     1,
       1,     2,     2,     2,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     3,     1,     1,
       1,     1,     1,     2,     4,     4,     5,     1,     1,     2,
       0,     1,     3,     1,     0,     1,     2,     3,     2,     4,
       2,     3,     2,     0,     1,     2,     0,     4,     5,     2,
       0,     1,     3,     3,     3,     3,     3,     3,     1,     4,
       3,     4,     5,     4,     5,     4,     5,     2,     4,     1,
       1,     0,     1,     4,     5,     4,     0,     2,     2,     2,
       1,     1,     0,     4,     2,     1,     2,     2,     4,     2,
       6,     2,     1,     3,     4,     0,     2,     0,     2,     0,
       1,     3,     3,     2,     0,     2,     4,     1,     1,     2,
       3,     5,     6,     2,     3,     5,     5,     3,     4,     0,
       1,     1,     1,     1,     1,     2,     4,     1,     1,     1,
       1,     2,     3,     0,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     2,     1,     3,     0,     1,     1,     1,
       1,     5,     2,     1,     1,     1,     1,     4,     1,     2,
       2,     1,     3,     3,     2,     1,     0,     5,     2,     5,
       2,     1,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     3,     3,     3,     3,     0,     1,     3,     3,
       5,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     3,     3,
       2,     2,     3,     3,     5,     4,     6,     3,     5,     4,
       6,     4,     6,     5,     7,     3,     2,     4,     3,     2,
       1,     3,     3,     3,     3,     3,     3,     4,     3,     4,
       3,     4,     5,     6,     6,     7,     6,     7,     6,     7,
       3,     4,     4,     6,     1,     4,     1,     3,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     2,     5,     6,     6,     7,     1,
       1,     2,     2,     2,     4,     1,     2,     1,     2,     2,
       4,     3,     6,     7,     9,     7,     7,     4,     4,     1,
       1,     1,     5,     1,     1,     4,     1,     4,     1,     4,
       1,     4,     1,     1,     1,     1,     1,     1,     6,     6,
       4,     4,     4,     4,     6,     5,     5,     5,     4,     6,
       4,     5,     0,     5,     0,     2,     0,     1,     3,     3,
       2,     2,     0,     6,     1,     0,     3,     0,     2,     2,
       0,     1,     4,     2,     2,     2,     2,     2,     4,     3,
       1,     5,     3,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     1,     4,     1,     4,     1,     2,
       1,     2,     1,     2,     1,     3,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     1,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       3,     2,     3,     0,     3,     3,     2,     2,     1,     0,
       2,     2,     3,     2,     1,     1,     3,     5,     1,     2,
       4,     2,     0,     1,     0,     1,     2,     2,     3,     5,
       1,     0,     1,     2,     0,     2,     1,     0,     1,     0,
       1,     3,     3,     2,     1,     3,     5,     4,     2,     1,
       0,     3,     1,     3,     4,     2,     0,     1,     3,     1,
       2,     1,     3,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     2,     7,     2,     5,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       7,     1,     2,     3,     2,     0,     2,     0,     4,     7,
       2,     0,     1,     1,     1,     1,     6,     4,     6,     4,
       6,     8,     4,     6,     1,     1,     1,     1,     1,     2,
       1,     2,     1,     1,     1,     3,     3,     3,     3,     2,
       2,     1,     3,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     3,     8,     1,     0,     1,
       3,     3,     9,    12,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     156,   413,     0,   132,   131,   413,     0,   516,   413,   489,
     358,     0,   373,     0,   413,     0,   156,     0,     0,     0,
       0,     0,     0,     0,   413,   571,     0,   372,   413,     0,
       0,   433,     0,     0,     0,     0,     0,     2,     4,     7,
      23,    24,    28,     5,    22,   115,    27,     8,    26,     0,
      30,     6,    17,    16,    37,     0,    35,    25,    12,    18,
      32,    38,    34,     9,    36,    11,    14,    10,    29,    33,
      31,   538,   525,   576,   537,   155,   541,    19,    15,    20,
      13,    21,   412,   411,   405,     0,     0,     0,     0,     0,
     406,  1143,  1236,  1237,  1238,  1239,  1240,  1241,  1242,  1243,
    1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,  1591,  1252,
    1253,  1254,  1539,  1540,  1592,  1541,  1542,  1255,  1256,  1257,
    1258,  1259,  1260,  1261,  1262,  1543,  1544,  1263,  1264,  1265,
    1266,  1267,  1545,  1593,  1268,  1269,  1270,  1271,  1272,  1273,
    1594,  1274,  1275,  1276,  1277,  1278,  1279,  1280,  1281,  1282,
    1595,  1283,  1284,  1285,  1596,  1286,  1287,  1288,  1289,  1290,
    1291,  1292,  1546,  1547,  1293,  1294,  1295,  1296,  1297,  1298,
    1299,  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  1308,
    1309,  1310,  1311,  1312,  1313,  1314,  1315,  1316,  1317,  1318,
    1319,  1320,  1548,  1321,  1322,  1323,  1324,  1549,  1325,  1326,
    1327,  1550,  1328,  1329,  1330,  1597,  1598,  1331,  1332,  1333,
    1599,  1334,  1335,  1551,  1552,  1336,  1337,  1338,  1339,  1340,
    1341,  1342,  1343,  1600,  1344,  1345,  1346,  1347,  1348,  1349,
    1350,  1351,  1352,  1353,  1354,  1601,  1553,  1355,  1356,  1357,
    1358,  1554,  1555,  1556,  1359,  1602,  1603,  1360,  1604,  1361,
    1362,  1363,  1364,  1365,  1366,  1605,  1367,  1606,  1368,  1369,
    1370,  1371,  1372,  1373,  1374,  1375,  1557,  1376,  1377,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,
    1389,  1390,  1391,  1392,  1393,  1558,  1608,  1559,  1394,  1395,
    1396,  1560,  1397,  1398,  1609,  1399,  1561,  1400,  1562,  1401,
    1402,  1403,  1404,  1405,  1406,  1407,  1408,  1409,  1563,  1610,
    1410,  1611,  1564,  1411,  1412,  1413,  1414,  1415,  1416,  1417,
    1418,  1419,  1420,  1421,  1422,  1565,  1423,  1424,  1566,  1425,
    1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  1434,  1435,
    1436,  1567,  1437,  1438,  1439,  1440,  1441,  1442,  1443,  1444,
    1445,  1446,  1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,
    1455,  1612,  1456,  1457,  1458,  1568,  1459,  1460,  1461,  1462,
    1463,  1464,  1465,  1466,  1467,  1468,  1469,  1470,  1471,  1472,
    1473,  1474,  1475,  1569,  1476,  1477,  1478,  1613,  1479,  1480,
    1570,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,
    1490,  1491,  1492,  1571,  1493,  1572,  1494,  1495,  1496,  1497,
    1615,  1498,  1499,  1500,  1501,  1502,  1573,  1574,  1503,  1504,
    1575,  1505,  1576,  1506,  1507,  1577,  1508,  1509,  1510,  1511,
    1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,
    1522,  1578,  1579,  1523,  1616,  1524,  1525,  1526,  1527,  1528,
    1529,  1530,  1531,  1532,  1533,  1534,  1580,  1581,  1582,  1583,
    1584,  1585,  1586,  1587,  1588,  1589,  1590,  1535,  1536,  1537,
    1538,   438,     0,     0,  1125,  1144,  1145,  1153,   408,   488,
     156,     0,   511,     0,     0,   512,     0,     0,   352,   351,
       0,   393,   357,     0,     0,     0,  1143,   403,  1557,  1425,
    1571,   401,  1123,  1144,     0,  1202,  1203,     0,  1211,     0,
    1196,  1200,  1197,     0,  1221,  1213,  1222,  1214,  1195,  1215,
    1204,  1194,     0,  1223,     0,  1198,     0,     0,     0,   409,
    1235,   358,   156,     0,   110,   115,   120,   123,   121,   119,
     122,     0,   515,     0,  1142,   140,   141,   101,   519,   378,
    1573,  1503,   377,   379,   376,   374,   410,   570,   568,     0,
    1099,  1334,  1370,  1463,  1474,  1573,     0,   439,   443,   407,
    1578,   367,   366,     0,  1147,     0,   542,   705,  1146,  1119,
     432,     0,   437,     0,  1439,   546,   549,  1162,   547,   538,
       0,     1,   156,   114,   142,     0,     0,     0,   371,  1573,
    1503,   368,   365,   567,   567,     0,   567,     0,   530,   538,
     533,   537,     0,  1342,     0,     0,  1342,     0,  1342,     0,
    1342,     0,     0,  1091,     0,  1092,  1126,   521,     0,   522,
     520,   523,   325,   356,   355,   354,   353,   358,  1342,  1181,
    1157,     0,     0,     0,     0,     0,   388,     0,   404,   402,
    1209,  1210,     0,  1201,  1199,     0,  1154,  1617,   757,  1618,
     786,   764,   786,   786,  1619,  1620,  1621,  1622,   753,   753,
    1308,   766,  1623,  1624,  1625,  1342,  1626,  1627,   754,   755,
     791,  1628,  1629,  1630,  1631,  1632,     0,     0,  1633,   786,
    1634,   753,  1635,  1636,   758,  1637,   727,     0,  1638,   756,
     728,  1639,   794,   794,  1640,   781,  1641,     0,  1224,   739,
     740,   741,   742,   767,   768,   743,   773,   774,   778,   744,
     826,   753,  1220,  1155,  1156,  1342,  1216,  1220,  1342,  1220,
    1121,  1342,     0,     0,  1231,     0,   112,   124,  1642,  1643,
    1644,  1645,  1647,  1646,  1648,  1649,  1650,  1651,  1652,  1653,
    1654,  1655,  1656,  1659,  1657,  1658,  1660,  1661,  1662,  1663,
    1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,
    1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,
    1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,
     138,     0,   139,   129,   118,   125,   126,   156,   487,   100,
       0,     0,     0,     0,   380,     0,     0,     0,  1128,  1130,
    1131,  1022,  1141,  1094,     0,  1540,  1541,  1542,  1084,     0,
    1543,  1544,  1545,  1593,   956,   943,   952,   957,   944,   946,
     953,  1546,  1547,   894,  1548,  1549,  1139,  1550,  1551,  1552,
    1554,  1555,  1556,   948,   950,  1558,  1559,     0,  1140,  1561,
    1562,  1406,  1564,  1565,  1567,  1568,   954,  1570,  1572,  1573,
    1574,  1575,  1576,  1138,  1577,   955,  1579,     0,     0,     0,
    1110,  1039,     0,     0,     0,  1094,   927,     0,     0,   747,
     748,   769,   770,   749,   775,   776,   750,     0,  1104,   827,
     972,  1094,   939,  1000,   870,     0,   925,   919,   553,  1100,
       0,   920,  1127,  1094,  1085,   553,  1098,   442,   440,   446,
     441,     0,     0,     0,     0,     0,   707,   706,  1120,   431,
     429,   430,   428,   427,   434,     0,   436,   115,  1036,     0,
    1085,   548,     0,     0,     0,   528,   527,     3,  1162,     0,
       0,  1171,     0,   369,     0,   565,   566,     0,     0,     0,
       0,     0,     0,     0,     0,   654,   590,   591,   593,   651,
     655,   663,     0,   534,     0,     0,     0,   197,   197,     0,
       0,     0,     0,     0,    93,    42,    86,     0,     0,     0,
       0,   211,   224,     0,     0,     0,     0,     0,   221,     0,
       0,   204,    44,   198,   200,     0,   197,     0,    40,     0,
       0,     0,    46,  1143,     0,  1591,  1592,  1593,  1594,  1595,
     957,     0,  1597,  1598,  1599,  1600,  1601,  1602,  1603,  1604,
    1605,  1606,  1557,  1608,  1609,  1610,  1611,  1612,  1613,  1571,
    1615,  1577,     0,  1616,     0,   931,  1042,   576,  1040,  1163,
       0,  1144,  1150,  1090,     0,  1164,  1721,  1722,  1723,  1724,
    1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,
    1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,
    1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,  1753,  1754,
    1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,  1763,  1764,
    1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,
    1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,  1783,  1784,
    1785,  1786,  1787,  1788,  1789,  1790,  1791,  1792,  1681,  1793,
    1794,  1795,  1796,  1797,  1087,  1124,  1166,  1165,  1167,  1093,
       0,     0,   485,     0,     0,  1178,     0,  1158,     0,     0,
    1342,   364,  1342,     0,   325,   325,   387,   390,     0,     0,
    1212,  1208,  1206,  1205,  1207,   785,   772,   780,   779,     0,
     762,   761,   760,     0,   759,     0,     0,   786,   786,   784,
     763,   739,     0,     0,     0,   790,     0,   788,     0,   733,
     729,     0,   799,   800,   801,   802,   809,   810,   807,   808,
     803,   804,   797,   798,   805,   806,   795,   796,     0,   811,
     812,   813,   814,   815,   816,   817,   818,   745,   751,  1218,
    1219,     0,  1192,     0,     0,  1187,     0,     0,  1189,     0,
       0,     0,     0,   156,     0,   205,   134,   135,   133,     0,
       0,   137,   127,   136,   116,   117,   208,   225,   128,   111,
       0,    99,   476,   451,   452,   460,   102,     0,  1045,     0,
     156,   381,   375,     0,   923,  1039,  1083,     0,     0,     0,
       0,     0,     0,   929,  1048,     0,     0,   850,     0,     0,
       0,  1063,     0,  1069,     0,     0,     0,   851,   831,   832,
       0,  1109,  1116,  1038,     0,   927,  1036,     0,  1003,     0,
    1146,     0,   921,   922,   928,     0,  1134,     0,   826,   826,
    1103,  1022,     0,  1019,  1020,  1021,     0,     0,     0,  1097,
       0,  1030,  1032,     0,     0,   866,  1028,     0,   869,     0,
       0,     0,     0,  1016,  1017,  1018,  1010,  1011,  1012,  1013,
    1014,  1015,  1026,  1009,   847,     0,     0,   974,   926,     0,
       0,   846,     0,     0,     0,   670,     0,  1132,  1129,     0,
    1086,   670,   454,   458,   459,   457,   445,     0,   453,   444,
     449,   447,   450,   448,     0,   425,     0,   422,   667,     0,
     550,     0,     0,   143,  1177,     0,   150,     0,  1172,     0,
     370,   545,   544,   577,   578,   584,   543,   632,   633,     0,
       0,     0,     0,   660,   658,  1128,  1141,   620,   594,   619,
       0,     0,   598,     0,   624,   827,   653,   532,   588,   589,
     592,   531,     0,   656,     0,   666,   654,   593,     0,     0,
       0,     0,     0,     0,  1342,     0,     0,    77,    58,   277,
       0,   196,     0,     0,     0,     0,     0,     0,     0,    85,
      82,    83,    84,     0,     0,     0,     0,   209,   210,   223,
       0,   214,   215,   212,   216,   217,     0,     0,   202,   203,
       0,     0,     0,     0,   201,     0,     0,     0,     0,     0,
       0,     0,     0,   576,   576,   576,   937,     0,   574,   575,
       0,     0,  1088,  1091,   475,   333,     0,   323,     0,     0,
       0,     0,     0,     0,   358,  1182,  1184,  1183,  1185,  1180,
    1159,     0,     0,     0,     0,   363,   361,     0,     0,   322,
     296,   392,  1342,   389,     0,   313,   513,     0,     0,     0,
       0,     0,  1220,     0,   783,   782,   734,   730,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1225,  1220,  1217,  1220,  1122,     0,  1220,  1234,
    1342,     0,   325,   113,   130,   206,   226,   207,   227,   508,
       0,   482,   490,   495,   473,     0,   473,     0,   492,   496,
     473,   491,   473,   486,     0,   103,     0,   518,     0,   517,
       0,  1095,     0,     0,  1082,  1078,     0,     0,     0,     0,
       0,  1049,  1050,  1051,  1052,  1053,  1054,  1055,  1056,  1057,
       0,     0,  1058,     0,     0,     0,  1008,  1019,  1020,  1021,
    1016,  1017,  1018,  1010,  1011,  1012,  1013,  1014,  1015,  1034,
       0,     0,     0,     0,     0,     0,     0,     0,   896,     0,
       0,   919,   999,     0,  1036,  1068,     0,     0,     0,     0,
       0,     0,  1036,  1074,     0,     0,     0,  1108,     0,  1105,
     872,  1094,     0,     0,   871,     0,     0,     0,  1136,  1137,
     828,   842,   843,   844,   848,  1169,  1168,  1102,     0,  1096,
       0,     0,   829,   852,   857,     0,  1075,   890,     0,   878,
       0,   865,     0,   876,   880,   853,   868,     0,   849,     0,
    1097,  1031,  1033,     0,  1029,     0,   839,   840,   841,   833,
     834,   835,   836,   837,   838,   845,  1007,  1005,  1006,     0,
       0,     0,   982,   873,     0,     0,   875,   874,  1334,  1370,
       0,   564,   564,   564,   552,   562,  1101,     0,   719,   576,
    1110,   719,     0,   826,   708,  1162,   435,   424,   423,  1037,
    1161,   156,     0,  1175,     0,     0,     0,   162,   145,     0,
    1173,     0,   178,   670,     0,  1094,     0,   582,   583,     0,
     587,  1568,  1459,     0,     0,     0,     0,   625,   661,     0,
     652,   622,   623,     0,   621,  1128,   626,  1127,   627,   630,
     631,   599,   662,  1117,   664,     0,   657,   536,   535,   668,
       0,    43,     0,  1342,    60,     0,     0,     0,     0,     0,
       0,   231,   268,   231,    98,  1342,  1220,  1342,  1220,  1240,
    1309,  1475,     0,    56,    89,     0,   301,   190,     0,   286,
     330,    79,    94,   183,     0,     0,    45,   199,   213,   218,
     186,   222,   219,   106,   220,   197,     0,    41,     0,   184,
       0,   104,     0,     0,    47,   188,   108,   574,   574,   574,
       0,  1041,     0,     0,     0,  1043,  1044,  1090,     0,   474,
       0,   324,     0,   484,   464,   465,   475,     0,     0,   325,
    1181,     0,  1160,  1228,     0,     0,     0,     0,   399,     0,
     316,   314,   344,     0,   321,   315,   323,     0,     0,   272,
       0,     0,     0,     0,   514,   510,     0,   752,   765,  1193,
     739,     0,   793,   792,   794,   794,   739,     0,   725,     0,
     737,     0,   777,   746,   819,   820,   821,   822,   823,   824,
     825,  1186,  1188,     0,  1190,     0,     0,   477,     0,   480,
       0,   478,   479,   483,   472,     0,   503,     0,     0,     0,
       0,     0,     0,   461,  1046,   569,   895,     0,     0,  1079,
       0,     0,   970,     0,   945,   947,   960,     0,   949,   951,
       0,  1023,     0,     0,     0,   961,   898,   899,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   914,   913,   962,   998,     0,
       0,  1066,  1067,   963,     0,     0,  1073,     0,     0,     0,
     968,     0,     0,     0,     0,  1115,   924,  1037,  1004,  1002,
     930,   826,     0,     0,     0,     0,     0,     0,     0,   879,
     867,     0,   877,   881,     0,     0,     0,   861,     0,     0,
     859,   891,   855,     0,     0,   892,     0,     0,     0,   938,
     564,   564,   564,   564,   561,   563,     0,     0,     0,     0,
    1459,     0,   691,   669,   671,   678,   691,   696,   940,   717,
     941,  1146,     0,   635,   574,  1116,   635,     0,   455,   426,
       0,  1176,     0,   167,   149,   169,   168,     0,   176,     0,
    1094,     0,   167,   151,     0,   170,     0,  1175,     0,   182,
     579,     0,  1024,   587,     0,   581,   629,   628,     0,   597,
     659,   595,     0,   665,     0,     0,     0,   276,     0,     0,
       0,   231,     0,     0,   340,     0,   327,    78,     0,     0,
       0,    52,    97,    70,    62,    48,    76,     0,     0,    81,
       0,    74,    91,    92,    90,    95,     0,   260,   241,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   576,   572,   573,   932,
    1089,   506,   507,   204,   505,   334,     0,     0,   322,   392,
    1179,     0,  1229,     0,  1227,     0,   364,     0,   325,  1235,
       0,   395,   300,   296,     0,   294,   293,   295,     0,   400,
     391,     0,     0,   386,   771,   736,     0,   789,   787,   735,
       0,   731,   738,  1220,     0,   509,   504,     0,   468,   493,
     498,     0,   502,   500,   499,   494,   497,     0,  1081,  1077,
       0,   942,  1047,     0,  1035,  1061,  1060,   897,   909,   910,
     911,  1062,     0,     0,     0,   906,   907,   908,   900,   901,
     902,   903,   904,   905,   912,  1071,  1070,  1064,  1065,     0,
     965,   966,   967,  1072,     0,  1107,  1036,  1112,     0,     0,
    1001,  1135,   830,     0,     0,   858,  1076,   882,     0,     0,
       0,   854,  1023,     0,     0,     0,     0,     0,   863,     0,
       0,     0,   985,   980,   981,     0,     0,     0,     0,   555,
     554,   560,   691,   696,     0,   538,     0,   678,     0,   690,
     616,   689,     0,     0,   702,   700,     0,   702,     0,   702,
       0,   616,     0,   692,   616,   689,     0,   709,  1120,   718,
       0,   650,     0,  1106,   650,     0,   551,  1174,     0,  1170,
       0,     0,     0,   157,   154,   144,     0,     0,   179,   167,
     158,     0,   580,   585,   586,   596,  1118,   191,   231,     0,
       0,    59,     0,   342,   288,   320,   303,     0,     0,     0,
     232,     0,   308,     0,    51,    71,     0,    67,     0,    96,
       0,     0,     0,     0,     0,    54,    66,     0,    49,     0,
    1220,  1220,    57,   287,  1154,  1617,  1618,  1619,  1620,  1621,
    1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,
    1632,  1710,  1633,   238,  1634,  1406,  1635,  1636,  1637,     0,
    1638,   728,  1639,  1640,  1641,  1010,  1011,   236,   329,   233,
     335,   235,   237,     0,  1155,   234,   332,   187,   107,     0,
     185,     0,   105,   194,   192,   189,   109,   935,   936,   933,
     574,   487,   467,     0,     0,     0,  1342,     0,  1226,     0,
     392,   362,     0,   322,   399,   397,     0,   350,   272,   345,
       0,   421,     0,     0,     0,   732,   726,  1191,     0,   481,
       0,   501,  1080,   958,   969,  1059,     0,     0,     0,     0,
     964,   959,  1114,     0,  1111,   888,   886,   883,     0,   884,
     862,     0,     0,   860,   856,     0,   893,   971,     0,   987,
     984,   559,   558,   557,   556,   677,   675,     0,   680,  1146,
     687,   609,   615,   676,     0,   672,     0,   701,   697,     0,
     698,     0,     0,   699,     0,   673,     0,  1146,   674,     0,
     716,     0,     0,   976,   932,   976,   456,   166,   146,     0,
     147,   177,     0,     0,     0,     0,   171,   524,     0,   338,
      61,     0,   320,     0,   231,   305,   304,   307,   302,   306,
     309,     0,     0,     0,     0,     0,   289,     0,     0,     0,
     252,     0,     0,   320,     0,   326,   248,   249,   359,     0,
       0,     0,    63,    53,    50,    55,    64,     0,     0,    65,
      68,   724,    80,    73,  1710,  1717,     0,     0,     0,     0,
       0,     0,   463,   470,   204,     0,     0,   296,     0,     0,
     322,  1230,     0,     0,   399,     0,  1232,   398,     0,     0,
     228,     0,   269,     0,     0,   414,     0,   385,   384,     0,
       0,   469,   915,     0,     0,     0,  1113,   885,   889,   887,
     864,   973,     0,   576,   712,     0,   715,   679,     0,     0,
     604,   611,     0,   614,   608,     0,   681,     0,     0,   683,
     685,     0,     0,     0,   720,     0,     0,     0,  1123,  1284,
    1551,  1458,     0,   634,   636,   639,   641,   640,   642,   638,
     649,     0,   607,  1133,   607,     0,     0,     0,   180,     0,
     173,   173,     0,   159,  1025,     0,   231,     0,   319,   339,
     267,     0,     0,   250,     0,   257,     0,   291,   292,   290,
     251,   320,   325,   253,     0,   360,     0,    72,     0,    88,
       0,     0,   331,   195,   193,   934,   487,     0,   392,   272,
     421,     0,     0,  1235,   396,   296,   285,   278,   279,   280,
     281,   282,   283,   284,   299,   298,   270,   271,     0,     0,
       0,   386,     0,   916,     0,   917,     0,   990,   717,     0,
       0,   711,     0,   602,   600,   603,   605,   601,     0,     0,
     688,   704,     0,   684,   682,   693,     0,   724,     0,   695,
       0,     0,     0,   643,     0,   975,   977,     0,     0,   540,
     539,     0,   153,     0,   719,     0,     0,   175,   175,   161,
       0,   325,   341,     0,   311,   318,   310,     0,     0,   247,
       0,   254,   349,   256,   240,   723,     0,    75,     0,   336,
     462,   466,     0,   230,   415,     0,   421,   399,   272,     0,
     418,     0,     0,   392,   918,   986,     0,     0,     0,   710,
     713,     0,   686,     0,     0,     0,   721,   722,   694,     0,
       0,     0,   637,     0,     0,   609,   148,   173,   152,   181,
     172,   584,   174,   584,     0,   349,   297,     0,     0,   275,
     240,     0,   266,     0,    69,    87,   337,     0,   322,   416,
    1233,   229,   419,   420,     0,   719,  1539,  1285,  1510,     0,
     988,   991,   989,   983,     0,   612,     0,   618,   703,   645,
       0,   644,   978,   979,   606,   175,   587,   587,   719,   266,
     312,   317,     0,   255,   258,   346,   347,   348,     0,   262,
     259,   263,     0,   421,     0,   382,     0,   995,   994,   993,
     997,   996,   714,     0,     0,   610,   646,   584,   164,   163,
     160,   231,   274,     0,     0,     0,   264,     0,   265,   239,
     417,   392,     0,   613,     0,   587,   343,   244,     0,   243,
       0,   328,   261,   719,   992,     0,   165,   242,   246,   245,
     383,   617
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    36,    37,    38,    39,  2123,  2124,  2125,  1812,   974,
    2817,  1813,   975,   976,  2127,    40,    41,    42,    43,    44,
     594,  1231,   534,  1232,  1233,   791,    45,  1243,   793,   794,
      46,   545,    47,   536,  1747,  1375,  2544,    49,  2078,  1752,
    2082,  2688,  2329,  2077,  2084,  2797,  2861,  2079,  1753,  2689,
    1754,    50,  1433,    51,  1505,  1460,  1244,   994,  1450,  1236,
      52,  2114,  2418,  2874,  2137,  2961,  2575,  2576,  1814,  2919,
    2920,  2116,  2189,  1442,  2913,  1880,  2744,  1818,  1801,  2577,
    1889,  2698,  2457,  1815,  2360,  1881,  2561,  2803,  1513,  1882,
    2804,  2554,  1883,  1485,  1510,  2362,  2921,  1819,  1486,  2419,
    1429,  1884,  2872,  1885,   493,  2580,    53,  1506,    54,    55,
     566,    56,   553,   554,    57,  2627,  2464,  1147,  1514,  1891,
     494,   537,  2181,  1143,    59,    60,    84,    61,  2625,    62,
     924,   582,   925,   927,    63,    64,   567,   568,  1245,  1356,
    1246,    65,  1866,  2604,  2207,  2605,  1935,  1860,  1241,  1933,
    1559,  1489,  1242,   481,  1573,  2208,  2163,  1560,    66,   495,
    1149,    67,    68,   803,   628,   538,   539,   876,    72,    73,
      74,   573,   585,   586,  1345,  1724,  2046,   947,   559,   560,
    1854,   607,  1479,  1383,  1384,  1760,  2095,  1410,  1411,   956,
     957,  2651,  2789,  2652,  2653,  2512,  2513,  2935,  1398,  1402,
    1403,  1776,  1766,  1389,  2321,  2673,  2674,  2675,  2676,  2677,
    2678,   877,  2533,  1406,  1407,   959,   960,   961,  1415,  1786,
      76,  1728,  2053,  2054,  2055,  2299,  2300,  2314,  2310,  2518,
    2659,  2056,  2057,  2644,  2645,  2761,  2317,  2063,  2663,  2664,
    2719,  1532,   707,  1248,  1180,   709,   878,   710,  1160,   879,
    1164,   712,   880,   881,   882,   715,   883,   884,   885,   718,
    1156,   886,   887,  1175,  1199,  1200,  1201,  1202,  1203,  1204,
    1205,  1206,  1207,   928,  1627,   889,   890,   891,  2059,   892,
    1337,  1712,  2682,  2785,  2786,  2039,  2283,  2499,  2643,  2838,
    2890,  2891,   893,   894,  1288,  1289,  1709,  1332,  1333,   895,
    2421,  1335,  1620,  1287,  1284,  1037,  1038,  1249,  1600,  1601,
    1623,  1964,  1630,  1636,  1991,  1992,  1644,  1677,   896,  1584,
    1585,  1950,  1257,   897,   625,  1044,   626,  1254,  1671,   905,
     898,   899,  1281,  1282,  2005,  2258,  1649,  1782,   577,  2655,
     730,  1124,   900,   901,   902,   903,   930,   579,  1039,   474,
     721,  2862,  1137,   934,  1040,  1816,  1667,   540,   942,  2073,
    1743,    78,  1135,  1499,    79,   526,   527,   727,  1212,   528,
     722,    80,  2173,  2174,    81,   734,   503,   476,   477,   724,
    1127,  1042,  1128
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2614
static const int yypact[] =
{
    3345,   -77,   660, -2614, -2614,   -77, 32754, -2614,   -77,    57,
    2914, 37474, -2614,  6021,   -77, 43610,   360,   166,   296,   236,
     371, 43610, 43610, 37946,   -77,   543, 44082, -2614,   -77, 22411,
   35114,    -2,  -107, 44554, 43610,  -120,   536,    70, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614,   256, -2614, -2614, -2614,    41,
   -2614, -2614, -2614, -2614, -2614, 21938, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614,   136, -2614,    23,   149,   620,   233, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, 38418, 43610, 38890, 35586, 39362,
   -2614,   100, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614,   110, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614,   128, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614,   295,   337, -2614,   130, -2614, -2614, -2614, -2614,
    -120, 39834, -2614,   -98,   396, -2614,   318, 45026, -2614, -2614,
   43610, -2614, -2614,   753,   646, 39834, -2614, -2614, -2614, 40306,
   -2614, -2614, -2614, -2614,   655, -2614, -2614,   328, -2614,    75,
   -2614, -2614, -2614,   486, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614,   590, -2614, 50218, -2614, 45498, 45970, 46442, -2614,
     479,   606,    61, 21465, -2614,   256, -2614, -2614, -2614, -2614,
   -2614,   371, -2614,   371, -2614, -2614, -2614,  -183,   490, -2614,
     512,   804,   515, -2614, -2614, -2614, -2614, -2614,   745,  9213,
    9213, 46914, 46914,   371, 46914,   557,   276, -2614, -2614, -2614,
    -107,   515, -2614,   620, -2614, 22884, -2614,   566,   337, -2614,
   -2614,   187,   874, 12195, 43610,   587, -2614,   564,   587,   601,
     616, -2614,  3345, -2614, 39834,   965,   900, 35114, -2614,   653,
     932,   515, -2614,   689,   689,  1085,   689,   101,   577, -2614,
     889, -2614,   664,  1015,   739,   844,  1020,  4774,  1048,   821,
    1058,   937,  6728, 12195, 31338, -2614,   337, -2614,   697, -2614,
   -2614, -2614,   721, -2614, -2614, -2614, -2614,   606,   977, -2614,
     762,  1223,   858, 40778, 41250, 39834,  1204,   825, -2614, -2614,
   -2614, -2614,   870, -2614, -2614,   158, -2614, -2614, -2614, -2614,
     898, -2614,   898,   898, -2614, -2614, -2614, -2614,   856,   856,
    1038,   873, -2614, -2614, -2614,  1228, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614,   909,   712, -2614,   898,
   -2614,   856, -2614, -2614, -2614, -2614, -2614, 51589, -2614, -2614,
   -2614, -2614,   555,   563, -2614, -2614, -2614,   935, -2614,  1378,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,   942, -2614,
     744,   856,    63, -2614, -2614,  1278, -2614,   112,  1291,   152,
   -2614,  1298,  1172, 12195, -2614,  1081, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614,  -107, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614,   341, -2614, -2614, 28947, -2614, -2614,    61,   995, -2614,
   28947, 12692, 50675,  1454, -2614,  1264, 43610,  1007, -2614, -2614,
   -2614, -2614, -2614, -2614,  1013,  1503,    96,  1512, 12195,  1028,
      96,    96,  1050,  1366, -2614, -2614, -2614,   135,  1059,  1061,
   -2614,   145,   145, -2614,  1063,  1076, -2614,   147,  1078,  1090,
    1580,  1593,   115,  1117,  1134,   712,    96, 12195, -2614,  1146,
     145,  1147,  1149,  1152,  1639,  1154, -2614,  1642,  1157,    90,
      91,  1159,  1160, -2614,  1161, -2614,   148, 12195, 12195, 12195,
    1508, 12195,  7722, 39834,  1646, -2614,   337,  1166,   371, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614,   120,  5186, -2614,
    1207, -2614, -2614, -2614,   184, 12195, -2614,  1645,   -24, -2614,
     151, -2614, -2614, -2614,   489,  1450,  1173, -2614, -2614, -2614,
   -2614,   169,  1570, 28003, 28475, 39834, -2614, -2614,   337, -2614,
   -2614, -2614, -2614, -2614, -2614,   395, -2614,   256, 30115,   495,
     337,   587, 43610, 43610,  1634, -2614, -2614, -2614,   564, 35114,
   39834, 47386,  1302, -2614,  1445, -2614, -2614,   620,   620, 12195,
     620,   141,   665,  9710, 13189,  1511,  1397,   119,   492,  1516,
   -2614,  1403,   101,   577, 12195, 39834, 33226,   237,   659,  1190,
    1275,  1196,   -22,  1604, -2614,  1197, -2614,  1283, 39834, 51589,
     172, -2614,  1643,   172,   172,   719,  1644,  1286,   200,  1441,
     -16,   156,  1197,   681, -2614, 35114,   140,    51,  1197, 39834,
    1292,   401,  1197,    84, 12692,   802,   810,   252,  1206,  1216,
      89, 12692,  1289,  1355,  1447,  1497,  1523,  1535,  1544,  1546,
    1548,  1550,    95,  1552,  1560,  1562,  1565,  1573,  1575,    99,
    1577,    97, 12692,  1581,  1211, -2614, 30115,   -33, -2614, -2614,
    1583,   117, -2614, 26586,  1213, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
    1296, 43610,  1254,   343,  1566,  1622, 31338,  1224,  1576, 39834,
    1452,   681,  1453,  1687,  1235,   721, -2614, 47858, 10207,  1691,
   -2614, -2614, -2614, -2614, -2614, -2614,  1239, -2614, -2614, 12195,
   -2614, -2614, -2614,  1723, -2614, 50675, 50675,   898,   898, -2614,
   -2614,  1699,  1327,  1329,  1723, -2614,  1723, -2614, 43610,  1252,
    1257,  1723, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,  1723,  1334,
   -2614,  1337,  1341,  1345, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, 50675, -2614, 43610, 43610, -2614, 43610, 43610, -2614, 43610,
   43610,   623, 41722,    61, 36058, -2614, -2614, -2614, -2614,   813,
     936, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   31338, -2614,  2565, -2614, -2614, -2614,  1261,   686, -2614,   714,
    -120, -2614, -2614, 12195,   337, 12195, 30115,  1308, 12195, 12195,
    1267,  1723,  1723, -2614,  2032,  1723,  1723, 30397, 12195, 25725,
   12195, 16668, 10704, 12195, 12195,  8219, 12195, 30397,  1748,  1748,
   23830, -2614,  1422,  1266,  1274,  1305,  4834,  1271, -2614,   193,
   -2614,  1265, -2614,   337,   337, 12195, -2614, 12195,  2182,  2182,
   -2614,   186, 50675, 12195, 12195, 12195, 12195, 30866,  1361,   125,
   43610, 12195, 12195,  1288,   730, -2614, 12195,  1505, -2614,  1290,
   12195,  1370,   157, 12195, 12195, 12195, 12195, 12195, 12195, 12195,
   12195, 12195, -2614, -2614, 18145,   203,  1605,  1624,   337, 12195,
     312,   183, 12195, 36530,  9213,  1616,  6728, -2614,   337, 27059,
      85,  1616, -2614, -2614, -2614, -2614, -2614,   153, -2614, -2614,
   -2614,  1261, -2614,  1261,  1297, 39834,   187, 34642, -2614, 12195,
   -2614,   715,  1299, -2614,  1354,   484,  1756, 43610, -2614, 24303,
   -2614,  1582, -2614,  1301, -2614,  4911,  1582, -2614, -2614, 17151,
    1426,  1587,  1517, -2614, -2614,  1504,  1507, -2614,  1312, 30159,
   13686, 13686, -2614,   558, 30115,  1249, -2614, -2614, -2614, -2614,
   -2614, -2614,   507, -2614, 39834,   -17,  1511,   492,   722,  1006,
    1321, 48330, 43610,  1594,  1547,  1596,  -164, -2614, -2614, -2614,
   50675, -2614, 43610, 43610, 48802, 49274, 31810, 43610, 31338, -2614,
   -2614, -2614, -2614, 43610,   114, 43610,  6212, -2614, -2614, -2614,
     172, -2614, -2614, -2614, -2614, -2614, 43610, 43610, -2614, -2614,
     172, 43610, 43610,   172, -2614,  1066, 43610, 43610, 43610, 43610,
    1087, 43610, 43610,   -30,   -30,  1528, -2614, 11201,   338, -2614,
   12195, 12195, -2614, 12195,  1498, -2614,   732, -2614,  1537,     7,
    1373, 39834, 39834, 43610,   770, -2614, -2614, -2614, -2614, -2614,
   -2614, 31338,  1330,  1333,  1670,   681, -2614,  1678,   643, 33698,
     670,  1376,  1563, -2614,  1553, -2614, -2614,   748, 12195, 12195,
     756,  1342,    63,   768, -2614, -2614,  1352,  1257,  1362,  1374,
    1359,  1360,   779, 50675,  1723,    82,  1363,  1364,  1347,   877,
     952,  1255, -2614,   112, -2614,   152, -2614,  1571,   164, -2614,
    1592,  1811,   721, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
     790, 20992, -2614, -2614,  1818,   371,  1818,    26, -2614, -2614,
    1818, -2614,  1818, -2614, 28947, -2614, 12692, -2614, 50675, -2614,
     792, -2614,  1371, 12195,    47, -2614, 29451,   798, 12195,  1368,
    1372, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
    1375,  1695, -2614,  1377,  1380,  4379, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
    1381,  1382, 29497,  1384, 16668, 16668,  7722,  1903, -2614, 16668,
    1385, -2614, -2614,   834, 29415,  1266,  1386, 29564, 11698, 12195,
   11698, 11698, 29796,  1266,  1387, 29841, 43610, -2614, 14183, -2614,
   -2614, -2614, 12195, 39834, -2614, 12195,   839,  5581, -2614, -2614,
   -2614,  3709,  3709,  3709, 30397, -2614, -2614, -2614,  1391, -2614,
   16668, 16668, -2614,  5152,  1410,  7722, -2614, -2614,  1698, -2614,
     767, -2614,  1390, -2614, -2614,  1697, -2614, 25725, 30204, 12195,
     129, -2614, 12195,  1288, 12195,  1458,  3709,  3709,  3709,   246,
     246,   107,   107,   107,   818,   183, -2614, -2614, -2614,  1392,
    1393,  1396,  1590, 30115,  1154, 12195, -2614, 30115,   751,   766,
   39834,  4067,  4484,  4659, -2614, -2614, -2614, 19573,  1439,   -33,
    1508,  1439,  1723,  2182, -2614,   564, -2614, -2614, -2614, 30115,
   -2614,  -120, 19573,  1440,  1460,   -61, 22411,  1625, -2614, 43610,
   -2614, 43610, -2614,    -8,  1418, -2614, 12195, -2614, -2614,  1127,
    1432,  1626,  1627,   959,   959,   558,  1629, -2614, -2614,  1481,
   -2614, -2614, -2614, 12195,  8716,  1270, -2614,  1276, -2614, -2614,
   -2614, -2614,  1420, -2614, -2614,  1679, -2614, -2614, -2614, -2614,
    1515,  1197, 12195,  1651, -2614,    79,  1436,  1778,  -146,  1732,
   43610, -2614,  1647, -2614,   572,  1780,   164,  1782,   164, 31338,
   31338, 31338,   840, -2614, -2614,   371, -2614, -2614,   853, -2614,
     201, -2614, -2614, -2614,  1524,   546,  1197,   681, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614,   161,   692,  1197,  1525, -2614,
    1526, -2614,  1530,   702,  1197, -2614, -2614,   338,   338,   338,
   12692, -2614,  1669,  1672,  1449, 30115, 30115, 30115,  1457, -2614,
     121, -2614, 43610, -2614, -2614, -2614,  1498, 39834,  1459,   721,
   -2614,   786, -2614,   371, 43610, 39834, 39834, 43610,  1491, 39834,
   -2614, -2614, -2614,  1461,  1463, -2614, 50675,   -82,  1675,  1674,
    1196,  1913,  1809, 39834, -2614, 30115,   859, -2614, -2614, -2614,
   -2614,  1723, -2614, -2614,   306,   306, -2614, 43610, -2614,  1470,
   -2614,  1472, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, 43610, -2614,  1830,  -120, -2614, 31338, -2614,
   34170, -2614, -2614, -2614, -2614,   371, -2614,   371,  1696, 43610,
   27531,   371,   371, -2614, -2614, -2614, -2614, 29980, 12195, -2614,
    1841, 50675, -2614,  6037, -2614, -2614, -2614, 12195, -2614, -2614,
   12195, -2614, 25725, 12195,  1817, -2614,  1976,  1976,  4834, 50675,
   16668, 16668, 16668, 16668,   568,  1147, 16668, 16668, 16668, 16668,
   16668, 16668, 16668, 16668, 16668, 17648,   267, -2614, -2614, 12195,
   12195,  1826,  1817, -2614, 50675,  1500,  1266,  1502,  1506, 12195,
   -2614, 50675,   865,  7722, 30076, -2614,   337,  6186, -2614, 30115,
   -2614,  2182, 12195,  2227,  2593, 12195,   866, 12195,  1828, -2614,
   -2614,  1499, -2614, -2614, 50675, 12195,  1509,  3346, 16668, 16668,
    3595, -2614,  4612, 12195,  7722, -2614,  1528,  1549, 24776, -2614,
    1603,  1603,  1603,  1603, -2614, -2614, 39834, 39834, 39834, 20046,
    1835, 19100, 42194,  1510,  1018, -2614, 42194, 42666, -2614,  1527,
   -2614,   337, 12195,  1831,   338,  1422,  1831,  1518, -2614, -2614,
    1520,  1510, 12195,  1663, -2614, -2614, -2614,  1574, -2614,   867,
   -2614,  1930,  1663, -2614,   880, -2614, 24303,  1440, 12195,   337,
   -2614,  1529, -2614,  1432,   143, -2614, -2614, -2614,  1733, -2614,
   -2614, -2614, 39834, -2614, 43610, 26205,  1865, -2614, 43610, 43610,
   43610, -2614, 43610,   885,   704,  1533, -2614,   704,  1849,   199,
    1196,   200,  5155,   355, -2614, -2614, -2614,  1608, 43610, -2614,
   43610, -2614, -2614, -2614, -2614, -2614, 31810, -2614, -2614, -2614,
   31338, 25252, 31338, 43610, 43610, 43610, 43610, 43610, 43610, 43610,
   43610, 43610, 43610,  1539,  1540,  1541,  1528, -2614, -2614, -2614,
   -2614, -2614, -2614,   156, -2614, -2614,   121,  1543, 33698,  1376,
    1622, 43138, -2614,  1554,  1555,   890,   681,  2000,  1556,   479,
     155, -2614, -2614,   670, 33698, -2614, -2614, -2614,  1960, -2614,
   -2614,  -120, 43610,  1607, -2614,  1257,  1558, -2614, -2614,  1257,
   50675, -2614, -2614,   164, 39834, -2614, -2614,   894, -2614, -2614,
   -2614, 43610,  1557, -2614,  1557, -2614, -2614, 12195, 30115, -2614,
    1559, -2614, 30115, 26223, -2614, 30115,  1826, -2614,  1060,  1060,
    1060,  2536,  1876,   497,  1567,  1060,  1060,  1060,   227,   227,
     123,   123,   123,  1976,   267, 30115, 30115, -2614, -2614,  1561,
   -2614, -2614, -2614,  1266,  1568, -2614,  5542, -2614,   895, 43610,
   -2614, -2614,   285, 12195, 12195,  5152, -2614,  3426, 12195, 50675,
     896,  5152,   212, 12195,  3180,  4295, 12195, 12195,  4757, 26241,
    1578, 12195, 49746, -2614, -2614, 39834, 39834, 39834, 39834, -2614,
   -2614, -2614, 42194, 42666,  1584, 18626,  1018,  1589, 39834, -2614,
    1653,  1585, 19573,  1844,  1768, -2614, 19573,  1768,   637,  1768,
    1846,  1653, 23357, -2614,  1653,  1588,  1776, -2614,   560, 30115,
    2013,  1887,  1598, -2614,  1887,   371, -2614, 30115,  9213, -2614,
    -120,  1016, 43610,   337,   -79, -2614,  1611, 43610, -2614,  1663,
   30115, 25725, -2614, -2614, -2614, -2614, -2614, -2614, -2614, 43610,
     901, -2614,   906,   704, -2614,  1620, -2614,   162,  1870,    69,
   -2614, 31338,  3253,   716, -2614,  1897,  1802, -2614,   172, -2614,
   12195,   716,  1820,   202, 43610, -2614, -2614,  2564, -2614, 50675,
     164,   164, -2614, -2614,  1595,  1601,  1602,  1606,  1609,  1610,
    1612,  1613,  1614,  1615,  1617,  1618,  1619,  1621,  1623,  1628,
    1630,   909,  1631, -2614,  1636,  1529,  1640,  1650,  1652, 51132,
    1654,  1656,  1658,  1659,  1660,   813,   936, -2614, -2614, -2614,
   -2614, -2614, -2614,   762,  1661, -2614,  1633, -2614, -2614,  1688,
   -2614,  1690, -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,
     338,   995,   131, 43610,  1635,  2065,  1842,  1641, -2614,   371,
    1376, -2614,   931, 33698,  1491, -2614,  2008,   194,  1674, -2614,
     105,  1664,  1838, 43610,  1648, -2614, -2614, -2614,  2086, -2614,
   34170,  1557, 30115, -2614, -2614, -2614, 16668,  1970,  1665, 50675,
   -2614, -2614, -2614, 12195, -2614,  5152,  5152,  3426,   915, -2614,
    5152, 12195, 12195,  5152,  5152, 12195, -2614, -2614, 26269,  1843,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, 32282, 42194,  1666,
   -2614, 37002, -2614, -2614, 43610,  1018, 19573, -2614, -2614,  1822,
   -2614, 19573,  1937, -2614, 19573, -2614, 43610,  1668, -2614, 43610,
   -2614, 14680, 12195,  1706,   371,  1706, -2614,  1173, -2614,   -61,
   -2614, -2614,  2075, 20519,  2031, 12195, -2614, -2614,  1676,   704,
   -2614,  1834,  1620,  1680, -2614, -2614, -2614, -2614, -2614, -2614,
   -2614,   917,  1682, 43610, 43610, 16668, -2614,   716,   165,   261,
   -2614,  1951, 39834,  1620,  2093, -2614, -2614, -2614, -2614,  2060,
    2140,  2038, -2614, -2614, 30115, -2614, -2614,  1723,  1723, -2614,
   -2614,  2117, -2614, -2614, -2614, -2614,   762,  -180, 25252, 43610,
   43610,  1700, -2614, -2614,   156,  2069,   922,   670,  -120,  2043,
   33698, -2614,  2160, 43610,  1491,  1705, -2614, -2614,   272,   272,
   -2614,  1847, -2614,  1848,   257, -2614, 39834, -2614, -2614, 20519,
    -120, -2614,  3364, 16668, 50675,   939, -2614, -2614,  5152,  5152,
    5152, -2614,  2144,  1528, -2614,   943,  2165, -2614, 43610,   -83,
     -43,  1713,  1716, -2614, -2614,   945, -2614, 12195,  1717, -2614,
   -2614, 19573,  1822,   947, -2614, 50675, 43610,   960, 50675,  1718,
    -104,  1719,  7225,  1720, -2614, -2614, -2614, -2614, -2614, 30115,
   30115, 43610,  1784, -2614,  1784,  1773, 43610, 12195, -2614,   967,
    2141,    66,   -36, 30115, -2614, 39834, -2614, 31338, -2614,   704,
   -2614, 31338, 12195, -2614,  1399,  2536,  2184, -2614, -2614, -2614,
   -2614,  1620,   721, -2614, 43610, -2614,  2035, -2614, 43610,  1790,
     209,  1804, -2614, -2614, -2614, -2614,   995,   371,  1376,  1674,
    1664, 39834,  -120,   479, -2614,   670, -2614, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -2614, -2614, -2614, -2614,  2162,  1942,
    2164,  1607,   981,  3364,   986, -2614, 12195,   -42,  1527, 32282,
    1741, -2614,   987, -2614, -2614, -2614, -2614, -2614, 43610,   970,
   -2614, 30115, 43610, -2614, -2614, -2614, 43610,  2117,   992, -2614,
   12195,  1742, 12195, -2614, 14680,  1739, -2614,  2200,  1883, -2614,
   -2614,  -120, -2614, 26287,  1439, 20519, 43610, 43610, 43610, -2614,
    1869,   721,   704,   993, -2614,  1760, -2614, 26354,  1969, -2614,
    2063, -2614,  2003, -2614,  1759, -2614, 12195, -2614,  1832, -2614,
   -2614, -2614,  2218, -2614, -2614,  1770,  1664,  1491,  1674,  1979,
   -2614,  1980,  1775,  1376, -2614,  1266, 15177, 15177,  1781, -2614,
   -2614, 43610, -2614,  1002,  1785,  1009, -2614, -2614, -2614,  1014,
   14680,  1026, -2614, 43610,  1777, 37002, -2614,  2141, -2614, -2614,
   -2614,   238, -2614,   238, 24303,  2003, -2614, 31338, 25252,  2007,
    1759,   122,  1992,   681, -2614, 30115, -2614,  -120, 33698, -2614,
   -2614, -2614, -2614, -2614, 20519,  1439, 16171,  1925,   263, 29433,
   -2614, -2614, -2614, -2614,  1031, -2614,  2276,  1949, -2614, -2614,
    1033, -2614, -2614, -2614, -2614, 43610,  1432,  1432,  -132,  1992,
   -2614, -2614,  2090, -2614, -2614, -2614, -2614, -2614,    68,  2011,
   -2614,  2012,   108,  1664,  1039, -2614,  2257, -2614, -2614, -2614,
   -2614, -2614, -2614,  1803,  1807, -2614, -2614,   238, -2614, -2614,
   -2614, -2614, -2614,   214,   214,  2179, -2614,  1872, -2614, -2614,
   -2614,  1376, 15674, -2614,  2292,  1432,   704, -2614,  2280, -2614,
     259, -2614, -2614,  1439, -2614,  1813, -2614, -2614, -2614, -2614,
   -2614, -2614
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2614, -2614, -2614,  1721, -2614, -2614, -2614,   196, -2614,   879,
   -2614,   173,  -543,   506, -2614, -2614, -2614, -2614, -2614, -2614,
    -397, -2614,  -468,  -477, -2614, -2614,     4,  -779,  1093, -2614,
   -2614, -2614,   954,    11, -2614, -2614, -2614, -2614,    -7,   240,
   -2614,  -471, -1880,  -212, -2614, -2446, -2563, -2614,  -536, -2396,
   -1678, -2614,  -924, -2614,  -614,  -975,  -788,  -985, -2614,   -44,
   -1103, -1779, -2386,  -540, -2614,  -613, -2614,  -372, -1749,  -588,
    -575, -2614, -2281,  -928, -2614,  1369,  -283, -2614,   539, -2614,
   -2103, -2614, -2614,   528, -2614,  -945, -2614, -2614, -1845,   163,
    -528, -2321, -2115,   478,  -623, -2614,  -578,   208, -1733, -2614,
     554, -2614,  -514, -2614,  -490, -2111, -1101,   178, -2614, -2614,
     791, -2614, -2614, -2614, -1100, -2614,  -392, -2614, -2614, -2124,
   -2614,    65, -2312, -1184, -2614, -2614,  1158, -1096, -2459, -2614,
     994, -2614, -2614, -2614, -2614, -2614,   530, -2614,   787, -2614,
     717, -2614, -2614, -2614, -2614, -2614,  -672,   496, -2258, -2614,
     437, -2614, -2614, -2614, -2614,  -102,   204, -2614, -2614, -2614,
   -2614, -2614, -2614, -2614, -1162,    30,    22,   116,   -34,   -29,
     -12,    31,    53,  1437,  1466, -2614, -1276,   607, -2614, -2614,
   -1764,  -605,   -50, -2614,   628, -2569, -2035,  -450,   955,  1442,
    1438,  -373,  -287, -2614,  -457, -2614, -1213, -2614, -2614,   629,
    1012, -1235, -1216, -2614,   339,  -446,  -378, -2614, -2614, -2614,
   -2614, -2614,    87,  -406,   998, -2614,  1456, -2614, -2614, -2614,
   -2614, -1234,   666, -1981,   358, -1895, -1829,   124,   111, -1031,
    -242,    18,   372,  -335, -2614, -2614,  -333, -1706, -2344,  -350,
    -349, -2614, -2614,  -505, -1116,  -684, -2614, -2614,   505,   254,
   -2614, -2614, -2614,   493,   920, -2614, -2614,  1428,  1572, -2614,
    -570,  2045,   -63,  -663,  1171, -1071,  1175, -1056,  -894,  -730,
    1176,  1177, -1230,  3414, -1543,  1194,     6, -2614, -2343, -1628,
   -2614, -2614,   -92, -2614,  -408, -2614,  -405, -2614, -2614, -2614,
    -389, -2613, -2614,  1110,   799, -2614, -2614, -1242, -2614,  3906,
     696, -2614, -1626,  -554,  1201,  -722,  -983, -1129, -2614, -2614,
   -2614, -2614, -2614, -2614, -1599, -1775,  -626,   758, -2614, -2614,
     882, -2614, -2614,  1074,  -590,   974,  -561,  -849,   777, -2614,
    -550,  1114, -2614,   738, -1848, -2614,   404, -2614,   310,  -520,
    1667,  -977,    12, -2614,  3141,   862,  1816,  -845, -2075, -2614,
   -2614,  -476, -2195,  -886, -2614,  -620, -2614,    33,  1532,   385,
   -2614, -2614,   605, -2614, -2614, -2614, -2614,  1263,  -670, -2614,
    1313, -2614, -2614, -2614, -2614, -2104,    -6, -2614, -2614, -2614,
    -531, -2614, -2070
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1721
static const yytype_int16 yytable[] =
{
     475,   590,   796,   993,  1125,   962,  1235,   729,  1464,  1132,
     906,    48,   471,  1171,   641,  1234,  1463,   918,   472,   708,
     535,  1428,    70,   608,  2117,  2066,  1293,  1619,  1291,   929,
      69,    75,  1495,    77,  1496,  1497,  1129,  1523,  1551,  1498,
    1177,   735,  1338,  1439,  1435,  2445,   610,    75,   576,  1475,
     726,   572,  1373,  2444,  1348,  1527,   790,  1215,  2342,  1218,
    2132,  2026,  2134,   611,   736,    58,  2423,  2113,  1658,  1659,
    2296,  2425,  1468,  2085,   992,  2454,   998,   602,  1002,  1247,
    2458,  1966,  1967,  2153,  2154,  2155,  1986,   588,  1579, -1151,
   -1126,   812,  1157,  1158, -1596,  -794,  -794, -1148, -1148,  2060,
   -1607,  -786, -1699, -1699, -1614, -1151,   619,   479, -1710, -1710,
   -1719, -1719, -1717, -1717,  2060, -1607,    71,  1731,  1302,  1169,
    -791,  1209, -1152,  1355,  -791,   544,   544,  2013,  2014,   812,
   -1149, -1149,    71, -1614,  1969, -1152,  -526,   966,   797,  2796,
   -1596,  2175,  2616,   967,   979,    71,  1420,  1133,  1308,  -529,
    -753,   589,  -766,  -781,   531,  2257,   544,   955,   544,  1500,
    1727,   595,  2313,   980,  2646,  1669,  1778,   580,   603,  1669,
    1209,    71,  1352,  1225,   544,  1864,  1225,  2620,   812,  1221,
    1310,   812,   652,  2602,  1948,  2667,  2558,  1781,  2943,  1343,
     919,   609,  1448,  1593,  1302,  1451,  1452,  1177,  2185,  1339,
    2690,   958,  2335,  2542,  -204,  1690,  2212,  2214,  1595,  -204,
    1209,   812,  2722, -1008,   981,  1431,  2247,  1440,     3,     4,
   -1008,  2763,  1209,  1440,  1308,  2621,  1466,  2311,  2597,  -526,
    1706,  2696,  2799,  2752,   604,  2863,  1431,  1707,  1969, -1027,
    2622,  1151,  -529,    25,  1423,  2798, -1027,  2145,   596,   968,
    1157,  1158,  2713,  -471,  1784,   605,  1310,  1302,   605,   951,
    2585,  2765,  2455,   796,   952, -1696, -1696,  2354,  2781,   796,
    1799,  2824,  2957,  2926,   541,  1757,  1169,   951,  1969,    30,
    2555,  2836,  1473,  2707,  1353,  1152,  2690,  1308,  1799,  1474,
    1440,  2915,  2906,  1938,  2907,  1447,  1302,   800,  1939,  2736,
    2322,  1387,  2734,  2343,   982,   633,  2721,   634,   801,  2766,
    2837,   605,  1431,  1501,  2364,  1294,  2748,  1283,  2062,  1310,
      32,  2515,  2778,  1432,  2749,  2519,  2612,  1800,  1129,  1239,
    1691,   953,  2353,    33,  2596,    82,  2224,  2075,  2615,  2964,
    1462,  2618,  2937,  1350,   543,  2110,  1692,  2462,  1940,   953,
    2737,  1693,  2556,   983,   920,  2708,   921,    34,  1310,  2738,
    1785,   984,  1758,  2086,   542,  2226,  2344,  2879,  2955,  1350,
    1596,    35,  2076,   985,  2968,  2350,   544,  2352,  2709,    83,
     954,   680,   796,   796,   583,  2365,  1694,  -647,  2739,  2619,
    2811,     3,     4,  2248,  1425,   614,  2800,   617,  2313,   621,
     969,  2720,  1354,  2764,   986,  1388,  1210,  1469,  1441,  1438,
    1418,  2905,  2543,  1371,  1441,  1260,  2646,  1865,  -526,  2623,
    2456,  2060,  2916,  2060,    25,  2928,  1517,  2228,  2229,  2230,
    2231,  -529,  1478,  2235,  2236,  2237,  2238,  2239,  2240,  2241,
    2242,  2243,  2244,  2767,   912,  1619,  2047,  2048,  2823,   606,
     988,  2475,  2690,   531,   971,  1210,  2706,  1153,  2740,  2547,
      30,   720,  1477,  2505,  2950,  1576,  2366,  1914,  2820,  1438,
    2741,  1344,   989,   597,   653,  1438,  1794,  1340,  2471,  2958,
    -526,  1441,  2911,  1915,   972,  2274,  2275,  2086,  2924,   581,
    2750,   627,   991,  -529,  1851,  1210,  1583,  2894,  2917,   590,
    2944,    32,   630,  2068,  2729,  2559,  1426,  1210,  2161,  2162,
     629,    75,  1416,   631,    33,  2880,  1125,  2092,   723,  2087,
    1464,  1670,  1511,  2423,  1872,  2028,  1852,   795,  2425,  1778,
    1367,  2969,  1695,  2710,  1597,  2656,   591,   792,    34,  1155,
    2660,  2690,  1438,  2662,   610,  1172,  1172,  2881,   480,  2098,
    1467,   973,    35,   475,   475,   623,  1417,  2959,  1211,   624,
     963,   611,  1154,    75,   592,  2603, -1008,  1173,  1173,  2549,
     557,  2146,  1910,  2929,   623, -1151, -1126,   475,   624,  2070,
   -1596,  1174,  1176,  1708,  2960,   923, -1607,  -786,  1276,  -526,
   -1614, -1151, -1027,  1851,  1331,  2118,    71,  1524,  1525,  1744,
    2949, -1607,  -529,    48,  2822,  1520,  -791,  1214, -1152,  1458,
    1984,  1297,  2560,  2647,    70,   941,  1041,   475,  1126, -1614,
    1561, -1152,    69,    75,  1729,    77, -1596,  2477,  -526,  2827,
    -526,   922,  2828,  1459,   720,  2636,  1159,   931,  1163,  -781,
    1440,  -529,  1346,  -529,  1732,  1916,  1918,  1217,    71,   589,
     951,  1229,  1230,  1458,  1229,  1230,   637,    58,  2742,  2546,
     708,  2743,  1828,  1714,  1581,  1326,  1327,  1328,  1329,  1330,
    1331,  1490,  1831,   558,  2060,  1834,  2601,  1459,  2060,  1853,
    2773,  2141,  -204,  -204,  2587,  2588,   913,  1666,  1653,   609,
    1654,   723,  2177,   796,  2142,  2818,  1545,  2121,  2232,  1580,
     593,  1283,  1501,  1581,  1129,  1587,  1542,  2119,    71,  2885,
    2606,  1981,  1982,  1983,  1984,  2548,   945,   979,  1633,  1635,
    1619,  1643,   953,    25,  1294,  2377,  1390,   475,   612,  1125,
    1328,  1329,  1330,  1331,  1431,  -575,   980,   726,  1544,   720,
    -575,  1656,  1491,   651,  1548,  1434,  2578,   790,  1581,  1979,
    1980,  1981,  1982,  1983,  1984,  1553,   914,  1472,  1581,    30,
    1129,  1172,   966,  2615,  2285,  2286,  2287,  2288,   967,   806,
    2579,   954,  1391,  1932,  2478,  2699,  1167,  1168,   711,  1745,
     483,  2261,  1931,  1173,  2195,  1440,   622,   981,   795,  1492,
    2199,   632,  1877,  2423,   795,  1041,   723,  1660,  2425,   635,
      32,   636,  2006,  1715,   532,   647,  2304,  -575,  1291,  1917,
    1919,  1920,   475,    33,   552, -1694, -1694,  1555,  1820,   946,
     571,  2356,   812, -1695, -1695,  1453,   623,  2963,    75,  1302,
     624,  1441,  1827,  1223,  1672,  2233,  1224,    34,   590,   484,
    2305,   475,  1464,   646,   966,  2234,   601,    25,  1357,  2069,
     967,   533,  1899,  1182,  1183,  2521,  -575,    85,   969,  1308,
    1678,   475,   475,   475,  2307,   475,   475,  2156,  1847,  1848,
    1849,  2938,  2939,  1921,   968,  1922,  1791,   982,  1924,  2060,
    1393,  1125,   546,    30,  1390,   916,  1679,  1365,  2060,   475,
    1366,  1310,  1438,  2060,  1937,  2270,  2060,  2018,  1941,  2092,
    1942,   650,  2144,  1826,   938,  2357,  2089,   795,   795,  1779,
    1780,  2147,  2120,    71,  2121,  2060,   720,  2802,  1381,  1382,
    2966,  1386,  1837,  2019,    32,  1802,   983,  1844,  1184,  1185,
    1391,  1440,   654,  2632,   984,   611,   611,    33,   611,  1394,
    1557,  1440,  2122,   475,   483,   812,   985,   475,   475,   655,
    1263,   711,  2806,  1141,  1144,  1145,   968,   941,   475,  2186,
     966,    34,  2190,  2096,  1454,  1896,   967,  -394,   812,  2358,
     733,  2359,  1455,   723,  2649,  1746,  1441,   986,   623,  2650,
    1829,   802,  1349,    25,  2309,  1832,   804,  1368,  1285,  1392,
    1369,  1186,  1187,  1188,  1189,  1190,  1191,  1680,  1041,  1192,
    1193,  2060,  1681,   484,  1871,  1041,    25,  1682,   806,   488,
    1172,   489,  1995,  1465,  1997,  1998,    86,   713,  1172,    30,
    2468,   805,  2705,   988,    87,   969,  1041,   807,  1908,   966,
     796,   911,  1173,  2060,   603,   967,   492,  1438,  1393,  2020,
    1173,   926,    30,   796,  2021,   989,  1174,  -576,  2148,   623,
     917, -1126,  -576,   624,  1176,   933,   711,   486,  2152,    88,
      32,  1184,  1185,   609,   609,   991,   609,  1495,   811,  1496,
    1497,  1969,   968,  1944,  1498,   970, -1721, -1721, -1721,   971,
    2613,   642,   932,    32,  1643,  1996,  1643,  1643,  2858,   966,
    2753,   907,   908,   935,   910,   967,    33,  1394,  2525,  1619,
     604,  2528,   720,   720,  1194,  1195,    89,   969,   936,   972,
     966,    35,  2303,   940,   642,  1549,   967,   643,  1369,  -576,
      34,  2016,  1441,  1887,  2064,  1888,  2002,   943,  1190,  1191,
    1126,  2060,  1441,   939,    35,  1606,  2129,  2375,  2131,   949,
    2488,   968,  1041,  1607,  1608,  1609,  2368,  1683,   720,   944,
     643,  2206,   644,   475,  2040,   964,  2041,   996,  1684,   723,
     723,   971,  2956,    90,  2351,   965,   478,  2060,  -576,  2042,
     978,  2043,   529,   488,  1161,   489,   973,   605,  1575,  2925,
     977,  1576,   556,  1438,  2022,  2171,   569,  2304,  2441,  1130,
     713,   997,  2367,  1438,  2376,  2023,  1170,   491,   995,   645,
     492,   968,  2940,  1190,  1191,   723,  1577,  1740,   999,  1578,
    1217,   948,  1131,   950,  1789,  1196,  1197,  1369,   795, -1697,
   -1697,  2305,   968,   969,  1861,  1364,  1208,  1862,   792, -1698,
   -1698,  2333,   645,   711,  1126,  1198,  2306,  1194,  1195,   720,
    1894,  2197,  2198,  1576,  1134,  2307,  2169,   475,  1897,   475,
    1376,  1369,   475,   475,    75,  1136,  2060,  2970,   973,  1138,
    1900,   627,   475,  1578,   475,   475,   475,   475,   475,   475,
     475,  1906,   630,  1000,  1907,  1419,  2520,   971,  2523,  2308,
     629,    75,  1927,   631,  1945,  1928,  1146,  1369,  1446,   475,
    1952,   475,   969,  1369,    25,   713,   723,   475,   475,   475,
     475,  1126, -1700, -1700,  1139,   475,   475,  1001,  1561,  1470,
     475,  2539,  1194,  1195,   475,   606,  1148,   475,   475,   475,
     475,   475,   475,   475,   475,   475,  1988,  1150,   475,  1369,
      30,  2010,  2135,   475,  1369,  2136,   475,  1161,   475,    71,
    1041,  1155,  1790,  1126,  1975,  2139,   971,  1159,  2140,  1162,
    2635,  2194,   969,  2417,  1369,  1170,  2092,  2255,  2266,  2331,
    1217,  1369,  2332,   475,  1163,  2309,    71,   720, -1701, -1701,
     923,    32,  2336,   969,   973,  2337,   972,  2355,  1165,    25,
    1862,  1802,  2450,   475,    33,  1862,  2469,  2482,  2489,  2470,
    2483,  1578,  2375,  2551,   475,   475,  1862,  1748,  2552,   796,
    1166,  1862,  1835,   798,  2550,   799,   971,  2637,    34,  2700,
    1578,  2091,  2701,  1179,  2728,    30,  1581,  1862,  1301,   711,
     711,  1302,    35,  1842,   723,   909,  1178,   971,  1213,  1676,
    1126,  2755,  1126,  1181,  1578,  2758,  1836,  2770,  2759,  2775,
    1217,  1216,  2776,   973,   714,  2253,  2220,  2203,  1219,  1503,
    -538,  1308,  2779,  2510,  1220,  2776,    32,  1843, -1721,  2794,
   -1702, -1702,  2795,  -538,  2227,   711,  2562,  2510,  -538,    33,
     720,  1041,   713,  2833,   475,   475,  2795,   475,  2834,  2842,
    1222,  1578,  1217,  1310,  2848,  2866,  1240,  2776,  2867,  2249,
    1250,    71,  1251,    34,  2895,  1126,  2254,  2896,  1253,  1581,
    2318,  2898,  1255,   973,  1217,  2754,  2899,    35,  -757,  1369,
   -1703, -1703,   475,   475,  2565,   720,  -538,  -764,  2901,  1258,
    1820,  1369,  2426,  2932,   973,  2936,  2776,   723,  2784,  1260,
    1878,  2951,  1552,  2467,  2795,  -538, -1704, -1704, -1721, -1721,
   -1721,  1259,  1979,  1980,  1981,  1982,  1983,  1984, -1705, -1705,
    1261,  2440,  1262,  2015,    35,   795,   711, -1706, -1706, -1707,
   -1707, -1708, -1708, -1709, -1709, -1711, -1711,  1264,   795,  -647,
    1041,  2567,   723, -1712, -1712, -1713, -1713,   475, -1714, -1714,
    2583,  -648,   475, -1721,  -538,  -754, -1715, -1715, -1716, -1716,
   -1718, -1718,   590,  -538, -1720, -1720,  1480,  1481,  -755, -1721,
    -625,  -625,  1192,  1193, -1721,  1610,  1611,  1612,  1265,  1613,
    1614,  1615,  1616,  1617,  1618,  1194,  1195,   714,   475,   475,
     475,  -629,  -629,   475,    71,  1266,  2092,  -628,  -628,  2726,
    1361,  1363,   475,   475,   475,   475,  2420,  1268,  1269, -1721,
    1270,   590,   475,  1271,  -758,  1272,   475,  -756,  1273,   475,
    1274,  1275,  1276,  1725,  1280,  1292,  1238,  1295,   713,   713,
    1342,  1336,  1238,  1343,   475,   475,  2808,  1359,  1344,   475,
    1372,  2570,  1379,  1380,   952,  1735,   954,  1738,   501,  1412,
    1414,  1436,   530,   475,   711,  1437,   475,  1438,   475,   548,
    1443,  2206,  1444,  1445,  1319,  2466,  1457,  1449,  1456,  1461,
     587,   587,  1471,  1476,   713,  1301,  1484,  1488,  1302,   475,
    2592,  2593,   590,  1483,  2571,  1494,  1493,  1501,  1502,  1504,
    1507,   475,   714,  1508,  1783,  1171,  1509,  1518,  1129,  2572,
    1519,  -538,   812,  2058,  1526,  1528,   475,  1529,  1308,   472,
    1296,  1534,  1285,  1581,  1538, -1721,  1535,  1539,  2058,  1299,
     475,  1540,   627,   615,   472,  1541,  1574,  1583,  1588,  1302,
    1648,  1369,  1347,   630,  1650,  1655,  1652,   475,   475,  1668,
    1310,   629,    75,  1358,   631,  1238,  1238,  1686,  2537,  1675,
    1689,  1687,  1710,  1711,  1727, -1721,   475,   711,  1742,  1734,
    1741,  1285,  1749,   604,   623,   713,  1756,   935,   624,  1768,
    1770,  1868,  1869,  1126,  1126,  1126,  1769,  1773,  1771,  1676,
    2417,  1772,  1792,  1796,  1797,  1798,   605,  1863,  1859,  1867,
    1875,  1873,   473,   720,  1874,  2035,  2573,   502,  1876,  1890,
    1892,   502,   711,  2574,  1898,  1893,  1902,   547,   502,   555,
    2025,  1901,   555,  2052,  1041,   555,   578,  1926,  1903,   502,
     502,  1904,  1905,  1923,  1934,  1912,  1913,    71,  2052,  1925,
    1954,  1946,   589,  1957,  1955,  2012,  2017,  1956,  2033,  1958,
   -1721,   555,  1959,  1961,  2591,  1962,  1965,  1987,  1993,  2000,
     723,  2024,  2038,  2034,  2036, -1721, -1721,  2037,   720,  2062,
    2072, -1721,  1326,  1327,  1328,  1329,  1330,  1331,  2088,   714,
    2074,   578,   502,   578,   578,   578,   720,  2081,  2094,  -630,
    -631,   811,  2099,  2100,  1969,  2102,  2303,  2103,  2106,  1970,
    1971,  1972,  1126,   713,   795,  2104, -1721,  2108,  2109,  2112,
    2128,   720,  2130,  2115,  2143,  2149,  2150,  1464,   720,   796,
    2151,  2159,   475,  2157,  2180,   723,  2158,  2160,  1878,  2191,
    2168,   475,   716,  2183,   475,  2187,  2188,   475,  2184,  2192,
    2201,   720,  2202,   723,   475,   475,   475,   475,  2211,   590,
     475,   475,   475,   475,   475,   475,   475,   475,   475,   475,
    2204,  1319,  2219,   475,   475,  1990,  2280,  1969,   723,  1989,
    2269,  2304,  2250,   475,  2251,   723,  2268,   475,  2252,  2281,
     590,  2272,  2045,  2294,  2316,  2302,   475,  2328,  2320,   475,
    2325,   475,  2326,  2330,  2334,  2349,  2345,   590,   723,   475,
    2341,  2363,   475,   475,  2361,  2305,   713,   475,   475,  2379,
    2044,  2437,  2438,  2439,  2443,  1591,  2452,   544,  2757,  2460,
    2306,  2463,    71,   475,  2476,   475,  2448,  2453,  2465,  2307,
    2449,  2473,  1862,  2480,  2511,  2058,   475,  2058,  2479,  2517,
    2481,   472,  2516,   472,  2524,  2530,   475,  2531,  2532,  2557,
    2497,   713, -1721,  2553,  2582,  2507,  2514,  2805,   720,  2529,
    2417,  2508,   475,  2308,  2581,   714,   714,  2703, -1148,  2812,
    2534,  2545,  2586,  2420, -1694, -1695,   717,  1973,  2599, -1696,
    2600,  2608, -1697, -1698,  2657, -1699, -1700, -1701, -1702,  2609,
   -1703, -1704, -1705,  2598, -1706,  2617, -1707,  2624,  1974,  1285,
    2626, -1708,  2630, -1709, -1711,   716,  1602,  2607,  2762, -1712,
    1126,   714,  2610, -1713,  1126,  2424,  1126,   720,  2633,  2629,
     711,  1182,  1183, -1714,  2642, -1715,  2762, -1716,  1405, -1717,
    1285, -1718, -1719, -1720, -1149,  2661,  2634,  2648,  2681,  2666,
    2777,  2686,  2692,  2777,  2695,  2292,   649,  2295,  2694,  2309,
    2711,  2697, -1721,  2702,  2714,  2715,  2716,  2167,  2865,  1326,
    1327,  1328,  1329,  1330,  1331,  2176,  2178,  1975,  2717,  2182,
    2718,  2727,  2725,  2731,   723,   732,  2732,  2735,  2756,  2746,
    2747,  2760,  2835,  2193,  2768,   711,   720,  2769,  2772,  2780,
    2782,   475,  2791,  2461,  2796,  2784,  1184,  1185,  2788,  1733,
    2810,  2814,   714,   711,  2816,  2819,  2849,  2830,  2851,  2829,
     716,  2831,  2841,  2850,  2853,   811,  2854,  2855,  1969,  2864,
    2868,  2710,  2815,  1970,  1971,  1972,  2871,  2805,   711,  2870,
    2873,   587,  2845,  2876,  2877,   711,  2658,   475,   475,  2922,
    2263,  2878,   475,   723,  2882,  2883,  2884,   475,  2282,   717,
     475,   475,  2912,  2893,  2918,   475,  2927,  2897,   711,  1186,
    1187,  1188,  1189,  1190,  1191,  2933,  2934,  1192,  1193,  2942,
    2952,  1182,  1183,  2945,  2947,  2953,   475,   578,  2954,  2943,
     475,  2965,  2967,   639,  2944,  2971,   640,    71,  2058,  2382,
    2126,   578,  2058,   937,   472,   502,   720,  1554,   472,  2378,
    2860,  1737,   475,  1822,  2859,  2541,  2338,  2685,  2908,  2589,
    2914,  2962,  2809,  2948,  2941,  1427,  2745,  2111,  2133,  2910,
    2165,  2946,   640,   502,   502,  1631,   720,  2459,  2383,  2107,
     714,  2909,  2538,  2540,  2451,  1126,  2289,  2290,  2291,  2832,
    1736,  1943,  2166,  2420,   475,  2205,  1184,  1185,  2631,  1370,
    2442,  1351,  1788,   723,   717,   904,   904,   555,   555,   713,
     555,  1976,  1977,  1978,  2090,  1979,  1980,  1981,  1982,  1983,
    1984,   578,  1194,  1195,  1408,   711,  2844,  2790,  2904,  1409,
     502,  1765,  2101,  2424,  2900,  2324,  2852,   716,  2071,  2297,
     578,  2535,  2346,   578,  1787,  1413,   720,  2506,  2052,  2522,
    2774,  2293,  2052,  1238,  2840,  2839,  2846,  1936,  2847,  1186,
    1187,  1188,  1189,  1190,  1191,  1592,  1238,  1192,  1193,  1594,
    1598,  1599,  1974,  2684,   713,  2902,    71,    71,  2892,  2903,
    1716,  2031,  2008,   714,   711,  2093,  1582,  1858,  1726,   578,
     578,   578,   713,  1631,   795,  1628,  1949,  2029,  2065,  2323,
     475,  1374,  2339,   723,  2614,  2170,  1543,   475,  1522,     0,
       0,  2447,     0,     0,     0,   475,   475,   713,     0,   475,
       0,     0,     0,     0,   713,     0,     0,     0,   714,     0,
       0,   475,     0,  1196,  1197,     0,     0,     0,     0,     0,
     475,  1975,     0,  2058,  1552,   475,     0,   713,   475,   472,
       0,     0,  2058,   711,     0,   475,   475,  2058,   472,     0,
    2058,     0,     0,   472,     0,   720,   472,   475,     0,   475,
       0,     0,  1194,  1195,   811,     0,     0,  1969,     0,  2058,
       0,   717,  1970,  1971,  1972,   472,     0,     0,     0,   475,
       0,     0,     0,     0,     0,     0,     0,     0,    71,   719,
       0,   720,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1767,     0,     0,     0,     0,     0,     0,
       0,     0,  2424,   716,   716,  2501,  2502,  2503,  2504,   587,
     979,   811,   720,     0,  1969,   720,     0,     0,     0,  1970,
    1971,  1972,     0,     0,     0,  1562,     0,     0,     0,   980,
       0,     0,  1252,   475,     0,     0,  2264,   475,   723,     0,
    2730,     0,  2052,   711,   713,  2058,     0,  2052,   590,   716,
    2052,   472,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   475,  2614,  1196,  1197,   475,     0,     0,     0,   723,
    1563,     0,   723,   711,     0,     0,   475,  2058,     0,     0,
     981,     0,     0,   472,     0,     0,     0,  2138,     0,     0,
       0,   475,     0,     0,     0,     0,  1564,     0,     0,  1290,
       0,  1126,     0,   713,     0,  1126,   475,     0,  1631,  1631,
       0,     0,     0,  1631,  1565,  1976,  1977,  1978,  1566,  1979,
    1980,  1981,  1982,  1983,  1984,     0,     0,     0,     0,     0,
       0,     0,  2164,     0,    71,     0,     0,     0,     0,  1567,
     716,   578,  1568,   711,     0,  2172,  2371,   717,   717,     0,
       0,     0,   719,     0,  1631,  1631,    71,  1569,   502,   502,
     475,  1974,     0,   475,  2826,   578,   578,  1378,     0,     0,
     982,     0,   713,     0,     0,  2058,     0,     0,     0,     0,
       0,   472,     0,     0,   475,     0,   475,  2052,   475,     0,
       0,   578,  1430,   717,     0,     0,     0,     0,  1285,   475,
       0,     0,  1238,     0,   578,     0,     0,  2209,     0,  2210,
       0,  2058,     0,  2215,  2216,   720,   714,   472,  1974,   983,
     475,   578,     0,  2856,     0,   578,     0,   984,  1628,  1628,
    1975,     0,     0,  1628,     0,     0,     0,     0,     0,   985,
     475,   475,     0,     0,     0,     0,     0,  1570,     0,     0,
       0,     0,     0,     0,   475,  1571,     0,   719,    71,     0,
       0,     0,   711,     0,     0,     0,     0,     0,   716,     0,
     986,  1126,  2424,     0,  1628,  1628,     0,     0,     0,     0,
       0,   714,   713,     0,   717,     0,     0,  1975,   475,     0,
     475,     0,  2712,     0,  1546,     0,  1547,  1572,   711,   714,
    2058,     0,     0,     0,     0,     0,   472,     0,     0,  2923,
       0,     0,   713,     0,     0,     0,   988,    71,     0,     0,
       0,     0,     0,     0,   714,     0,     0,     0,     0,   711,
       0,   714,   711,     0,     0,     0,     0,     0,   989,     0,
       0,     0,     0,     0,     0,     0,  2751,     0,     0,     0,
       0,     0,     0,     0,   714,     0,   475,  1487,   991,     0,
       0,     0,     0,     0,     0,   578,     0,     0,     0,     0,
       0,   716,     0,  1515,     0,     0,     0,     0,     0,     0,
       0,     0,   713,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    71,  1533,     0,     0,     0,     0,     0,
       0,     0,   717,  2422,     0,  2801,   716,     0,     0,     0,
       0,     0,     0,     0,  1976,  1977,  1978,     0,  1979,  1980,
    1981,  1982,  1983,  1984,   719,     0,     0,     0,  2164,   640,
     640,     0,   502,   502,     0,   502,   640,     0,   578,     0,
       0,  2825,     0,     0,  1631,  1631,  1631,  1631,     0,     0,
    1631,  1631,  1631,  1631,  1631,  1631,  1631,  1631,  1631,  1631,
       0,   714,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1976,  1977,  1978,     0,  1979,  1980,  1981,  1982,  1983,
    1984,     0,     0,     0,   482,  1621,     0,     0,   483,  1795,
       0,   713,     0,     0,     0,     0,  1647,     0,     0,  1803,
       0,  1806,  1631,  1631,  1817,   717,     0,     0,     0,     0,
    1821,  -394,  1823,     0,     0,     0,     0,     0,     0,     0,
     714,     0,   711,     0,  1830,     0,   640,   713,     0,  1833,
       0,     0,     0,  1838,  1839,  1840,  1841,     0,  1845,  1846,
       0,     0,     0,     0,     0,     0,     0,   484,     0,     0,
     717,     0,     0,     0,   485,     0,     0,     0,   713,   578,
     904,   713,     0,     0,  1628,  1628,  1628,  1628,     0,     0,
    1628,  1628,  1628,  1628,  1628,  1628,  1628,  1628,  1628,  1628,
       0,   578,     0,   578,     0,     0,     0,  2536,   811,   714,
       0,  1969,     0,  1750,     0,  1755,  1970,  1971,  1972,     0,
       0,   486,     0,     0,     0,     0,     0,     0,     0,     0,
     719,   719,     0,  2491,     0,     0,     0,     0,     0,     0,
       0,     0,  1628,  1628,     0,     0,     0,     0,     0,     0,
     578,     0,     0,     0,     0,     0,     0,  1430,   502,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   502,  1804,
     502,  1808,     0,   502,     0,     0,   719,     0,     0,   502,
       0,   502,     0,     0,     0,     0,     0,     0,     0,     0,
     487,     0,   640,   502,     0,     0,     0,   640,   502,     0,
       0,     0,   502,   502,   502,   502,     0,   502,   502,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   714,
       0,     0,     0,     0,     0,     0,     0,   578,   578,  1870,
       0,  2611,     0,     0,   716,     0,     0,   488,     0,   489,
    2562,     0,     0,     0,     0,  1886,  2563,     0,     0,   714,
       0,     0,  1238,     0,     0,   490,     0,     0,     0,  2564,
       0,   491,     0,     0,   492,   -39,     0,   719,     0,     0,
       0,     0,     0,     0,  1301,     0,     0,  1302,     0,     0,
       0,   713,     0,     0,     1,     0,     0,     0,  2565,     0,
    2566,     0,   811,     0,     2,  1969,     3,     4,     0,   716,
    1970,  1971,  1972,     0,     0,     0,     0,  1308,     0,     0,
       0,     0,     5,     0, -1721,  1974,  2683,   716,     0,   714,
       0,     6,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     7,     0,     0,     0,     0,     0,  1310,
       0,     0,   716,     0,     8,  2567,     0,     0,     0,   716,
       0,     0,     0,     0,  1301,     0,     9,  1302,    10,     0,
       0,     0,  1303,  1304,  1305,     0,     0,     0,     0,     0,
       0,     0,   716,     0,  2568,     0,    11,     0,   717,     0,
    2422,     0,   502,     0,  1975,     0,     0,  1308,     0,  1290,
      12,     0,     0,     0,  1309,   719,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,    14,     0,     0,  2273,
       0,     0,     0,     0,    15,     0,    16,    17,     0,  1310,
       0,     0,     0,  1621,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,   714, -1721,
    2569,     0,     0,   717,     0,  2570,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1721,   578,     0,    19,     0,
   -1721,   717,     0,  2061,  2179,     0,     0,     0,     0,     0,
    1631,     0,     0,     0,   714,     0,     0,     0,  2061,     0,
       0,     0,  2080,     0,     0,  2083,   717,  1755,  2571,   716,
       0,     0,     0,   717,     0, -1721,     0,    20,   719, -1721,
       0,     0,     0,  2572,     0,   714,     0,     0,   714,  2821,
       0,     0,     0,     0,     0,     0,   717,     0,     0,  1311,
       0,     0,     0,  1301,     0,     0,  1302,     0,     0,     0,
       0,     0,     0,     0,     0,  1312,  1487,     0,     0,     0,
    1313,     0,     0,   719,     0,     0,     0,     0,   716,     0,
    1319,     0,     0,     0,     0,     0,  1308,     0,     0,  1631,
       0, -1721, -1721, -1721,     0,     0,     0,     0,  1975,     0,
       0,     0,     0,     0,    21,  1316,     0,    22,  1976,  1977,
    1978,     0,  1979,  1980,  1981,  1982,  1983,  1984,  1310,     0,
    1628,     0,     0,     0,     0,     0,     0,     0,  1487,     0,
    2573,     0,     0,   578,     0,    23,     0,  2574,     0,     0,
    1487,   578,   578,   502,    24,   578, -1721,   716,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1631,    25,   578,
    1319,     0,     0,   717,     0,    26,     0,  1301,     0,    27,
    1302, -1721,     0,  2200,     0, -1721, -1721, -1721,     0,    28,
    2422,     0,     0,     0,     0,     0,     0,     0,  2276,   640,
      29,     0,     0,     0,    30,     0,     0,     0,     0,     0,
    1308,     0,     0,     0,     0,  1487,  1487,  1309,     0,  1628,
       0,     0,     0,     0,     0,     0,     0,     0, -1721,     0,
       0,  2347,   717,     0,     0,     0,     0,     0,  1621,     0,
      31,     0,  1310,     0, -1721,    32,     0,     0,   714, -1721,
       0,     0,     0,     0,     0,  2380,     0,     0,    33,     0,
       0,  1321,     0,     0,     0,     0,     0,   716,     0,     0,
    2427,  2428,  2429,  2430,  2431,  2432,  2433,  2434,  2435,  2436,
       0, -1721,    34,     0, -1721,     0,     0,  1628,  1326,  1327,
    1328,  1329,  1330,  1331,     0,     0,    35,   716,     0,   -39,
       0,   717,  1976,  1977,  1978,     0,  1979,  1980,  1981,  1982,
    1983,  1984,     0,     0,  2284,     0,     0,     0,     0,     0,
       0,     0,   578,   578,   578,   473,     0,  2061,  2301,     0,
       0,     0,  2301,  2315,     0,     0,     0,     0,     0,  1319,
       0,     0,  1311,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1312,     0,
       0,  1322,  1755,  1313,  1323,  1324,  1325,   716,  1326,  1327,
    1328,  1329,  1330,  1331,     0,     0,     0,     0,   578,     0,
     502,     0,     0,     0,  1487,  1430,  1487,     0,  1515,     0,
       0,   719,     0,     0,     0,  1237,     0,     0,  1316,     0,
       0,  1237,     0,     0,   502,     0,  2381,     0,     0,     0,
       0,   717,     0,     0,     0,     0,     0,     0,     0,   502,
     502,   502,   502,   502,   502,   502,   502,   502,   502,     0,
   -1721,     0,     0,   888,   888,     0,     0,     0,     0,     0,
       0,   717,     0,     0,  1430,     0,     0,   578,     0,     0,
       0,     0,     0,  1319,     0,     0,   719,     0,     0,     0,
    1430,     0,     0,     0,     0,     0,     0,     0,  1515,     0,
       0,     0,     0,     0,   719,     0,     0,     0,     0,     0,
     578,     0,     0,     0,     0,     0,   716,  1487,  1298,     0,
       0,     0,     0,     0,     0,     0,  1036,  1043,     0,   719,
       0,     0,     0,     0,     0,     0,   719,     0,     0,     0,
       0,   717,  1237,     0,  1237,  1237,     0,     0,     0,     0,
       0,     0,   716,     0,     0,     0,     0, -1499,     0,   719,
   -1721,     0,     0,     0,     0,  2484,     0,  1326,  1327,  1328,
    1329,  1330,  1331,     0,  1321,     0,     0,     0,     0,     0,
       0,     0,     0,   716,     0,     0,   716,     0,  2500,     0,
       0,   578,   578,   578,   578,     0,     0,     0,  2301,  2315,
       0,  2301,     0,     0,  2509,     0,     0,     0,  2061,     0,
       0,  1237,  2061,     0,  1237,  1237,     0,     0,  2527,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   904,     0,     0,     0,  2080,     0,
       0,     0,     0,  1755,     0,     0,     0,  1621,     0,     0,
   -1499,     0,     0,     0,     0,  1430,     0,     0,     0,     0,
     717,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,   719, -1721, -1721, -1721,
    2590,  1326,  1327,  1328,  1329,  1330,  1331,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   717,     0,     0,     0,
       0,     0, -1499,     0,     0,  1036,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1499,     0,     0,     0,     0,
   -1499,  2704,  1256,     0,     0, -1499,     0,   717,     0,     0,
     717,     0,     0,     0, -1499,   719,     0,     0, -1499,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1487,
       0,  1267,     0,     0,     0,     0,  2723,  2724,     0,  1886,
       0,     0,     0,     0,     0,     0,     0,     0, -1499,  2628,
    2733,  1277,  1278,  1279,     0,     0,  1286,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   716, -1499,     0,     0,
       0,     0,     0,   811,  1521,     0,  1969,     0,     0,  1341,
       0,  1970,  1971,  1972,   719,  1530,     0,  1531,     0,     0,
       0,     0,  1536,   473,  2301,     0,     0,  2654,  2492,     0,
     502,     0,  2061,     0,     0,     0,     0,  2061,     0,  1537,
    2061,     0,  2665,     0,     0,  2668, -1499,     0,     0, -1499,
       0,     0,     0,  2792,     0, -1499,     0,     0,     0,  2691,
       0,     0,     0,  1385,     0,     0,     0,  1399,  1404,     0,
    1556,  1558,     0,     0,     0,     0,     0,     0,     0,   640,
     502,  2813,     0,     0,     0,     0,     0,  1301,   578,     0,
    1302,     0,     0,     0,     0,  1303,  1304,  1305,     0,     0,
       0,     0,  1589,  1590,     0,     0,  1603,  1604,     0,     0,
       0, -1499,  1306,     0,     0,   502,   502,     0,  1036,     0,
    1308,     0,     0,     0,   719,  1036,  1430,  1309,     0,   502,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     717,     0,   578,     0,     0,  2691,  1036,     0,     0,     0,
       0,     0,  1310,     0,   719,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   502,     0,  2045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2061,     0,     0,
       0,     0,  2668,     0, -1501,     0,     0,     0,     0,     0,
       0,     0,     0, -1499,     0,     0,     0,  2787,     0,     0,
       0, -1499,   502,     0,     0,     0,     0,     0,     0,     0,
    1974,   578,     0,     0,     0,     0,     0, -1499,     0, -1499,
   -1499,     0,     0,     0,   719,     0,     0,     0,     0,     0,
     502,     0,     0,     0,   640,     0,     0,     0,     0,     0,
       0,  1777,  1777,     0,     0,     0,     0,   578,     0,     0,
       0,     0,  1311,     0,     0,     0, -1499,     0,     0, -1499,
   -1499, -1499,  1036,     0,     0,     0,     0,     0,  1312,     0,
       0,     0,     0,  1313,     0,   473,     0, -1501,     0,  1975,
       0,     0,     0,     0,  2843,     0,     0,     0,   502,     0,
       0,  1237,  2665,     0,  1314,  1315,     0,     0,     0,     0,
       0,  1237,     0,     0,  1237,     0,     0,     0,  1316,     0,
       0,  2691,   640,   640,   640,     0,     0,     0,     0,     0,
    1301,     0,     0,  1302,     0,     0,     0,     0,     0, -1501,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1501,   719,     0,     0,  1317, -1501,     0,  1318,
       0,     0, -1501,  1308,     0,     0,     0,  2665,     0, -1515,
   -1721, -1501,     0,  1319,     0, -1501,  1320,     0,     0,  2787,
       0,  2654,  1586,     0,     0,  1909,  1911,     0,     0,   719,
    1755,     0,  1605,     0,  1622,  1310,     0,  1634,  1637,  1642,
    1645,     0,     0,     0,  1430, -1501,     0,     0,     0,     0,
    2691,     0,  1237,     0,     0,     0,     0,     0,     0,     0,
     719,  1657,     0,   719, -1501,  1237,     0,  1661,  1662,  1663,
    1664,   640,     0,     0,     0,  1673,  1674,     0,     0,     0,
    1685,     0,     0,     0,  1688,     0,     0,  1696,  1697,  1698,
    1699,  1700,  1701,  1702,  1703,  1704,     0,     0,  1705,     0,
       0,     0, -1515,  1713,  1321,  2277,  1717,     0,   888,     0,
    1036,     0,     0, -1501,     0,  1301, -1501,     0,  1302,     0,
       0,     0, -1501,  1976,  1977,  1978,     0,  1979,  1980,  1981,
    1982,  1983,  1984,  1739,     0, -1721,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,   966,  1308,     0,
       0, -1721,     0,   967, -1515, -1721, -1721,     0,     0,     0,
     979,     0,     0,     0,  1278,  1279,     0, -1515,     0,     0,
       0,     0, -1515,     0,     0,     0,     0, -1515, -1501,   980,
    1310,     0,     0,     0,  1334,     0, -1515,     0,     0,     0,
   -1515, -1721,  1301,     0,     0,  1302,     0,     0,     0,     0,
    1303,  1304,  1305,     0,  1322,     0,     0,  1323,  1324,  1325,
       0,  1326,  1327,  1328,  1329,  1330,  1331,  1306,     0,     0,
   -1515,     0,     0,  2067,  1960,  1308,     0,     0,     0,     0,
     981,     0,  1309,  2045,     0,     0,     0,     0,     0, -1515,
       0,  1036,     0,     0,  1855,  1856,  1319,  1857,     0,     0,
    2495,     0,     0,     0,  2097,  2097,     0,  1310,     0,   968,
   -1501,     0,     0,   719,     0,     0,     0,     0, -1501,  1301,
       0,     0,  1302,     0,     0,     0,     0,  1303,  1304,  1305,
   -1721,     0,  1895,     0, -1501,     0, -1501, -1501, -1515,     0,
       0, -1515,  1334,     0,  1306,     0, -1721, -1515,  1757,  1334,
       0, -1721,  1308,     0,     0,     0,     0,     0,     0,  1309,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0, -1501,     0,     0, -1501, -1501, -1501,     0,
       0,     0,     0,     0,  1310,     0, -1721, -1721,     0,     0,
    1036,     0,     0,     0,     0,     0,     0,  1947,     0,     0,
       0,     0,  1953, -1515,     0,     0,     0,  1311,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   983,
       0,     0,     0,  1312,     0,     0,     0,   984,  1313,     0,
       0,     0,     0,     0,     0,  1758,     0,     0,     0,   985,
    1968,  1319,  2196,     0,     0,     0,     0,     0,     0,  1314,
    1315,     0,  1642,     0,  1642,  1642,     0,     0,  2045,     0,
     969,     0,  2004,  1316,     0,     0,  2007,     0,     0,  2009,
     986,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1311, -1515,     0, -1721,     0,     0,
       0,     0,     0, -1515,  1326,  1327,  1328,  1329,  1330,  1331,
    1312,  1317,     0,  2027,  1318,  1313,  2030,     0,  2032, -1515,
     987, -1515, -1515,     0,   971,     0,   988,     0,  1319,     0,
       0,  1320,     0,     0,     0,     0,  1314,  1315,     0,     0,
       0,     0, -1721,     0,     0,     0,     0,     0,   989,     0,
    1316,     0,     0,     0,   990,     0,     0,     0, -1515,     0,
       0, -1515, -1515, -1515,     0,     0,     0,     0,   991,     0,
    1301,     0,  1334,  1302,     0,     0,     0,     0,     0,     0,
    1385,     0,     0,  1334,     0,     0,     0,  1629,  1317,     0,
       0,  1318,     0,  1334,  1334,  1334,     0,  1404,  1703,  1300,
       0,   979,  1334,  1308,  1301,  1319,     0,  1302,  1320,     0,
   -1721,     0,  1303,  1304,  1305,     0,  2105,     0,     0,  1321,
     980,   973,     0,     0,     0,     0,     0,     0,     0,  1306,
       0,     0,  1307,     0,     0,  1310,     0,  1308,     0,     0,
       0,     0, -1721,     0,  1309,     0,     0,     0,     0,  1326,
    1327,  1328,  1329,  1330,  1331,     0,     0,  1334,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1310,
       0,   981,  2369,     0,  1036,     0,     0,     0,     0,     0,
    2370,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1237,     0,     0,     0,  1321,     0,     0,     0,
       0,  1334,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,     0,     0,  1322,
    1334,     0,  1323,  1324,  1325,     0,  1326,  1327,  1328,  1329,
    1330,  1331,     0,     0,     0, -1721,  1651,  2371,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1721,     0,     0,     0,  1759, -1721,     0,     0,     0,
       0,   982,     0,     0,     0,     0,     0,     0,     0,  1311,
       0,     0,  2218,     0,     0,     0,     0,     0,     0,     0,
       0,  2222,     0,     0,  2223,  1312,     0,  2225,     0,     0,
    1313, -1721,     0,     0,     0,     0,  1322,     0,     0,  1323,
    1324,  1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,     0,
     983,  1314,  1315,  2245,  2246,     0,     0,     0,   984,     0,
       0,     0,     0,     0,     0,  1316,     0,  2256,     0,     0,
     985,     0,  2372,     0,     0,     0,  2262,     0,     0,  2265,
       0,  2267,     0,     0,     0,     0,  1319,     0,     0,  2271,
       0,     0,     0,     0,     0,     0,     0,  2278,  2279,     0,
       0,   986,     0,  1317,     0,     0,  1318,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1319,     0,     0,  1320,     0,     0,  2319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2327,     0,     0,     0,
       0,     0,  1334,     0,     0,     0,     0,   988,     0,     0,
       0,     0,  2340,     0,     0,     0,     0,     0,     0,  1237,
       0,  1334,     0,     0,  1237,     0,     0,     0,     0,   989,
       0,     0,     0,     0,     0,     0,     0, -1721,  1334,     0,
    1629,  1629,     0,  1985,     0,  1629,     0,     0,     0,   991,
    1334,  2373,     0,  1334,  2374,     0,     0,     0,  1334,     0,
    1301,  1334,     0,  1302,     0,     0,  1556,  1558,  1303,  1304,
    1305,  1321,     0,  1334,     0,     0,     0,  1334,  1334,  1334,
    1334,     0,     0,     0,     0,  1306,  1629,  1629,  2259,  1334,
    1334,     0,     0,  1308,     0,     0,     0,     0,     0,  1301,
    1309,  1334,  1302,     0,  1334,     0,     0,  1303,  1304,  1305,
       0,     0,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,     0,     0,  1306,  1310,     0,     0,     0,  1334,
       0,     0,  1308,  1334,     0,     0,     0, -1721,     0,  1309,
       0,  2472,     0,     0,  1326,  1327,  1328,  1329,  1330,  1331,
       0,     0,     0,     0,     0,  1334,  1438,     0,     0,     0,
       0,     0,     0,     0,  1310,     0,     0,     0,     0,     0,
       0,  1322,     0,     0,  1323,  1324,  1325,     0,  1326,  1327,
    1328,  1329,  1330,  1331,     0,     0,     0,  2485,  2486,     0,
       0,     0,  2487,     0,     0,     0,     0,  2490,     0,     0,
    2493,  2494,     0,     0,     0,  2498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1311,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1556,  1558,
       0,  1312,     0,     0,     0,     0,  1313,     0,     0,  1237,
       0,     0,   888,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1311,     0,     0,  1314,  1315,     0,
       0,  1334,  1334,  1334,     0,     0,     0,     0,     0,     0,
    1312,  1316,     0,     0,     0,  1313,     0,     0,     0,     0,
       0,     0,     0,     0,  2584,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1314,  1315,     0,     0,
       0,  1334,     0,     0,     0,     0,     0,     0,     0,  1317,
    1316,     0,  1318,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1319,     0,     0,  1320,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1317,     0,
       0,  1318,     0,  1334,     0,     0,     0,     0,     0,  1334,
       0,     0,     0,     0,     0,  1319,     0,     0,  1320,     0,
       0,     0,  1985,  1985,  1334,     0,  1629,  1629,  1629,  1629,
       0,     0,  1629,  1629,  1629,  1629,  1629,  1629,  1629,  1629,
    1629,  1629,  1985,     0,     0,     0,     0,  2004,     0,     0,
       0,     0,     0,     0,     0,  2638,  2639,     0,     0,  2640,
    1334,     0,     0,  1334,     0,  1334,     0,  1321,     0,  1985,
    1985,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1334,  1629,  1629,  1334,     0,  1334,     0,
       0,     0,     0,     0,     0,  2679,  2680,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1321,     0,     0,  2693,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1237,
       0,  1334,     0,     0,     0,     0,     0,  1322,     0,     0,
    1323,  1324,  1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,
       0,     0,     0,     0,  1651,     0,     0,     0,     0,     0,
       0,     0,   504,     0,     0,  1301,     0,     0,  1302,     0,
       0,     0,     0,  1303,  1304,  1305,  1322,     0,     0,  1323,
    1324,  1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,     0,
    1306,  2771,     0,  2011,     0,     0,     0,     0,  1308,     0,
       0,     0,     0,     0,     0,  1309,  1286,     0,     0,     0,
       0,     0,     0,     0,     0,   505,     0,     0,     0,     0,
       0,  2793,     0,     0,     0,     0,     0,     0,     0,     0,
    1310,   506,     0,     0,     0,     0,  2807,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,     0,  1334,  1334,
       0,  1334,     0,     0,  1985,  1985,  1985,  1985,     0,     0,
       0,  1985,  1985,  1985,  1985,  1985,  1985,  1985,  1985,  1985,
    1985,  1334,  1334,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,   507,     0,     0,  1334,     0,
       0,  1334,     0,  1334,   508,     0,     0,  1334,     0,     0,
    1985,  1985,     0,     0,  1334,  1334,   509,     0,     0,     0,
       0,   510,     0,     0,  1301,     0,     0,  1302,  2679,     0,
       0,     0,  1303,  1304,  1305,     0,     0,     0,     0,     0,
    1311,     0,     0,     0,     0,     0,     0,     0,   511,  1306,
       0,     0,     0,     0,     0,  1334,  1312,  1308,     0,     0,
    2875,  1313,     0,  1334,  1309,   966,     0,     0,     0,     0,
       0,   967,     0,     0,     0,     0,  1334,     0,   979,     0,
    2889,  2889,  1314,  1315,     0,     0,     0,     0,     0,  1310,
       0,   512,     0,     0,  2679,   513,  1316,   980,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2889,     0,     0,     0,  1317,     0,     0,  1318,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   981,     0,
       0,  1319,     0,     0,  1320,     0,     0,     0,   514,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   515,     0,     0,     0,     0,   968,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1311,
       0,     0,     0,     0,     0,     0,  2889,     0,     0,     0,
       0,     0,     0,     0,   516,  1312,     0,   517,  1334,     0,
    1313,     0,  1629,     0,     0,   518,     0,     0,   519,     0,
       0,  1334,  1334,  1334,     0,     0,  1334,     0,     0,  1334,
    1334,  1314,  1315,     0,  1334,     0,     0,   520,   982,     0,
       0,     0,  1321,     0,     0,  1316,     0,     0,     0,     0,
     521,     0,     0,     0,     0,     0,     0,   522,     0,     0,
       0,     0,     0,     0,     0,     0,   523,     0,     0,     0,
       0,     0,   524,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,  1318,   983,     0,     0,
       0,     0,     0,     0,     0,   984,     0,   525,     0,     0,
    1319,  1629,     0,  1320,     0,     0,     0,   985,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1334,     0,     0,     0,     0,     0,     0,     0,   969,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   986,     0,
       0,     0,  1322,     0,     0,  1323,  1324,  1325,     0,  1326,
    1327,  1328,  1329,  1330,  1331,     0,     0,     0,     0,  2221,
       0,     0,     0,     0,     0,     0,     0,     0,  1985,  1629,
       0,     0,     0,     0,  1334,  1334,  1334,     0,  1824,     0,
       0,     0,   971,     0,   988,     0,     0,     0,     0,     0,
       0,  1321,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   989,     0,     0,     0,
       0,     0,  1825,     0,     0,  1334,  1334,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   991,     0,     0,  1334,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1985,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   973,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1985,
       0,  1322,     0,     0,  1323,  1324,  1325,     0,  1326,  1327,
    1328,  1329,  1330,  1331,     0,     0,     0,  1334,  2260,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1334,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1003,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,  1004,   100,   101,   102,     0,
       0,     0,     0,   814,     0,     0,   103,   104,     0,   105,
     106,   107,  1005,   109,   110,   111,   112,   815,  1006,   816,
     817,  1334,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,  1334,   128,   129,   130,   131,
     822,     0,  1007,     0,   134,   135,   136,   137,   138,   139,
    1008,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,  1009,   151,   152,   153,   824,   825,   826,  1010,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,   833,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,  1011,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,  1012,     0,  1013,   207,   208,
     209,  1014,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,  1015,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,  1016,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,  1017,  1018,   247,  1019,   249,   250,   251,
     252,   253,     0,     0,   254,  1020,   256,  1021,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,  1022,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,  1023,
     846,   288,   289,   290,   291,   847,   292,   293,  1024,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,  1025,
     310,  1026,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   854,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,  1027,   362,   363,   364,   855,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   856,   382,   383,
     384,   385,   386,  1028,   388,   389,   857,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
    1029,   404,   858,   406,     0,   407,   408,     0,   409,  1030,
     411,   412,   413,   414,   415,     0,   859,   860,     0,     0,
     418,   419,   861,   421,   862,   863,   423,   424,  1031,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   865,     0,   436,   437,   438,   439,   440,   441,   866,
    1032,   443,  1033,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   867,     0,     0,     0,     0,     0,     0,
     868,   869,  1034,     0,     0,     0,     0,   871,     0,   872,
    1035,     0,     0,     0,   873,     0,   874,   875,    91,   808,
     544,   809,   810,   811,   812,   813,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
     814,     0,     0,   103,   104,     0,   105,   106,   107,   108,
     109,   110,   111,   112,   815,   114,   816,   817,     0,   117,
     118,   119,   120,   121,   122,   818,   819,   123,   124,   820,
     821,   127,     0,   128,   129,   130,   131,   822,     0,   823,
       0,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
     151,   152,   153,   824,   825,   826,   827,   828,   829,   830,
     155,   156,   157,   158,   159,   160,   161,   831,   832,   164,
     833,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   670,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   834,   193,   194,   195,   196,
     835,   836,   198,     0,   199,   200,   837,   202,     0,   203,
       0,   204,   205,     0,   206,   207,   208,   209,   210,   211,
       0,   212,     0,   838,   839,   215,     0,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   840,   841,     0,   842,     0,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,     0,
       0,   254,   255,   256,   257,     0,   258,   259,   260,   843,
     844,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   845,   286,   846,   288,   289,
     290,   291,   847,   292,   293,   294,   295,   848,   849,   297,
     850,   299,   300,   301,     0,   302,   303,     0,     0,   851,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   852,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   853,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   855,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,    25,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
     387,   388,   389,   857,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   858,
     406,     0,   407,   408,    30,   409,   410,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,   864,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   570,   866,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,    33,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     867,     0,    34,     0,     0,     0,     0,   868,   869,     0,
       0,     0,     0,     0,   871,     0,   872,  2783,     0,     0,
       0,   873,     0,   874,   875,    91,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   814,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   815,   114,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,   833,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,   257,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,   286,   846,   288,   289,   290,   291,   847,
     292,   293,   294,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   854,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   855,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,    25,   377,   378,   379,   380,
     381,   856,   382,   383,   384,   385,   386,   387,   388,   389,
     857,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   858,   406,     0,   407,
     408,    30,   409,   410,   411,   412,   413,   414,   415,     0,
     859,   860,     0,     0,   418,   419,   861,   421,   862,   863,
     423,   424,   864,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   865,     0,   436,   437,   438,
     439,   440,   570,   866,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,     0,    33,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   867,     0,    34,
       0,     0,     0,     0,   868,   869,     0,     0,     0,     0,
       0,   871,     0,   872,     0,     0,     0,     0,   873,     0,
     874,   875,    91,   808,   544,   809,   810,   811,   812,   813,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,   814,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   815,   114,
     816,   817,  1638,   117,   118,   119,   120,   121,   122,   818,
     819,   123,   124,   820,   821,   127,     0,   128,   129,   130,
     131,   822,     0,   823,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,   824,   825,   826,
     827,   828,   829,   830,   155,   156,   157,   158,   159,   160,
     161,   831,   832,   164,   833,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   670,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   834,
     193,   194,   195,   196,   835,   836,   198,     0,   199,   200,
     837,   202,     0,   203,     0,   204,   205,  1639,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   838,   839,   215,
       0,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   840,   841,
       0,   842,     0,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,     0,  1640,   254,   255,   256,   257,     0,
     258,   259,   260,   843,   844,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   845,
     286,   846,   288,   289,   290,   291,   847,   292,   293,   294,
     295,   848,   849,   297,   850,   299,   300,   301,     0,   302,
     303,     0,     0,   851,   305,   306,     0,     0,   307,   308,
     309,   310,   311,   852,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   853,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   854,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     855,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,   856,   382,
     383,   384,   385,   386,   387,   388,   389,   857,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   858,   406,     0,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,   859,   860,     0,
    1641,   418,   419,   861,   421,   862,   863,   423,   424,   864,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   865,     0,   436,   437,   438,   439,   440,   441,
     866,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   867,     0,     0,     0,     0,     0,
       0,   868,   869,     0,     0,     0,     0,     0,   871,     0,
     872,     0,     0,     0,     0,   873,     0,   874,   875,    91,
     808,   544,   809,   810,   811,   812,   813,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99, -1014,   100,   101,   102,     0,     0,     0,
   -1014,   814,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   815,   114,   816,   817,     0,
     117,   118,   119,   120,   121,   122,   818,   819,   123,   124,
     820,   821,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   831,   832,
     164,   833,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   834,   193,   194,   195,
     196,   835,   836,   198,     0,   199,   200,   837,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   838,   839,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   840,   841,     0,   842,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,     0,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   845,   286,   846,   288,
     289,   290,   291,   847,   292,   293,   294,   295,   848,   849,
     297,   850,   299,   300,   301,     0,   302,   303,     0,     0,
     851,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   854,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   855,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   856,   382,   383,   384,   385,
     386,   387,   388,   389,   857,   391, -1014,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     858,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   859,   860,     0,     0,   418,   419,
     861,   421,   862,   863,   423,   424,   864,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   865,
       0,   436,   437,   438,   439,   440,   441,   866,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   867,     0,     0,     0,     0,     0,     0,   868,   869,
       0,     0,     0,     0,     0,   871,     0,   872,     0,     0,
       0,     0,   873,     0,   874,   875,    91,   808,   544,   809,
     810,   811,   812,   813,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,   814,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   815,   114,   816,   817,     0,   117,   118,   119,
     120,   121,   122,   818,   819,   123,   124,   820,   821,   127,
       0,   128,   129,   130,   131,   822,     0,   823,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,   151,   152,
     153,   824,   825,   826,   827,   828,   829,   830,   155,   156,
     157,   158,   159,   160,   161,   831,   832,   164,   833,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   670,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   834,   193,   194,   195,   196,   835,   836,
     198,     0,   199,   200,   837,   202,     0,   203,     0,   204,
     205,     0,   206,   207,   208,   209,   210,   211,     0,   212,
       0,   838,   839,   215,     0,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   840,   841,     0,   842,     0,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,     0,     0,   254,
     255,   256,   257,     0,   258,   259,   260,   843,   844,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   845,   286,   846,   288,   289,   290,   291,
     847,   292,   293,   294,   295,   848,   849,   297,   850,   299,
     300,   301,     0,   302,   303,     0,     0,   851,   305,   306,
       0,     0,   307,   308,   309,   310,   311,   852,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   853,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   855,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   867,     0,
       0,     0,     0,     0,     0,   868,   869,   870,     0,     0,
       0,     0,   871,     0,   872,     0,     0,     0,     0,   873,
       0,   874,   875,    91,  1395,   544,   809,   810,   811,  1396,
     813,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,  1397,   100,   101,
     102,     0,     0,     0,     0,   814,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   815,
     114,   816,   817,     0,   117,   118,   119,   120,   121,   122,
     818,   819,   123,   124,   820,   821,   127,     0,   128,   129,
     130,   131,   822,     0,   823,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   824,   825,
     826,   827,   828,   829,   830,   155,   156,   157,   158,   159,
     160,   161,   831,   832,   164,   833,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   670,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     834,   193,   194,   195,   196,   835,   836,   198,     0,   199,
     200,   837,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   838,   839,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   840,
     841,     0,   842,     0,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,     0,     0,   254,   255,   256,   257,
       0,   258,   259,   260,   843,   844,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     845,   286,   846,   288,   289,   290,   291,   847,   292,   293,
     294,   295,   848,   849,   297,   850,   299,   300,   301,     0,
     302,   303,     0,     0,   851,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   852,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   853,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   854,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   855,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,   856,
     382,   383,   384,   385,   386,   387,   388,   389,   857,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   858,   406,     0,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,   859,   860,
       0,     0,   418,   419,   861,   421,   862,   863,   423,   424,
     864,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   865,     0,   436,   437,   438,   439,   440,
     441,   866,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   867,     0,     0,     0,     0,
       0,     0,   868,   869,     0,     0,     0,     0,     0,   871,
       0,   872,     0,     0,     0,     0,   873,     0,   874,   875,
    1003,   808,   544,   809,   810,   811,   812,   813,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   814,     0,     0,   103,   104,     0,   105,   106,
     107,  1005,   109,   110,   111,   112,   815,  1006,   816,   817,
       0,   117,   118,   119,   120,   121,   122,   818,   819,   123,
     124,   820,   821,   127,     0,   128,   129,   130,   131,   822,
       0,  1007,     0,   134,   135,   136,   137,   138,   139,  1008,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,  1009,   151,   152,   153,   824,   825,   826,  1010,   828,
     829,   830,   155,   156,   157,   158,   159,   160,   161,   831,
     832,   164,   833,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   670,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   834,   193,   194,
     195,   196,   835,   836,   198,     0,   199,   200,   837,   202,
       0,   203,     0,   204,  1012,     0,  1013,   207,   208,   209,
    1014,   211,     0,   212,     0,   838,   839,   215,     0,   216,
     217,   218,   219,   220,   221,   222,  1015,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
    1016,   236,   237,   238,   239,   240,   840,   841,     0,   842,
       0,   244,  1017,  1018,   247,  1019,   249,   250,   251,   252,
     253,     0,     0,   254,  1020,   256,  1021,     0,   258,   259,
     260,   843,   844,   261,   262,   263,   264,   265,  1022,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   845,  1023,   846,
     288,   289,   290,   291,   847,   292,   293,  1024,   295,   848,
     849,   297,   850,   299,   300,   301,     0,   302,   303,     0,
       0,   851,   305,   306,     0,     0,   307,   308,  1025,   310,
    1026,   852,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   853,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   854,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,  1027,   362,   363,   364,   855,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   856,   382,   383,   384,
     385,   386,  1028,   388,   389,   857,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,  1029,
     404,   858,   406,     0,   407,   408,     0,   409,  1030,   411,
     412,   413,   414,   415,     0,   859,   860,     0,     0,   418,
     419,   861,   421,   862,   863,   423,   424,  1031,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     865,     0,   436,   437,   438,   439,   440,   441,   866,     0,
     443,  1033,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   867,     0,     0,     0,     0,     0,     0,   868,
     869,     0,     0,     0,     0,     0,   871,     0,   872,  1516,
       0,     0,     0,   873,     0,   874,   875,    91,   808,   544,
     809,   810,   811,   812,   813,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   814,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   815,   114,   816,   817,     0,   117,   118,
     119,   120,   121,   122,   818,   819,   123,   124,   820,   821,
     127,     0,   128,   129,   130,   131,   822,     0,   823,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,   824,   825,   826,   827,   828,   829,   830,   155,
     156,   157,   158,   159,   160,   161,   831,   832,   164,   833,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   834,   193,   194,   195,   196,   835,
     836,   198,     0,   199,   200,   837,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   838,   839,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   840,   841,     0,   842,     0,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,     0,     0,
     254,   255,   256,   257,     0,   258,   259,   260,   843,   844,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   845,   286,   846,   288,   289,   290,
     291,   847,   292,   293,   294,   295,   848,   849,   297,   850,
     299,   300,   301,     0,   302,   303,     0,     0,   851,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   852,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   853,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   854,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   855,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,   856,   382,   383,   384,   385,   386,   387,
     388,   389,   857,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   858,   406,
       0,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,   859,   860,     0,     0,   418,   419,   861,   421,
     862,   863,   423,   424,   864,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,   865,     0,   436,
     437,   438,   439,   440,   441,   866,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   867,
       0,     0,     0,     0,     0,     0,   868,   869,     0,     0,
       0,     0,     0,   871,     0,   872,  1632,     0,     0,     0,
     873,     0,   874,   875,  1003,   808,   544,   809,   810,   811,
     812,   813,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,   814,     0,     0,   103,
     104,     0,   105,   106,   107,  1005,   109,   110,   111,   112,
     815,  1006,   816,   817,     0,   117,   118,   119,   120,   121,
     122,   818,   819,   123,   124,   820,   821,   127,     0,   128,
     129,   130,   131,   822,     0,  1007,     0,   134,   135,   136,
     137,   138,   139,  1008,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,  1009,   151,   152,   153,   824,
     825,   826,  1010,   828,   829,   830,   155,   156,   157,   158,
     159,   160,   161,   831,   832,   164,   833,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   670,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   834,   193,   194,   195,   196,   835,   836,   198,     0,
     199,   200,   837,   202,     0,   203,     0,   204,  1012,     0,
    1013,   207,   208,   209,  1014,   211,     0,   212,     0,   838,
     839,   215,     0,   216,   217,   218,   219,   220,   221,   222,
    1015,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,  1016,   236,   237,   238,   239,   240,
     840,   841,     0,   842,     0,   244,  1017,  1018,   247,  1019,
     249,   250,   251,   252,   253,     0,     0,   254,  1020,   256,
    1021,     0,   258,   259,   260,   843,   844,   261,   262,   263,
     264,   265,  1022,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   845,  1023,   846,   288,   289,   290,   291,   847,   292,
     293,  1024,   295,   848,   849,   297,   850,   299,   300,   301,
       0,   302,   303,     0,     0,   851,   305,   306,     0,     0,
     307,   308,  1025,   310,  1026,   852,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   853,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   854,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,  1027,   362,
     363,   364,   855,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
     856,   382,   383,   384,   385,   386,  1028,   388,   389,   857,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,  1029,   404,   858,   406,     0,   407,   408,
       0,   409,  1030,   411,   412,   413,   414,   415,     0,   859,
     860,     0,     0,   418,   419,   861,   421,   862,   863,   423,
     424,  1031,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   865,     0,   436,   437,   438,   439,
     440,   441,   866,  1850,   443,  1033,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   867,     0,     0,     0,
       0,     0,     0,   868,   869,     0,     0,     0,     0,     0,
     871,     0,   872,     0,     0,     0,     0,   873,     0,   874,
     875,    91,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   814,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   815,   114,   816,
     817,     0,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,     0,   128,   129,   130,   131,
     822,     0,   823,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   824,   825,   826,   827,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,   833,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,   205,  1639,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,     0,     0,   254,   255,   256,   257,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,   286,
     846,   288,   289,   290,   291,   847,   292,   293,   294,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   854,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   855,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   856,   382,   383,
     384,   385,   386,   387,   388,   389,   857,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   858,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   859,   860,     0,     0,
     418,   419,   861,   421,   862,   863,   423,   424,   864,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   865,     0,   436,   437,   438,   439,   440,   441,   866,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   867,     0,     0,     0,     0,     0,     0,
     868,   869,     0,     0,     0,     0,     0,   871,     0,   872,
       0,     0,     0,     0,   873,     0,   874,   875,    91,   808,
     544,   809,   810,   811,   812,   813,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
     814,     0,     0,   103,   104,     0,   105,   106,   107,   108,
     109,   110,   111,   112,   815,   114,   816,   817,     0,   117,
     118,   119,   120,   121,   122,   818,   819,   123,   124,   820,
     821,   127,     0,   128,   129,   130,   131,   822,     0,   823,
       0,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
     151,   152,   153,   824,   825,   826,   827,   828,   829,   830,
     155,   156,   157,   158,   159,   160,   161,   831,   832,   164,
     833,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   670,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   834,   193,   194,   195,   196,
     835,   836,   198,     0,   199,   200,   837,   202,     0,   203,
       0,   204,   205,     0,   206,   207,   208,   209,   210,   211,
       0,   212,     0,   838,   839,   215,     0,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   840,   841,     0,   842,     0,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,     0,
       0,   254,   255,   256,   257,     0,   258,   259,   260,   843,
     844,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   845,   286,   846,   288,   289,
     290,   291,   847,   292,   293,   294,   295,   848,   849,   297,
     850,   299,   300,   301,     0,   302,   303,     0,     0,   851,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   852,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   853,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   855,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
     387,   388,   389,   857,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   858,
     406,     0,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,   864,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   441,   866,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     867,     0,     0,     0,     0,     0,     0,   868,   869,     0,
       0,     0,     0,     0,   871,     0,   872,     0,     0,     0,
       0,   873,     0,   874,   875,  1003,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   814,     0,     0,
     103,   104,     0,   105,   106,   107,  1005,   109,   110,   111,
     112,   815,  1006,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,  1007,     0,   134,   135,
     136,   137,   138,   139,  1008,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,  1009,   151,   152,   153,
     824,   825,   826,  1010,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,   833,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,  1012,
       0,  1013,   207,   208,   209,  1014,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,  1015,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,  1016,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,  1017,  1018,   247,
    1019,   249,   250,   251,   252,   253,     0,     0,   254,  1020,
     256,  1021,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,  1022,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,  1023,   846,   288,   289,   290,   291,   847,
     292,   293,  1024,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,  1025,   310,  1026,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   854,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,  1027,
     362,   363,   364,   855,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   856,   382,   383,   384,   385,   386,  1028,   388,   389,
     857,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,  1029,   404,   858,   406,     0,   407,
     408,     0,   409,  1030,   411,   412,   413,   414,   415,     0,
     859,   860,     0,     0,   418,   419,   861,   421,   862,   863,
     423,   424,  1031,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   865,     0,   436,   437,   438,
     439,   440,   441,   866,     0,   443,  1033,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   867,     0,     0,
       0,     0,     0,     0,   868,   869,     0,     0,     0,     0,
       0,   871,     0,   872,     0,     0,     0,     0,   873,     0,
     874,   875,    91,   808,   544,   809,   810,   811,   812,   813,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,   814,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   815,   114,
     816,   817,     0,   117,   118,   119,   120,   121,   122,   818,
     819,   123,   124,   820,   821,   127,     0,   128,   129,   130,
     131,   822,     0,   823,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,   824,   825,   826,
     827,   828,   829,   830,   155,   156,   157,   158,   159,   160,
     161,   831,   832,   164,   833,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   670,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   834,
     193,   194,   195,   196,   835,   836,   198,     0,   199,   200,
     837,   202,     0,   203,     0,   204,   205,     0,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   838,   839,   215,
       0,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   840,   841,
       0,   842,     0,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,     0,     0,   254,   255,   256,   257,     0,
     258,   259,   260,   843,   844,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   845,
     286,   846,   288,   289,   290,   291,   847,   292,   293,   294,
     295,   848,   849,   297,   850,   299,   300,   301,     0,   302,
     303,     0,     0,   851,   305,   306,     0,     0,   307,   308,
     309,   310,   311,   852,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   853,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   854,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     855,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,   856,   382,
     383,   384,   385,   386,   387,   388,   389,   857,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   858,   406,     0,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,   859,   860,     0,
       0,   418,   419,   861,   421,   862,   863,   423,   424,   864,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   865,     0,   436,   437,   438,   439,   440,   441,
     866,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   867,     0,     0,     0,     0,     0,
       0,  1400,  1401,     0,     0,     0,     0,     0,   871,     0,
     872,     0,     0,     0,     0,   873,     0,   874,   875,    91,
    1775,   544,   809,   810,   811,   812,   813,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   814,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   815,   114,   816,   817,     0,
     117,   118,   119,   120,   121,   122,   818,   819,   123,   124,
     820,   821,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   831,   832,
     164,   833,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   834,   193,   194,   195,
     196,   835,   836,   198,     0,   199,   200,   837,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   838,   839,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   840,   841,     0,   842,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,     0,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   845,   286,   846,   288,
     289,   290,   291,   847,   292,   293,   294,   295,   848,   849,
     297,   850,   299,   300,   301,     0,   302,   303,     0,     0,
     851,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   854,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   855,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   856,   382,   383,   384,   385,
     386,   387,   388,   389,   857,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     858,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   859,   860,     0,     0,   418,   419,
     861,   421,   862,   863,   423,   424,   864,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   865,
       0,   436,   437,   438,   439,   440,   441,   866,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   867,     0,     0,     0,     0,     0,     0,   868,   869,
       0,     0,     0,     0,     0,   871,     0,   872,     0,     0,
       0,     0,   873,     0,   874,   875,    91,   808,   544,   809,
     810,   811,   812,   813,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,   814,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   815,   114,   816,   817,     0,   117,   118,   119,
     120,   121,   122,   818,   819,   123,   124,   820,   821,   127,
       0,   128,   129,   130,   131,   822,     0,   823,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,   151,   152,
     153,   824,   825,   826,   827,   828,   829,   830,   155,   156,
     157,   158,   159,   160,   161,   831,   832,   164,   833,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   670,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   834,   193,   194,   195,   196,   835,   836,
     198,     0,   199,   200,   837,   202,     0,   203,     0,   204,
     205,     0,   206,   207,   208,   209,   210,   211,     0,   212,
       0,   838,   839,   215,     0,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   840,   841,     0,   842,     0,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,     0,     0,   254,
     255,   256,   257,     0,   258,   259,   260,   843,   844,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   845,   286,   846,   288,   289,   290,   291,
     847,   292,   293,   294,   295,   848,   849,   297,   850,   299,
     300,   301,     0,   302,   303,     0,     0,   851,   305,   306,
       0,     0,   307,   308,   309,   310,   311,   852,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   853,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   855,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   867,     0,
       0,     0,     0,     0,     0,   868,   869,     0,     0,     0,
       0,     0,   871,     0,  2003,     0,     0,     0,     0,   873,
       0,   874,   875,    91,   808,   544,   809,   810,   811,   812,
     813,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   814,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   815,
     114,   816,   817,     0,   117,   118,   119,   120,   121,   122,
     818,   819,   123,   124,   820,   821,   127,     0,   128,   129,
     130,   131,   822,     0,   823,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,  2669,   153,   824,   825,
     826,   827,   828,   829,   830,   155,   156,   157,   158,   159,
     160,   161,   831,   832,   164,   833,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   670,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     834,   193,   194,   195,   196,   835,   836,   198,     0,   199,
     200,   837,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,  2670,   839,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   840,
     841,     0,   842,     0,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,     0,     0,   254,   255,   256,   257,
       0,   258,   259,   260,   843,   844,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     845,   286,   846,   288,   289,   290,   291,   847,   292,   293,
     294,   295,   848,   849,   297,   850,   299,   300,   301,     0,
     302,   303,     0,     0,   851,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   852,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   853,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   854,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
    2671,   855,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,   856,
     382,   383,   384,   385,   386,   387,   388,   389,   857,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   858,   406,     0,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,   859,   860,
       0,     0,   418,   419,   861,   421,   862,   863,   423,   424,
     864,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   865,     0,   436,   437,   438,   439,   440,
     441,   866,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   867,     0,     0,     0,     0,
       0,     0,   868,   869,     0,     0,     0,     0,     0,   871,
       0,  2672,     0,     0,     0,     0,   873,     0,   874,   875,
      91,   808,   544,   809,   810,   811,   812,   813,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   814,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,  2886,   815,   114,   816,   817,
       0,   117,   118,   119,   120,   121,   122,   818,   819,   123,
     124,   820,   821,   127,     0,   128,   129,   130,   131,   822,
       0,   823,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,  2887,   824,   825,   826,   827,   828,
     829,   830,   155,   156,   157,   158,   159,   160,   161,   831,
     832,   164,   833,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   670,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   834,   193,   194,
     195,   196,   835,   836,   198,     0,   199,   200,   837,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   838,   839,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   840,   841,     0,   842,
       0,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,     0,     0,   254,   255,   256,   257,     0,   258,   259,
     260,   843,   844,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   845,   286,   846,
     288,   289,   290,   291,   847,   292,   293,   294,   295,   848,
     849,   297,   850,   299,   300,   301,     0,   302,   303,     0,
       0,   851,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   852,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   853,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   854,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,   855,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   856,   382,   383,   384,
     385,   386,   387,   388,   389,   857,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   858,   406,     0,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,   859,   860,     0,     0,   418,
     419,   861,   421,   862,   863,   423,   424,   864,   426,   427,
    2888,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     865,     0,   436,   437,   438,   439,   440,   441,   866,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   867,     0,     0,     0,     0,     0,     0,   868,
     869,     0,     0,     0,     0,     0,   871,     0,   872,     0,
       0,     0,     0,   873,     0,   874,   875,    91,   808,   544,
     809,   810,   811,   812,   813,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   814,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   815,   114,   816,   817,     0,   117,   118,
     119,   120,   121,   122,   818,   819,   123,   124,   820,   821,
     127,     0,   128,   129,   130,   131,   822,     0,   823,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,  2887,   824,   825,   826,   827,   828,   829,   830,   155,
     156,   157,   158,   159,   160,   161,   831,   832,   164,   833,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   834,   193,   194,   195,   196,   835,
     836,   198,     0,   199,   200,   837,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   838,   839,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   840,   841,     0,   842,     0,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,     0,     0,
     254,   255,   256,   257,     0,   258,   259,   260,   843,   844,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   845,   286,   846,   288,   289,   290,
     291,   847,   292,   293,   294,   295,   848,   849,   297,   850,
     299,   300,   301,     0,   302,   303,     0,     0,   851,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   852,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   853,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   854,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   855,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,   856,   382,   383,   384,   385,   386,   387,
     388,   389,   857,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   858,   406,
       0,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,   859,   860,     0,     0,   418,   419,   861,   421,
     862,   863,   423,   424,   864,   426,   427,  2888,   429,   430,
       0,     0,   431,   432,   433,   434,   435,   865,     0,   436,
     437,   438,   439,   440,   441,   866,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   867,
       0,     0,     0,     0,     0,     0,   868,   869,     0,     0,
       0,     0,     0,   871,     0,   872,     0,     0,     0,     0,
     873,     0,   874,   875,    91,   808,   544,   809,   810,   811,
     812,   813,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,   814,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111, -1721,
     815,   114,   816,   817,     0,   117,   118,   119,   120,   121,
     122,   818,   819,   123,   124,   820,   821,   127,     0,   128,
     129,   130,   131,   822,     0,   823,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,   151,   152,  2887,   824,
     825,   826,   827,   828,   829,   830,   155,   156,   157,   158,
     159,   160,   161,   831,   832,   164,   833,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   670,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   834,   193,   194,   195,   196,   835,   836,   198,     0,
     199,   200,   837,   202,     0,   203,     0,   204,   205,     0,
     206,   207,   208,   209, -1721,   211,     0,   212,     0,   838,
     839,   215,     0,   216,   217,   218,   219,   220,   221,   222,
   -1721,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     840,   841,     0,   842,     0,   244,     0,     0,   247,   248,
     249,   250,   251,   252,   253,     0,     0,   254,   255,   256,
   -1721,     0,   258,   259,   260,   843,   844,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   845,   286,   846,   288,   289,   290,   291,     0,   292,
     293,     0,   295,   848,   849,   297,   850,   299,   300,   301,
       0,   302,   303,     0,     0,   851,   305,   306,     0,     0,
     307,   308,   309,   310,   311,   852,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   853,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   854,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   855,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
     856,   382,   383,   384,   385,   386, -1721,   388,   389,   857,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   858,   406,     0,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,   859,
     860,     0,     0,   418,   419,   861,   421,   862,   863,   423,
     424,   864,   426,   427,  2888,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   865,     0,   436,   437,   438,   439,
     440,   441,   866,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470, -1721,     0,     0,     0,
       0,     0,     0,   868,   869,     0,     0,     0,     0,     0,
     871,     0,   872,     0,     0,     0,     0,   873,     0,   874,
     875,    91,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   815,   114,   816,
     817,     0,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,     0,   128,   129,   130,   131,
     822,     0,   823,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   824,   825,   826,   827,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,     0,     0,   254,   255,   256,   257,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,   286,
     846,   288,   289,   290,   291,     0,   292,   293,   294,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   854,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   856,   382,   383,
     384,   385,   386,   387,   388,   389,   857,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   858,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   859,   860,     0,     0,
     418,   419,   861,   421,   862,   863,   423,   424,   864,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   865,     0,   436,   437,   438,   439,   440,   441,   866,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,     0,
    1624,  1625,     0,     0,    91,   808,   544,   809,   810,  1626,
     812,   813,     0,     0,     0,     0,   874,   875,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     815,   114,   816,   817,     0,   117,   118,   119,   120,   121,
     122,   818,   819,   123,   124,   820,   821,   127,     0,   128,
     129,   130,   131,   822,     0,   823,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,   151,   152,   153,   824,
     825,   826,   827,   828,   829,   830,   155,   156,   157,   158,
     159,   160,   161,   831,   832,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   670,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   834,   193,   194,   195,   196,   835,   836,   198,     0,
     199,   200,   837,   202,     0,   203,     0,   204,   205,     0,
     206,   207,   208,   209,   210,   211,     0,   212,     0,   838,
     839,   215,     0,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     840,   841,     0,   842,     0,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,     0,     0,   254,   255,   256,
     257,     0,   258,   259,   260,   843,   844,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   845,   286,   846,   288,   289,   290,   291,     0,   292,
     293,   294,   295,   848,   849,   297,   850,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,   309,   310,   311,   852,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   853,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   854,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,  1761,  1762,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
     856,   382,   383,   384,   385,   386,   387,   388,   389,   857,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   858,   406,     0,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,   859,
     860,     0,     0,   418,   419,   861,   421,   862,   863,   423,
     424,   864,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   865,     0,   436,   437,   438,   439,
     440,   441,   866,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
       0,     0,     0,  1763,  1764,     0,     0,     0,     0,     0,
       0,     0,  1626,     0,     0,     0,     0,     0,     0,   874,
     875,    91,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   815,   114,   816,
     817,     0,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,     0,   128,   129,   130,   131,
     822,     0,   823,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   824,   825,   826,   827,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,     0,   246,   247,   248,   249,   250,   251,
     252,   253,     0,     0,   254,   255,   256,   257,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,   286,
     846,   288,   289,   290,   291,     0,   292,   293,   294,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   854,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   856,   382,   383,
     384,   385,   386,   387,   388,   389,   857,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   858,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   859,   860,     0,     0,
     418,   419,   861,   421,   862,   863,   423,   424,   864,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   865,     0,   436,   437,   438,   439,   440,   441,   866,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,     0,
    1624,  1625,     0,     0,     0,     0,     0,     0,     0,  1626,
       0,     0,     0,     0,     0,     0,   874,   875,    91,   808,
     544,   809,   810,   811,   812,   813,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
     814,     0,     0,   103,   104,     0,   105,   106,   107,   108,
     109,   110,   111,     0,   815,   114,   816,   817,     0,   117,
     118,   119,   120,   121,   122,   818,   819,   123,   124,   820,
     821,   127,     0,   128,   129,   130,   131,   822,     0,   823,
       0,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
     151,   152,   153,   824,   825,   826,   827,   828,   829,   830,
     155,   156,   157,   158,   159,   160,   161,   831,   832,   164,
     833,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   670,
     180,   181,     0,   182,   183,   184,     0,   185,     0,   187,
       0,   188,   189,   190,   191,   834,   193,   194,   195,   196,
     835,   836,   198,     0,   199,   200,   837,   202,     0,   203,
       0,   204,   205,     0,   206,   207,   208,   209,     0,   211,
       0,   212,     0,   838,   839,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   840,   841,     0,   842,     0,   244,
       0,     0,   247,   248,   249,   250,   251,   252,   253,     0,
       0,   254,   255,   256,     0,     0,   258,   259,   260,   843,
     844,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   845,   286,   846,   288,   289,
     290,   291,     0,   292,   293,     0,   295,   848,   849,   297,
     850,   299,   300,   301,     0,   302,   303,     0,     0,   851,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   852,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   853,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   855,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
       0,   388,   389,   857,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   858,
     406,     0,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,   864,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   441,   866,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,     0,     0,     0,     0,   868,   869,   496,
       0,     0,     0,     0,   871,     0,   872,     0,     0,     0,
       0,   873,     0,   874,   875,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,  2298,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
    -691,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,  -691,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,  -691,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,  -691,   249,   250,   251,   252,   253,
       0,     0,   254,  -691,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,  -691,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,  -691,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,  -691,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,    91,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   935,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,   819,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   822,     0,   823,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   824,   825,
     826,   827,   828,   829,   830,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   835,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,  2049,     0,   254,   255,   256,   257,
       0,   258,   259,   260,   843,   844,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     294,   295,     0,   849,   297,   298,   299,   300,   301,     0,
     302,   303,     0,   575,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   852,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   853,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,  2050,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,    25,   377,   378,   379,   380,   381,   856,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   858,   406,     0,   407,   408,    30,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   861,   421,   862,     0,   423,   424,
     864,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   865,     0,   436,   437,   438,   439,   440,
     570,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,    33,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,    91,    34,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2051,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,   819,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   822,     0,   823,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,   151,   152,
     153,   824,   825,   826,   827,   828,   829,   830,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   835,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
     205,     0,   206,   207,   208,   209,   210,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  2049,     0,   254,
     255,   256,   257,     0,   258,   259,   260,   843,   844,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   294,   295,     0,   849,   297,   298,   299,
     300,   301,     0,   302,   303,     0,   575,   304,   305,   306,
       0,     0,   307,   308,   309,   310,   311,   852,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   853,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   365,  2050,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   861,   421,   862,
       0,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,    91,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2051,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,   819,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   835,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,     0,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   294,   295,     0,   849,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,  2050,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   856,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     858,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     861,   421,   862,     0,   423,   424,   864,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,   865,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    35,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
     819,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   822,     0,   823,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,   824,   825,   826,
     827,   828,   829,   830,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   835,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,   205,     0,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
       0,   243,     0,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,     0,     0,   254,   255,   256,   257,     0,
     258,   259,   260,   843,   844,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,     0,   849,   297,   298,   299,   300,   301,     0,   302,
     303,     0,     0,   304,   305,   306,     0,     0,   307,   308,
     309,   310,   311,   852,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   853,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,   856,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   858,   406,     0,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   861,   421,   862,     0,   423,   424,   864,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   865,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   737,  1225,   544,     0,     0,
       0,   812,     0,     0,     0,     0,     0,     0,     0,     0,
    2687,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     738,   739,     0,   740,   741,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   742,   743,   127,     0,
     128,   129,   130,   131,   744,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   745,   746,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   747,   193,   194,   195,   196,   748,  1226,   198,
       0,   199,   200,   749,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     750,   751,   215,     0,   216,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   752,   237,   238,   239,
     240,   753,   754,     0,   755,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   756,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   757,     0,   758,   288,   289,   290,   759,     0,
     292,   293,     0,   295,     0,   760,   297,   761,   299,   300,
     301,     0,   302,   303,  1227,     0,   304,   305,   306,     0,
       0,   307,   762,     0,   310,     0,   763,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     764,   326,   327,   765,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   766,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   767,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   768,   384,   385,   386,     0,   388,   389,
     769,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   770,   404,   771,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     772,   773,     0,     0,   418,   419,   774,   421,   775,  1228,
     423,   424,   776,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,  1118,   778,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   467,   468,   469,   470,     0,   737,     0,
       0,     0,     0,     0,  1229,  1230,  1929,     0,     0,     0,
       0,     0,     0,  1930,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     3,     4,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   738,   739,     0,   740,   741,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   742,
     743,   127,     0,   128,   129,   130,   131,   744,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   745,   746,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   747,   193,   194,   195,   196,
     748,     0,   198,     0,   199,   200,   749,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   750,   751,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   752,
     237,   238,   239,   240,   753,   754,     0,   755,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   756,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   757,     0,   758,   288,   289,
     290,   759,     0,   292,   293,     0,   295,     0,   760,   297,
     761,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,   762,     0,   310,     0,   763,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   764,   326,   327,   765,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     766,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   767,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,    25,   377,
     378,   379,   380,   381,     0,   382,   768,   384,   385,   386,
       0,   388,   389,   769,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   770,   404,   771,
     406,     0,   407,   408,    30,   409,     0,   411,   412,   413,
     414,   415,     0,   772,   773,     0,     0,   418,   419,   774,
     421,   775,     0,   423,   424,   776,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   777,   778,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,    33,   450,
     451,   452,   453,   454,   455,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   467,   468,   469,   470,
       0,   496,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    35,    92,    93,    94,
      95,    96,    97,    98,    99,   598,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,    25,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,    30,   409,     0,
     411,   412,   413,   414,   415,     0,   599,   417,     0,     0,
     600,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   570,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,    33,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   496,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,   247,     0,
     249,   250,   251,   252,   253,     0,     0,   254,     0,   256,
       0,     0,   258,   259,   260,     0,     0,   261,   262,   263,
     264,   265,   498,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   287,   288,   289,   290,   291,     0,   292,
     293,     0,   295,     0,   296,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,     0,   310,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,    25,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
      30,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   570,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,    33,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   496,    34,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    35,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     496,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   915,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     260,     0,     0,   261,   262,   263,   264,   265,   498,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,   289,   290,   291,     0,   292,   293,     0,   295,     0,
     296,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,     0,   310,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2526,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1646,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,     0,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1751,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,     0,  2384,  1225,   544,     0,     0,
    1606,   812,     0,     0,     0,     0,     0,  2282,  1607,  1608,
    1609,    92,    93,    94,    95,    96,    97,    98,    99,  1046,
     100,   101,   102,  1047,  1048,  1049,  1050,  1051,  1052,  1053,
     103,   104,  1054,   105,   106,   107,  2385,   109,   110,   111,
       0,   658,  2386,   660,   661,  1055,   117,   118,   119,   120,
     121,   122,  1056,  1057,   123,   124,   662,   663,   127,  1058,
     128,   129,   130,   131,     0,  1059,  2387,  1060,   134,   135,
     136,   137,   138,   139,  2388,   141,   142,   143,  1061,   144,
     145,   146,   147,   148,   149,  1062,  2389,   151,   152,   153,
    1063,  1064,  1065,  2390,  1066,  1067,  1068,   155,   156,   157,
     158,   159,   160,   161,   668,   669,   164,  1069,   165,  1070,
     166,   167,   168,   169,   170,   171,  1071,   172,   173,   174,
     175,   176,  1072,  1073,   177,   178,   670,   180,   181,  1074,
     182,   183,   184,  1075,   185,   186,   187,  1076,   188,   189,
     190,   191,     0,   193,   194,   195,   196,     0,  1077,   198,
    1078,   199,   200,   671,   202,  1079,   203,  1080,   204,  2391,
    1081,  2392,   207,   208,   209,  2393,   211,  1082,   212,  1083,
       0,     0,   215,  1084,   216,   217,   218,   219,   220,   221,
     222,  2394,   224,   225,   226,   227,  1085,   228,   229,   230,
     231,   232,   233,  1086,   234,  2395,     0,   237,   238,   239,
     240,   678,   679,  1087,   680,  1088,   244,  2396,  2397,   247,
    2398,   249,   250,   251,   252,   253,  1089,  1090,   254,  2399,
     256,  2400,  1091,   258,   259,   260,  1092,  1093,   261,   262,
     263,   264,   265,  2401,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   687,  2402,   689,   288,   289,   290,  2403,  1094,
     292,   293,  2404,   295,  1095,     0,   297,   691,   299,   300,
     301,  1096,   302,   303,  1097,  1098,  2405,   305,   306,  1099,
    1100,   307,     0,  2406,   310,  2407,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,  1101,   323,   324,
       0,   326,   327,     0,   329,   330,   331,  1102,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   694,   342,   343,
     344,   345,  1103,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,  1104,   359,   360,  2408,
     362,   363,   364,   696,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,  1105,   377,   378,   379,   380,
     381,  1106,   382,  2409,   384,   385,   386,  2410,   388,   389,
     699,   391,  1107,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,  2411,   404,     0,   406,  1108,   407,
     408,  1109,   409,  2412,   411,   412,   413,   414,   415,  1110,
     702,   703,  1111,  1112,   418,   419,     0,   421,     0,  1113,
     423,   424,  2413,   426,   427,   428,   429,   430,  1114,  1115,
     431,   432,   433,   434,   435,  1116,  1117,   436,   437,   438,
     439,   440,     0,   705,  1119,   443,  2414,   445,   446,   447,
     448,  1120,  1121,   449,  1122,  1123,   450,   451,   452,   453,
     454,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   467,   468,   469,   470,     0,   496,     0,
    1610,  1611,  1612,  1606,  2415,  2416,  1615,  1616,  1617,  1618,
       0,  1607,  1608,  1609,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   498,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   287,   288,   289,
     290,   291,     0,   292,   293,     0,   295,     0,   296,   297,
     298,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,   308,     0,   310,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,  1610,  1611,  1612,     0,  1613,  1614,  1615,
    1616,  1617,  1618,  1301,     0,     0,  1302,     0,     0,     0,
       0,  1303,  1304,  1305,     0,     0,     0,     0,     0,     0,
       0,  1301,     0,     0,  1302,     0,     0,     0,  1306,  1303,
    1304,  1305,     0,     0,     0,     0,  1308,     0,     0,  1301,
       0,     0,  1302,  1309,     0,     0,  1306,  1303,  1304,  1305,
       0,     0,     0,     0,  1308,     0,     0,     0,     0,     0,
       0,  1309,     0,     0,  1306,     0,     0,  1301,  1310,     0,
    1302,     0,  1308,     0,     0,  1303,  1304,  1305,     0,  1309,
       0,     0,     0,     0,     0,  1301,  1310,     0,  1302,     0,
       0,     0,  1306,  1303,  1304,  1305,     0,     0,     0,     0,
    1308,     0,     0,     0,  1310,     0,     0,  1309,     0,     0,
    1306,     0,     0,     0,     0,     0,     0,     0,  1308,     0,
       0,     0,     0,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,  1310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1310,     0,  1301,     0,     0,  1302,     0,     0,     0,     0,
    1303,  1304,  1305,     0,     0,     0,     0,     0,  1311,     0,
       0,     0,     0,     0,     0,     0,     0,  1306,     0,     0,
       0,     0,     0,     0,  1312,  1308,  1311,     0,     0,  1313,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1312,     0,  1311,     0,     0,  1313,     0,     0,
    1314,  1315,     0,     0,     0,     0,     0,  1310,     0,     0,
    1312,     0,     0,     0,  1316,  1313,     0,     0,  1314,  1315,
       0,     0,  1311,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1316,     0,     0,     0,  1314,  1315,  1312,     0,
    1311,     0,     0,  1313,     0,     0,     0,     0,     0,     0,
    1316,     0,  1317,     0,     0,  1318,  1312,     0,     0,     0,
       0,  1313,     0,     0,  1314,  1315,     0,     0,     0,  1319,
    1317,     0,  1320,  1318,     0,     0,     0,     0,  1316,     0,
       0,     0,  1314,  1315,     0,     0,     0,  1319,  1317,     0,
    1320,  1318,     0,     0,     0,     0,  1316,     0,     0,     0,
       0,     0,     0,     0,     0,  1319,     0,  1311,  1320,     0,
       0,     0,     0,     0,     0,     0,  1317,     0,     0,  1318,
       0,     0,     0,  1312,     0,     0,     0,     0,  1313,     0,
       0,     0,     0,  1319,  1317,     0,  1320,  1318,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1314,
    1315,  1319,     0,     0,  1320,     0,     0,     0,     0,     0,
    1321,     0,     0,  1316,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1301,     0,     0,  1302,  1321,     0,
       0,     0,  1303,  1304,  1305,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1321,     0,     0,  1306,
       0,  1317,     0,     0,  1318,     0,     0,  1308,     0,     0,
       0,     0,     0,     0,  1309,     0,     0,     0,  1319,     0,
       0,  1320,     0,     0,  1321,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1310,
       0,     0,  1321,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1322,     0,     0,  1323,  1324,  1325,     0,  1326,  1327,  1328,
    1329,  1330,  1331,     0,     0,     0,     0,  2348,  1322,     0,
       0,  1323,  1324,  1325,     0,  1326,  1327,  1328,  1329,  1330,
    1331,     0,     0,     0,     0,  2474,  1322,     0,     0,  1323,
    1324,  1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,  1321,
       0,     0,     0,  2496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,  1323,  1324,  1325,
       0,  1326,  1327,  1328,  1329,  1330,  1331,     0,     0,  1311,
       0,  2641,  1322,     0,     0,  1323,  1324,  1325,     0,  1326,
    1327,  1328,  1329,  1330,  1331,  1312,     0,     0,     0,  2857,
    1313,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1314,  1315,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1316,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1322,
       0,     0,  1323,  1324,  1325,     0,  1326,  1327,  1328,  1329,
    1330,  1331,     0,     0,     0,     0,  2869,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,  1318,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1319,     0,     0,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1321,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1322,  1045,     0,  1323,  1324,  1325,     0,  1326,  1327,
    1328,  1329,  1330,  1331,     0,     0,  1482,     0,    92,    93,
      94,    95,    96,    97,    98,    99,  1046,   100,   101,   102,
    1047,  1048,  1049,  1050,  1051,  1052,  1053,   103,   104,  1054,
     105,   106,   107,     0,   109,   110,   111,   738,   739,     0,
     740,   741,  1055,   117,   118,   119,   120,   121,   122,  1056,
    1057,   123,   124,   742,   743,   127,  1058,   128,   129,   130,
     131,   744,  1059,     0,  1060,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,  1061,   144,   145,   146,   147,
     148,   149,  1062,     0,   151,   152,   153,  1063,  1064,  1065,
       0,  1066,  1067,  1068,   155,   156,   157,   158,   159,   160,
     161,   745,   746,   164,  1069,   165,  1070,   166,   167,   168,
     169,   170,   171,  1071,   172,   173,   174,   175,   176,  1072,
    1073,   177,   178,   179,   180,   181,  1074,   182,   183,   184,
    1075,   185,   186,   187,  1076,   188,   189,   190,   191,   747,
     193,   194,   195,   196,   748,  1077,   198,  1078,   199,   200,
     749,   202,  1079,   203,  1080,   204,     0,  1081,     0,   207,
     208,   209,     0,   211,  1082,   212,  1083,   750,   751,   215,
    1084,   216,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,  1085,   228,   229,   230,   231,   232,   233,
    1086,   234,     0,   752,   237,   238,   239,   240,   753,   754,
    1087,   755,  1088,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,  1089,  1090,   254,     0,   256,     0,  1091,
     258,   259,   260,  1092,  1093,   261,   262,   263,   264,   265,
     756,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   757,
       0,   758,   288,   289,   290,   759,  1094,   292,   293,     0,
     295,  1095,   760,   297,   761,   299,   300,   301,  1096,   302,
     303,  1097,  1098,   304,   305,   306,  1099,  1100,   307,   762,
       0,   310,     0,   763,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,  1101,   323,   324,   764,   326,   327,
     765,   329,   330,   331,  1102,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   766,   342,   343,   344,   345,  1103,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,  1104,   359,   360,     0,   362,   363,   364,
     767,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,  1105,   377,   378,   379,   380,   381,  1106,   382,
     768,   384,   385,   386,     0,   388,   389,   769,   391,  1107,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   770,   404,   771,   406,  1108,   407,   408,  1109,   409,
       0,   411,   412,   413,   414,   415,  1110,   772,   773,  1111,
    1112,   418,   419,   774,   421,   775,  1113,   423,   424,   776,
     426,   427,   428,   429,   430,  1114,  1115,   431,   432,   433,
     434,   435,  1116,  1117,   436,   437,   438,   439,   440,  1118,
     778,  1119,   443,     0,   445,   446,   447,   448,  1120,  1121,
     449,  1122,  1123,   450,   451,   452,   453,   454,   455,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     467,   468,   469,   470,   496,     0,     0,     0,     0,     0,
       0,     0,     0,  1730,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,   247,     0,
     249,   250,   251,   252,   253,     0,     0,   254,     0,   256,
       0,     0,   258,   259,   260,     0,     0,   261,   262,   263,
     264,   265,   498,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   287,   288,   289,   290,   291,     0,   292,
     293,     0,   295,     0,   296,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,     0,   310,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   737,  1225,   544,     0,
       0,     0,   812,     0,     0,  2213,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   738,   739,     0,   740,   741,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   742,   743,   127,
       0,   128,   129,   130,   131,   744,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   745,   746,   164,  1360,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   747,   193,   194,   195,   196,   748,  1226,
     198,     0,   199,   200,   749,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   750,   751,   215,     0,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   752,   237,   238,
     239,   240,   753,   754,     0,   755,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   756,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   757,     0,   758,   288,   289,   290,   759,
       0,   292,   293,     0,   295,     0,   760,   297,   761,   299,
     300,   301,     0,   302,   303,  1227,     0,   304,   305,   306,
       0,     0,   307,   762,     0,   310,     0,   763,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   764,   326,   327,   765,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   766,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   767,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   768,   384,   385,   386,     0,   388,
     389,   769,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   770,   404,   771,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   772,   773,     0,     0,   418,   419,   774,   421,   775,
    1228,   423,   424,   776,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,  1118,   778,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   467,   468,   469,   470,   737,  1225,
     544,     0,     0,     0,   812,  1229,  1230,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   738,   739,     0,   740,   741,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   742,
     743,   127,     0,   128,   129,   130,   131,   744,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   745,   746,   164,
    1362,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   747,   193,   194,   195,   196,
     748,  1226,   198,     0,   199,   200,   749,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   750,   751,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   752,
     237,   238,   239,   240,   753,   754,     0,   755,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   756,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   757,     0,   758,   288,   289,
     290,   759,     0,   292,   293,     0,   295,     0,   760,   297,
     761,   299,   300,   301,     0,   302,   303,  1227,     0,   304,
     305,   306,     0,     0,   307,   762,     0,   310,     0,   763,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   764,   326,   327,   765,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     766,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   767,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   768,   384,   385,   386,
       0,   388,   389,   769,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   770,   404,   771,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   772,   773,     0,     0,   418,   419,   774,
     421,   775,  1228,   423,   424,   776,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,  1118,   778,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   467,   468,   469,   470,
     737,  1225,   544,     0,     0,     0,   812,  1229,  1230,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   738,   739,     0,   740,   741,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   742,   743,   127,     0,   128,   129,   130,   131,   744,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   745,
     746,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   747,   193,   194,
     195,   196,   748,  1226,   198,     0,   199,   200,   749,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   750,   751,   215,     0,   216,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   752,   237,   238,   239,   240,   753,   754,     0,   755,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     260,     0,     0,   261,   262,   263,   264,   265,   756,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   757,     0,   758,
     288,   289,   290,   759,     0,   292,   293,     0,   295,     0,
     760,   297,   761,   299,   300,   301,     0,   302,   303,  1227,
       0,   304,   305,   306,     0,     0,   307,   762,     0,   310,
       0,   763,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   764,   326,   327,   765,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   766,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   767,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   768,   384,
     385,   386,     0,   388,   389,   769,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   770,
     404,   771,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   772,   773,     0,     0,   418,
     419,   774,   421,   775,  1228,   423,   424,   776,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,  1118,   778,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   467,   468,
     469,   470,     0,  1301,     0,     0,  1302,     0,     0,  1229,
    1230,  1303,  1304,  1305,     0,     0,     0,     0,     0,     0,
       0,  1301,     0,     0,  1302,     0,     0,     0,  1306,  1303,
    1304,  1305,     0,     0,     0,     0,  1308,     0,     0,  1301,
       0,     0,  1302,  1309,     0,     0,  1306,  1303,  1304,  1305,
       0,     0,     0,     0,  1308,     0,     0,     0,     0,     0,
       0,  1309,     0,     0,  1306,     0,     0,  1951,  1310,     0,
       0,     0,  1308,     0,     0,     0,     0,     0,     0,  1309,
       0,     0,     0,     0,     0,  1301,  1310,     0,  1302,     0,
       0,     0,     0,  1303,  1304,  1305,     0,     0,     0,     0,
       0,     0,     0,     0,  1310,     0,     0,     0,     0,     0,
    1306,     0,     0,     0,     0,     0,     0,     0,  1308,     0,
       0,     0,     0,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1310,     0,  1301,     0,     0,  1302,     0,     0,  1989,     0,
    1303,  1304,  1305,  1990,     0,     0,     0,     0,  1311,     0,
       0,     0,     0,     0,     0,  2930,     0,  1306,     0,     0,
    1994,     0,     0,     0,  1312,  1308,  1311,     0,     0,  1313,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1312,     0,  1311,     0,     0,  1313,     0,     0,
    1314,  1315,     0,     0,     0,     0,     0,  1310,     0,     0,
    1312,     0,     0,     0,  1316,  1313,     0,     0,  1314,  1315,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1316,     0,     0,     0,  1314,  1315,     0,     0,
    1311,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1316,     0,  1317,     0,     0,  1318,  1312,     0,     0,     0,
       0,  1313,     0,     0,     0,     0,     0,     0,     0,  1319,
    1317,     0,  1320,  1318,     0,     0,     0,     0,     0,     0,
       0,     0,  1314,  1315,     0,     0,     0,  1319,  1317,     0,
    1320,  1318,     0,     0,     0,     0,  1316,     0,     0,     0,
       0,     0,     0,     0,     0,  1319,     0,  1311,  1320,     0,
       0,     0,     0,  2931,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1312,     0,     0,     0,     0,  1313,     0,
       0,     0,     0,     0,  1317,     0,     0,  1318,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1314,
    1315,  1319,     0,     0,  1320,     0,     0,     0,     0,     0,
    1321,     0,     0,  1316,     0,     0,     0,     0,     0,     0,
       0,     0,  1963,     0,  1301,     0,     0,  1302,  1321,     0,
       0,     0,  1303,  1304,  1305,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1321,     0,     0,  1306,
       0,  1317,     0,     0,  1318,     0,     0,  1308,     0,     0,
       0,     0,     0,     0,  1309,     0,     0,     0,  1319,  1301,
       0,  1320,  1302,     0,     0,     0,     0,  1303,  1304,  1305,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1310,
       0,     0,  1321,     0,  1306,     0,     0,  2001,     0,     0,
       0,     0,  1308,     0,     0,     0,     0,     0,     0,  1309,
    1322,     0,     0,  1323,  1324,  1325,     0,  1326,  1327,  1328,
    1329,  1330,  1331,     0,     0,     0,     0,     0,  1322,     0,
       0,  1323,  1324,  1325,  1310,  1326,  1327,  1328,  1329,  1330,
    1331,     0,     0,     0,     0,     0,  1322,     0,     0,  1323,
    1324,  1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,  1321,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1999,     0,     0,     0,     0,  1311,
       0,     0,  1322,     0,     0,  1323,  1324,  1325,     0,  1326,
    1327,  1328,  1329,  1330,  1331,  1312,     0,     0,  1301,     0,
    1313,  1302,     0,     0,     0,     0,  1303,  1304,  1305,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1314,  1315,  1306,  1311,     0,     0,     0,     0,     0,
       0,  1308,     0,     0,     0,  1316,     0,     0,  1309,     0,
    1312,     0,     0,     0,     0,  1313,     0,     0,     0,  1322,
       0,     0,  1323,  1324,  1325,     0,  1326,  1327,  1328,  1329,
    1330,  1331,     0,  1310,     0,     0,  1314,  1315,     0,     0,
       0,     0,     0,  1317,     0,     0,  1318,     0,     0,     0,
    1316,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1319,     0,     0,  1320,  1301,     0,     0,  1302,     0,     0,
       0,     0,  1303,  1304,  1305,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1317,  1306,
       0,  1318,  2259,     0,     0,     0,     0,  1308,     0,     0,
       0,     0,     0,  1301,  1309,  1319,  1302,     0,  1320,     0,
       0,  1303,  1304,  1305,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1306,  1310,
       0,     0,     0,  1311,     0,     0,  1308,     0,     0,     0,
       0,     0,     0,  1309,     0,     0,     0,  1301,     0,  1312,
    1302,  1321,     0,     0,  1313,  1303,  1304,  1305,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1310,     0,
       0,     0,  1306,     0,     0,  1314,  1315,     0,     0,     0,
    1308,     0,     0,     0,     0,     0,     0,  1309,     0,  1316,
       0,     0,  1301,     0,     0,  1302,  1321,     0,     0,     0,
    1303,  1304,  1305,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1310,     0,     0,     0,     0,  1306,     0,     0,
       0,     0,     0,     0,     0,  1308,     0,  1317,     0,  1311,
    1318,     0,  1309,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1319,  1312,     0,  1320,     0,     0,
    1313,  1322,     0,     0,  1323,  1324,  1325,  1310,  1326,  1327,
    1328,  1329,  1330,  1331,     0,     0,     0,     0,  1311,     0,
       0,  1314,  1315,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1312,  1316,     0,     0,     0,  1313,
       0,     0,     0,     0,     0,     0,  1322,     0,     0,  1323,
    1324,  1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,     0,
    1314,  1315,  1311,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1317,  1316,     0,  1318,     0,  1312,     0,
       0,     0,     0,  1313,     0,  1321,     0,     0,     0,     0,
    1319,     0,     0,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1314,  1315,     0,  1311,     0,     0,
       0,     0,  1317,     0,     0,  1318,     0,  2217,  1316,     0,
       0,     0,     0,  1312,     0,     0,     0,     0,  1313,  1319,
       0,     0,  1320,     0,     0,  1301,     0,     0,  1302,     0,
       0,     0,     0,  1303,  1304,  1305,     0,     0,     0,  1314,
    1315,     0,     0,     0,     0,     0,  1317,     0,     0,  1318,
       0,     0,     0,  1316,     0,     0,     0,     0,  1308,     0,
       0,     0,     0,  1319,     0,  1309,  1320,     0,     0,     0,
       0,  1321,     0,     0,     0,  1322,     0,     0,  1323,  1324,
    1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,     0,     0,
    1310,  1317,     0,     0,  1318,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1319,     0,
    1321,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1321,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1322,     0,     0,  1323,  1324,  1325,     0,  1326,  1327,
    1328,  1329,  1330,  1331,     0,     0,     0,     0,     0,     0,
    1311,     0,     0,     0,     0,     0,     0,     0,     0,  1321,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,     0,
    1322,  1313,     0,  1323,  1324,  1325,     0,  1326,  1327,  1328,
    1329,  1330,  1331,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1314,  1315,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1316,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,  1323,  1324,  1325,
       0,  1326,  1327,  1328,  1329,  1774,  1331,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1317,     0,     0,  1318,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1322,
       0,  1319,  1323,  1324,  1325,     0,  1326,  1327,  1328,  1329,
    1330,  1331,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1321,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1045,
       0,  1665,  1322,     0,     0,  1323,  1324,  1325,     0,  1326,
    1327,  1328,  1329,  1330,  1331,    92,    93,    94,    95,    96,
      97,    98,    99,  1046,   100,   101,   102,  1047,  1048,  1049,
    1050,  1051,  1052,  1053,   103,   104,  1054,   105,   106,   107,
       0,   109,   110,   111,   738,   739,     0,   740,   741,  1055,
     117,   118,   119,   120,   121,   122,  1056,  1057,   123,   124,
     742,   743,   127,  1058,   128,   129,   130,   131,   744,  1059,
       0,  1060,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,  1061,   144,   145,   146,   147,   148,   149,  1062,
       0,   151,   152,   153,  1063,  1064,  1065,     0,  1066,  1067,
    1068,   155,   156,   157,   158,   159,   160,   161,   745,   746,
     164,  1069,   165,  1070,   166,   167,   168,   169,   170,   171,
    1071,   172,   173,   174,   175,   176,  1072,  1073,   177,   178,
     179,   180,   181,  1074,   182,   183,   184,  1075,   185,   186,
     187,  1076,   188,   189,   190,   191,   747,   193,   194,   195,
     196,   748,  1077,   198,  1078,   199,   200,   749,   202,  1079,
     203,  1080,   204,     0,  1081,     0,   207,   208,   209,     0,
     211,  1082,   212,  1083,   750,   751,   215,  1084,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
    1085,   228,   229,   230,   231,   232,   233,  1086,   234,     0,
     752,   237,   238,   239,   240,   753,   754,  1087,   755,  1088,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
    1089,  1090,   254,     0,   256,     0,  1091,   258,   259,   260,
    1092,  1093,   261,   262,   263,   264,   265,   756,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   757,     0,   758,   288,
     289,   290,   759,  1094,   292,   293,     0,   295,  1095,   760,
     297,   761,   299,   300,   301,  1096,   302,   303,  1097,  1098,
     304,   305,   306,  1099,  1100,   307,   762,     0,   310,     0,
     763,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,  1101,   323,   324,   764,   326,   327,   765,   329,   330,
     331,  1102,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   766,   342,   343,   344,   345,  1103,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1104,   359,   360,     0,   362,   363,   364,   767,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,  1105,
     377,   378,   379,   380,   381,  1106,   382,   768,   384,   385,
     386,     0,   388,   389,   769,   391,  1107,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   770,   404,
     771,   406,  1108,   407,   408,  1109,   409,     0,   411,   412,
     413,   414,   415,  1110,   772,   773,  1111,  1112,   418,   419,
     774,   421,   775,  1113,   423,   424,   776,   426,   427,   428,
     429,   430,  1114,  1115,   431,   432,   433,   434,   435,  1116,
    1117,   436,   437,   438,   439,   440,  1118,   778,  1119,   443,
       0,   445,   446,   447,   448,  1120,  1121,   449,  1122,  1123,
     450,   451,   452,   453,   454,   455,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   467,   468,   469,
     470,  1045,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,  1046,   100,   101,   102,  1047,
    1048,  1049,  1050,  1051,  1052,  1053,   103,   104,  1054,   105,
     106,   107,     0,   109,   110,   111,   738,   739,     0,   740,
     741,  1055,   117,   118,   119,   120,   121,   122,  1056,  1057,
     123,   124,   742,   743,   127,  1058,   128,   129,   130,   131,
     744,  1059,     0,  1060,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,  1061,   144,   145,   146,   147,   148,
     149,  1062,     0,   151,   152,   153,  1063,  1064,  1065,     0,
    1066,  1067,  1068,   155,   156,   157,   158,   159,   160,   161,
     745,   746,   164,  1069,   165,  1070,   166,   167,   168,   169,
     170,   171,  1071,   172,   173,   174,   175,   176,  1072,  1073,
     177,   178,   179,   180,   181,  1074,   182,   183,   184,  1075,
     185,   186,   187,  1076,   188,   189,   190,   191,   747,   193,
     194,   195,   196,   748,  1077,   198,  1078,   199,   200,   749,
     202,  1079,   203,  1080,   204,     0,  1081,     0,   207,   208,
     209,     0,   211,  1082,   212,  1083,   750,   751,   215,  1084,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,  1085,   228,   229,   230,   231,   232,   233,  1086,
     234,     0,   752,   237,   238,   239,   240,   753,   754,  1087,
     755,  1088,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,  1089,  1090,   254,     0,   256,     0,  1091,   258,
     259,   260,  1092,  1093,   261,   262,   263,   264,   265,   756,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   757,     0,
     758,   288,   289,   290,   759,  1094,   292,   293,     0,   295,
    1095,   760,   297,   761,   299,   300,   301,  1096,   302,   303,
    1097,  1098,   304,   305,   306,  1099,  1100,   307,   762,     0,
     310,     0,   763,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,  1101,   323,   324,   764,   326,   327,   765,
     329,   330,   331,  1102,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   766,   342,   343,   344,   345,  1103,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,  1104,   359,   360,     0,   362,   363,   364,   767,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,  1105,   377,   378,   379,   380,   381,  1106,   382,   768,
     384,   385,   386,     0,   388,   389,   769,   391,  1107,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     770,   404,   771,   406,  1108,   407,   408,  1109,   409,     0,
     411,   412,   413,   414,   415,  1110,   772,   773,  1111,  1112,
     418,   419,   774,   421,   775,  1113,   423,   424,   776,   426,
     427,   428,   429,   430,  1114,  1115,   431,   432,   433,   434,
     435,  1116,  1117,   436,   437,   438,   439,   440,  1118,   778,
    1119,   443,     0,   445,   446,   447,   448,  1120,  1121,   449,
    1122,  1123,   450,   451,   452,   453,   454,   455,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   467,
     468,   469,   470,  1045,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,  1809,    97,    98,    99,  1046,   100,   101,
     102,  1047,  1048,  1049,  1050,  1051,  1052,  1053,   103,   104,
    1054,   105,   106,   107,     0,   109,   110,   111,   738,   739,
       0,   740,   741,  1055,   117,   118,   119,   120,   121,   122,
    1056,  1057,   123,   124,   742,   743,   127,  1058,   128,   129,
     130,   131,   744,  1059,     0,  1060,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,  1061,   144,   145,   146,
     147,   148,   149,  1062,     0,   151,   152,   153,  1063,  1064,
    1065,     0,  1066,  1067,  1068,   155,   156,   157,   158,   159,
     160,   161,   745,   746,   164,  1069,   165,  1070,   166,   167,
     168,   169,   170,   171,  1071,   172,   173,   174,   175,   176,
    1072,  1073,   177,   178,   179,  1810,   181,  1074,   182,   183,
     184,  1075,   185,   186,   187,  1076,   188,   189,   190,   191,
     747,   193,   194,   195,   196,   748,  1077,   198,  1078,   199,
     200,   749,   202,  1079,   203,  1080,   204,     0,  1081,     0,
     207,   208,   209,     0,   211,  1082,   212,  1083,   750,   751,
     215,  1084,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,  1085,   228,   229,   230,   231,   232,
     233,  1086,   234,     0,   752,   237,   238,   239,   240,   753,
     754,  1087,   755,  1088,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,  1089,  1090,   254,     0,   256,     0,
    1091,   258,   259,   260,  1092,  1093,   261,   262,   263,   264,
     265,   756,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     757,     0,   758,   288,   289,   290,   759,  1094,   292,   293,
       0,   295,  1095,   760,   297,   761,   299,   300,   301,  1096,
     302,   303,  1097,  1098,   304,   305,   306,  1099,  1100,   307,
     762,     0,   310,     0,   763,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,  1101,   323,   324,   764,   326,
     327,   765,   329,   330,   331,  1102,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   766,   342,   343,   344,   345,
    1103,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,  1104,   359,   360,     0,   362,   363,
     364,   767,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,  1105,   377,   378,   379,   380,   381,  1106,
    1811,   768,   384,   385,   386,     0,   388,   389,   769,   391,
    1107,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   770,   404,   771,   406,  1108,   407,   408,  1109,
     409,     0,   411,   412,   413,   414,   415,  1110,   772,   773,
    1111,  1112,   418,   419,   774,   421,   775,  1113,   423,   424,
     776,   426,   427,   428,   429,   430,  1114,  1115,   431,   432,
     433,   434,   435,  1116,  1117,   436,   437,   438,   439,   440,
    1118,   778,  1119,   443,     0,   445,   446,   447,   448,  1120,
    1121,   449,  1122,  1123,   450,   451,   452,   453,   454,   455,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   467,   468,   469,   470,    91,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,   819,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   835,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,   257,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,     0,   849,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   856,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   858,   406,     0,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   861,   421,   862,     0,
     423,   424,   864,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   865,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    91,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,   133,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,     0,     0,     0,   154,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,     0,     0,
     254,   255,   256,   257,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   292,   293,   294,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
       0,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,  1420,   128,   129,   130,   131,   132,     0,
       0,  1421,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,  1422,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,  1423,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,  1424,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,  1425,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,  1426,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,  1420,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,  1422,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,  1423,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,  1879,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,  1425,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,  1426,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   737,     0,   544,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   738,   739,
       0,   740,   741,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   742,   743,   127,     0,   128,   129,
     130,   131,   744,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   745,   746,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     747,   193,   194,   195,   196,   748,  1226,   198,     0,   199,
     200,   749,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   750,   751,
     215,     0,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   752,   237,   238,   239,   240,   753,
     754,     0,   755,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   756,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     757,     0,   758,   288,   289,   290,   759,     0,   292,   293,
       0,   295,     0,   760,   297,   761,   299,   300,   301,     0,
     302,   303,  1227,     0,   304,   305,   306,     0,     0,   307,
     762,     0,   310,     0,   763,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   764,   326,
     327,   765,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   766,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   767,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   768,   384,   385,   386,     0,   388,   389,   769,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   770,   404,   771,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   772,   773,
       0,     0,   418,   419,   774,   421,   775,  1228,   423,   424,
     776,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
    1118,   778,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   467,   468,   469,   470,   496,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     3,     4,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,   575,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   618,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,   575,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   737,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     3,
       4,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   738,   739,     0,   740,
     741,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   742,   743,   127,     0,   128,   129,   130,   131,
     744,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     745,   746,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   747,   193,
     194,   195,   196,   748,     0,   198,     0,   199,   200,   749,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   750,   751,   215,     0,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   752,   237,   238,   239,   240,   753,   754,     0,
     755,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   756,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   757,     0,
     758,   288,   289,   290,   759,     0,   292,   293,     0,   295,
       0,   760,   297,   761,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   762,     0,
     310,     0,   763,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   764,   326,   327,   765,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   766,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   767,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   768,
     384,   385,   386,     0,   388,   389,   769,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     770,   404,   771,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   772,   773,     0,     0,
     418,   419,   774,   421,   775,     0,   423,   424,   776,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,  1118,   778,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   467,
     468,   469,   470,   496,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,  1718,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,  1719,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,  1720,
     409,     0,   411,  1721,   413,  1722,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
    1723,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,  2649,     0,     0,     0,
       0,  2650,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,   497,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   499,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,   549,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   550,   417,     0,     0,   551,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   613,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   616,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   620,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,   648,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,  1140,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,  1142,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,  1550,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
    2298,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,  2312,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,  2446,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   561,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   562,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   563,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     564,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     565,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   584,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   638,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   725,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   728,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   731,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     563,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   565,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,  1377,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,     0,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,  1512,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,  1793,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,  1805,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,  1807,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,     0,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,     0,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   656,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,   657,   109,   110,   111,     0,   658,   659,   660,
     661,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   662,   663,   127,     0,   128,   129,   130,   131,
       0,     0,   664,     0,   134,   135,   136,   137,   138,   139,
     665,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   666,   151,   152,   153,     0,     0,     0,   667,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     668,   669,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,     0,   193,
     194,   195,   196,     0,     0,   198,     0,   199,   200,   671,
     202,     0,   203,     0,   204,   672,     0,   673,   207,   208,
     209,   674,   211,     0,   212,     0,     0,     0,   215,     0,
     216,   217,   218,   219,   220,   675,   222,   676,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   677,     0,   237,   238,   239,   240,   678,   679,     0,
     680,     0,   244,   681,   682,   247,   683,   249,   250,   251,
     252,   253,     0,     0,   254,   684,   256,   685,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   686,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   687,   688,
     689,   288,   289,   290,     0,     0,   292,   293,   690,   295,
       0,     0,   297,   691,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,     0,   692,
     310,   693,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,     0,   326,   327,     0,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   694,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   695,   362,   363,   364,   696,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   697,
     384,   385,   386,   698,   388,   389,   699,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     700,   404,     0,   406,     0,   407,   408,     0,   409,   701,
     411,   412,   413,   414,   415,     0,   702,   703,     0,     0,
     418,   419,     0,   421,     0,     0,   423,   424,   704,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,   705,
       0,   443,   706,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   656,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   467,
     468,   469,   470,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,   657,
     109,   110,   111,     0,   658,   659,   660,   661,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   662,
     663,   127,     0,   128,   129,   130,   131,     0,     0,   664,
       0,   134,   135,   136,   137,   138,   139,   665,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   666,
     151,   152,   153,     0,     0,     0,   667,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   668,   669,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   670,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,     0,   193,   194,   195,   196,
       0,     0,   198,     0,   199,   200,   671,   202,     0,   203,
       0,   204,   672,     0,   673,   207,   208,   209,   674,   211,
       0,   212,     0,     0,     0,   215,     0,   216,   217,   218,
     219,   220,   221,   222,   676,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   677,     0,
     237,   238,   239,   240,   678,   679,     0,   680,     0,   244,
     681,   682,   247,   683,   249,   250,   251,   252,   253,     0,
       0,   254,   684,   256,   685,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   686,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   687,   688,   689,   288,   289,
     290,     0,     0,   292,   293,   690,   295,     0,     0,   297,
     691,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,     0,   692,   310,   693,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,     0,   326,   327,     0,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     694,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   695,   362,   363,   364,   696,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   697,   384,   385,   386,
     698,   388,   389,   699,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   700,   404,     0,
     406,     0,   407,   408,     0,   409,   701,   411,   412,   413,
     414,   415,     0,   702,   703,     0,     0,   418,   419,     0,
     421,     0,     0,   423,   424,   704,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,   705,     0,   443,   706,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,  2384,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   467,   468,   469,   470,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,  2385,   109,   110,   111,
       0,   658,  2386,   660,   661,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   662,   663,   127,     0,
     128,   129,   130,   131,     0,     0,  2387,     0,   134,   135,
     136,   137,   138,   139,  2388,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,  2389,   151,   152,   153,
       0,     0,     0,  2390,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   668,   669,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,     0,   193,   194,   195,   196,     0,     0,   198,
       0,   199,   200,   671,   202,     0,   203,     0,   204,  2391,
       0,  2392,   207,   208,   209,  2393,   211,     0,   212,     0,
       0,     0,   215,     0,   216,   217,   218,   219,   220,   221,
     222,  2394,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,  2395,     0,   237,   238,   239,
     240,   678,   679,     0,   680,     0,   244,  2396,  2397,   247,
    2398,   249,   250,   251,   252,   253,     0,     0,   254,  2399,
     256,  2400,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,  2594,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   687,  2402,   689,   288,   289,   290,     0,     0,
     292,   293,  2404,   295,     0,     0,   297,   691,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,     0,  2406,   310,  2407,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
       0,   326,   327,     0,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   694,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,  2408,
     362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,     0,   384,   385,   386,  2410,   388,   389,
     699,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,  2595,   404,     0,   406,     0,   407,
     408,     0,   409,  2412,   411,   412,   413,   414,   415,     0,
     702,   703,     0,     0,   418,   419,     0,   421,     0,     0,
     423,   424,  2413,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,   705,     0,   443,  2414,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   656,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   467,   468,   469,   470,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   657,   109,   110,   111,     0,   658,   659,
     660,   661,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   662,   663,   127,     0,   128,   129,   130,
     131,     0,     0,   664,     0,   134,   135,   136,   137,   138,
     139,   665,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   666,   151,   152,   153,     0,     0,     0,
     667,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   668,   669,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   670,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,     0,
     193,   194,   195,   196,     0,     0,   198,     0,   199,   200,
     671,   202,     0,   203,     0,   204,   672,     0,   673,   207,
     208,   209,   674,   211,     0,   212,     0,     0,     0,   215,
       0,   216,   217,   218,   219,   220,   221,   222,   676,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   677,     0,   237,   238,   239,   240,   678,   679,
       0,   680,     0,   244,   681,   682,   247,   683,   249,   250,
     251,   252,   253,     0,     0,   254,   684,   256,   685,     0,
     258,   259,   260,     0,     0,   261,   262,   263,   264,   265,
       0,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   687,
     688,   689,   288,   289,   290,     0,     0,   292,   293,   690,
     295,     0,     0,   297,   691,   299,   300,   301,     0,   302,
     303,     0,     0,   304,   305,   306,     0,     0,   307,     0,
     692,   310,   693,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,     0,   326,   327,
       0,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   694,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,   695,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
       0,   384,   385,   386,   698,   388,   389,   699,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,     0,   404,     0,   406,     0,   407,   408,     0,   409,
     701,   411,   412,   413,   414,   415,     0,   702,   703,     0,
       0,   418,   419,     0,   421,     0,     0,   423,   424,   704,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
     705,     0,   443,   706,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     467,   468,   469,   470
};

static const yytype_int16 yycheck[] =
{
       6,    35,   533,   617,   624,   610,   794,   527,   993,   632,
     560,     0,     6,   697,   490,   794,   991,   578,     6,   524,
      16,   966,     0,    73,  1803,  1731,   875,  1269,   873,   583,
       0,     0,  1135,     0,  1135,  1135,   626,  1166,  1222,  1135,
     703,   531,   891,   971,   968,  2169,    75,    16,    30,  1032,
     526,    29,   938,  2168,   903,  1171,   533,   727,  2093,   729,
    1809,  1687,  1811,    75,   532,     0,  2141,  1800,  1298,  1299,
    2051,  2141,   996,  1751,   617,  2179,   619,    55,   621,   801,
    2183,  1624,  1625,  1847,  1848,  1849,  1629,    34,  1250,     5,
       5,     9,   662,   663,     5,     5,     5,    13,    14,  1727,
       5,     5,    13,    14,     5,     5,    88,    50,    13,    14,
      13,    14,    13,    14,  1742,     5,     0,  1351,    11,   689,
       5,    58,     5,   911,     9,     5,     5,  1670,  1671,     9,
      13,    14,    16,     5,    11,     5,     0,    23,   535,    73,
       5,  1874,  2454,    29,    36,    29,    67,   637,    41,     0,
       5,    35,     5,     5,    93,  2003,     5,   607,     5,  1136,
     168,   120,  2057,    55,  2507,    40,  1401,   169,   145,    40,
      58,    55,     3,     4,     5,   168,     4,  2458,     9,   733,
      73,     9,   107,  2441,   137,  2529,   117,  1403,   120,   213,
       3,    75,   980,  1264,    11,   983,   984,   860,   280,    15,
    2543,   607,  2082,   282,     4,    48,  1939,  1940,  1264,     9,
      58,     9,  2598,    27,   106,    75,  1991,   239,    31,    32,
      34,   304,    58,   239,    41,   120,    86,  2056,  2423,    93,
      27,  2552,   268,  2629,   211,  2798,    75,    34,    11,    27,
     135,    83,    93,   363,   165,  2691,    34,    86,   207,   135,
     820,   821,  2573,   122,   271,   288,    73,    11,   288,   158,
    2371,   304,   107,   794,   163,    13,    14,  2112,   372,   800,
     434,  2730,    58,  2886,   108,    37,   846,   158,    11,   399,
     118,   323,  1004,   118,   115,   127,  2629,    41,   434,  1011,
     239,   169,  2861,   267,  2863,   979,    11,   480,   272,    27,
    2064,   160,  2614,   160,   196,   403,   486,   405,   491,   352,
     352,   288,    75,   493,   115,   876,    59,   871,   450,    73,
     440,  2302,  2666,    86,    67,  2306,  2450,   491,   918,   797,
     173,   230,  2111,   453,  2409,   412,  1962,   398,  2453,  2952,
     356,   147,  2905,   904,   108,   491,   189,  2192,   322,   230,
      78,   194,   190,   245,   167,   190,   169,   477,    73,    87,
     377,   253,   124,   495,    68,  1964,   223,  2826,  2937,   930,
    1264,   491,   433,   265,   115,  2108,     5,  2110,   117,   456,
     279,   212,   913,   914,   491,   186,   229,   491,   116,   195,
    2711,    31,    32,  1992,   315,    85,   432,    87,  2293,    89,
     286,  2596,   233,   486,   296,   264,   343,   356,   430,   491,
     964,  2857,   491,   933,   430,   163,  2759,   410,   282,   314,
     265,  2049,   300,  2051,   363,   162,  1148,  1970,  1971,  1972,
    1973,   282,  1037,  1976,  1977,  1978,  1979,  1980,  1981,  1982,
    1983,  1984,  1985,   486,   168,  1687,  1722,  1723,  2729,   426,
     342,  2226,  2795,    93,   340,   343,  2567,   299,   186,  2339,
     399,   524,   495,  2292,  2923,   495,   267,  1538,  2726,   491,
     198,   495,   364,   432,   399,   491,  1421,   293,  2211,   265,
     344,   430,  2868,  1539,   370,  2028,  2029,   495,  2884,   491,
     233,   480,   384,   344,  1477,   343,   449,  2841,   376,   533,
     432,   440,   480,  1733,  2607,   436,   427,   343,   387,   388,
     480,   480,   962,   480,   453,  2827,  1136,  1759,   524,  1753,
    1505,   396,  1145,  2598,  1501,   396,   188,   533,  2598,  1764,
     927,   272,   375,   272,  1264,  2516,     0,   533,   477,   443,
    2521,  2884,   491,  2524,   573,   455,   455,  2828,   491,  1765,
     410,   437,   491,   559,   560,   489,   962,   343,   495,   493,
     610,   573,   404,   532,   494,   434,   380,   477,   477,  2348,
      27,   410,   490,   310,   489,   491,   491,   583,   493,  1741,
     491,   491,   491,   380,   370,   581,   491,   491,   491,   453,
     491,   491,   380,  1576,   487,    23,   480,  1167,  1168,   115,
     492,   491,   453,   592,  2728,  1159,   491,   495,   491,   453,
     487,   491,  2361,  2508,   592,   597,   622,   623,   624,   491,
    1240,   491,   592,   592,  1346,   592,   491,   130,   492,  2733,
     494,   444,  2735,   477,   697,  2483,   491,   584,   491,   491,
     239,   492,   491,   494,   491,  1539,  1540,   495,   532,   533,
     158,   482,   483,   453,   482,   483,   338,   592,   386,  2337,
    1165,   389,  1450,   351,  1254,   482,   483,   484,   485,   486,
     487,   328,  1460,   130,  2302,  1463,  2440,   477,  2306,   341,
    2661,   480,   482,   483,   482,   483,   410,  1307,   495,   573,
     497,   697,  1876,  1224,   493,   486,  1216,   342,   130,  1253,
     444,  1255,   493,  1293,  1294,  1259,  1211,   135,   592,  2833,
    2443,   484,   485,   486,   487,  2341,    27,    36,  1272,  1273,
    1962,  1275,   230,   363,  1285,   370,   219,   733,   495,  1349,
     484,   485,   486,   487,    75,   158,    55,  1213,  1214,   802,
     163,  1295,   399,   415,  1220,    86,    30,  1224,  1338,   482,
     483,   484,   485,   486,   487,  1223,   480,   356,  1348,   399,
    1350,   455,    23,  2878,  2040,  2041,  2042,  2043,    29,   493,
      54,   279,   265,  1561,   277,  2554,    64,    65,   524,   295,
     174,  2011,  1561,   477,  1900,   239,   491,   106,   794,   446,
    1906,   481,   149,  2868,   800,   801,   802,  1302,  2868,   403,
     440,   405,  1651,   491,   444,   495,   169,   230,  1653,  1539,
    1540,  1541,   818,   453,    23,    13,    14,     4,  1438,   130,
      29,   117,     9,    13,    14,   106,   489,  2951,   797,    11,
     493,   430,  1446,   492,  1310,   267,   495,   477,   872,   233,
     203,   847,  1827,   197,    23,   277,    55,   363,   911,  1735,
      29,   491,  1522,   109,   110,   218,   279,   197,   286,    41,
     130,   867,   868,   869,   227,   871,   872,  1850,  1473,  1474,
    1475,  2906,  2907,  1543,   135,  1545,  1419,   196,  1548,  2507,
     373,  1501,    20,   399,   219,   575,   156,   492,  2516,   895,
     495,    73,   491,  2521,  1566,  2024,  2524,   130,  1570,  2141,
    1572,   246,   356,  1446,   594,   201,  1755,   913,   914,   351,
     352,  1835,   340,   797,   342,  2543,   979,  2696,   947,   948,
    2955,   950,  1465,   156,   440,  1430,   245,  1470,   184,   185,
     265,   239,   446,  2476,   253,   947,   948,   453,   950,   432,
       4,   239,   370,   949,   174,     9,   265,   953,   954,   359,
     834,   697,  2701,   643,   644,   645,   135,   939,   964,  1887,
      23,   477,  1890,     4,   245,  1519,    29,   197,     9,   265,
     491,   267,   253,   979,     4,   491,   430,   296,   489,     9,
    1456,   491,   493,   363,   347,  1461,   474,   492,   872,   324,
     495,   247,   248,   249,   250,   251,   252,   267,  1004,   255,
     256,  2629,   272,   233,  1494,  1011,   363,   277,   493,   403,
     455,   405,  1638,   995,  1640,  1641,   356,   524,   455,   399,
    2204,   217,  2565,   342,   364,   286,  1032,   282,  1533,    23,
    1561,   474,   477,  2661,   145,    29,   430,   491,   373,   272,
     477,   167,   399,  1574,   277,   364,   491,   158,   356,   489,
     484,   491,   163,   493,   491,   491,   802,   287,   356,   399,
     440,   184,   185,   947,   948,   384,   950,  2170,     8,  2170,
    2170,    11,   135,  1578,  2170,   336,    16,    17,    18,   340,
     149,   328,   495,   440,  1638,  1639,  1640,  1641,  2794,    23,
    2633,   561,   562,   492,   564,    29,   453,   432,  2311,  2341,
     211,  2314,  1165,  1166,   360,   361,   446,   286,   492,   370,
      23,   491,    94,   213,   328,   492,    29,   364,   495,   230,
     477,  1675,   430,   453,  1729,   455,  1646,   474,   251,   252,
    1136,  2759,   430,   168,   491,     8,  1806,  2122,  1808,    54,
    2269,   135,  1148,    16,    17,    18,  2121,   417,  1211,   217,
     364,  1930,   399,  1159,   403,   491,   405,   336,   428,  1165,
    1166,   340,  2941,     5,  2109,   150,     8,  2795,   279,   403,
     150,   405,    14,   403,   669,   405,   437,   288,   492,  2885,
     336,   495,    24,   491,   417,   399,    28,   169,  2163,   492,
     697,   370,  2120,   491,  2122,   428,   691,   427,   150,   446,
     430,   135,  2908,   251,   252,  1211,   492,   492,   150,   495,
     495,   604,   491,   606,   492,   471,   472,   495,  1224,    13,
      14,   203,   135,   286,   492,   915,   721,   495,  1224,    13,
      14,  2080,   446,   979,  1240,   491,   218,   360,   361,  1302,
     492,  1904,  1905,   495,   267,   227,  1869,  1253,   492,  1255,
     940,   495,  1258,  1259,  1223,   493,  2884,  2963,   437,    36,
     492,  1250,  1268,   495,  1270,  1271,  1272,  1273,  1274,  1275,
    1276,   492,  1250,   336,   495,   965,  2307,   340,  2309,   261,
    1250,  1250,   492,  1250,   492,   495,    82,   495,   978,  1295,
     492,  1297,   286,   495,   363,   802,  1302,  1303,  1304,  1305,
    1306,  1307,    13,    14,   446,  1311,  1312,   370,  1928,   999,
    1316,   295,   360,   361,  1320,   426,   491,  1323,  1324,  1325,
    1326,  1327,  1328,  1329,  1330,  1331,   492,   457,  1334,   495,
     399,   492,   492,  1339,   495,   495,  1342,   832,  1344,  1223,
    1346,   443,   336,  1349,   284,   492,   340,   491,   495,   311,
    2479,   492,   286,  2141,   495,   850,  2598,   492,   492,   492,
     495,   495,   495,  1369,   491,   347,  1250,  1430,    13,    14,
    1366,   440,   492,   286,   437,   495,   370,   492,   150,   363,
     495,  1886,   492,  1389,   453,   495,   492,   492,   492,   495,
     495,   495,  2377,   492,  1400,  1401,   495,  1375,   492,  1930,
     491,   495,   336,   541,  2349,   543,   340,   492,   477,   492,
     495,   284,   495,    35,   492,   399,  2006,   495,     8,  1165,
    1166,    11,   491,   336,  1430,   563,   491,   340,   150,  1313,
    1436,   492,  1438,   491,   495,   492,   370,   492,   495,   492,
     495,   150,   495,   437,   524,  1999,  1951,  1923,   150,  1139,
     145,    41,   492,  2298,   282,   495,   440,   370,    48,   492,
      13,    14,   495,   158,  1969,  1211,    67,  2312,   163,   453,
    1533,  1477,   979,   492,  1480,  1481,   495,  1483,   492,   492,
     399,   495,   495,    73,   492,   492,   491,   495,   495,  1994,
      36,  1375,   228,   477,   492,  1501,  2001,   495,   491,  2089,
    2061,   492,   489,   437,   495,  2634,   492,   491,     5,   495,
      13,    14,  1518,  1519,   115,  1578,   211,     5,   492,   491,
    2140,   495,  2142,   492,   437,   492,   495,  1533,   495,   163,
    1508,   492,  1222,  2203,   495,   230,    13,    14,   478,   479,
     480,   491,   482,   483,   484,   485,   486,   487,    13,    14,
     491,  2156,   491,   143,   491,  1561,  1302,    13,    14,    13,
      14,    13,    14,    13,    14,    13,    14,   491,  1574,   491,
    1576,   172,  1578,    13,    14,    13,    14,  1583,    13,    14,
    2368,   491,  1588,   173,   279,     5,    13,    14,    13,    14,
      13,    14,  1626,   288,    13,    14,    13,    14,     5,   189,
     351,   352,   255,   256,   194,   478,   479,   480,   491,   482,
     483,   484,   485,   486,   487,   360,   361,   697,  1624,  1625,
    1626,   351,   352,  1629,  1508,   491,  2868,   351,   352,  2604,
     913,   914,  1638,  1639,  1640,  1641,  2141,   491,   491,   229,
     491,  1675,  1648,   491,     5,   491,  1652,     5,   491,  1655,
     491,   491,   491,  1343,   146,     9,   794,   491,  1165,  1166,
      15,   454,   800,   213,  1670,  1671,   267,    97,   495,  1675,
      36,   272,   370,   228,   163,  1365,   279,  1367,    11,   163,
     277,   491,    15,  1689,  1430,   410,  1692,   491,  1694,    22,
      86,  2470,   495,   410,   284,  2200,   410,    54,    54,   258,
      33,    34,   410,   492,  1211,     8,   410,   453,    11,  1715,
    2380,  2381,  1746,   500,   315,    93,   150,   493,   142,   267,
     267,  1727,   802,    36,  1414,  2409,   491,    36,  2318,   330,
     491,   426,     9,  1727,    35,   408,  1742,   408,    41,  1727,
     878,   489,  1626,  2333,   410,    48,   489,   410,  1742,   887,
    1756,   410,  1741,    86,  1742,   410,   495,   449,   491,    11,
     338,   495,   900,  1741,   490,   500,   495,  1773,  1774,   408,
      73,  1741,  1741,   911,  1741,   913,   914,   272,  2328,   491,
     410,   491,   177,   159,   168,   375,  1792,  1533,   434,   492,
     491,  1675,    36,   211,   489,  1302,   495,   492,   493,   373,
     283,  1491,  1492,  1809,  1810,  1811,   219,   495,   304,  1693,
    2598,   304,   491,   219,   267,   219,   288,   280,   320,   446,
     150,   491,     6,  1886,   491,  1709,   427,    11,   150,   453,
     267,    15,  1578,   434,   492,   282,   474,    21,    22,    23,
     143,   489,    26,  1727,  1850,    29,    30,    36,   474,    33,
      34,   492,   492,   282,    36,   492,   492,  1741,  1742,   267,
     492,   490,  1746,   168,   492,   474,   168,   492,   410,   492,
     173,    55,   492,   492,  2379,   493,   492,   492,   492,   492,
    1886,   491,   292,   491,   491,   475,   189,   491,  1951,   450,
     450,   194,   482,   483,   484,   485,   486,   487,   480,   979,
     440,    85,    86,    87,    88,    89,  1969,   282,   476,   283,
     283,     8,   283,   432,    11,   495,    94,   238,   267,    16,
      17,    18,  1928,  1430,  1930,   410,   229,   491,   150,   197,
     150,  1994,   150,   286,   410,   410,   410,  2922,  2001,  2470,
     410,   492,  1948,   274,   453,  1951,   274,   490,  1926,    36,
     491,  1957,   524,   492,  1960,   280,   282,  1963,   495,   150,
     490,  2024,   490,  1969,  1970,  1971,  1972,  1973,   272,  2003,
    1976,  1977,  1978,  1979,  1980,  1981,  1982,  1983,  1984,  1985,
     150,   284,   141,  1989,  1990,   168,  2036,    11,  1994,   163,
     491,   169,   492,  1999,   492,  2001,   168,  2003,   492,   450,
    2034,   492,   399,   168,   477,   495,  2012,   344,   177,  2015,
     492,  2017,   492,   439,    84,   150,   283,  2051,  2024,  2025,
     491,   172,  2028,  2029,   491,   203,  1533,  2033,  2034,   421,
    1720,   492,   492,   492,   491,     3,    36,     5,  2643,    79,
     218,   434,  1926,  2049,   168,  2051,   492,   491,   490,   227,
     495,   492,   495,   492,   401,  2049,  2062,  2051,   491,   291,
     492,  2049,   218,  2051,   218,   289,  2072,    54,   181,   199,
     492,  1578,   375,   453,   272,   491,   491,  2697,  2141,   491,
    2868,   492,  2088,   261,   187,  1165,  1166,  2563,   493,  2712,
     492,   480,   272,  2598,   493,   493,   524,   194,   410,   493,
     410,    36,   493,   493,   282,   493,   493,   493,   493,   267,
     493,   493,   493,   480,   493,   107,   493,   453,   215,  2003,
     282,   493,    36,   493,   493,   697,  1264,   492,  2648,   493,
    2136,  1211,   491,   493,  2140,  2141,  2142,  2200,   168,   491,
    1886,   109,   110,   493,   301,   493,  2666,   493,   954,   493,
    2034,   493,   493,   493,   493,   218,   491,   491,   452,   491,
    2665,    86,   131,  2668,   330,  2049,   499,  2051,   492,   347,
     219,   491,   475,   491,    81,   115,    36,  1867,  2801,   482,
     483,   484,   485,   486,   487,  1875,  1876,   284,   150,  1879,
      73,   122,   492,   150,  2200,   528,    36,   492,    54,   352,
     352,    36,  2756,  1893,   491,  1951,  2269,   491,   491,   491,
     491,  2217,   439,  2191,    73,   495,   184,   185,   434,  1357,
      36,   186,  1302,  1969,   434,   421,  2780,   285,  2782,    67,
     802,    67,   491,   491,   495,     8,    36,   354,    11,   370,
     480,   272,  2718,    16,    17,    18,   243,  2867,  1994,   186,
     491,   584,  2772,   421,    36,  2001,   434,  2263,  2264,  2873,
      33,   491,  2268,  2269,   285,   285,   491,  2273,   491,   697,
    2276,  2277,   265,   492,   282,  2281,   351,   492,  2024,   247,
     248,   249,   250,   251,   252,     9,   337,   255,   256,   199,
      33,   109,   110,   282,   282,   492,  2302,   481,   491,   120,
    2306,     9,    22,   487,   432,   492,   490,  2191,  2302,  2136,
    1804,   495,  2306,   592,  2302,   499,  2379,  1224,  2306,  2123,
    2796,  1367,  2328,  1444,  2795,  2332,  2086,  2539,  2864,  2373,
    2870,  2944,  2704,  2921,  2909,   966,  2619,  1798,  1810,  2867,
    1862,  2919,   526,   527,   528,  1271,  2409,  2184,  2140,  1795,
    1430,  2865,  2330,  2331,  2176,  2361,  2046,  2047,  2048,  2751,
    1366,  1574,  1866,  2868,  2370,  1928,   184,   185,  2470,   932,
    2166,   905,  1417,  2379,   802,   559,   560,   561,   562,  1886,
     564,   478,   479,   480,  1756,   482,   483,   484,   485,   486,
     487,   575,   360,   361,   956,  2141,  2769,  2684,  2855,   957,
     584,  1389,  1773,  2409,  2850,  2066,  2784,   979,  1742,  2051,
     594,  2324,  2102,   597,  1416,   959,  2479,  2293,  2302,  2308,
    2662,  2049,  2306,  1561,  2759,  2758,  2776,  1565,  2777,   247,
     248,   249,   250,   251,   252,  1264,  1574,   255,   256,  1264,
    1264,  1264,   215,  2535,  1951,  2853,  2330,  2331,  2837,  2854,
    1340,  1693,  1653,  1533,  2200,  1759,  1255,  1483,  1344,   643,
     644,   645,  1969,  1389,  2470,  1271,  1584,  1690,  1730,  2065,
    2476,   939,  2087,  2479,  2452,  1870,  1213,  2483,  1165,    -1,
      -1,  2171,    -1,    -1,    -1,  2491,  2492,  1994,    -1,  2495,
      -1,    -1,    -1,    -1,  2001,    -1,    -1,    -1,  1578,    -1,
      -1,  2507,    -1,   471,   472,    -1,    -1,    -1,    -1,    -1,
    2516,   284,    -1,  2507,  2204,  2521,    -1,  2024,  2524,  2507,
      -1,    -1,  2516,  2269,    -1,  2531,  2532,  2521,  2516,    -1,
    2524,    -1,    -1,  2521,    -1,  2598,  2524,  2543,    -1,  2545,
      -1,    -1,   360,   361,     8,    -1,    -1,    11,    -1,  2543,
      -1,   979,    16,    17,    18,  2543,    -1,    -1,    -1,  2565,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2452,   524,
      -1,  2634,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1389,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2598,  1165,  1166,  2285,  2286,  2287,  2288,   932,
      36,     8,  2665,    -1,    11,  2668,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    50,    -1,    -1,    -1,    55,
      -1,    -1,   806,  2629,    -1,    -1,    33,  2633,  2634,    -1,
    2608,    -1,  2516,  2379,  2141,  2629,    -1,  2521,  2672,  1211,
    2524,  2629,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2657,  2630,   471,   472,  2661,    -1,    -1,    -1,  2665,
      95,    -1,  2668,  2409,    -1,    -1,  2672,  2661,    -1,    -1,
     106,    -1,    -1,  2661,    -1,    -1,    -1,  1815,    -1,    -1,
      -1,  2687,    -1,    -1,    -1,    -1,   121,    -1,    -1,   873,
      -1,  2697,    -1,  2200,    -1,  2701,  2702,    -1,  1624,  1625,
      -1,    -1,    -1,  1629,   139,   478,   479,   480,   143,   482,
     483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1860,    -1,  2608,    -1,    -1,    -1,    -1,   164,
    1302,   915,   167,  2479,    -1,  1873,   172,  1165,  1166,    -1,
      -1,    -1,   697,    -1,  1670,  1671,  2630,   182,   932,   933,
    2756,   215,    -1,  2759,  2732,   939,   940,   941,    -1,    -1,
     196,    -1,  2269,    -1,    -1,  2759,    -1,    -1,    -1,    -1,
      -1,  2759,    -1,    -1,  2780,    -1,  2782,  2661,  2784,    -1,
      -1,   965,   966,  1211,    -1,    -1,    -1,    -1,  2672,  2795,
      -1,    -1,  1930,    -1,   978,    -1,    -1,  1935,    -1,  1937,
      -1,  2795,    -1,  1941,  1942,  2868,  1886,  2795,   215,   245,
    2816,   995,    -1,  2791,    -1,   999,    -1,   253,  1624,  1625,
     284,    -1,    -1,  1629,    -1,    -1,    -1,    -1,    -1,   265,
    2836,  2837,    -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,
      -1,    -1,    -1,    -1,  2850,   280,    -1,   802,  2732,    -1,
      -1,    -1,  2598,    -1,    -1,    -1,    -1,    -1,  1430,    -1,
     296,  2867,  2868,    -1,  1670,  1671,    -1,    -1,    -1,    -1,
      -1,  1951,  2379,    -1,  1302,    -1,    -1,   284,  2884,    -1,
    2886,    -1,  2572,    -1,  1217,    -1,  1219,   322,  2634,  1969,
    2884,    -1,    -1,    -1,    -1,    -1,  2884,    -1,    -1,  2877,
      -1,    -1,  2409,    -1,    -1,    -1,   342,  2791,    -1,    -1,
      -1,    -1,    -1,    -1,  1994,    -1,    -1,    -1,    -1,  2665,
      -1,  2001,  2668,    -1,    -1,    -1,    -1,    -1,   364,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2626,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2024,    -1,  2952,  1131,   384,    -1,
      -1,    -1,    -1,    -1,    -1,  1139,    -1,    -1,    -1,    -1,
      -1,  1533,    -1,  1147,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2877,  1178,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1430,  2141,    -1,  2695,  1578,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   979,    -1,    -1,    -1,  2166,  1213,
    1214,    -1,  1216,  1217,    -1,  1219,  1220,    -1,  1222,    -1,
      -1,  2731,    -1,    -1,  1970,  1971,  1972,  1973,    -1,    -1,
    1976,  1977,  1978,  1979,  1980,  1981,  1982,  1983,  1984,  1985,
      -1,  2141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,    -1,    -1,    -1,   170,  1269,    -1,    -1,   174,  1422,
      -1,  2598,    -1,    -1,    -1,    -1,  1280,    -1,    -1,  1432,
      -1,  1434,  2028,  2029,  1437,  1533,    -1,    -1,    -1,    -1,
    1443,   197,  1445,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2200,    -1,  2868,    -1,  1457,    -1,  1310,  2634,    -1,  1462,
      -1,    -1,    -1,  1466,  1467,  1468,  1469,    -1,  1471,  1472,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
    1578,    -1,    -1,    -1,   240,    -1,    -1,    -1,  2665,  1343,
    1344,  2668,    -1,    -1,  1970,  1971,  1972,  1973,    -1,    -1,
    1976,  1977,  1978,  1979,  1980,  1981,  1982,  1983,  1984,  1985,
      -1,  1365,    -1,  1367,    -1,    -1,    -1,  2325,     8,  2269,
      -1,    11,    -1,  1377,    -1,  1379,    16,    17,    18,    -1,
      -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1165,  1166,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2028,  2029,    -1,    -1,    -1,    -1,    -1,    -1,
    1414,    -1,    -1,    -1,    -1,    -1,    -1,  1421,  1422,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1432,  1433,
    1434,  1435,    -1,  1437,    -1,    -1,  1211,    -1,    -1,  1443,
      -1,  1445,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     356,    -1,  1456,  1457,    -1,    -1,    -1,  1461,  1462,    -1,
      -1,    -1,  1466,  1467,  1468,  1469,    -1,  1471,  1472,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1491,  1492,  1493,
      -1,  2449,    -1,    -1,  1886,    -1,    -1,   403,    -1,   405,
      67,    -1,    -1,    -1,    -1,  1509,    73,    -1,    -1,  2409,
      -1,    -1,  2470,    -1,    -1,   421,    -1,    -1,    -1,    86,
      -1,   427,    -1,    -1,   430,     0,    -1,  1302,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,  2868,    -1,    -1,    19,    -1,    -1,    -1,   115,    -1,
     117,    -1,     8,    -1,    29,    11,    31,    32,    -1,  1951,
      16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    47,    -1,    48,   215,  2534,  1969,    -1,  2479,
      -1,    56,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,  1994,    -1,    79,   172,    -1,    -1,    -1,  2001,
      -1,    -1,    -1,    -1,     8,    -1,    91,    11,    93,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2024,    -1,   201,    -1,   111,    -1,  1886,    -1,
    2598,    -1,  1646,    -1,   284,    -1,    -1,    41,    -1,  1653,
     125,    -1,    -1,    -1,    48,  1430,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   143,
      -1,    -1,    -1,    -1,   149,    -1,   151,   152,    -1,    73,
      -1,    -1,    -1,  1687,    -1,    -1,    -1,    -1,    -1,   164,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2598,   173,
     267,    -1,    -1,  1951,    -1,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,  1720,    -1,   193,    -1,
     194,  1969,    -1,  1727,  1877,    -1,    -1,    -1,    -1,    -1,
    2476,    -1,    -1,    -1,  2634,    -1,    -1,    -1,  1742,    -1,
      -1,    -1,  1746,    -1,    -1,  1749,  1994,  1751,   315,  2141,
      -1,    -1,    -1,  2001,    -1,   229,    -1,   232,  1533,   215,
      -1,    -1,    -1,   330,    -1,  2665,    -1,    -1,  2668,  2727,
      -1,    -1,    -1,    -1,    -1,    -1,  2024,    -1,    -1,   173,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,  1800,    -1,    -1,    -1,
     194,    -1,    -1,  1578,    -1,    -1,    -1,    -1,  2200,    -1,
     284,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,  2565,
      -1,   215,   216,    48,    -1,    -1,    -1,    -1,   284,    -1,
      -1,    -1,    -1,    -1,   309,   229,    -1,   312,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,    73,    -1,
    2476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1862,    -1,
     427,    -1,    -1,  1867,    -1,   340,    -1,   434,    -1,    -1,
    1874,  1875,  1876,  1877,   349,  1879,   270,  2269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2633,   363,  1893,
     284,    -1,    -1,  2141,    -1,   370,    -1,     8,    -1,   374,
      11,   375,    -1,  1907,    -1,    16,    17,    18,    -1,   384,
    2868,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,  1923,
     395,    -1,    -1,    -1,   399,    -1,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,  1939,  1940,    48,    -1,  2565,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,  2104,  2200,    -1,    -1,    -1,    -1,    -1,  1962,    -1,
     435,    -1,    73,    -1,   189,   440,    -1,    -1,  2868,   194,
      -1,    -1,    -1,    -1,    -1,  2128,    -1,    -1,   453,    -1,
      -1,   375,    -1,    -1,    -1,    -1,    -1,  2379,    -1,    -1,
    2143,  2144,  2145,  2146,  2147,  2148,  2149,  2150,  2151,  2152,
      -1,   475,   477,    -1,   229,    -1,    -1,  2633,   482,   483,
     484,   485,   486,   487,    -1,    -1,   491,  2409,    -1,   494,
      -1,  2269,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,    -1,    -1,  2038,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2046,  2047,  2048,  2049,    -1,  2051,  2052,    -1,
      -1,    -1,  2056,  2057,    -1,    -1,    -1,    -1,    -1,   284,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,   475,  2086,   194,   478,   479,   480,  2479,   482,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,  2102,    -1,
    2104,    -1,    -1,    -1,  2108,  2109,  2110,    -1,  2112,    -1,
      -1,  1886,    -1,    -1,    -1,   794,    -1,    -1,   229,    -1,
      -1,   800,    -1,    -1,  2128,    -1,  2130,    -1,    -1,    -1,
      -1,  2379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2143,
    2144,  2145,  2146,  2147,  2148,  2149,  2150,  2151,  2152,    -1,
     375,    -1,    -1,   559,   560,    -1,    -1,    -1,    -1,    -1,
      -1,  2409,    -1,    -1,  2168,    -1,    -1,  2171,    -1,    -1,
      -1,    -1,    -1,   284,    -1,    -1,  1951,    -1,    -1,    -1,
    2184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2192,    -1,
      -1,    -1,    -1,    -1,  1969,    -1,    -1,    -1,    -1,    -1,
    2204,    -1,    -1,    -1,    -1,    -1,  2598,  2211,   887,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   622,   623,    -1,  1994,
      -1,    -1,    -1,    -1,    -1,    -1,  2001,    -1,    -1,    -1,
      -1,  2479,   911,    -1,   913,   914,    -1,    -1,    -1,    -1,
      -1,    -1,  2634,    -1,    -1,    -1,    -1,     0,    -1,  2024,
     475,    -1,    -1,    -1,    -1,  2259,    -1,   482,   483,   484,
     485,   486,   487,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2665,    -1,    -1,  2668,    -1,  2282,    -1,
      -1,  2285,  2286,  2287,  2288,    -1,    -1,    -1,  2292,  2293,
      -1,  2295,    -1,    -1,  2298,    -1,    -1,    -1,  2302,    -1,
      -1,   980,  2306,    -1,   983,   984,    -1,    -1,  2312,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2328,    -1,    -1,    -1,  2332,    -1,
      -1,    -1,    -1,  2337,    -1,    -1,    -1,  2341,    -1,    -1,
      93,    -1,    -1,    -1,    -1,  2349,    -1,    -1,    -1,    -1,
    2598,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   475,    -1,  2141,   478,   479,   480,
    2374,   482,   483,   484,   485,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2634,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,   801,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,
     163,  2564,   818,    -1,    -1,   168,    -1,  2665,    -1,    -1,
    2668,    -1,    -1,    -1,   177,  2200,    -1,    -1,   181,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2443,
      -1,   847,    -1,    -1,    -1,    -1,  2599,  2600,    -1,  2453,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,  2463,
    2613,   867,   868,   869,    -1,    -1,   872,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2868,   230,    -1,    -1,
      -1,    -1,    -1,     8,  1163,    -1,    11,    -1,    -1,   895,
      -1,    16,    17,    18,  2269,  1174,    -1,  1176,    -1,    -1,
      -1,    -1,  1181,  2507,  2508,    -1,    -1,  2511,    33,    -1,
    2514,    -1,  2516,    -1,    -1,    -1,    -1,  2521,    -1,  1198,
    2524,    -1,  2526,    -1,    -1,  2529,   279,    -1,    -1,   282,
      -1,    -1,    -1,  2686,    -1,   288,    -1,    -1,    -1,  2543,
      -1,    -1,    -1,   949,    -1,    -1,    -1,   953,   954,    -1,
    1229,  1230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2563,
    2564,  2714,    -1,    -1,    -1,    -1,    -1,     8,  2572,    -1,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,  1261,  1262,    -1,    -1,  1265,  1266,    -1,    -1,
      -1,   344,    33,    -1,    -1,  2599,  2600,    -1,  1004,    -1,
      41,    -1,    -1,    -1,  2379,  1011,  2610,    48,    -1,  2613,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2868,    -1,  2626,    -1,    -1,  2629,  1032,    -1,    -1,    -1,
      -1,    -1,    73,    -1,  2409,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2648,    -1,   399,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2661,    -1,    -1,
      -1,    -1,  2666,    -1,     0,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   426,    -1,    -1,    -1,  2681,    -1,    -1,
      -1,   434,  2686,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,  2695,    -1,    -1,    -1,    -1,    -1,   450,    -1,   452,
     453,    -1,    -1,    -1,  2479,    -1,    -1,    -1,    -1,    -1,
    2714,    -1,    -1,    -1,  2718,    -1,    -1,    -1,    -1,    -1,
      -1,  1400,  1401,    -1,    -1,    -1,    -1,  2731,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,   489,    -1,    -1,   492,
     493,   494,  1148,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,   194,    -1,  2759,    -1,    93,    -1,   284,
      -1,    -1,    -1,    -1,  2768,    -1,    -1,    -1,  2772,    -1,
      -1,  1450,  2776,    -1,   215,   216,    -1,    -1,    -1,    -1,
      -1,  1460,    -1,    -1,  1463,    -1,    -1,    -1,   229,    -1,
      -1,  2795,  2796,  2797,  2798,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,  2598,    -1,    -1,   267,   163,    -1,   270,
      -1,    -1,   168,    41,    -1,    -1,    -1,  2841,    -1,     0,
      48,   177,    -1,   284,    -1,   181,   287,    -1,    -1,  2853,
      -1,  2855,  1258,    -1,    -1,  1534,  1535,    -1,    -1,  2634,
    2864,    -1,  1268,    -1,  1270,    73,    -1,  1273,  1274,  1275,
    1276,    -1,    -1,    -1,  2878,   211,    -1,    -1,    -1,    -1,
    2884,    -1,  1561,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2665,  1297,    -1,  2668,   230,  1574,    -1,  1303,  1304,  1305,
    1306,  2905,    -1,    -1,    -1,  1311,  1312,    -1,    -1,    -1,
    1316,    -1,    -1,    -1,  1320,    -1,    -1,  1323,  1324,  1325,
    1326,  1327,  1328,  1329,  1330,  1331,    -1,    -1,  1334,    -1,
      -1,    -1,    93,  1339,   375,   143,  1342,    -1,  1344,    -1,
    1346,    -1,    -1,   279,    -1,     8,   282,    -1,    11,    -1,
      -1,    -1,   288,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,  1369,    -1,   173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   888,    -1,    -1,    23,    41,    -1,
      -1,   189,    -1,    29,   145,    48,   194,    -1,    -1,    -1,
      36,    -1,    -1,    -1,  1400,  1401,    -1,   158,    -1,    -1,
      -1,    -1,   163,    -1,    -1,    -1,    -1,   168,   344,    55,
      73,    -1,    -1,    -1,   928,    -1,   177,    -1,    -1,    -1,
     181,   229,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,   475,    -1,    -1,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,    33,    -1,    -1,
     211,    -1,    -1,  1732,   495,    41,    -1,    -1,    -1,    -1,
     106,    -1,    48,   399,    -1,    -1,    -1,    -1,    -1,   230,
      -1,  1477,    -1,    -1,  1480,  1481,   284,  1483,    -1,    -1,
     143,    -1,    -1,    -1,  1763,  1764,    -1,    73,    -1,   135,
     426,    -1,    -1,  2868,    -1,    -1,    -1,    -1,   434,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
     173,    -1,  1518,    -1,   450,    -1,   452,   453,   279,    -1,
      -1,   282,  1036,    -1,    33,    -1,   189,   288,    37,  1043,
      -1,   194,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,   489,    -1,    -1,   492,   493,   494,    -1,
      -1,    -1,    -1,    -1,    73,    -1,   229,   375,    -1,    -1,
    1576,    -1,    -1,    -1,    -1,    -1,    -1,  1583,    -1,    -1,
      -1,    -1,  1588,   344,    -1,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   245,
      -1,    -1,    -1,   189,    -1,    -1,    -1,   253,   194,    -1,
      -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,   265,
    1626,   284,  1901,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,  1638,    -1,  1640,  1641,    -1,    -1,   399,    -1,
     286,    -1,  1648,   229,    -1,    -1,  1652,    -1,    -1,  1655,
     296,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,   426,    -1,   475,    -1,    -1,
      -1,    -1,    -1,   434,   482,   483,   484,   485,   486,   487,
     189,   267,    -1,  1689,   270,   194,  1692,    -1,  1694,   450,
     336,   452,   453,    -1,   340,    -1,   342,    -1,   284,    -1,
      -1,   287,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,   375,    -1,    -1,    -1,    -1,    -1,   364,    -1,
     229,    -1,    -1,    -1,   370,    -1,    -1,    -1,   489,    -1,
      -1,   492,   493,   494,    -1,    -1,    -1,    -1,   384,    -1,
       8,    -1,  1256,    11,    -1,    -1,    -1,    -1,    -1,    -1,
    1756,    -1,    -1,  1267,    -1,    -1,    -1,  1271,   267,    -1,
      -1,   270,    -1,  1277,  1278,  1279,    -1,  1773,  1774,     3,
      -1,    36,  1286,    41,     8,   284,    -1,    11,   287,    -1,
      48,    -1,    16,    17,    18,    -1,  1792,    -1,    -1,   375,
      55,   437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    36,    -1,    -1,    73,    -1,    41,    -1,    -1,
      -1,    -1,   475,    -1,    48,    -1,    -1,    -1,    -1,   482,
     483,   484,   485,   486,   487,    -1,    -1,  1341,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,   106,   107,    -1,  1850,    -1,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2141,    -1,    -1,    -1,   375,    -1,    -1,    -1,
      -1,  1385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1399,    -1,    -1,    -1,   475,
    1404,    -1,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,    -1,    -1,    -1,   173,   492,   172,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,   434,   194,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
      -1,    -1,  1948,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1957,    -1,    -1,  1960,   189,    -1,  1963,    -1,    -1,
     194,   229,    -1,    -1,    -1,    -1,   475,    -1,    -1,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,    -1,
     245,   215,   216,  1989,  1990,    -1,    -1,    -1,   253,    -1,
      -1,    -1,    -1,    -1,    -1,   229,    -1,  2003,    -1,    -1,
     265,    -1,   267,    -1,    -1,    -1,  2012,    -1,    -1,  2015,
      -1,  2017,    -1,    -1,    -1,    -1,   284,    -1,    -1,  2025,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2033,  2034,    -1,
      -1,   296,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,    -1,    -1,  2062,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2072,    -1,    -1,    -1,
      -1,    -1,  1586,    -1,    -1,    -1,    -1,   342,    -1,    -1,
      -1,    -1,  2088,    -1,    -1,    -1,    -1,    -1,    -1,  2368,
      -1,  1605,    -1,    -1,  2373,    -1,    -1,    -1,    -1,   364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,  1622,    -1,
    1624,  1625,    -1,  1627,    -1,  1629,    -1,    -1,    -1,   384,
    1634,   386,    -1,  1637,   389,    -1,    -1,    -1,  1642,    -1,
       8,  1645,    -1,    11,    -1,    -1,  2415,  2416,    16,    17,
      18,   375,    -1,  1657,    -1,    -1,    -1,  1661,  1662,  1663,
    1664,    -1,    -1,    -1,    -1,    33,  1670,  1671,    36,  1673,
    1674,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,     8,
      48,  1685,    11,    -1,  1688,    -1,    -1,    16,    17,    18,
      -1,    -1,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,
    1704,  1705,    -1,    -1,    33,    73,    -1,    -1,    -1,  1713,
      -1,    -1,    41,  1717,    -1,    -1,    -1,   475,    -1,    48,
      -1,  2217,    -1,    -1,   482,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,    -1,  1739,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,   475,    -1,    -1,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,    -1,    -1,    -1,  2263,  2264,    -1,
      -1,    -1,  2268,    -1,    -1,    -1,    -1,  2273,    -1,    -1,
    2276,  2277,    -1,    -1,    -1,  2281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2587,  2588,
      -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,  2598,
      -1,    -1,  2328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,    -1,    -1,   215,   216,    -1,
      -1,  1855,  1856,  1857,    -1,    -1,    -1,    -1,    -1,    -1,
     189,   229,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2370,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,  1895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,
     229,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,
      -1,   270,    -1,  1947,    -1,    -1,    -1,    -1,    -1,  1953,
      -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,   287,    -1,
      -1,    -1,  1966,  1967,  1968,    -1,  1970,  1971,  1972,  1973,
      -1,    -1,  1976,  1977,  1978,  1979,  1980,  1981,  1982,  1983,
    1984,  1985,  1986,    -1,    -1,    -1,    -1,  2483,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2491,  2492,    -1,    -1,  2495,
    2004,    -1,    -1,  2007,    -1,  2009,    -1,   375,    -1,  2013,
    2014,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2027,  2028,  2029,  2030,    -1,  2032,    -1,
      -1,    -1,    -1,    -1,    -1,  2531,  2532,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,    -1,  2545,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2868,
      -1,  2105,    -1,    -1,    -1,    -1,    -1,   475,    -1,    -1,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    21,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,   475,    -1,    -1,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,    -1,
      33,  2657,    -1,   492,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,  2672,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    74,    -1,    -1,    -1,    -1,
      -1,  2687,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    90,    -1,    -1,    -1,    -1,  2702,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2218,    -1,    -1,    -1,  2222,  2223,
      -1,  2225,    -1,    -1,  2228,  2229,  2230,  2231,    -1,    -1,
      -1,  2235,  2236,  2237,  2238,  2239,  2240,  2241,  2242,  2243,
    2244,  2245,  2246,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2256,    -1,    -1,   144,    -1,    -1,  2262,    -1,
      -1,  2265,    -1,  2267,   153,    -1,    -1,  2271,    -1,    -1,
    2274,  2275,    -1,    -1,  2278,  2279,   165,    -1,    -1,    -1,
      -1,   170,    -1,    -1,     8,    -1,    -1,    11,  2784,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   197,    33,
      -1,    -1,    -1,    -1,    -1,  2319,   189,    41,    -1,    -1,
    2816,   194,    -1,  2327,    48,    23,    -1,    -1,    -1,    -1,
      -1,    29,    -1,    -1,    -1,    -1,  2340,    -1,    36,    -1,
    2836,  2837,   215,   216,    -1,    -1,    -1,    -1,    -1,    73,
      -1,   240,    -1,    -1,  2850,   244,   229,    55,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2886,    -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,    -1,
      -1,   284,    -1,    -1,   287,    -1,    -1,    -1,   307,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   321,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
      -1,    -1,    -1,    -1,    -1,    -1,  2952,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   353,   189,    -1,   356,  2472,    -1,
     194,    -1,  2476,    -1,    -1,   364,    -1,    -1,   367,    -1,
      -1,  2485,  2486,  2487,    -1,    -1,  2490,    -1,    -1,  2493,
    2494,   215,   216,    -1,  2498,    -1,    -1,   386,   196,    -1,
      -1,    -1,   375,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     399,    -1,    -1,    -1,    -1,    -1,    -1,   406,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   415,    -1,    -1,    -1,
      -1,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,    -1,    -1,   270,   245,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   253,    -1,   446,    -1,    -1,
     284,  2565,    -1,   287,    -1,    -1,    -1,   265,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2584,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,    -1,
      -1,    -1,   475,    -1,    -1,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2632,  2633,
      -1,    -1,    -1,    -1,  2638,  2639,  2640,    -1,   336,    -1,
      -1,    -1,   340,    -1,   342,    -1,    -1,    -1,    -1,    -1,
      -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   364,    -1,    -1,    -1,
      -1,    -1,   370,    -1,    -1,  2679,  2680,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   384,    -1,    -1,  2693,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2705,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   437,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2753,
      -1,   475,    -1,    -1,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,    -1,    -1,    -1,  2771,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2793,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2807,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,  2875,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,  2889,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,   130,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,
     482,   483,   484,    -1,    -1,    -1,    -1,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,    -1,   498,   499,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,    -1,    -1,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,    -1,    -1,    -1,    -1,   482,   483,    -1,
      -1,    -1,    -1,    -1,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,    -1,   498,   499,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,    -1,    -1,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
      -1,    -1,    -1,    -1,   482,   483,    -1,    -1,    -1,    -1,
      -1,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,    -1,
     498,   499,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,   168,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,    -1,    -1,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,    -1,    -1,    -1,    -1,
      -1,   482,   483,    -1,    -1,    -1,    -1,    -1,   489,    -1,
     491,    -1,    -1,    -1,    -1,   496,    -1,   498,   499,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      34,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,    -1,    -1,    -1,    -1,    -1,   482,   483,
      -1,    -1,    -1,    -1,    -1,   489,    -1,   491,    -1,    -1,
      -1,    -1,   496,    -1,   498,   499,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
      -1,    -1,    -1,    -1,    -1,   482,   483,   484,    -1,    -1,
      -1,    -1,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,
      -1,   498,   499,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,   482,   483,    -1,    -1,    -1,    -1,    -1,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,    -1,   498,   499,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,   482,
     483,    -1,    -1,    -1,    -1,    -1,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,    -1,   498,   499,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,   482,   483,    -1,    -1,
      -1,    -1,    -1,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,    -1,   498,   499,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,    -1,    -1,
      -1,    -1,    -1,   482,   483,    -1,    -1,    -1,    -1,    -1,
     489,    -1,   491,    -1,    -1,    -1,    -1,   496,    -1,   498,
     499,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,   168,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,
     482,   483,    -1,    -1,    -1,    -1,    -1,   489,    -1,   491,
      -1,    -1,    -1,    -1,   496,    -1,   498,   499,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,   482,   483,    -1,
      -1,    -1,    -1,    -1,   489,    -1,   491,    -1,    -1,    -1,
      -1,   496,    -1,   498,   499,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
      -1,    -1,    -1,    -1,   482,   483,    -1,    -1,    -1,    -1,
      -1,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,    -1,
     498,   499,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,    -1,    -1,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,    -1,    -1,    -1,    -1,
      -1,   482,   483,    -1,    -1,    -1,    -1,    -1,   489,    -1,
     491,    -1,    -1,    -1,    -1,   496,    -1,   498,   499,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,    -1,    -1,    -1,    -1,    -1,   482,   483,
      -1,    -1,    -1,    -1,    -1,   489,    -1,   491,    -1,    -1,
      -1,    -1,   496,    -1,   498,   499,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
      -1,    -1,    -1,    -1,    -1,   482,   483,    -1,    -1,    -1,
      -1,    -1,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,
      -1,   498,   499,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,   482,   483,    -1,    -1,    -1,    -1,    -1,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,    -1,   498,   499,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,   482,
     483,    -1,    -1,    -1,    -1,    -1,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,    -1,   498,   499,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,   482,   483,    -1,    -1,
      -1,    -1,    -1,   489,    -1,   491,    -1,    -1,    -1,    -1,
     496,    -1,   498,   499,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,    -1,    -1,
      -1,    -1,    -1,   482,   483,    -1,    -1,    -1,    -1,    -1,
     489,    -1,   491,    -1,    -1,    -1,    -1,   496,    -1,   498,
     499,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,   483,    -1,    -1,     3,     4,     5,     6,     7,   491,
       9,    10,    -1,    -1,    -1,    -1,   498,   499,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   482,   483,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   491,    -1,    -1,    -1,    -1,    -1,    -1,   498,
     499,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   491,
      -1,    -1,    -1,    -1,    -1,    -1,   498,   499,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,    -1,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,    -1,    -1,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,   483,     3,
      -1,    -1,    -1,    -1,   489,    -1,   491,    -1,    -1,    -1,
      -1,   496,    -1,   498,   499,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,   169,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,    -1,    -1,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,   283,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,    -1,
      -1,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,    -1,     3,   477,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   491,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,   283,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   491,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   491,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,    -1,    -1,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,    -1,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     491,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,   282,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,    -1,     3,    -1,
      -1,    -1,    -1,    -1,   482,   483,   484,    -1,    -1,    -1,
      -1,    -1,    -1,   491,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,    -1,
     445,   446,   447,   448,    -1,    -1,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
      -1,     3,   477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   491,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,    -1,     3,   477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   491,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,    -1,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,    -1,   445,   446,   447,   448,
      -1,    -1,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,    -1,     3,   477,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   491,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,    -1,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   491,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,    -1,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,    -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   491,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   491,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
      -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,    -1,   445,   446,
     447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   491,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,    -1,   491,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,    -1,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,   291,   292,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   471,   472,   473,   474,    -1,     3,    -1,
     478,   479,   480,     8,   482,   483,   484,   485,   486,   487,
      -1,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,    -1,
     445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,    16,
      17,    18,    -1,    -1,    -1,    -1,    41,    -1,    -1,     8,
      -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    33,    -1,    -1,     8,    73,    -1,
      11,    -1,    41,    -1,    -1,    16,    17,    18,    -1,    48,
      -1,    -1,    -1,    -1,    -1,     8,    73,    -1,    11,    -1,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    73,    -1,    -1,    48,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    41,   173,    -1,    -1,   194,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,   173,    -1,    -1,   194,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
     189,    -1,    -1,    -1,   229,   194,    -1,    -1,   215,   216,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,   215,   216,   189,    -1,
     173,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,
     229,    -1,   267,    -1,    -1,   270,   189,    -1,    -1,    -1,
      -1,   194,    -1,    -1,   215,   216,    -1,    -1,    -1,   284,
     267,    -1,   287,   270,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,   215,   216,    -1,    -1,    -1,   284,   267,    -1,
     287,   270,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,    -1,   173,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,   270,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,    -1,   284,   267,    -1,   287,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,   284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,
     375,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,   375,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,    -1,    33,
      -1,   267,    -1,    -1,   270,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,   284,    -1,
      -1,   287,    -1,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     475,    -1,    -1,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,   492,   475,    -1,
      -1,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,    -1,    -1,    -1,    -1,   492,   475,    -1,    -1,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   375,
      -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   475,    -1,    -1,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,    -1,    -1,   173,
      -1,   492,   475,    -1,    -1,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   189,    -1,    -1,    -1,   492,
     194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
      -1,    -1,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,
      -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   475,     3,    -1,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,    -1,    -1,   490,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,    -1,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,   228,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,   345,   346,    -1,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,    -1,   445,   446,   447,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,   484,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,   282,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,   345,   346,
      -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,    -1,   445,   446,
     447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     3,     4,
       5,    -1,    -1,    -1,     9,   482,   483,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,   282,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,    -1,
     445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       3,     4,     5,    -1,    -1,    -1,     9,   482,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,   282,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,   345,   346,    -1,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,    -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,    -1,     8,    -1,    -1,    11,    -1,    -1,   482,
     483,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,    16,
      17,    18,    -1,    -1,    -1,    -1,    41,    -1,    -1,     8,
      -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    33,    -1,    -1,    36,    73,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,     8,    73,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,     8,    -1,    -1,    11,    -1,    -1,   163,    -1,
      16,    17,    18,   168,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,   162,    -1,    33,    -1,    -1,
      36,    -1,    -1,    -1,   189,    41,   173,    -1,    -1,   194,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,   173,    -1,    -1,   194,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
     189,    -1,    -1,    -1,   229,   194,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,   215,   216,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     229,    -1,   267,    -1,    -1,   270,   189,    -1,    -1,    -1,
      -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     267,    -1,   287,   270,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,    -1,    -1,    -1,   284,   267,    -1,
     287,   270,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,    -1,   173,   287,    -1,
      -1,    -1,    -1,   310,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,   284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,
     375,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,    -1,     8,    -1,    -1,    11,   375,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,    -1,    33,
      -1,   267,    -1,    -1,   270,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,   284,     8,
      -1,   287,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,   375,    -1,    33,    -1,    -1,    36,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
     475,    -1,    -1,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,    -1,   475,    -1,
      -1,   478,   479,   480,    73,   482,   483,   484,   485,   486,
     487,    -1,    -1,    -1,    -1,    -1,   475,    -1,    -1,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   168,    -1,    -1,    -1,    -1,   173,
      -1,    -1,   475,    -1,    -1,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   189,    -1,    -1,     8,    -1,
     194,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    33,   173,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,   229,    -1,    -1,    48,    -1,
     189,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,   475,
      -1,    -1,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,    -1,    73,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
     229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    33,
      -1,   270,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,     8,    48,   284,    11,    -1,   287,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    73,
      -1,    -1,    -1,   173,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,     8,    -1,   189,
      11,   375,    -1,    -1,   194,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    33,    -1,    -1,   215,   216,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,   229,
      -1,    -1,     8,    -1,    -1,    11,   375,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,   267,    -1,   173,
     270,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   189,    -1,   287,    -1,    -1,
     194,   475,    -1,    -1,   478,   479,   480,    73,   482,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,   173,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,   229,    -1,    -1,    -1,   194,
      -1,    -1,    -1,    -1,    -1,    -1,   475,    -1,    -1,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,    -1,
     215,   216,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   229,    -1,   270,    -1,   189,    -1,
      -1,    -1,    -1,   194,    -1,   375,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   215,   216,    -1,   173,    -1,    -1,
      -1,    -1,   267,    -1,    -1,   270,    -1,   407,   229,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,   284,
      -1,    -1,   287,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,   270,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,   284,    -1,    48,   287,    -1,    -1,    -1,
      -1,   375,    -1,    -1,    -1,   475,    -1,    -1,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,    -1,    -1,
      73,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,
     375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   375,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   475,    -1,    -1,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
     475,   194,    -1,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   475,    -1,    -1,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
      -1,   284,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,     5,   475,    -1,    -1,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,    -1,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,   228,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
     172,    -1,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,   228,    -1,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,    -1,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,   228,    -1,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,   270,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    -1,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,   165,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,   165,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,   282,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,   283,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,   283,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,     4,    -1,    -1,    -1,
      -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,    -1,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,    -1,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,    -1,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,    -1,   445,   446,   447,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,    -1,   445,
     446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,    -1,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
      -1,   445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,    -1,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,    -1,    -1,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,    -1,    -1,   268,   269,   270,   271,
      -1,    -1,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,    -1,   291,
     292,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,    -1,   309,   310,    -1,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,    -1,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,    -1,    -1,
     412,   413,    -1,   415,    -1,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,    -1,   441,
      -1,   443,   444,   445,   446,   447,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   471,
     472,   473,   474,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
      -1,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,    -1,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,    -1,    -1,   268,   269,   270,   271,    -1,    -1,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,    -1,   291,   292,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,    -1,   309,   310,    -1,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,    -1,    -1,   412,   413,    -1,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,    -1,   441,    -1,   443,   444,
     445,   446,   447,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,    -1,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,    -1,
     268,   269,   270,   271,    -1,    -1,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,    -1,   291,   292,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
      -1,   309,   310,    -1,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,    -1,    -1,   412,   413,    -1,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,    -1,   441,    -1,   443,   444,   445,   446,   447,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   471,   472,   473,   474,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    -1,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,    -1,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,    -1,    -1,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,    -1,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,    -1,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,    -1,    -1,   268,   269,   270,
     271,    -1,    -1,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,    -1,
     291,   292,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,    -1,   309,   310,
      -1,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,    -1,   395,    -1,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,    -1,
      -1,   412,   413,    -1,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,   425,    -1,    -1,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,   445,   446,   447,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     471,   472,   473,   474
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   164,   193,
     232,   309,   312,   340,   349,   363,   370,   374,   384,   395,
     399,   435,   440,   453,   477,   491,   502,   503,   504,   505,
     516,   517,   518,   519,   520,   527,   531,   533,   534,   538,
     552,   554,   561,   607,   609,   610,   612,   615,   622,   625,
     626,   628,   630,   635,   636,   642,   659,   662,   663,   666,
     667,   668,   669,   670,   671,   672,   721,   858,   862,   865,
     872,   875,   412,   456,   627,   197,   356,   364,   399,   446,
     627,     3,    19,    20,    21,    22,    23,    24,    25,    26,
      28,    29,    30,    38,    39,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    54,    55,    56,
      57,    58,    59,    62,    63,    64,    65,    66,    68,    69,
      70,    71,    72,    74,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    89,    90,    91,    92,
      94,    95,    96,    97,   101,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   116,   118,   119,   120,   121,
     122,   123,   125,   126,   127,   128,   129,   132,   133,   134,
     135,   136,   138,   139,   140,   142,   143,   144,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   157,   159,
     160,   161,   162,   164,   166,   167,   169,   170,   171,   172,
     173,   174,   176,   178,   179,   180,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   195,   196,
     197,   198,   199,   200,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   212,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   226,   227,   228,   229,   231,   232,
     233,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   268,   269,   270,   271,   273,   274,   275,   276,
     277,   278,   280,   281,   284,   285,   286,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   364,   365,   366,
     367,   368,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   397,   398,   400,
     401,   402,   403,   404,   405,   406,   408,   409,   412,   413,
     414,   415,   416,   418,   419,   420,   421,   422,   423,   424,
     425,   428,   429,   430,   431,   432,   435,   436,   437,   438,
     439,   440,   441,   443,   444,   445,   446,   447,   448,   451,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   777,   843,   847,   850,   877,   878,   879,   627,    50,
     491,   654,   170,   174,   233,   240,   287,   356,   403,   405,
     421,   427,   430,   605,   621,   660,     3,    27,   241,   312,
     392,   841,   847,   877,    21,    74,    90,   144,   153,   165,
     170,   197,   240,   244,   307,   321,   353,   356,   364,   367,
     386,   399,   406,   415,   421,   446,   866,   867,   870,   627,
     841,    93,   444,   491,   523,   527,   534,   622,   666,   667,
     858,   108,    68,   108,     5,   532,   846,   847,   841,    27,
     408,   412,   611,   613,   614,   847,   627,    27,   130,   679,
     680,   174,   233,   356,   368,   408,   611,   637,   638,   627,
     440,   611,   667,   672,     5,   283,   732,   839,   847,   848,
     169,   491,   632,   491,   328,   673,   674,   841,   673,   668,
     669,     0,   494,   444,   521,   120,   207,   432,    27,   408,
     412,   611,   667,   145,   211,   288,   426,   682,   683,   668,
     670,   671,   495,   187,   839,   841,   187,   839,   187,   732,
     187,   839,   491,   489,   493,   825,   827,   534,   665,   666,
     667,   858,   839,   403,   405,   403,   405,   338,   187,   847,
     847,   852,   328,   364,   399,   446,   197,   839,    27,   841,
     246,   415,   107,   399,   446,   359,     3,    44,    49,    50,
      51,    52,    64,    65,    74,    82,    94,   101,   112,   113,
     134,   161,   167,   169,   173,   187,   189,   203,   209,   210,
     212,   215,   216,   218,   227,   229,   241,   260,   261,   262,
     270,   275,   291,   293,   325,   347,   351,   371,   375,   378,
     392,   401,   408,   409,   420,   441,   444,   743,   744,   746,
     748,   750,   752,   754,   755,   756,   758,   759,   760,   762,
     763,   851,   871,   877,   880,   187,   852,   868,   187,   840,
     841,   187,   841,   491,   876,   605,   523,     3,    48,    49,
      51,    52,    64,    65,    72,   112,   113,   150,   155,   161,
     178,   179,   204,   209,   210,   212,   241,   260,   262,   266,
     273,   275,   290,   294,   308,   311,   325,   351,   371,   378,
     392,   394,   408,   409,   414,   416,   420,   440,   441,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     524,   526,   527,   529,   530,   877,   881,   521,   846,   846,
     480,   491,   491,   664,   474,   217,   493,   282,     4,     6,
       7,     8,     9,    10,    35,    49,    51,    52,    60,    61,
      64,    65,    72,    74,    98,    99,   100,   101,   102,   103,
     104,   112,   113,   115,   150,   155,   156,   161,   178,   179,
     209,   210,   212,   234,   235,   260,   262,   267,   272,   273,
     275,   284,   294,   308,   325,   351,   369,   378,   394,   408,
     409,   414,   416,   417,   420,   433,   441,   475,   482,   483,
     484,   489,   491,   496,   498,   499,   668,   712,   747,   750,
     753,   754,   755,   757,   758,   759,   762,   763,   774,   776,
     777,   778,   780,   793,   794,   800,   819,   824,   831,   832,
     843,   844,   845,   846,   847,   830,   831,   637,   637,   846,
     637,   474,   168,   410,   480,   491,   839,   484,   827,     3,
     167,   169,   444,   527,   631,   633,   167,   634,   774,   804,
     847,   673,   495,   491,   854,   492,   492,   504,   839,   168,
     213,   732,   859,   474,   217,    27,   130,   678,   678,    54,
     678,   158,   163,   230,   279,   688,   690,   691,   714,   716,
     717,   718,   682,   683,   491,   150,    23,    29,   135,   286,
     336,   340,   370,   437,   510,   513,   514,   336,   150,    36,
      55,   106,   196,   245,   253,   265,   296,   336,   342,   364,
     370,   384,   513,   555,   558,   150,   336,   370,   513,   150,
     336,   370,   513,     3,    27,    44,    50,    74,    82,    94,
     101,   130,   167,   169,   173,   189,   203,   215,   216,   218,
     227,   229,   241,   261,   270,   291,   293,   347,   375,   392,
     401,   420,   442,   444,   484,   492,   774,   806,   807,   849,
     855,   877,   882,   774,   826,     3,    27,    31,    32,    33,
      34,    35,    36,    37,    40,    53,    60,    61,    67,    73,
      75,    86,    93,    98,    99,   100,   102,   103,   104,   115,
     117,   124,   130,   131,   137,   141,   145,   156,   158,   163,
     165,   168,   175,   177,   181,   194,   201,   211,   213,   224,
     225,   230,   234,   235,   267,   272,   279,   282,   283,   287,
     288,   305,   315,   330,   344,   363,   369,   380,   396,   399,
     407,   410,   411,   417,   426,   427,   433,   434,   440,   442,
     449,   450,   452,   453,   842,   856,   877,   881,   883,   825,
     492,   491,   595,   605,   267,   863,   493,   853,    36,   446,
     187,   839,   187,   624,   839,   839,    82,   618,   491,   661,
     457,    83,   127,   299,   404,   443,   761,   761,   761,   491,
     749,   749,   311,   491,   751,   150,   491,    64,    65,   761,
     749,   746,   455,   477,   491,   764,   491,   764,   491,    35,
     745,   491,   109,   110,   184,   185,   247,   248,   249,   250,
     251,   252,   255,   256,   360,   361,   471,   472,   491,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   749,    58,
     343,   495,   869,   150,   495,   869,   150,   495,   869,   150,
     282,   804,   399,   492,   495,     4,   156,   282,   417,   482,
     483,   522,   524,   525,   528,   557,   560,   845,   846,   523,
     491,   649,   653,   528,   557,   639,   641,   806,   744,   808,
      36,   228,   847,   491,   828,   489,   774,   823,   491,   491,
     163,   491,   491,   668,   491,   491,   491,   774,   491,   491,
     491,   491,   491,   491,   491,   491,   491,   774,   774,   774,
     146,   833,   834,   804,   805,   668,   774,   804,   795,   796,
     847,   848,     9,   828,   827,   491,   846,   491,   845,   846,
       3,     8,    11,    16,    17,    18,    33,    36,    41,    48,
      73,   173,   189,   194,   215,   216,   229,   267,   270,   284,
     287,   375,   475,   478,   479,   480,   482,   483,   484,   485,
     486,   487,   798,   799,   800,   802,   454,   781,   828,    15,
     293,   774,    15,   213,   495,   675,   491,   846,   828,   493,
     827,   675,     3,   115,   233,   557,   640,   763,   846,    97,
     115,   641,   115,   641,   839,   492,   495,   521,   492,   495,
     674,   840,    36,   854,   859,   536,   839,    36,   847,   370,
     228,   670,   670,   684,   685,   774,   670,   160,   264,   704,
     219,   265,   324,   373,   432,     4,     9,    27,   699,   774,
     482,   483,   700,   701,   774,   776,   714,   715,   691,   690,
     688,   689,   163,   717,   277,   719,   688,   714,   804,   839,
      67,    75,    86,   165,   187,   315,   427,   576,   586,   601,
     847,    75,    86,   553,    86,   553,   491,   410,   491,   574,
     239,   430,   574,    86,   495,   410,   839,   746,   557,    54,
     559,   557,   557,   106,   245,   253,    54,   410,   453,   477,
     556,   258,   356,   556,   558,   732,    86,   410,   553,   356,
     839,   410,   356,   806,   806,   807,   492,   495,   682,   683,
      13,    14,   490,   500,   410,   594,   599,   847,   453,   652,
     328,   399,   446,   150,    93,   561,   607,   615,   628,   864,
     842,   493,   142,   839,   267,   555,   608,   267,    36,   491,
     595,   595,   187,   589,   619,   847,   492,   806,    36,   491,
     804,   845,   871,   808,   761,   761,    35,   745,   408,   408,
     845,   845,   742,   847,   489,   489,   845,   845,   410,   410,
     410,   410,   744,   868,   852,   840,   841,   841,   852,   492,
     187,   624,   839,   523,   529,     4,   845,     4,   845,   651,
     658,   856,    50,    95,   121,   139,   143,   164,   167,   182,
     272,   280,   322,   655,   495,   492,   495,   492,   495,   665,
     804,   825,   805,   449,   820,   821,   774,   804,   491,   845,
     845,     3,   765,   766,   767,   768,   769,   770,   771,   772,
     809,   810,   846,   845,   845,   774,     8,    16,    17,    18,
     478,   479,   480,   482,   483,   484,   485,   486,   487,   798,
     803,   847,   774,   811,   482,   483,   491,   775,   776,   800,
     813,   824,   492,   804,   774,   804,   814,   774,    53,   168,
     225,   411,   774,   804,   817,   774,   491,   847,   338,   837,
     490,   492,   495,   495,   497,   500,   804,   774,   773,   773,
     744,   774,   774,   774,   774,     5,   856,   857,   408,    40,
     396,   829,   852,   774,   774,   491,   668,   818,   130,   156,
     267,   272,   277,   417,   428,   774,   272,   491,   774,   410,
      48,   173,   189,   194,   229,   375,   774,   774,   774,   774,
     774,   774,   774,   774,   774,   774,    27,    34,   380,   797,
     177,   159,   782,   774,   351,   491,   794,   774,   174,   233,
     399,   403,   405,   430,   676,   839,   832,   168,   722,   806,
     484,   722,   491,   846,   492,   839,   631,   533,   839,   774,
     492,   491,   434,   861,   115,   295,   491,   535,   667,    36,
     847,   491,   540,   549,   551,   847,   495,    37,   124,   434,
     686,   351,   352,   482,   483,   701,   703,   776,   373,   219,
     283,   304,   304,   495,   486,     4,   702,   845,   702,   351,
     352,   703,   838,   839,   271,   377,   720,   715,   689,   492,
     336,   513,   491,   187,   586,   841,   219,   267,   219,   434,
     491,   579,   744,   841,   847,   187,   841,   187,   847,    23,
     135,   370,   509,   512,   569,   584,   856,   841,   578,   598,
     856,   841,   510,   841,   336,   370,   513,   555,   557,   852,
     841,   557,   852,   841,   557,   336,   370,   513,   841,   841,
     841,   841,   336,   370,   513,   841,   841,   682,   682,   682,
     442,   807,   188,   341,   681,   774,   774,   774,   826,   320,
     648,   492,   495,   280,   168,   410,   643,   446,   839,   839,
     847,   605,   842,   491,   491,   150,   150,   149,   667,   229,
     576,   586,   590,   593,   602,   604,   847,   453,   455,   581,
     453,   620,   267,   282,   492,   774,   804,   492,   492,   869,
     492,   489,   474,   474,   492,   492,   492,   495,   744,   845,
     490,   845,   492,   492,   766,   768,   769,   770,   769,   770,
     770,   869,   869,   282,   869,   267,    36,   492,   495,   484,
     491,   528,   557,   650,    36,   647,   846,   647,   267,   272,
     322,   647,   647,   639,   744,   492,   490,   774,   137,   821,
     822,    36,   492,   774,   492,   492,   492,   168,   492,   492,
     495,   492,   493,   305,   812,   492,   775,   775,   774,    11,
      16,    17,    18,   194,   215,   284,   478,   479,   480,   482,
     483,   484,   485,   486,   487,   800,   775,   492,   492,   163,
     168,   815,   816,   492,    36,   817,   804,   817,   817,   168,
     492,    36,   840,   491,   774,   835,   828,   774,   795,   774,
     492,   492,   474,   775,   775,   143,   804,   168,   130,   156,
     272,   277,   417,   428,   491,   143,   803,   774,   396,   829,
     774,   818,   774,   410,   491,   668,   491,   491,   292,   786,
     403,   405,   403,   405,   839,   399,   677,   677,   677,   224,
     352,   491,   668,   723,   724,   725,   732,   733,   777,   779,
     780,   847,   450,   738,   682,   834,   738,   845,   773,   854,
     665,   723,   450,   860,   440,   398,   433,   544,   539,   548,
     847,   282,   541,   847,   545,   551,   495,   722,   480,   828,
     685,   284,   798,   801,   476,   687,     4,   845,   703,   283,
     432,   700,   495,   238,   410,   774,   267,   601,   491,   150,
     491,   579,   197,   599,   562,   286,   572,   562,    23,   135,
     340,   342,   370,   506,   507,   508,   514,   515,   150,   869,
     150,   869,   569,   584,   569,   492,   495,   565,   846,   492,
     495,   480,   493,   410,   356,    86,   410,   553,   356,   410,
     410,   410,   356,   681,   681,   681,   807,   274,   274,   492,
     490,   387,   388,   657,   846,   594,   648,   839,   491,   595,
     863,   399,   846,   873,   874,   599,   839,   624,   839,   841,
     453,   623,   839,   492,   495,   280,   574,   280,   282,   573,
     574,    36,   150,   839,   492,   745,   845,   764,   764,   745,
     847,   490,   490,   852,   150,   651,   528,   645,   656,   846,
     846,   272,   599,   484,   599,   846,   846,   407,   774,   141,
     744,   492,   774,   774,   803,   774,   815,   744,   775,   775,
     775,   775,   130,   267,   277,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   774,   774,   816,   815,   744,
     492,   492,   492,   804,   744,   492,   774,   835,   836,    36,
     492,   773,   774,    33,    33,   774,   492,   774,   168,   491,
     808,   774,   492,   143,   775,   775,   143,   143,   774,   774,
     683,   450,   491,   787,   847,   677,   677,   677,   677,   839,
     839,   839,   668,   733,   168,   668,   724,   725,    36,   726,
     727,   847,   495,    94,   169,   203,   218,   227,   261,   347,
     729,   727,    36,   726,   728,   847,   477,   737,   827,   774,
     177,   705,   681,   837,   705,   492,   492,   774,   344,   543,
     439,   492,   495,   828,    84,   543,   492,   495,   540,   860,
     774,   491,   687,   160,   223,   283,   839,   841,   492,   150,
     599,   586,   599,   562,   589,   492,   117,   201,   265,   267,
     585,   491,   596,   172,   115,   186,   267,   574,   556,   107,
     115,   172,   267,   386,   389,   558,   574,   370,   508,   421,
     841,   847,   512,   598,     3,    44,    50,    74,    82,    94,
     101,   167,   169,   173,   189,   203,   215,   216,   218,   227,
     229,   241,   261,   266,   270,   284,   291,   293,   347,   371,
     375,   392,   401,   420,   444,   482,   483,   557,   563,   600,
     744,   801,   846,   849,   877,   883,   856,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   492,   492,   492,
     682,   556,   657,   491,   593,   620,   187,   839,   492,   495,
     492,   608,    36,   491,   876,   107,   265,   583,   581,   590,
      79,   667,   589,   434,   617,   490,   744,   869,   624,   492,
     495,   599,   774,   492,   492,   816,   168,   130,   277,   491,
     492,   492,   492,   495,   847,   774,   774,   774,   808,   492,
     774,    33,    33,   774,   774,   143,   492,   492,   774,   788,
     847,   839,   839,   839,   839,   727,   728,   491,   492,   847,
     848,   401,   696,   697,   491,   724,   218,   291,   730,   724,
     730,   218,   729,   730,   218,   697,   491,   847,   697,   491,
     289,    54,   181,   713,   492,   713,   846,   831,   667,   295,
     667,   539,   282,   491,   537,   480,   551,   543,   803,   562,
     586,   492,   492,   453,   592,   118,   190,   199,   117,   436,
     569,   587,    67,    73,    86,   115,   117,   172,   201,   267,
     272,   315,   330,   427,   434,   567,   568,   580,    30,    54,
     606,   187,   272,   557,   774,   606,   272,   482,   483,   560,
     847,   744,   869,   869,   241,   392,   849,   853,   480,   410,
     410,   681,   649,   434,   644,   646,   599,   492,    36,   267,
     491,   846,   620,   149,   667,   593,   623,   107,   147,   195,
     573,   120,   135,   314,   453,   629,   282,   616,   847,   491,
      36,   656,   775,   168,   491,   808,   835,   492,   774,   774,
     774,   492,   301,   789,   734,   735,   779,   726,   491,     4,
       9,   692,   694,   695,   847,   840,   724,   282,   434,   731,
     724,   218,   724,   739,   740,   847,   491,   739,   847,    96,
     178,   350,   491,   706,   707,   708,   709,   710,   711,   774,
     774,   452,   783,   846,   783,   544,    86,   491,   542,   550,
     779,   847,   131,   774,   492,   330,   592,   491,   582,   562,
     492,   495,   491,   852,   841,   775,   606,   118,   190,   117,
     272,   219,   839,   592,    81,   115,    36,   150,    73,   741,
     853,   486,   563,   841,   841,   492,   556,   122,   492,   581,
     667,   150,    36,   841,   623,   492,    27,    78,    87,   116,
     186,   198,   386,   389,   577,   577,   352,   352,    59,    67,
     233,   839,   550,   775,   808,   492,    54,   682,   492,   495,
      36,   736,   840,   304,   486,   304,   352,   486,   491,   491,
     492,   774,   491,   724,   731,   492,   495,   744,   739,   492,
     491,   372,   491,   492,   495,   784,   785,   847,   434,   693,
     693,   439,   841,   774,   492,   495,    73,   546,   546,   268,
     432,   839,   562,   588,   591,   856,   569,   774,   267,   568,
      36,   592,   595,   841,   186,   852,   434,   511,   486,   421,
     649,   846,   620,   573,   629,   839,   667,   876,   581,    67,
     285,    67,   617,   492,   492,   804,   323,   352,   790,   737,
     734,   491,   492,   847,   692,   840,   740,   741,   492,   804,
     491,   804,   707,   495,    36,   354,   667,   492,   738,   542,
     852,   547,   852,   547,   370,   595,   492,   495,   480,   492,
     186,   243,   603,   491,   564,   774,   421,    36,   491,   629,
     623,   573,   285,   285,   491,   620,    48,    97,   423,   774,
     791,   792,   791,   492,   739,   492,   495,   492,   492,   492,
     706,   492,   785,   787,   695,   546,   686,   686,   549,   603,
     591,   563,   265,   575,   564,   169,   300,   376,   282,   570,
     571,   597,   555,   667,   550,   738,   792,   351,   162,   310,
     162,   310,   492,     9,   337,   698,   492,   547,   687,   687,
     738,   571,   199,   120,   432,   282,   597,   282,   570,   492,
     629,   492,    33,   492,   491,   686,   562,    58,   265,   343,
     370,   566,   566,   620,   792,     9,   687,    22,   115,   272,
     738,   492
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 466 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 482 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 494 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 537 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 111:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 112:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 113:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 114:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 115:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 116:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 117:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 118:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 124:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 125:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 126:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 127:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 128:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 129:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 130:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 131:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 132:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 133:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 134:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 135:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 136:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 137:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 138:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 139:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 140:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 141:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 142:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 143:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 144:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 145:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 146:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 147:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 148:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 149:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 150:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 151:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 152:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 153:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 154:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 155:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 156:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 157:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 158:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 159:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 160:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 161:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 162:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 163:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 164:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 165:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 166:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 167:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 168:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 169:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 170:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 171:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 172:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 173:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 174:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 175:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 176:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 177:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 178:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 179:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 180:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 181:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 182:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 183:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 184:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 185:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 186:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 187:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 188:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 189:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 190:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 191:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 192:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 193:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 194:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 197:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 201:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 202:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 204:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 205:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 206:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 207:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 208:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 209:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 210:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 211:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 212:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 213:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 215:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 216:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 217:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 218:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 219:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 220:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 221:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 222:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 223:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 224:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 225:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 226:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 227:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 228:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 232:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 233:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 234:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 235:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 236:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 237:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 238:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 239:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 240:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 241:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 242:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 243:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 244:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 245:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 246:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 247:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 248:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 249:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 250:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 251:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 252:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 253:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 254:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 255:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 256:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 257:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 258:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 259:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 260:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 261:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 262:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 263:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 264:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 265:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 266:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 267:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 268:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 269:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 270:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 271:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 272:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 273:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 275:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 276:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 277:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 278:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 279:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 280:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 281:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 282:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 283:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 284:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 285:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 286:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 287:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 288:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 289:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 290:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 291:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 292:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 293:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 294:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 295:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 296:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 298:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 299:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 300:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 301:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 302:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 303:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 304:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 305:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 306:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 307:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 308:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 309:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 310:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 311:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 312:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 313:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 314:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 315:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 316:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 317:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 318:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 319:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 320:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 321:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 322:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 323:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 324:
#line 461 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 325:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 326:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 327:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 328:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 329:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 330:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 331:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 332:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 333:
#line 498 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 334:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 335:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 336:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 337:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 338:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 549 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 564 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 342:
#line 577 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 343:
#line 592 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 344:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 345:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 346:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 347:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 348:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 349:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 350:
#line 649 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 351:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 352:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 353:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 354:
#line 661 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 355:
#line 663 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 356:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 357:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 358:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 359:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 360:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 361:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 362:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 363:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 364:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 365:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 366:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 367:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 368:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 369:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 370:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 371:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 374:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 375:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 376:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 377:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 378:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 379:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 380:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 381:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 382:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 383:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 384:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 385:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 386:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 387:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 388:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 389:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 390:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 391:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 392:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 393:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 394:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 395:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 396:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 397:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 398:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 399:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 400:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;

  case 401:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 402:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 403:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 404:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 405:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 406:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 407:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 408:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 409:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 410:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 411:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 412:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 413:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 414:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 415:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 416:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 417:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 418:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 419:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 420:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 421:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 422:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 423:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 424:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 425:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 426:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 427:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 428:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 429:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 430:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 431:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 432:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 433:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 434:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 435:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 436:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 437:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 438:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 439:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 440:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 441:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 442:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 443:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 444:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 445:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 446:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 447:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 448:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 449:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 450:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 451:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 452:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 453:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 454:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 455:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 456:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 457:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 458:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 459:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 460:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 461:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 462:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 463:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 464:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 465:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 466:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 467:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 468:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 469:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 470:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 471:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 472:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 473:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 474:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 475:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 476:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 477:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 478:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 479:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 480:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 481:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 482:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 483:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 484:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 485:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 486:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 487:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 488:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 489:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 490:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 491:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 492:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 493:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 494:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 495:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 496:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 497:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 498:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 499:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 500:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 501:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 502:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 503:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 504:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 505:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 506:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 507:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 508:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 509:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 510:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 513:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 514:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 515:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 516:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 517:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 518:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 519:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 524:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 527:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 528:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 529:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 530:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 531:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 532:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 533:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 534:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 535:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 536:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 537:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 538:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 539:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 540:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 541:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 542:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 543:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 544:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 545:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 546:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 547:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 548:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 549:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 550:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 551:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 552:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 553:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 554:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 555:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 556:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 557:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 558:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 559:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 560:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 561:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 562:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 563:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 564:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 565:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 566:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 567:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 568:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 569:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 570:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 571:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 572:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 573:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 574:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 575:
#line 373 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 576:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 577:
#line 378 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 578:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 579:
#line 383 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 580:
#line 387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 581:
#line 396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 582:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 583:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 584:
#line 408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 585:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 586:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 587:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 588:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 589:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 590:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 591:
#line 420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 592:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 593:
#line 425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 594:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 595:
#line 432 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 596:
#line 448 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 597:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 598:
#line 455 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 599:
#line 458 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 600:
#line 466 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 601:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 602:
#line 474 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 603:
#line 478 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 604:
#line 482 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 605:
#line 486 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 606:
#line 493 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 607:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 609:
#line 505 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 610:
#line 510 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 611:
#line 514 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 612:
#line 518 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 613:
#line 522 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 614:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 615:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 616:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 617:
#line 541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 618:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 619:
#line 546 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 620:
#line 548 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 621:
#line 553 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 622:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 623:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 624:
#line 561 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 625:
#line 581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 626:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 627:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 628:
#line 589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 629:
#line 590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 630:
#line 594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 631:
#line 595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 632:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 633:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 634:
#line 624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 635:
#line 625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 636:
#line 629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 637:
#line 630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 638:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 639:
#line 635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 640:
#line 636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 641:
#line 637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 642:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 643:
#line 643 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 644:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 645:
#line 663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 646:
#line 670 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 647:
#line 676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 648:
#line 677 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 649:
#line 681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 650:
#line 682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 651:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 652:
#line 687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 653:
#line 691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 654:
#line 692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 655:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 656:
#line 697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 657:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 658:
#line 712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 659:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 660:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 661:
#line 715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 662:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 663:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 664:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 665:
#line 726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 666:
#line 727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 667:
#line 737 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 668:
#line 743 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 669:
#line 760 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 670:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 671:
#line 765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 672:
#line 766 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 673:
#line 773 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 674:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 675:
#line 787 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 676:
#line 795 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 677:
#line 804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 678:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 679:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 680:
#line 843 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 681:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 682:
#line 860 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 683:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 684:
#line 889 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 685:
#line 901 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 686:
#line 917 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 687:
#line 923 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 688:
#line 928 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 689:
#line 934 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 690:
#line 940 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 691:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 692:
#line 950 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 693:
#line 954 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 694:
#line 958 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 695:
#line 964 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 696:
#line 970 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 697:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 698:
#line 976 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 699:
#line 977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 700:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 701:
#line 982 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 702:
#line 983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 703:
#line 995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 704:
#line 996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 705:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 706:
#line 1009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 707:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 708:
#line 1023 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 709:
#line 1055 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 710:
#line 1066 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 711:
#line 1079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 712:
#line 1083 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 713:
#line 1084 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 714:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 715:
#line 1088 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 716:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 717:
#line 1092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 718:
#line 1097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 719:
#line 1098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 720:
#line 1104 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 721:
#line 1108 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 722:
#line 1114 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 723:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 724:
#line 1142 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 725:
#line 1155 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 726:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 729:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 730:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 731:
#line 1177 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 732:
#line 1182 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 733:
#line 1188 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 734:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 735:
#line 1198 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 736:
#line 1204 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 737:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 738:
#line 1216 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 739:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 740:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 741:
#line 1223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 742:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 743:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 744:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 745:
#line 1228 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 746:
#line 1233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 747:
#line 1252 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 748:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 749:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 750:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 751:
#line 1267 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 752:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 753:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 754:
#line 1288 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 755:
#line 1293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 756:
#line 1298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 757:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 758:
#line 1308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 759:
#line 1313 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 760:
#line 1318 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 761:
#line 1323 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 762:
#line 1329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 763:
#line 1335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 764:
#line 1341 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 765:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 766:
#line 1369 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 767:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 768:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 769:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 770:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 771:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 772:
#line 1415 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 773:
#line 1436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 774:
#line 1440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 775:
#line 1446 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 776:
#line 1450 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 777:
#line 1463 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 778:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 779:
#line 1481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 780:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 781:
#line 1485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 782:
#line 1487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 783:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 784:
#line 1491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 785:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 786:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 787:
#line 1504 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 788:
#line 1513 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 789:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 790:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 791:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 792:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 793:
#line 1549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 794:
#line 1550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 811:
#line 1579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 812:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 813:
#line 1583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 814:
#line 1585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 815:
#line 1587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 816:
#line 1589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 817:
#line 1591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 818:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 819:
#line 1595 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 820:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 821:
#line 1605 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 822:
#line 1611 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 823:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 824:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 825:
#line 1629 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 826:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 827:
#line 1665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 828:
#line 1668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 829:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 830:
#line 1678 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 831:
#line 1693 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 832:
#line 1695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 833:
#line 1697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 834:
#line 1699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 835:
#line 1701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 836:
#line 1703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 837:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 838:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 1709 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 1711 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 1713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 1715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 847:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 848:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 849:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 850:
#line 1733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 851:
#line 1735 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 852:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 853:
#line 1743 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 854:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 855:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 856:
#line 1760 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 857:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 858:
#line 1772 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 859:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 860:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 861:
#line 1794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 862:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 863:
#line 1810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 864:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 865:
#line 1836 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 866:
#line 1844 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 867:
#line 1852 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 868:
#line 1860 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 869:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 1875 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 871:
#line 1879 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 872:
#line 1883 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 873:
#line 1888 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 874:
#line 1896 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 875:
#line 1904 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 876:
#line 1920 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 877:
#line 1928 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 878:
#line 1936 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 879:
#line 1944 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 880:
#line 1952 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 881:
#line 1960 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 882:
#line 1968 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 883:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 884:
#line 1976 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 885:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 886:
#line 1984 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 887:
#line 1992 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 888:
#line 2000 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 889:
#line 2008 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 890:
#line 2016 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 891:
#line 2036 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 892:
#line 2058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 893:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 894:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 895:
#line 2089 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 896:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 897:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 898:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 899:
#line 2112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 900:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 901:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 902:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 903:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 904:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 905:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 906:
#line 2126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 907:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 908:
#line 2130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 909:
#line 2132 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 910:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 911:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 912:
#line 2138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 913:
#line 2140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 914:
#line 2142 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 915:
#line 2144 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 916:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 917:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 918:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 919:
#line 2169 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 920:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 921:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 922:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 923:
#line 2191 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 924:
#line 2206 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 925:
#line 2218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 926:
#line 2220 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 927:
#line 2232 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 928:
#line 2243 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 929:
#line 2267 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 930:
#line 2278 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 931:
#line 2287 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 932:
#line 2291 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 933:
#line 2298 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 934:
#line 2306 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 935:
#line 2314 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 936:
#line 2325 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 937:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 938:
#line 2361 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 939:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 940:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 941:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 942:
#line 2415 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 943:
#line 2421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 944:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 945:
#line 2429 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 946:
#line 2433 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 947:
#line 2437 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 948:
#line 2441 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 949:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 950:
#line 2449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 951:
#line 2453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 952:
#line 2457 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 2461 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 954:
#line 2465 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 955:
#line 2469 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 956:
#line 2473 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 957:
#line 2477 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 958:
#line 2481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 959:
#line 2483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 960:
#line 2485 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 961:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 962:
#line 2498 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 963:
#line 2503 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 964:
#line 2510 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 965:
#line 2525 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 966:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 967:
#line 2536 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 968:
#line 2540 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 969:
#line 2544 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 970:
#line 2548 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 971:
#line 2561 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 972:
#line 2562 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 973:
#line 2566 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 974:
#line 2567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 975:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 976:
#line 2576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 977:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 978:
#line 2582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 979:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 980:
#line 2595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 981:
#line 2597 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 982:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 983:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 984:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 985:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 986:
#line 2644 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 987:
#line 2645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 988:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 989:
#line 2663 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 990:
#line 2669 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 991:
#line 2679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 992:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 993:
#line 2741 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 994:
#line 2749 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 995:
#line 2757 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 996:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 997:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 998:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 999:
#line 2794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1000:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 1001:
#line 2798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 1002:
#line 2802 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 1003:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1004:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1005:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 1006:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 1007:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 1008:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1009:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 1010:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 1011:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 1012:
#line 2826 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 1013:
#line 2827 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 1014:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 1015:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 1016:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 1017:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 1018:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 1019:
#line 2833 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 1020:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 1021:
#line 2835 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 1022:
#line 2839 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1023:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1024:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1025:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1026:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1027:
#line 2855 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1028:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 1029:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 1030:
#line 2861 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 1031:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 1032:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 1033:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 1034:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1035:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1036:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 1037:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1038:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1039:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 1040:
#line 2910 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 1041:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1042:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 1043:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 1044:
#line 2933 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 1045:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 1046:
#line 2944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 1047:
#line 2949 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1048:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1049:
#line 2959 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1050:
#line 2960 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 1051:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 1052:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 1053:
#line 2963 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 1054:
#line 2964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 1055:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 1056:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1057:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1058:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1059:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1060:
#line 2983 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1061:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1062:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1063:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1064:
#line 3014 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1065:
#line 3018 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1066:
#line 3023 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1067:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1068:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1069:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1070:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1071:
#line 3053 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1072:
#line 3056 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1073:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1074:
#line 3058 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1075:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1076:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1077:
#line 3079 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1078:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1079:
#line 3093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1080:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1081:
#line 3108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1082:
#line 3109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1083:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1084:
#line 3113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1085:
#line 3117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1086:
#line 3121 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1087:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1088:
#line 3132 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1089:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1090:
#line 3150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1091:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1092:
#line 3155 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1093:
#line 3156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1094:
#line 3160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1095:
#line 3161 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1098:
#line 3175 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1099:
#line 3176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1100:
#line 3180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1101:
#line 3181 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1102:
#line 3185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1103:
#line 3201 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1104:
#line 3209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1105:
#line 3217 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1106:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1107:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1108:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1109:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1110:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1111:
#line 3257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1112:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1113:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1114:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1115:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1116:
#line 3267 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1117:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1118:
#line 3278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1119:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1120:
#line 3294 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1121:
#line 3321 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1122:
#line 3323 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1123:
#line 3327 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1124:
#line 3329 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1125:
#line 3340 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1126:
#line 3343 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1127:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1128:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1129:
#line 3362 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1130:
#line 3374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1131:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1132:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1133:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1134:
#line 3432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1135:
#line 3436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1136:
#line 3440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1137:
#line 3444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1138:
#line 3448 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1139:
#line 3452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1140:
#line 3456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1141:
#line 3461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1142:
#line 3462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1143:
#line 3478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1144:
#line 3479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1145:
#line 3480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1146:
#line 3483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1147:
#line 3484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1148:
#line 3490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1149:
#line 3491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1150:
#line 3492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1151:
#line 3495 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1152:
#line 3496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1153:
#line 3497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1154:
#line 3500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1155:
#line 3501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1156:
#line 3502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1157:
#line 3505 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1158:
#line 3506 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1159:
#line 3510 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1160:
#line 3512 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1161:
#line 3516 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1162:
#line 3517 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1164:
#line 3528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1165:
#line 3529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1166:
#line 3530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1167:
#line 3531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1168:
#line 3534 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1169:
#line 3535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1170:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1171:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1172:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1173:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1174:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1175:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1176:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1177:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1178:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1179:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1180:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1181:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1186:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1187:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1188:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1189:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1190:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1191:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1192:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1193:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1194:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 1195:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 1196:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1197:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1198:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 1199:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 1200:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 1201:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 1202:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 1203:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 1204:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 1205:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 1206:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 1207:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 1208:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 1209:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 1210:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 1211:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 1212:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 1213:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 1214:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 1215:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 1216:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1217:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1218:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 1219:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 1220:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 1221:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 1222:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 1223:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 1224:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 1225:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 1226:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1227:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1228:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1229:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1230:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1231:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1232:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1233:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1234:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1235:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;


/* Line 1267 of yacc.c.  */
#line 24373 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 65 "third_party/libpg_query/grammar/statements/execute.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

