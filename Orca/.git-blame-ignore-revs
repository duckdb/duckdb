# git-blame ignore list
#
# Since version 2.23 (released in August 2019), git-blame has a feature to
# ignore or bypass certain commits.
#
# This file contains a list of commits that are unlikely what you are looking
# for in a typical git-blame, such as mass reformatting or renaming. There are
# three ways to use this file:
#
# 1. Most typically, you would want to configure git to use this file as the
#    default ignore file for git-blame:
#
#    $ git config blame.ignoreRevsFile .git-blame-ignore-revs
#
#    This allows git-blame to act like git-hyper-blame, skipping specified
#    commits and trying harder to attribute changes to "interesting" commits in
#    the history. This also allows tools (most notably, IDE's and text editors)
#    that lack options to adopt this behavior.
#
# 1. If you have configured Git as above, but occasionally needs the "real",
#    unadulterated annotation, you can suppress this setting one-off by
#    supplying an empty ignore-revs-file argument to blame like the following:
#
#    $ git blame --ignore-revs-file '' -w CTranslatorExprToDXL.cpp
#
# 1. For those paranoids out there who'd like to keep the default behavior,
#    they can always manually ignore commits in this file manually:
#
#    $ git blame --ignore-revs-file .git-blame-ignore-revs -w -- src/backend/gpopt/gpdbwrappers.cpp

# Hungarian notation removal: GPOS and Naucrates libraries (GPORCA)
f3da624ccd796364bb8bb84496cd6bf5b2828c1e

# Format ORCA and GPOPT (GPORCA)
9fb3df2549731629b3df1b38b99087c9dcbccb90
