# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.23

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /opt/homebrew/Cellar/cmake/3.23.2/bin/cmake

# The command to remove a file.
RM = /opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/jordan/code/duckdb/extension/parquet

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/jordan/code/duckdb/extension/parquet

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/jordan/code/duckdb/extension/parquet/CMakeFiles /Users/jordan/code/duckdb/extension/parquet//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/jordan/code/duckdb/extension/parquet/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named parquet_extension

# Build rule for target.
parquet_extension: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 parquet_extension
.PHONY : parquet_extension

# fast build rule for target.
parquet_extension/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/build
.PHONY : parquet_extension/fast

Users/jordan/code/duckdb/third_party/parquet/parquet_constants.o: Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_constants.o

# target to build an object file
Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.o

Users/jordan/code/duckdb/third_party/parquet/parquet_constants.i: Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_constants.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.i

Users/jordan/code/duckdb/third_party/parquet/parquet_constants.s: Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_constants.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_constants.cpp.s

Users/jordan/code/duckdb/third_party/parquet/parquet_types.o: Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_types.o

# target to build an object file
Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.o

Users/jordan/code/duckdb/third_party/parquet/parquet_types.i: Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_types.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.i

Users/jordan/code/duckdb/third_party/parquet/parquet_types.s: Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_types.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/parquet/parquet_types.cpp.s

Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.o: Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.o
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.o

# target to build an object file
Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.o
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.o

Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.i: Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.i
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.i
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.i

Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.s: Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.s
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.s
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.cc.s

Users/jordan/code/duckdb/third_party/snappy/snappy.o: Users/jordan/code/duckdb/third_party/snappy/snappy.cc.o
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy.o

# target to build an object file
Users/jordan/code/duckdb/third_party/snappy/snappy.cc.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/snappy/snappy.cc.o
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy.cc.o

Users/jordan/code/duckdb/third_party/snappy/snappy.i: Users/jordan/code/duckdb/third_party/snappy/snappy.cc.i
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/snappy/snappy.cc.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/snappy/snappy.cc.i
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy.cc.i

Users/jordan/code/duckdb/third_party/snappy/snappy.s: Users/jordan/code/duckdb/third_party/snappy/snappy.cc.s
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/snappy/snappy.cc.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/snappy/snappy.cc.s
.PHONY : Users/jordan/code/duckdb/third_party/snappy/snappy.cc.s

Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.o: Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.o

# target to build an object file
Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.o

Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.i: Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.i

Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.s: Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.cpp.s

Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.o: Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.o

# target to build an object file
Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.o

Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.i: Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.i

Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.s: Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.cpp.s

Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.o: Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.o

# target to build an object file
Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.o

Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.i: Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.i

Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.s: Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.cpp.s

Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.o: Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.o

Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.i: Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.i

Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.s: Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.cpp.s

Users/jordan/code/duckdb/third_party/zstd/common/error_private.o: Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/error_private.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.o

Users/jordan/code/duckdb/third_party/zstd/common/error_private.i: Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/error_private.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.i

Users/jordan/code/duckdb/third_party/zstd/common/error_private.s: Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/error_private.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/error_private.cpp.s

Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.o: Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.o

Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.i: Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.i

Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.s: Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.cpp.s

Users/jordan/code/duckdb/third_party/zstd/common/xxhash.o: Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/xxhash.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.o

Users/jordan/code/duckdb/third_party/zstd/common/xxhash.i: Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/xxhash.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.i

Users/jordan/code/duckdb/third_party/zstd/common/xxhash.s: Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/xxhash.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/xxhash.cpp.s

Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.o: Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.o

Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.i: Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.i

Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.s: Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.o: Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.i: Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.s: Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/hist.o: Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/hist.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/hist.i: Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/hist.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/hist.s: Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/hist.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/hist.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.o: Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.i: Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.s: Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.cpp.s

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.o: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.o

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.i: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.i

Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.s: Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.cpp.s

Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.o: Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.o

Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.i: Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.i

Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.s: Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.cpp.s

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.o: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.o

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.i: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.i

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.s: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.cpp.s

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.o: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.o

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.i: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.i

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.s: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.cpp.s

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.o: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.o

# target to build an object file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.o
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.o

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.i: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.i

# target to preprocess a source file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.i
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.i

Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.s: Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.s

# target to generate assembly for a file
Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.s
.PHONY : Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.cpp.s

column_reader.o: column_reader.cpp.o
.PHONY : column_reader.o

# target to build an object file
column_reader.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/column_reader.cpp.o
.PHONY : column_reader.cpp.o

column_reader.i: column_reader.cpp.i
.PHONY : column_reader.i

# target to preprocess a source file
column_reader.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/column_reader.cpp.i
.PHONY : column_reader.cpp.i

column_reader.s: column_reader.cpp.s
.PHONY : column_reader.s

# target to generate assembly for a file
column_reader.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/column_reader.cpp.s
.PHONY : column_reader.cpp.s

column_writer.o: column_writer.cpp.o
.PHONY : column_writer.o

# target to build an object file
column_writer.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/column_writer.cpp.o
.PHONY : column_writer.cpp.o

column_writer.i: column_writer.cpp.i
.PHONY : column_writer.i

# target to preprocess a source file
column_writer.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/column_writer.cpp.i
.PHONY : column_writer.cpp.i

column_writer.s: column_writer.cpp.s
.PHONY : column_writer.s

# target to generate assembly for a file
column_writer.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/column_writer.cpp.s
.PHONY : column_writer.cpp.s

parquet-extension.o: parquet-extension.cpp.o
.PHONY : parquet-extension.o

# target to build an object file
parquet-extension.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet-extension.cpp.o
.PHONY : parquet-extension.cpp.o

parquet-extension.i: parquet-extension.cpp.i
.PHONY : parquet-extension.i

# target to preprocess a source file
parquet-extension.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet-extension.cpp.i
.PHONY : parquet-extension.cpp.i

parquet-extension.s: parquet-extension.cpp.s
.PHONY : parquet-extension.s

# target to generate assembly for a file
parquet-extension.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet-extension.cpp.s
.PHONY : parquet-extension.cpp.s

parquet_metadata.o: parquet_metadata.cpp.o
.PHONY : parquet_metadata.o

# target to build an object file
parquet_metadata.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_metadata.cpp.o
.PHONY : parquet_metadata.cpp.o

parquet_metadata.i: parquet_metadata.cpp.i
.PHONY : parquet_metadata.i

# target to preprocess a source file
parquet_metadata.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_metadata.cpp.i
.PHONY : parquet_metadata.cpp.i

parquet_metadata.s: parquet_metadata.cpp.s
.PHONY : parquet_metadata.s

# target to generate assembly for a file
parquet_metadata.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_metadata.cpp.s
.PHONY : parquet_metadata.cpp.s

parquet_reader.o: parquet_reader.cpp.o
.PHONY : parquet_reader.o

# target to build an object file
parquet_reader.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_reader.cpp.o
.PHONY : parquet_reader.cpp.o

parquet_reader.i: parquet_reader.cpp.i
.PHONY : parquet_reader.i

# target to preprocess a source file
parquet_reader.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_reader.cpp.i
.PHONY : parquet_reader.cpp.i

parquet_reader.s: parquet_reader.cpp.s
.PHONY : parquet_reader.s

# target to generate assembly for a file
parquet_reader.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_reader.cpp.s
.PHONY : parquet_reader.cpp.s

parquet_statistics.o: parquet_statistics.cpp.o
.PHONY : parquet_statistics.o

# target to build an object file
parquet_statistics.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_statistics.cpp.o
.PHONY : parquet_statistics.cpp.o

parquet_statistics.i: parquet_statistics.cpp.i
.PHONY : parquet_statistics.i

# target to preprocess a source file
parquet_statistics.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_statistics.cpp.i
.PHONY : parquet_statistics.cpp.i

parquet_statistics.s: parquet_statistics.cpp.s
.PHONY : parquet_statistics.s

# target to generate assembly for a file
parquet_statistics.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_statistics.cpp.s
.PHONY : parquet_statistics.cpp.s

parquet_timestamp.o: parquet_timestamp.cpp.o
.PHONY : parquet_timestamp.o

# target to build an object file
parquet_timestamp.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_timestamp.cpp.o
.PHONY : parquet_timestamp.cpp.o

parquet_timestamp.i: parquet_timestamp.cpp.i
.PHONY : parquet_timestamp.i

# target to preprocess a source file
parquet_timestamp.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_timestamp.cpp.i
.PHONY : parquet_timestamp.cpp.i

parquet_timestamp.s: parquet_timestamp.cpp.s
.PHONY : parquet_timestamp.s

# target to generate assembly for a file
parquet_timestamp.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_timestamp.cpp.s
.PHONY : parquet_timestamp.cpp.s

parquet_writer.o: parquet_writer.cpp.o
.PHONY : parquet_writer.o

# target to build an object file
parquet_writer.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_writer.cpp.o
.PHONY : parquet_writer.cpp.o

parquet_writer.i: parquet_writer.cpp.i
.PHONY : parquet_writer.i

# target to preprocess a source file
parquet_writer.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_writer.cpp.i
.PHONY : parquet_writer.cpp.i

parquet_writer.s: parquet_writer.cpp.s
.PHONY : parquet_writer.s

# target to generate assembly for a file
parquet_writer.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/parquet_writer.cpp.s
.PHONY : parquet_writer.cpp.s

zstd_file_system.o: zstd_file_system.cpp.o
.PHONY : zstd_file_system.o

# target to build an object file
zstd_file_system.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/zstd_file_system.cpp.o
.PHONY : zstd_file_system.cpp.o

zstd_file_system.i: zstd_file_system.cpp.i
.PHONY : zstd_file_system.i

# target to preprocess a source file
zstd_file_system.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/zstd_file_system.cpp.i
.PHONY : zstd_file_system.cpp.i

zstd_file_system.s: zstd_file_system.cpp.s
.PHONY : zstd_file_system.s

# target to generate assembly for a file
zstd_file_system.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/parquet_extension.dir/build.make CMakeFiles/parquet_extension.dir/zstd_file_system.cpp.s
.PHONY : zstd_file_system.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... parquet_extension"
	@echo "... Users/jordan/code/duckdb/third_party/parquet/parquet_constants.o"
	@echo "... Users/jordan/code/duckdb/third_party/parquet/parquet_constants.i"
	@echo "... Users/jordan/code/duckdb/third_party/parquet/parquet_constants.s"
	@echo "... Users/jordan/code/duckdb/third_party/parquet/parquet_types.o"
	@echo "... Users/jordan/code/duckdb/third_party/parquet/parquet_types.i"
	@echo "... Users/jordan/code/duckdb/third_party/parquet/parquet_types.s"
	@echo "... Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.o"
	@echo "... Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.i"
	@echo "... Users/jordan/code/duckdb/third_party/snappy/snappy-sinksource.s"
	@echo "... Users/jordan/code/duckdb/third_party/snappy/snappy.o"
	@echo "... Users/jordan/code/duckdb/third_party/snappy/snappy.i"
	@echo "... Users/jordan/code/duckdb/third_party/snappy/snappy.s"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.o"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.i"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/protocol/TProtocol.s"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.o"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.i"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TBufferTransports.s"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.o"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.i"
	@echo "... Users/jordan/code/duckdb/third_party/thrift/thrift/transport/TTransportException.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/entropy_common.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/error_private.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/error_private.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/error_private.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/fse_decompress.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/xxhash.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/xxhash.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/xxhash.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/common/zstd_common.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/fse_compress.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/hist.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/hist.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/hist.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/huf_compress.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_literals.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_sequences.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_compress_superblock.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_double_fast.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_fast.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_lazy.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_ldm.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/compress/zstd_opt.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/huf_decompress.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_ddict.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress.s"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.o"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.i"
	@echo "... Users/jordan/code/duckdb/third_party/zstd/decompress/zstd_decompress_block.s"
	@echo "... column_reader.o"
	@echo "... column_reader.i"
	@echo "... column_reader.s"
	@echo "... column_writer.o"
	@echo "... column_writer.i"
	@echo "... column_writer.s"
	@echo "... parquet-extension.o"
	@echo "... parquet-extension.i"
	@echo "... parquet-extension.s"
	@echo "... parquet_metadata.o"
	@echo "... parquet_metadata.i"
	@echo "... parquet_metadata.s"
	@echo "... parquet_reader.o"
	@echo "... parquet_reader.i"
	@echo "... parquet_reader.s"
	@echo "... parquet_statistics.o"
	@echo "... parquet_statistics.i"
	@echo "... parquet_statistics.s"
	@echo "... parquet_timestamp.o"
	@echo "... parquet_timestamp.i"
	@echo "... parquet_timestamp.s"
	@echo "... parquet_writer.o"
	@echo "... parquet_writer.i"
	@echo "... parquet_writer.s"
	@echo "... zstd_file_system.o"
	@echo "... zstd_file_system.i"
	@echo "... zstd_file_system.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

